ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_SAR.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_SAR_initVar
  20              		.bss
  21              		.type	ADC_SAR_initVar, %object
  22              		.size	ADC_SAR_initVar, 1
  23              	ADC_SAR_initVar:
  24 0000 00       		.space	1
  25              		.comm	ADC_SAR_offset,2,2
  26              		.comm	ADC_SAR_countsPerVolt,2,2
  27              		.comm	ADC_SAR_countsPer10Volt,4,4
  28              		.comm	ADC_SAR_shift,2,2
  29              		.section	.text.ADC_SAR_Start,"ax",%progbits
  30              		.align	2
  31              		.global	ADC_SAR_Start
  32              		.thumb
  33              		.thumb_func
  34              		.type	ADC_SAR_Start, %function
  35              	ADC_SAR_Start:
  36              	.LFB0:
  37              		.file 1 "Generated_Source\\PSoC5\\ADC_SAR.c"
   1:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC_SAR.c **** * File Name: ADC_SAR.c
   3:Generated_Source\PSoC5/ADC_SAR.c **** * Version 3.10
   4:Generated_Source\PSoC5/ADC_SAR.c **** *
   5:Generated_Source\PSoC5/ADC_SAR.c **** * Description:
   6:Generated_Source\PSoC5/ADC_SAR.c **** *  This file provides the source code to the API for the Successive
   7:Generated_Source\PSoC5/ADC_SAR.c **** *  approximation ADC Component.
   8:Generated_Source\PSoC5/ADC_SAR.c **** *
   9:Generated_Source\PSoC5/ADC_SAR.c **** * Note:
  10:Generated_Source\PSoC5/ADC_SAR.c **** *
  11:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC_SAR.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC_SAR.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC_SAR.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC_SAR.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC_SAR.c **** 
  18:Generated_Source\PSoC5/ADC_SAR.c **** #include "CyLib.h"
  19:Generated_Source\PSoC5/ADC_SAR.c **** #include "ADC_SAR.h"
  20:Generated_Source\PSoC5/ADC_SAR.c **** 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 2


  21:Generated_Source\PSoC5/ADC_SAR.c **** #if(ADC_SAR_DEFAULT_INTERNAL_CLK)
  22:Generated_Source\PSoC5/ADC_SAR.c ****     #include "ADC_SAR_theACLK.h"
  23:Generated_Source\PSoC5/ADC_SAR.c **** #endif /* End ADC_SAR_DEFAULT_INTERNAL_CLK */
  24:Generated_Source\PSoC5/ADC_SAR.c **** 
  25:Generated_Source\PSoC5/ADC_SAR.c **** 
  26:Generated_Source\PSoC5/ADC_SAR.c **** /***************************************
  27:Generated_Source\PSoC5/ADC_SAR.c **** * Forward function references
  28:Generated_Source\PSoC5/ADC_SAR.c **** ***************************************/
  29:Generated_Source\PSoC5/ADC_SAR.c **** static void ADC_SAR_CalcGain(uint8 resolution);
  30:Generated_Source\PSoC5/ADC_SAR.c **** 
  31:Generated_Source\PSoC5/ADC_SAR.c **** 
  32:Generated_Source\PSoC5/ADC_SAR.c **** /***************************************
  33:Generated_Source\PSoC5/ADC_SAR.c **** * Global data allocation
  34:Generated_Source\PSoC5/ADC_SAR.c **** ***************************************/
  35:Generated_Source\PSoC5/ADC_SAR.c **** uint8 ADC_SAR_initVar = 0u;
  36:Generated_Source\PSoC5/ADC_SAR.c **** volatile int16 ADC_SAR_offset;
  37:Generated_Source\PSoC5/ADC_SAR.c **** volatile int16 ADC_SAR_countsPerVolt;     /* Obsolete Gain compensation */
  38:Generated_Source\PSoC5/ADC_SAR.c **** volatile int32 ADC_SAR_countsPer10Volt;   /* Gain compensation */
  39:Generated_Source\PSoC5/ADC_SAR.c **** volatile int16 ADC_SAR_shift;
  40:Generated_Source\PSoC5/ADC_SAR.c **** 
  41:Generated_Source\PSoC5/ADC_SAR.c **** 
  42:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
  43:Generated_Source\PSoC5/ADC_SAR.c **** * Function Name: ADC_SAR_Start
  44:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
  45:Generated_Source\PSoC5/ADC_SAR.c **** *
  46:Generated_Source\PSoC5/ADC_SAR.c **** * Summary:
  47:Generated_Source\PSoC5/ADC_SAR.c **** *  This is the preferred method to begin component operation.
  48:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_Start() sets the initVar variable, calls the
  49:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_Init() function, and then calls the
  50:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_Enable() function.
  51:Generated_Source\PSoC5/ADC_SAR.c **** *
  52:Generated_Source\PSoC5/ADC_SAR.c **** * Parameters:
  53:Generated_Source\PSoC5/ADC_SAR.c **** *  None.
  54:Generated_Source\PSoC5/ADC_SAR.c **** *
  55:Generated_Source\PSoC5/ADC_SAR.c **** * Return:
  56:Generated_Source\PSoC5/ADC_SAR.c **** *  None.
  57:Generated_Source\PSoC5/ADC_SAR.c **** *
  58:Generated_Source\PSoC5/ADC_SAR.c **** * Global variables:
  59:Generated_Source\PSoC5/ADC_SAR.c **** *  The ADC_SAR_initVar variable is used to indicate when/if initial
  60:Generated_Source\PSoC5/ADC_SAR.c **** *  configuration of this component has happened. The variable is initialized to
  61:Generated_Source\PSoC5/ADC_SAR.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:Generated_Source\PSoC5/ADC_SAR.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_Start() routine.
  64:Generated_Source\PSoC5/ADC_SAR.c **** *  If re-initialization of the component is required the variable should be set
  65:Generated_Source\PSoC5/ADC_SAR.c **** *  to zero before call of ADC_SAR_Start() routine, or the user may call
  66:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_Init() and ADC_SAR_Enable() as done in the
  67:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_Start() routine.
  68:Generated_Source\PSoC5/ADC_SAR.c **** *
  69:Generated_Source\PSoC5/ADC_SAR.c **** * Side Effect:
  70:Generated_Source\PSoC5/ADC_SAR.c **** *  If the initVar variable is already set, this function only calls the
  71:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_Enable() function.
  72:Generated_Source\PSoC5/ADC_SAR.c **** *
  73:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
  74:Generated_Source\PSoC5/ADC_SAR.c **** void ADC_SAR_Start(void)
  75:Generated_Source\PSoC5/ADC_SAR.c **** {
  38              		.loc 1 75 0
  39              		.cfi_startproc
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 3


  40              		@ args = 0, pretend = 0, frame = 0
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  76:Generated_Source\PSoC5/ADC_SAR.c **** 
  77:Generated_Source\PSoC5/ADC_SAR.c ****     /* If not Initialized then initialize all required hardware and software */
  78:Generated_Source\PSoC5/ADC_SAR.c ****     if(ADC_SAR_initVar == 0u)
  48              		.loc 1 78 0
  49 0004 064B     		ldr	r3, .L3
  50 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  51 0008 002B     		cmp	r3, #0
  52 000a 04D1     		bne	.L2
  79:Generated_Source\PSoC5/ADC_SAR.c ****     {
  80:Generated_Source\PSoC5/ADC_SAR.c ****         ADC_SAR_Init();
  53              		.loc 1 80 0
  54 000c FFF7FEFF 		bl	ADC_SAR_Init
  81:Generated_Source\PSoC5/ADC_SAR.c ****         ADC_SAR_initVar = 1u;
  55              		.loc 1 81 0
  56 0010 034B     		ldr	r3, .L3
  57 0012 0122     		movs	r2, #1
  58 0014 1A70     		strb	r2, [r3]
  59              	.L2:
  82:Generated_Source\PSoC5/ADC_SAR.c ****     }
  83:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_Enable();
  60              		.loc 1 83 0
  61 0016 FFF7FEFF 		bl	ADC_SAR_Enable
  84:Generated_Source\PSoC5/ADC_SAR.c **** }
  62              		.loc 1 84 0
  63 001a 00BF     		nop
  64 001c 80BD     		pop	{r7, pc}
  65              	.L4:
  66 001e 00BF     		.align	2
  67              	.L3:
  68 0020 00000000 		.word	ADC_SAR_initVar
  69              		.cfi_endproc
  70              	.LFE0:
  71              		.size	ADC_SAR_Start, .-ADC_SAR_Start
  72              		.section	.text.ADC_SAR_Init,"ax",%progbits
  73              		.align	2
  74              		.global	ADC_SAR_Init
  75              		.thumb
  76              		.thumb_func
  77              		.type	ADC_SAR_Init, %function
  78              	ADC_SAR_Init:
  79              	.LFB1:
  85:Generated_Source\PSoC5/ADC_SAR.c **** 
  86:Generated_Source\PSoC5/ADC_SAR.c **** 
  87:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
  88:Generated_Source\PSoC5/ADC_SAR.c **** * Function Name: ADC_SAR_Init
  89:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
  90:Generated_Source\PSoC5/ADC_SAR.c **** *
  91:Generated_Source\PSoC5/ADC_SAR.c **** * Summary:
  92:Generated_Source\PSoC5/ADC_SAR.c **** *  Initialize component's parameters to the parameters set by user in the
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 4


  93:Generated_Source\PSoC5/ADC_SAR.c **** *  customizer of the component placed onto schematic. Usually called in
  94:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_Start().
  95:Generated_Source\PSoC5/ADC_SAR.c **** *
  96:Generated_Source\PSoC5/ADC_SAR.c **** * Parameters:
  97:Generated_Source\PSoC5/ADC_SAR.c **** *  None.
  98:Generated_Source\PSoC5/ADC_SAR.c **** *
  99:Generated_Source\PSoC5/ADC_SAR.c **** * Return:
 100:Generated_Source\PSoC5/ADC_SAR.c **** *  None.
 101:Generated_Source\PSoC5/ADC_SAR.c **** *
 102:Generated_Source\PSoC5/ADC_SAR.c **** * Global variables:
 103:Generated_Source\PSoC5/ADC_SAR.c **** *  The ADC_SAR_offset variable is initialized to 0.
 104:Generated_Source\PSoC5/ADC_SAR.c **** *
 105:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/ADC_SAR.c **** void ADC_SAR_Init(void)
 107:Generated_Source\PSoC5/ADC_SAR.c **** {
  80              		.loc 1 107 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84 0000 80B5     		push	{r7, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 00AF     		add	r7, sp, #0
  89              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/ADC_SAR.c **** 
 109:Generated_Source\PSoC5/ADC_SAR.c ****     /* This is only valid if there is an internal clock */
 110:Generated_Source\PSoC5/ADC_SAR.c ****     #if(ADC_SAR_DEFAULT_INTERNAL_CLK)
 111:Generated_Source\PSoC5/ADC_SAR.c ****         ADC_SAR_theACLK_SetMode(CYCLK_DUTY);
 112:Generated_Source\PSoC5/ADC_SAR.c ****     #endif /* End ADC_SAR_DEFAULT_INTERNAL_CLK */
 113:Generated_Source\PSoC5/ADC_SAR.c **** 
 114:Generated_Source\PSoC5/ADC_SAR.c ****     #if(ADC_SAR_IRQ_REMOVE == 0u)
 115:Generated_Source\PSoC5/ADC_SAR.c ****         /* Start and set interrupt vector */
 116:Generated_Source\PSoC5/ADC_SAR.c ****         CyIntSetPriority(ADC_SAR_INTC_NUMBER, ADC_SAR_INTC_PRIOR_NUMBER);
 117:Generated_Source\PSoC5/ADC_SAR.c ****         (void)CyIntSetVector(ADC_SAR_INTC_NUMBER, &ADC_SAR_ISR);
 118:Generated_Source\PSoC5/ADC_SAR.c ****     #endif   /* End ADC_SAR_IRQ_REMOVE */
 119:Generated_Source\PSoC5/ADC_SAR.c **** 
 120:Generated_Source\PSoC5/ADC_SAR.c ****     /* Enable IRQ mode*/
 121:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_SAR_CSR1_REG |= ADC_SAR_SAR_IRQ_MASK_EN | ADC_SAR_SAR_IRQ_MODE_EDGE;
  90              		.loc 1 121 0
  91 0004 074A     		ldr	r2, .L6
  92 0006 074B     		ldr	r3, .L6
  93 0008 1B78     		ldrb	r3, [r3]
  94 000a DBB2     		uxtb	r3, r3
  95 000c 43F00603 		orr	r3, r3, #6
  96 0010 DBB2     		uxtb	r3, r3
  97 0012 1370     		strb	r3, [r2]
 122:Generated_Source\PSoC5/ADC_SAR.c **** 
 123:Generated_Source\PSoC5/ADC_SAR.c ****     /*Set SAR ADC resolution ADC */
 124:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_SetResolution(ADC_SAR_DEFAULT_RESOLUTION);
  98              		.loc 1 124 0
  99 0014 0C20     		movs	r0, #12
 100 0016 FFF7FEFF 		bl	ADC_SAR_SetResolution
 125:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_offset = 0;
 101              		.loc 1 125 0
 102 001a 034B     		ldr	r3, .L6+4
 103 001c 0022     		movs	r2, #0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 5


 104 001e 1A80     		strh	r2, [r3]	@ movhi
 126:Generated_Source\PSoC5/ADC_SAR.c **** }
 105              		.loc 1 126 0
 106 0020 00BF     		nop
 107 0022 80BD     		pop	{r7, pc}
 108              	.L7:
 109              		.align	2
 110              	.L6:
 111 0024 09590040 		.word	1073764617
 112 0028 00000000 		.word	ADC_SAR_offset
 113              		.cfi_endproc
 114              	.LFE1:
 115              		.size	ADC_SAR_Init, .-ADC_SAR_Init
 116              		.section	.text.ADC_SAR_Enable,"ax",%progbits
 117              		.align	2
 118              		.global	ADC_SAR_Enable
 119              		.thumb
 120              		.thumb_func
 121              		.type	ADC_SAR_Enable, %function
 122              	ADC_SAR_Enable:
 123              	.LFB2:
 127:Generated_Source\PSoC5/ADC_SAR.c **** 
 128:Generated_Source\PSoC5/ADC_SAR.c **** 
 129:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
 130:Generated_Source\PSoC5/ADC_SAR.c **** * Function Name: ADC_SAR_Enable
 131:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
 132:Generated_Source\PSoC5/ADC_SAR.c **** *
 133:Generated_Source\PSoC5/ADC_SAR.c **** * Summary:
 134:Generated_Source\PSoC5/ADC_SAR.c **** *  Enables the reference, clock and power for SAR ADC.
 135:Generated_Source\PSoC5/ADC_SAR.c **** *
 136:Generated_Source\PSoC5/ADC_SAR.c **** * Parameters:
 137:Generated_Source\PSoC5/ADC_SAR.c **** *  None.
 138:Generated_Source\PSoC5/ADC_SAR.c **** *
 139:Generated_Source\PSoC5/ADC_SAR.c **** * Return:
 140:Generated_Source\PSoC5/ADC_SAR.c **** *  None.
 141:Generated_Source\PSoC5/ADC_SAR.c **** *
 142:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/ADC_SAR.c **** void ADC_SAR_Enable(void)
 144:Generated_Source\PSoC5/ADC_SAR.c **** {
 124              		.loc 1 144 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128 0000 80B5     		push	{r7, lr}
 129              		.cfi_def_cfa_offset 8
 130              		.cfi_offset 7, -8
 131              		.cfi_offset 14, -4
 132 0002 82B0     		sub	sp, sp, #8
 133              		.cfi_def_cfa_offset 16
 134 0004 00AF     		add	r7, sp, #0
 135              		.cfi_def_cfa_register 7
 145:Generated_Source\PSoC5/ADC_SAR.c ****     uint8 tmpReg;
 146:Generated_Source\PSoC5/ADC_SAR.c ****     uint8 enableInterrupts;
 147:Generated_Source\PSoC5/ADC_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 136              		.loc 1 147 0
 137 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 138 000a 0346     		mov	r3, r0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 6


 139 000c FB71     		strb	r3, [r7, #7]
 148:Generated_Source\PSoC5/ADC_SAR.c **** 
 149:Generated_Source\PSoC5/ADC_SAR.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_PWRMGR_SAR_REG |= ADC_SAR_ACT_PWR_SAR_EN;
 140              		.loc 1 150 0
 141 000e 254A     		ldr	r2, .L9
 142 0010 244B     		ldr	r3, .L9
 143 0012 1B78     		ldrb	r3, [r3]
 144 0014 DBB2     		uxtb	r3, r3
 145 0016 43F00203 		orr	r3, r3, #2
 146 001a DBB2     		uxtb	r3, r3
 147 001c 1370     		strb	r3, [r2]
 151:Generated_Source\PSoC5/ADC_SAR.c **** 
 152:Generated_Source\PSoC5/ADC_SAR.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_STBY_PWRMGR_SAR_REG |= ADC_SAR_STBY_PWR_SAR_EN;
 148              		.loc 1 153 0
 149 001e 224A     		ldr	r2, .L9+4
 150 0020 214B     		ldr	r3, .L9+4
 151 0022 1B78     		ldrb	r3, [r3]
 152 0024 DBB2     		uxtb	r3, r3
 153 0026 43F00203 		orr	r3, r3, #2
 154 002a DBB2     		uxtb	r3, r3
 155 002c 1370     		strb	r3, [r2]
 154:Generated_Source\PSoC5/ADC_SAR.c **** 
 155:Generated_Source\PSoC5/ADC_SAR.c ****     /* This is only valid if there is an internal clock */
 156:Generated_Source\PSoC5/ADC_SAR.c ****     #if(ADC_SAR_DEFAULT_INTERNAL_CLK)
 157:Generated_Source\PSoC5/ADC_SAR.c ****         ADC_SAR_PWRMGR_CLK_REG |= ADC_SAR_ACT_PWR_CLK_EN;
 158:Generated_Source\PSoC5/ADC_SAR.c ****         ADC_SAR_STBY_PWRMGR_CLK_REG |= ADC_SAR_STBY_PWR_CLK_EN;
 159:Generated_Source\PSoC5/ADC_SAR.c ****     #endif /* End ADC_SAR_DEFAULT_INTERNAL_CLK */
 160:Generated_Source\PSoC5/ADC_SAR.c **** 
 161:Generated_Source\PSoC5/ADC_SAR.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:Generated_Source\PSoC5/ADC_SAR.c ****     tmpReg = ADC_SAR_SAR_CSR3_REG;
 156              		.loc 1 162 0
 157 002e 1F4B     		ldr	r3, .L9+8
 158 0030 1B78     		ldrb	r3, [r3]
 159 0032 BB71     		strb	r3, [r7, #6]
 163:Generated_Source\PSoC5/ADC_SAR.c ****     tmpReg |= ADC_SAR_SAR_EN_BUF_VCM_EN;
 160              		.loc 1 163 0
 161 0034 BB79     		ldrb	r3, [r7, #6]
 162 0036 43F00203 		orr	r3, r3, #2
 163 003a BB71     		strb	r3, [r7, #6]
 164:Generated_Source\PSoC5/ADC_SAR.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:Generated_Source\PSoC5/ADC_SAR.c ****     #if((ADC_SAR_DEFAULT_REFERENCE == ADC_SAR__EXT_REF) || \
 166:Generated_Source\PSoC5/ADC_SAR.c ****         (ADC_SAR_DEFAULT_RANGE == ADC_SAR__VNEG_VDDA_DIFF))
 167:Generated_Source\PSoC5/ADC_SAR.c ****         tmpReg &= (uint8)~ADC_SAR_SAR_EN_BUF_VREF_EN;
 168:Generated_Source\PSoC5/ADC_SAR.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:Generated_Source\PSoC5/ADC_SAR.c ****         tmpReg |= ADC_SAR_SAR_EN_BUF_VREF_EN;
 164              		.loc 1 169 0
 165 003c BB79     		ldrb	r3, [r7, #6]
 166 003e 43F00103 		orr	r3, r3, #1
 167 0042 BB71     		strb	r3, [r7, #6]
 170:Generated_Source\PSoC5/ADC_SAR.c ****     #endif /* ADC_SAR_DEFAULT_REFERENCE == ADC_SAR__EXT_REF */
 171:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_SAR_CSR3_REG = tmpReg;
 168              		.loc 1 171 0
 169 0044 194A     		ldr	r2, .L9+8
 170 0046 BB79     		ldrb	r3, [r7, #6]
 171 0048 1370     		strb	r3, [r2]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 7


 172:Generated_Source\PSoC5/ADC_SAR.c **** 
 173:Generated_Source\PSoC5/ADC_SAR.c ****     /* Set reference for ADC */
 174:Generated_Source\PSoC5/ADC_SAR.c ****     #if(ADC_SAR_DEFAULT_RANGE == ADC_SAR__VNEG_VDDA_DIFF)
 175:Generated_Source\PSoC5/ADC_SAR.c ****         #if(ADC_SAR_DEFAULT_REFERENCE == ADC_SAR__EXT_REF)
 176:Generated_Source\PSoC5/ADC_SAR.c ****             ADC_SAR_SAR_CSR6_REG = ADC_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 177:Generated_Source\PSoC5/ADC_SAR.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:Generated_Source\PSoC5/ADC_SAR.c ****             ADC_SAR_SAR_CSR6_REG = ADC_SAR_VDDA_VREF;           /* S7 */
 179:Generated_Source\PSoC5/ADC_SAR.c ****         #endif /* ADC_SAR_DEFAULT_REFERENCE == ADC_SAR__EXT_REF */
 180:Generated_Source\PSoC5/ADC_SAR.c ****     #else  /* Reference goes through internal buffer */
 181:Generated_Source\PSoC5/ADC_SAR.c ****         #if(ADC_SAR_DEFAULT_REFERENCE == ADC_SAR__INT_REF_NOT_BYPASSED)
 182:Generated_Source\PSoC5/ADC_SAR.c ****             ADC_SAR_SAR_CSR6_REG = ADC_SAR_INT_VREF;            /* S3 + S4 */
 172              		.loc 1 182 0
 173 004a 194B     		ldr	r3, .L9+12
 174 004c 1822     		movs	r2, #24
 175 004e 1A70     		strb	r2, [r3]
 183:Generated_Source\PSoC5/ADC_SAR.c ****         #else /* INTREF Bypassed of External */
 184:Generated_Source\PSoC5/ADC_SAR.c ****             ADC_SAR_SAR_CSR6_REG = ADC_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 185:Generated_Source\PSoC5/ADC_SAR.c ****         #endif /* ADC_SAR_DEFAULT_REFERENCE == ADC_SAR__INT_REF_NOT_BYPASSED */
 186:Generated_Source\PSoC5/ADC_SAR.c ****     #endif /* VNEG_VDDA_DIFF */
 187:Generated_Source\PSoC5/ADC_SAR.c **** 
 188:Generated_Source\PSoC5/ADC_SAR.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:Generated_Source\PSoC5/ADC_SAR.c ****     #if(ADC_SAR_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:Generated_Source\PSoC5/ADC_SAR.c ****         ADC_SAR_SAR_CSR5_REG &= (uint8)~ADC_SAR_SAR_DLY_INC;
 191:Generated_Source\PSoC5/ADC_SAR.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:Generated_Source\PSoC5/ADC_SAR.c ****         ADC_SAR_SAR_CSR5_REG |= ADC_SAR_SAR_DLY_INC;
 176              		.loc 1 192 0
 177 0050 184A     		ldr	r2, .L9+16
 178 0052 184B     		ldr	r3, .L9+16
 179 0054 1B78     		ldrb	r3, [r3]
 180 0056 DBB2     		uxtb	r3, r3
 181 0058 43F04003 		orr	r3, r3, #64
 182 005c DBB2     		uxtb	r3, r3
 183 005e 1370     		strb	r3, [r2]
 193:Generated_Source\PSoC5/ADC_SAR.c ****     #endif /* ADC_SAR_HIGH_POWER_PULSE == 0u */
 194:Generated_Source\PSoC5/ADC_SAR.c **** 
 195:Generated_Source\PSoC5/ADC_SAR.c ****     /* Increase comparator latch enable delay by 20%, 
 196:Generated_Source\PSoC5/ADC_SAR.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:Generated_Source\PSoC5/ADC_SAR.c ****     *  Default for 1MSPS) 
 198:Generated_Source\PSoC5/ADC_SAR.c ****     */
 199:Generated_Source\PSoC5/ADC_SAR.c ****     #if(ADC_SAR_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:Generated_Source\PSoC5/ADC_SAR.c ****         ADC_SAR_SAR_CSR5_REG |= ADC_SAR_SAR_SEL_CSEL_DFT_CHAR;
 201:Generated_Source\PSoC5/ADC_SAR.c ****     #else /* for <500ksps */
 202:Generated_Source\PSoC5/ADC_SAR.c ****         ADC_SAR_SAR_CSR5_REG &= (uint8)~ADC_SAR_SAR_SEL_CSEL_DFT_CHAR;
 184              		.loc 1 202 0
 185 0060 144A     		ldr	r2, .L9+16
 186 0062 144B     		ldr	r3, .L9+16
 187 0064 1B78     		ldrb	r3, [r3]
 188 0066 DBB2     		uxtb	r3, r3
 189 0068 23F00303 		bic	r3, r3, #3
 190 006c DBB2     		uxtb	r3, r3
 191 006e 1370     		strb	r3, [r2]
 203:Generated_Source\PSoC5/ADC_SAR.c ****     #endif /* ADC_SAR_HIGH_POWER_PULSE == 0u */
 204:Generated_Source\PSoC5/ADC_SAR.c **** 
 205:Generated_Source\PSoC5/ADC_SAR.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_DEFAULT_POWER << ADC_SAR_SAR_POWER_SHIFT)
 192              		.loc 1 206 0
 193 0070 114B     		ldr	r3, .L9+20
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 8


 194 0072 C822     		movs	r2, #200
 195 0074 1A70     		strb	r2, [r3]
 207:Generated_Source\PSoC5/ADC_SAR.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:Generated_Source\PSoC5/ADC_SAR.c ****     #if ((CY_PSOC5LP) || (ADC_SAR_DEFAULT_REFERENCE != ADC_SAR__EXT_REF))
 209:Generated_Source\PSoC5/ADC_SAR.c ****         | ADC_SAR_SAR_HIZ_CLEAR
 210:Generated_Source\PSoC5/ADC_SAR.c ****     #endif /* SAR_HIZ_CLEAR */
 211:Generated_Source\PSoC5/ADC_SAR.c ****     /*Set Convertion mode */
 212:Generated_Source\PSoC5/ADC_SAR.c ****     #if(ADC_SAR_DEFAULT_CONV_MODE != ADC_SAR__FREE_RUNNING)      /* If triggered mode */
 213:Generated_Source\PSoC5/ADC_SAR.c ****         | ADC_SAR_SAR_MX_SOF_UDB           /* source: UDB */
 214:Generated_Source\PSoC5/ADC_SAR.c ****         | ADC_SAR_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:Generated_Source\PSoC5/ADC_SAR.c ****     #endif /* ADC_SAR_DEFAULT_CONV_MODE */
 216:Generated_Source\PSoC5/ADC_SAR.c ****     ; /* end of multiple line initialization */
 217:Generated_Source\PSoC5/ADC_SAR.c **** 
 218:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_SAR_TR0_REG = ADC_SAR_SAR_CAP_TRIM_2;
 196              		.loc 1 218 0
 197 0076 114B     		ldr	r3, .L9+24
 198 0078 0222     		movs	r2, #2
 199 007a 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/ADC_SAR.c **** 
 220:Generated_Source\PSoC5/ADC_SAR.c ****     /* Enable clock for SAR ADC*/
 221:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_SAR_CLK_REG |= ADC_SAR_SAR_MX_CLK_EN;
 200              		.loc 1 221 0
 201 007c 104A     		ldr	r2, .L9+28
 202 007e 104B     		ldr	r3, .L9+28
 203 0080 1B78     		ldrb	r3, [r3]
 204 0082 DBB2     		uxtb	r3, r3
 205 0084 43F00803 		orr	r3, r3, #8
 206 0088 DBB2     		uxtb	r3, r3
 207 008a 1370     		strb	r3, [r2]
 222:Generated_Source\PSoC5/ADC_SAR.c **** 
 223:Generated_Source\PSoC5/ADC_SAR.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 208              		.loc 1 223 0
 209 008c 0A20     		movs	r0, #10
 210 008e FFF7FEFF 		bl	CyDelayUs
 224:Generated_Source\PSoC5/ADC_SAR.c **** 
 225:Generated_Source\PSoC5/ADC_SAR.c ****     #if(ADC_SAR_IRQ_REMOVE == 0u)
 226:Generated_Source\PSoC5/ADC_SAR.c ****         /* Clear a pending interrupt */
 227:Generated_Source\PSoC5/ADC_SAR.c ****         CyIntClearPending(ADC_SAR_INTC_NUMBER);
 228:Generated_Source\PSoC5/ADC_SAR.c ****     #endif   /* End ADC_SAR_IRQ_REMOVE */
 229:Generated_Source\PSoC5/ADC_SAR.c **** 
 230:Generated_Source\PSoC5/ADC_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 211              		.loc 1 230 0
 212 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 213 0094 1846     		mov	r0, r3
 214 0096 FFF7FEFF 		bl	CyExitCriticalSection
 231:Generated_Source\PSoC5/ADC_SAR.c **** }
 215              		.loc 1 231 0
 216 009a 00BF     		nop
 217 009c 0837     		adds	r7, r7, #8
 218              		.cfi_def_cfa_offset 8
 219 009e BD46     		mov	sp, r7
 220              		.cfi_def_cfa_register 13
 221              		@ sp needed
 222 00a0 80BD     		pop	{r7, pc}
 223              	.L10:
 224 00a2 00BF     		.align	2
 225              	.L9:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 9


 226 00a4 AB430040 		.word	1073759147
 227 00a8 BB430040 		.word	1073759163
 228 00ac 0B590040 		.word	1073764619
 229 00b0 0E590040 		.word	1073764622
 230 00b4 0D590040 		.word	1073764621
 231 00b8 08590040 		.word	1073764616
 232 00bc 16460040 		.word	1073759766
 233 00c0 2F5B0040 		.word	1073765167
 234              		.cfi_endproc
 235              	.LFE2:
 236              		.size	ADC_SAR_Enable, .-ADC_SAR_Enable
 237              		.section	.text.ADC_SAR_Stop,"ax",%progbits
 238              		.align	2
 239              		.global	ADC_SAR_Stop
 240              		.thumb
 241              		.thumb_func
 242              		.type	ADC_SAR_Stop, %function
 243              	ADC_SAR_Stop:
 244              	.LFB3:
 232:Generated_Source\PSoC5/ADC_SAR.c **** 
 233:Generated_Source\PSoC5/ADC_SAR.c **** 
 234:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
 235:Generated_Source\PSoC5/ADC_SAR.c **** * Function Name: ADC_SAR_Stop
 236:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
 237:Generated_Source\PSoC5/ADC_SAR.c **** *
 238:Generated_Source\PSoC5/ADC_SAR.c **** * Summary:
 239:Generated_Source\PSoC5/ADC_SAR.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:Generated_Source\PSoC5/ADC_SAR.c **** *
 241:Generated_Source\PSoC5/ADC_SAR.c **** * Parameters:
 242:Generated_Source\PSoC5/ADC_SAR.c **** *  None.
 243:Generated_Source\PSoC5/ADC_SAR.c **** *
 244:Generated_Source\PSoC5/ADC_SAR.c **** * Return:
 245:Generated_Source\PSoC5/ADC_SAR.c **** *  None.
 246:Generated_Source\PSoC5/ADC_SAR.c **** *
 247:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
 248:Generated_Source\PSoC5/ADC_SAR.c **** void ADC_SAR_Stop(void)
 249:Generated_Source\PSoC5/ADC_SAR.c **** {
 245              		.loc 1 249 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 82B0     		sub	sp, sp, #8
 254              		.cfi_def_cfa_offset 16
 255 0004 00AF     		add	r7, sp, #0
 256              		.cfi_def_cfa_register 7
 250:Generated_Source\PSoC5/ADC_SAR.c ****     uint8 enableInterrupts;
 251:Generated_Source\PSoC5/ADC_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 257              		.loc 1 251 0
 258 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 259 000a 0346     		mov	r3, r0
 260 000c FB71     		strb	r3, [r7, #7]
 252:Generated_Source\PSoC5/ADC_SAR.c **** 
 253:Generated_Source\PSoC5/ADC_SAR.c ****     /* Stop all conversions */
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 10


 254:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_SAR_CSR0_REG &= (uint8)~ADC_SAR_SAR_SOF_START_CONV;
 261              		.loc 1 254 0
 262 000e 104A     		ldr	r2, .L12
 263 0010 0F4B     		ldr	r3, .L12
 264 0012 1B78     		ldrb	r3, [r3]
 265 0014 DBB2     		uxtb	r3, r3
 266 0016 23F00103 		bic	r3, r3, #1
 267 001a DBB2     		uxtb	r3, r3
 268 001c 1370     		strb	r3, [r2]
 255:Generated_Source\PSoC5/ADC_SAR.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_ACT_PWR_SAR_EN;
 269              		.loc 1 256 0
 270 001e 0D4A     		ldr	r2, .L12+4
 271 0020 0C4B     		ldr	r3, .L12+4
 272 0022 1B78     		ldrb	r3, [r3]
 273 0024 DBB2     		uxtb	r3, r3
 274 0026 23F00203 		bic	r3, r3, #2
 275 002a DBB2     		uxtb	r3, r3
 276 002c 1370     		strb	r3, [r2]
 257:Generated_Source\PSoC5/ADC_SAR.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_STBY_PWR_SAR_EN;
 277              		.loc 1 258 0
 278 002e 0A4A     		ldr	r2, .L12+8
 279 0030 094B     		ldr	r3, .L12+8
 280 0032 1B78     		ldrb	r3, [r3]
 281 0034 DBB2     		uxtb	r3, r3
 282 0036 23F00203 		bic	r3, r3, #2
 283 003a DBB2     		uxtb	r3, r3
 284 003c 1370     		strb	r3, [r2]
 259:Generated_Source\PSoC5/ADC_SAR.c **** 
 260:Generated_Source\PSoC5/ADC_SAR.c ****     /* This is only valid if there is an internal clock */
 261:Generated_Source\PSoC5/ADC_SAR.c ****     #if(ADC_SAR_DEFAULT_INTERNAL_CLK)
 262:Generated_Source\PSoC5/ADC_SAR.c ****         ADC_SAR_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_ACT_PWR_CLK_EN;
 263:Generated_Source\PSoC5/ADC_SAR.c ****         ADC_SAR_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_STBY_PWR_CLK_EN;
 264:Generated_Source\PSoC5/ADC_SAR.c ****     #endif /* End ADC_SAR_DEFAULT_INTERNAL_CLK */
 265:Generated_Source\PSoC5/ADC_SAR.c **** 
 266:Generated_Source\PSoC5/ADC_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 285              		.loc 1 266 0
 286 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 287 0040 1846     		mov	r0, r3
 288 0042 FFF7FEFF 		bl	CyExitCriticalSection
 267:Generated_Source\PSoC5/ADC_SAR.c **** 
 268:Generated_Source\PSoC5/ADC_SAR.c **** }
 289              		.loc 1 268 0
 290 0046 00BF     		nop
 291 0048 0837     		adds	r7, r7, #8
 292              		.cfi_def_cfa_offset 8
 293 004a BD46     		mov	sp, r7
 294              		.cfi_def_cfa_register 13
 295              		@ sp needed
 296 004c 80BD     		pop	{r7, pc}
 297              	.L13:
 298 004e 00BF     		.align	2
 299              	.L12:
 300 0050 08590040 		.word	1073764616
 301 0054 AB430040 		.word	1073759147
 302 0058 BB430040 		.word	1073759163
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 11


 303              		.cfi_endproc
 304              	.LFE3:
 305              		.size	ADC_SAR_Stop, .-ADC_SAR_Stop
 306              		.section	.text.ADC_SAR_SetPower,"ax",%progbits
 307              		.align	2
 308              		.global	ADC_SAR_SetPower
 309              		.thumb
 310              		.thumb_func
 311              		.type	ADC_SAR_SetPower, %function
 312              	ADC_SAR_SetPower:
 313              	.LFB4:
 269:Generated_Source\PSoC5/ADC_SAR.c **** 
 270:Generated_Source\PSoC5/ADC_SAR.c **** 
 271:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
 272:Generated_Source\PSoC5/ADC_SAR.c **** * Function Name: ADC_SAR_SetPower
 273:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
 274:Generated_Source\PSoC5/ADC_SAR.c **** *
 275:Generated_Source\PSoC5/ADC_SAR.c **** * Summary:
 276:Generated_Source\PSoC5/ADC_SAR.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:Generated_Source\PSoC5/ADC_SAR.c **** *  settings with faster clock speeds.
 278:Generated_Source\PSoC5/ADC_SAR.c **** *
 279:Generated_Source\PSoC5/ADC_SAR.c **** * Parameters:
 280:Generated_Source\PSoC5/ADC_SAR.c **** *  power:  Power setting for ADC
 281:Generated_Source\PSoC5/ADC_SAR.c **** *  0 ->    Normal
 282:Generated_Source\PSoC5/ADC_SAR.c **** *  1 ->    Medium power
 283:Generated_Source\PSoC5/ADC_SAR.c **** *  2 ->    1.25 power
 284:Generated_Source\PSoC5/ADC_SAR.c **** *  3 ->    Minimum power.
 285:Generated_Source\PSoC5/ADC_SAR.c **** *
 286:Generated_Source\PSoC5/ADC_SAR.c **** * Return:
 287:Generated_Source\PSoC5/ADC_SAR.c **** *  None.
 288:Generated_Source\PSoC5/ADC_SAR.c **** *
 289:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/ADC_SAR.c **** void ADC_SAR_SetPower(uint8 power)
 291:Generated_Source\PSoC5/ADC_SAR.c **** {
 314              		.loc 1 291 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 16
 317              		@ frame_needed = 1, uses_anonymous_args = 0
 318              		@ link register save eliminated.
 319 0000 80B4     		push	{r7}
 320              		.cfi_def_cfa_offset 4
 321              		.cfi_offset 7, -4
 322 0002 85B0     		sub	sp, sp, #20
 323              		.cfi_def_cfa_offset 24
 324 0004 00AF     		add	r7, sp, #0
 325              		.cfi_def_cfa_register 7
 326 0006 0346     		mov	r3, r0
 327 0008 FB71     		strb	r3, [r7, #7]
 292:Generated_Source\PSoC5/ADC_SAR.c ****     uint8 tmpReg;
 293:Generated_Source\PSoC5/ADC_SAR.c **** 
 294:Generated_Source\PSoC5/ADC_SAR.c ****     /* mask off invalid power settings */
 295:Generated_Source\PSoC5/ADC_SAR.c ****     power &= ADC_SAR_SAR_API_POWER_MASK;
 328              		.loc 1 295 0
 329 000a FB79     		ldrb	r3, [r7, #7]
 330 000c 03F00303 		and	r3, r3, #3
 331 0010 FB71     		strb	r3, [r7, #7]
 296:Generated_Source\PSoC5/ADC_SAR.c **** 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 12


 297:Generated_Source\PSoC5/ADC_SAR.c ****     /* Set Power parameter  */
 298:Generated_Source\PSoC5/ADC_SAR.c ****     tmpReg = ADC_SAR_SAR_CSR0_REG & (uint8)~ADC_SAR_SAR_POWER_MASK;
 332              		.loc 1 298 0
 333 0012 0A4B     		ldr	r3, .L15
 334 0014 1B78     		ldrb	r3, [r3]
 335 0016 DBB2     		uxtb	r3, r3
 336 0018 03F03F03 		and	r3, r3, #63
 337 001c FB73     		strb	r3, [r7, #15]
 299:Generated_Source\PSoC5/ADC_SAR.c ****     tmpReg |= (uint8)(power << ADC_SAR_SAR_POWER_SHIFT);
 338              		.loc 1 299 0
 339 001e FB79     		ldrb	r3, [r7, #7]
 340 0020 9B01     		lsls	r3, r3, #6
 341 0022 DAB2     		uxtb	r2, r3
 342 0024 FB7B     		ldrb	r3, [r7, #15]
 343 0026 1343     		orrs	r3, r3, r2
 344 0028 FB73     		strb	r3, [r7, #15]
 300:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_SAR_CSR0_REG = tmpReg;
 345              		.loc 1 300 0
 346 002a 044A     		ldr	r2, .L15
 347 002c FB7B     		ldrb	r3, [r7, #15]
 348 002e 1370     		strb	r3, [r2]
 301:Generated_Source\PSoC5/ADC_SAR.c **** }
 349              		.loc 1 301 0
 350 0030 00BF     		nop
 351 0032 1437     		adds	r7, r7, #20
 352              		.cfi_def_cfa_offset 4
 353 0034 BD46     		mov	sp, r7
 354              		.cfi_def_cfa_register 13
 355              		@ sp needed
 356 0036 80BC     		pop	{r7}
 357              		.cfi_restore 7
 358              		.cfi_def_cfa_offset 0
 359 0038 7047     		bx	lr
 360              	.L16:
 361 003a 00BF     		.align	2
 362              	.L15:
 363 003c 08590040 		.word	1073764616
 364              		.cfi_endproc
 365              	.LFE4:
 366              		.size	ADC_SAR_SetPower, .-ADC_SAR_SetPower
 367              		.section	.text.ADC_SAR_SetResolution,"ax",%progbits
 368              		.align	2
 369              		.global	ADC_SAR_SetResolution
 370              		.thumb
 371              		.thumb_func
 372              		.type	ADC_SAR_SetResolution, %function
 373              	ADC_SAR_SetResolution:
 374              	.LFB5:
 302:Generated_Source\PSoC5/ADC_SAR.c **** 
 303:Generated_Source\PSoC5/ADC_SAR.c **** 
 304:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
 305:Generated_Source\PSoC5/ADC_SAR.c **** * Function Name: ADC_SAR_SetResolution
 306:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
 307:Generated_Source\PSoC5/ADC_SAR.c **** *
 308:Generated_Source\PSoC5/ADC_SAR.c **** * Summary:
 309:Generated_Source\PSoC5/ADC_SAR.c **** *  Sets the Relution of the SAR.
 310:Generated_Source\PSoC5/ADC_SAR.c **** *
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 13


 311:Generated_Source\PSoC5/ADC_SAR.c **** * Parameters:
 312:Generated_Source\PSoC5/ADC_SAR.c **** *  resolution:
 313:Generated_Source\PSoC5/ADC_SAR.c **** *  12 ->    RES12
 314:Generated_Source\PSoC5/ADC_SAR.c **** *  10 ->    RES10
 315:Generated_Source\PSoC5/ADC_SAR.c **** *  8  ->    RES8
 316:Generated_Source\PSoC5/ADC_SAR.c **** *
 317:Generated_Source\PSoC5/ADC_SAR.c **** * Return:
 318:Generated_Source\PSoC5/ADC_SAR.c **** *  None.
 319:Generated_Source\PSoC5/ADC_SAR.c **** *
 320:Generated_Source\PSoC5/ADC_SAR.c **** * Side Effects:
 321:Generated_Source\PSoC5/ADC_SAR.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:Generated_Source\PSoC5/ADC_SAR.c **** *  recommended best practice is to stop conversions with
 323:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:Generated_Source\PSoC5/ADC_SAR.c **** *  conversions with ADC_StartConvert().
 325:Generated_Source\PSoC5/ADC_SAR.c **** *  If you decide not to stop conversions before calling this API, you
 326:Generated_Source\PSoC5/ADC_SAR.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:Generated_Source\PSoC5/ADC_SAR.c **** *  before changing the resolution.
 328:Generated_Source\PSoC5/ADC_SAR.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:Generated_Source\PSoC5/ADC_SAR.c **** *  not be changed until the current conversion is complete. Data will not be
 330:Generated_Source\PSoC5/ADC_SAR.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:Generated_Source\PSoC5/ADC_SAR.c **** *  clock cycles.
 332:Generated_Source\PSoC5/ADC_SAR.c **** *  You may need add a delay of this number of clock cycles after
 333:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SetResolution() is called before data is valid again.
 334:Generated_Source\PSoC5/ADC_SAR.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:Generated_Source\PSoC5/ADC_SAR.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:Generated_Source\PSoC5/ADC_SAR.c **** *  input range, and voltage reference.
 338:Generated_Source\PSoC5/ADC_SAR.c **** *
 339:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
 340:Generated_Source\PSoC5/ADC_SAR.c **** void ADC_SAR_SetResolution(uint8 resolution)
 341:Generated_Source\PSoC5/ADC_SAR.c **** {
 375              		.loc 1 341 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 16
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379 0000 80B5     		push	{r7, lr}
 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 7, -8
 382              		.cfi_offset 14, -4
 383 0002 84B0     		sub	sp, sp, #16
 384              		.cfi_def_cfa_offset 24
 385 0004 00AF     		add	r7, sp, #0
 386              		.cfi_def_cfa_register 7
 387 0006 0346     		mov	r3, r0
 388 0008 FB71     		strb	r3, [r7, #7]
 342:Generated_Source\PSoC5/ADC_SAR.c ****     uint8 tmpReg;
 343:Generated_Source\PSoC5/ADC_SAR.c **** 
 344:Generated_Source\PSoC5/ADC_SAR.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:Generated_Source\PSoC5/ADC_SAR.c ****     switch (resolution)
 389              		.loc 1 345 0
 390 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 391 000c 0A2B     		cmp	r3, #10
 392 000e 07D0     		beq	.L19
 393 0010 0C2B     		cmp	r3, #12
 394 0012 02D0     		beq	.L20
 395 0014 082B     		cmp	r3, #8
 396 0016 06D0     		beq	.L21
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 14


 397 0018 08E0     		b	.L23
 398              	.L20:
 346:Generated_Source\PSoC5/ADC_SAR.c ****     {
 347:Generated_Source\PSoC5/ADC_SAR.c ****         case (uint8)ADC_SAR__BITS_12:
 348:Generated_Source\PSoC5/ADC_SAR.c ****             tmpReg = ADC_SAR_SAR_RESOLUTION_12BIT | ADC_SAR_SAR_SAMPLE_WIDTH;
 399              		.loc 1 348 0
 400 001a C223     		movs	r3, #194
 401 001c FB73     		strb	r3, [r7, #15]
 349:Generated_Source\PSoC5/ADC_SAR.c ****             break;
 402              		.loc 1 349 0
 403 001e 0BE0     		b	.L22
 404              	.L19:
 350:Generated_Source\PSoC5/ADC_SAR.c ****         case (uint8)ADC_SAR__BITS_10:
 351:Generated_Source\PSoC5/ADC_SAR.c ****             tmpReg = ADC_SAR_SAR_RESOLUTION_10BIT | ADC_SAR_SAR_SAMPLE_WIDTH;
 405              		.loc 1 351 0
 406 0020 8223     		movs	r3, #130
 407 0022 FB73     		strb	r3, [r7, #15]
 352:Generated_Source\PSoC5/ADC_SAR.c ****             break;
 408              		.loc 1 352 0
 409 0024 08E0     		b	.L22
 410              	.L21:
 353:Generated_Source\PSoC5/ADC_SAR.c ****         case (uint8)ADC_SAR__BITS_8:
 354:Generated_Source\PSoC5/ADC_SAR.c ****             tmpReg = ADC_SAR_SAR_RESOLUTION_8BIT | ADC_SAR_SAR_SAMPLE_WIDTH;
 411              		.loc 1 354 0
 412 0026 4223     		movs	r3, #66
 413 0028 FB73     		strb	r3, [r7, #15]
 355:Generated_Source\PSoC5/ADC_SAR.c ****             break;
 414              		.loc 1 355 0
 415 002a 05E0     		b	.L22
 416              	.L23:
 356:Generated_Source\PSoC5/ADC_SAR.c ****         default:
 357:Generated_Source\PSoC5/ADC_SAR.c ****             tmpReg = ADC_SAR_SAR_RESOLUTION_12BIT | ADC_SAR_SAR_SAMPLE_WIDTH;
 417              		.loc 1 357 0
 418 002c C223     		movs	r3, #194
 419 002e FB73     		strb	r3, [r7, #15]
 358:Generated_Source\PSoC5/ADC_SAR.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:Generated_Source\PSoC5/ADC_SAR.c ****             CYASSERT(0u != 0u);
 420              		.loc 1 359 0
 421 0030 0020     		movs	r0, #0
 422 0032 FFF7FEFF 		bl	CyHalt
 360:Generated_Source\PSoC5/ADC_SAR.c ****             break;
 423              		.loc 1 360 0
 424 0036 00BF     		nop
 425              	.L22:
 361:Generated_Source\PSoC5/ADC_SAR.c ****     }
 362:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_SAR_CSR2_REG = tmpReg;
 426              		.loc 1 362 0
 427 0038 054A     		ldr	r2, .L24
 428 003a FB7B     		ldrb	r3, [r7, #15]
 429 003c 1370     		strb	r3, [r2]
 363:Generated_Source\PSoC5/ADC_SAR.c **** 
 364:Generated_Source\PSoC5/ADC_SAR.c ****      /* Calculate gain for convert counts to volts */
 365:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_CalcGain(resolution);
 430              		.loc 1 365 0
 431 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 432 0040 1846     		mov	r0, r3
 433 0042 FFF7FEFF 		bl	ADC_SAR_CalcGain
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 15


 366:Generated_Source\PSoC5/ADC_SAR.c **** }
 434              		.loc 1 366 0
 435 0046 00BF     		nop
 436 0048 1037     		adds	r7, r7, #16
 437              		.cfi_def_cfa_offset 8
 438 004a BD46     		mov	sp, r7
 439              		.cfi_def_cfa_register 13
 440              		@ sp needed
 441 004c 80BD     		pop	{r7, pc}
 442              	.L25:
 443 004e 00BF     		.align	2
 444              	.L24:
 445 0050 0A590040 		.word	1073764618
 446              		.cfi_endproc
 447              	.LFE5:
 448              		.size	ADC_SAR_SetResolution, .-ADC_SAR_SetResolution
 449              		.section	.text.ADC_SAR_StartConvert,"ax",%progbits
 450              		.align	2
 451              		.global	ADC_SAR_StartConvert
 452              		.thumb
 453              		.thumb_func
 454              		.type	ADC_SAR_StartConvert, %function
 455              	ADC_SAR_StartConvert:
 456              	.LFB6:
 367:Generated_Source\PSoC5/ADC_SAR.c **** 
 368:Generated_Source\PSoC5/ADC_SAR.c **** 
 369:Generated_Source\PSoC5/ADC_SAR.c **** #if(ADC_SAR_DEFAULT_CONV_MODE != ADC_SAR__HARDWARE_TRIGGER)
 370:Generated_Source\PSoC5/ADC_SAR.c **** 
 371:Generated_Source\PSoC5/ADC_SAR.c **** 
 372:Generated_Source\PSoC5/ADC_SAR.c ****     /*******************************************************************************
 373:Generated_Source\PSoC5/ADC_SAR.c ****     * Function Name: ADC_SAR_StartConvert
 374:Generated_Source\PSoC5/ADC_SAR.c ****     ********************************************************************************
 375:Generated_Source\PSoC5/ADC_SAR.c ****     *
 376:Generated_Source\PSoC5/ADC_SAR.c ****     * Summary:
 377:Generated_Source\PSoC5/ADC_SAR.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:Generated_Source\PSoC5/ADC_SAR.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:Generated_Source\PSoC5/ADC_SAR.c ****     *  version of the SOC and every conversion must be triggered by
 380:Generated_Source\PSoC5/ADC_SAR.c ****     *  ADC_SAR_StartConvert(). This function is not available when the
 381:Generated_Source\PSoC5/ADC_SAR.c ****     *  Hardware Trigger sample mode is selected.
 382:Generated_Source\PSoC5/ADC_SAR.c ****     *
 383:Generated_Source\PSoC5/ADC_SAR.c ****     * Parameters:
 384:Generated_Source\PSoC5/ADC_SAR.c ****     *  None.
 385:Generated_Source\PSoC5/ADC_SAR.c ****     *
 386:Generated_Source\PSoC5/ADC_SAR.c ****     * Return:
 387:Generated_Source\PSoC5/ADC_SAR.c ****     *  None.
 388:Generated_Source\PSoC5/ADC_SAR.c ****     *
 389:Generated_Source\PSoC5/ADC_SAR.c ****     * Theory:
 390:Generated_Source\PSoC5/ADC_SAR.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:Generated_Source\PSoC5/ADC_SAR.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:Generated_Source\PSoC5/ADC_SAR.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:Generated_Source\PSoC5/ADC_SAR.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:Generated_Source\PSoC5/ADC_SAR.c ****     *
 395:Generated_Source\PSoC5/ADC_SAR.c ****     * Side Effects:
 396:Generated_Source\PSoC5/ADC_SAR.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:Generated_Source\PSoC5/ADC_SAR.c ****     *  external pin to the internal SOF generation. Application should not call
 398:Generated_Source\PSoC5/ADC_SAR.c ****     *  StartConvert if external source used for SOF.
 399:Generated_Source\PSoC5/ADC_SAR.c ****     *
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 16


 400:Generated_Source\PSoC5/ADC_SAR.c ****     *******************************************************************************/
 401:Generated_Source\PSoC5/ADC_SAR.c ****     void ADC_SAR_StartConvert(void)
 402:Generated_Source\PSoC5/ADC_SAR.c ****     {
 457              		.loc 1 402 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461              		@ link register save eliminated.
 462 0000 80B4     		push	{r7}
 463              		.cfi_def_cfa_offset 4
 464              		.cfi_offset 7, -4
 465 0002 00AF     		add	r7, sp, #0
 466              		.cfi_def_cfa_register 7
 403:Generated_Source\PSoC5/ADC_SAR.c ****         #if(ADC_SAR_DEFAULT_CONV_MODE != ADC_SAR__FREE_RUNNING)  /* If software triggered mode */
 404:Generated_Source\PSoC5/ADC_SAR.c ****             ADC_SAR_SAR_CSR0_REG &= (uint8)~ADC_SAR_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:Generated_Source\PSoC5/ADC_SAR.c ****         #endif /* End ADC_SAR_DEFAULT_CONV_MODE */
 406:Generated_Source\PSoC5/ADC_SAR.c **** 
 407:Generated_Source\PSoC5/ADC_SAR.c ****         /* Start the conversion */
 408:Generated_Source\PSoC5/ADC_SAR.c ****         ADC_SAR_SAR_CSR0_REG |= ADC_SAR_SAR_SOF_START_CONV;
 467              		.loc 1 408 0
 468 0004 054A     		ldr	r2, .L27
 469 0006 054B     		ldr	r3, .L27
 470 0008 1B78     		ldrb	r3, [r3]
 471 000a DBB2     		uxtb	r3, r3
 472 000c 43F00103 		orr	r3, r3, #1
 473 0010 DBB2     		uxtb	r3, r3
 474 0012 1370     		strb	r3, [r2]
 409:Generated_Source\PSoC5/ADC_SAR.c ****     }
 475              		.loc 1 409 0
 476 0014 00BF     		nop
 477 0016 BD46     		mov	sp, r7
 478              		.cfi_def_cfa_register 13
 479              		@ sp needed
 480 0018 80BC     		pop	{r7}
 481              		.cfi_restore 7
 482              		.cfi_def_cfa_offset 0
 483 001a 7047     		bx	lr
 484              	.L28:
 485              		.align	2
 486              	.L27:
 487 001c 08590040 		.word	1073764616
 488              		.cfi_endproc
 489              	.LFE6:
 490              		.size	ADC_SAR_StartConvert, .-ADC_SAR_StartConvert
 491              		.section	.text.ADC_SAR_StopConvert,"ax",%progbits
 492              		.align	2
 493              		.global	ADC_SAR_StopConvert
 494              		.thumb
 495              		.thumb_func
 496              		.type	ADC_SAR_StopConvert, %function
 497              	ADC_SAR_StopConvert:
 498              	.LFB7:
 410:Generated_Source\PSoC5/ADC_SAR.c **** 
 411:Generated_Source\PSoC5/ADC_SAR.c **** 
 412:Generated_Source\PSoC5/ADC_SAR.c ****     /*******************************************************************************
 413:Generated_Source\PSoC5/ADC_SAR.c ****     * Function Name: ADC_SAR_StopConvert
 414:Generated_Source\PSoC5/ADC_SAR.c ****     ********************************************************************************
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 17


 415:Generated_Source\PSoC5/ADC_SAR.c ****     *
 416:Generated_Source\PSoC5/ADC_SAR.c ****     * Summary:
 417:Generated_Source\PSoC5/ADC_SAR.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:Generated_Source\PSoC5/ADC_SAR.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:Generated_Source\PSoC5/ADC_SAR.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:Generated_Source\PSoC5/ADC_SAR.c ****     *
 421:Generated_Source\PSoC5/ADC_SAR.c ****     * Parameters:
 422:Generated_Source\PSoC5/ADC_SAR.c ****     *  None.
 423:Generated_Source\PSoC5/ADC_SAR.c ****     *
 424:Generated_Source\PSoC5/ADC_SAR.c ****     * Return:
 425:Generated_Source\PSoC5/ADC_SAR.c ****     *  None.
 426:Generated_Source\PSoC5/ADC_SAR.c ****     *
 427:Generated_Source\PSoC5/ADC_SAR.c ****     * Theory:
 428:Generated_Source\PSoC5/ADC_SAR.c ****     *  Stops ADC conversion in Free Running mode.
 429:Generated_Source\PSoC5/ADC_SAR.c ****     *
 430:Generated_Source\PSoC5/ADC_SAR.c ****     * Side Effects:
 431:Generated_Source\PSoC5/ADC_SAR.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:Generated_Source\PSoC5/ADC_SAR.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:Generated_Source\PSoC5/ADC_SAR.c ****     *
 434:Generated_Source\PSoC5/ADC_SAR.c ****     *******************************************************************************/
 435:Generated_Source\PSoC5/ADC_SAR.c ****     void ADC_SAR_StopConvert(void)
 436:Generated_Source\PSoC5/ADC_SAR.c ****     {
 499              		.loc 1 436 0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 0
 502              		@ frame_needed = 1, uses_anonymous_args = 0
 503              		@ link register save eliminated.
 504 0000 80B4     		push	{r7}
 505              		.cfi_def_cfa_offset 4
 506              		.cfi_offset 7, -4
 507 0002 00AF     		add	r7, sp, #0
 508              		.cfi_def_cfa_register 7
 437:Generated_Source\PSoC5/ADC_SAR.c ****         /* Stop all conversions */
 438:Generated_Source\PSoC5/ADC_SAR.c ****         ADC_SAR_SAR_CSR0_REG &= (uint8)~ADC_SAR_SAR_SOF_START_CONV;
 509              		.loc 1 438 0
 510 0004 054A     		ldr	r2, .L30
 511 0006 054B     		ldr	r3, .L30
 512 0008 1B78     		ldrb	r3, [r3]
 513 000a DBB2     		uxtb	r3, r3
 514 000c 23F00103 		bic	r3, r3, #1
 515 0010 DBB2     		uxtb	r3, r3
 516 0012 1370     		strb	r3, [r2]
 439:Generated_Source\PSoC5/ADC_SAR.c **** 
 440:Generated_Source\PSoC5/ADC_SAR.c ****         #if(ADC_SAR_DEFAULT_CONV_MODE != ADC_SAR__FREE_RUNNING)  /* If software triggered mode */
 441:Generated_Source\PSoC5/ADC_SAR.c ****             /* Return source to UDB for hardware SOF signal */
 442:Generated_Source\PSoC5/ADC_SAR.c ****             ADC_SAR_SAR_CSR0_REG |= ADC_SAR_SAR_MX_SOF_UDB;    /* source: UDB */
 443:Generated_Source\PSoC5/ADC_SAR.c ****         #endif /* End ADC_SAR_DEFAULT_CONV_MODE */
 444:Generated_Source\PSoC5/ADC_SAR.c **** 
 445:Generated_Source\PSoC5/ADC_SAR.c ****     }
 517              		.loc 1 445 0
 518 0014 00BF     		nop
 519 0016 BD46     		mov	sp, r7
 520              		.cfi_def_cfa_register 13
 521              		@ sp needed
 522 0018 80BC     		pop	{r7}
 523              		.cfi_restore 7
 524              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 18


 525 001a 7047     		bx	lr
 526              	.L31:
 527              		.align	2
 528              	.L30:
 529 001c 08590040 		.word	1073764616
 530              		.cfi_endproc
 531              	.LFE7:
 532              		.size	ADC_SAR_StopConvert, .-ADC_SAR_StopConvert
 533              		.section	.text.ADC_SAR_IsEndConversion,"ax",%progbits
 534              		.align	2
 535              		.global	ADC_SAR_IsEndConversion
 536              		.thumb
 537              		.thumb_func
 538              		.type	ADC_SAR_IsEndConversion, %function
 539              	ADC_SAR_IsEndConversion:
 540              	.LFB8:
 446:Generated_Source\PSoC5/ADC_SAR.c **** 
 447:Generated_Source\PSoC5/ADC_SAR.c **** #endif /* End ADC_SAR_DEFAULT_CONV_MODE != ADC_SAR__HARDWARE_TRIGGER */
 448:Generated_Source\PSoC5/ADC_SAR.c **** 
 449:Generated_Source\PSoC5/ADC_SAR.c **** 
 450:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/ADC_SAR.c **** * Function Name: ADC_SAR_IsEndConversion
 452:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
 453:Generated_Source\PSoC5/ADC_SAR.c **** *
 454:Generated_Source\PSoC5/ADC_SAR.c **** * Summary:
 455:Generated_Source\PSoC5/ADC_SAR.c **** *  Immediately returns the status of the conversion or does not return
 456:Generated_Source\PSoC5/ADC_SAR.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:Generated_Source\PSoC5/ADC_SAR.c **** *  parameter.
 458:Generated_Source\PSoC5/ADC_SAR.c **** *
 459:Generated_Source\PSoC5/ADC_SAR.c **** * Parameters:
 460:Generated_Source\PSoC5/ADC_SAR.c **** *  retMode:  Check conversion return mode.
 461:Generated_Source\PSoC5/ADC_SAR.c **** *   ADC_SAR_RETURN_STATUS: Immediately returns the status. If the
 462:Generated_Source\PSoC5/ADC_SAR.c **** *     value returned is zero, the conversion is not complete, and this function
 463:Generated_Source\PSoC5/ADC_SAR.c **** *     should be retried until a nonzero result is returned.
 464:Generated_Source\PSoC5/ADC_SAR.c **** *   ADC_SAR_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:Generated_Source\PSoC5/ADC_SAR.c **** *     conversion is complete.
 466:Generated_Source\PSoC5/ADC_SAR.c **** *
 467:Generated_Source\PSoC5/ADC_SAR.c **** * Return:
 468:Generated_Source\PSoC5/ADC_SAR.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:Generated_Source\PSoC5/ADC_SAR.c **** *           1 =>  The last conversion is complete.
 470:Generated_Source\PSoC5/ADC_SAR.c **** *
 471:Generated_Source\PSoC5/ADC_SAR.c **** * Side Effects:
 472:Generated_Source\PSoC5/ADC_SAR.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:Generated_Source\PSoC5/ADC_SAR.c **** *
 474:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
 475:Generated_Source\PSoC5/ADC_SAR.c **** uint8 ADC_SAR_IsEndConversion(uint8 retMode)
 476:Generated_Source\PSoC5/ADC_SAR.c **** {
 541              		.loc 1 476 0
 542              		.cfi_startproc
 543              		@ args = 0, pretend = 0, frame = 16
 544              		@ frame_needed = 1, uses_anonymous_args = 0
 545 0000 80B5     		push	{r7, lr}
 546              		.cfi_def_cfa_offset 8
 547              		.cfi_offset 7, -8
 548              		.cfi_offset 14, -4
 549 0002 84B0     		sub	sp, sp, #16
 550              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 19


 551 0004 00AF     		add	r7, sp, #0
 552              		.cfi_def_cfa_register 7
 553 0006 0346     		mov	r3, r0
 554 0008 FB71     		strb	r3, [r7, #7]
 555              	.L34:
 477:Generated_Source\PSoC5/ADC_SAR.c ****     uint8 status;
 478:Generated_Source\PSoC5/ADC_SAR.c **** 
 479:Generated_Source\PSoC5/ADC_SAR.c ****     do
 480:Generated_Source\PSoC5/ADC_SAR.c ****     {
 481:Generated_Source\PSoC5/ADC_SAR.c ****         status = ADC_SAR_SAR_CSR1_REG & ADC_SAR_SAR_EOF_1;
 556              		.loc 1 481 0 discriminator 2
 557 000a 0C4B     		ldr	r3, .L37
 558 000c 1B78     		ldrb	r3, [r3]
 559 000e DBB2     		uxtb	r3, r3
 560 0010 03F00103 		and	r3, r3, #1
 561 0014 FB73     		strb	r3, [r7, #15]
 482:Generated_Source\PSoC5/ADC_SAR.c ****     } while ((status != ADC_SAR_SAR_EOF_1) && (retMode == ADC_SAR_WAIT_FOR_RESULT));
 562              		.loc 1 482 0 discriminator 2
 563 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 564 0018 012B     		cmp	r3, #1
 565 001a 02D0     		beq	.L33
 566              		.loc 1 482 0 is_stmt 0 discriminator 1
 567 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 568 001e 002B     		cmp	r3, #0
 569 0020 F3D0     		beq	.L34
 570              	.L33:
 483:Generated_Source\PSoC5/ADC_SAR.c ****     /* If convertion complete, wait until EOF bit released */
 484:Generated_Source\PSoC5/ADC_SAR.c ****     if(status == ADC_SAR_SAR_EOF_1)
 571              		.loc 1 484 0 is_stmt 1
 572 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 573 0024 012B     		cmp	r3, #1
 574 0026 04D1     		bne	.L35
 485:Generated_Source\PSoC5/ADC_SAR.c ****     {
 486:Generated_Source\PSoC5/ADC_SAR.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:Generated_Source\PSoC5/ADC_SAR.c ****         CyDelayUs(1u);
 575              		.loc 1 487 0
 576 0028 0120     		movs	r0, #1
 577 002a FFF7FEFF 		bl	CyDelayUs
 488:Generated_Source\PSoC5/ADC_SAR.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:Generated_Source\PSoC5/ADC_SAR.c ****         CY_GET_REG8(ADC_SAR_SAR_CSR1_PTR);
 578              		.loc 1 489 0
 579 002e 034B     		ldr	r3, .L37
 580 0030 1B78     		ldrb	r3, [r3]
 581              	.L35:
 490:Generated_Source\PSoC5/ADC_SAR.c ****     }
 491:Generated_Source\PSoC5/ADC_SAR.c **** 
 492:Generated_Source\PSoC5/ADC_SAR.c ****     return(status);
 582              		.loc 1 492 0
 583 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 493:Generated_Source\PSoC5/ADC_SAR.c **** }
 584              		.loc 1 493 0
 585 0034 1846     		mov	r0, r3
 586 0036 1037     		adds	r7, r7, #16
 587              		.cfi_def_cfa_offset 8
 588 0038 BD46     		mov	sp, r7
 589              		.cfi_def_cfa_register 13
 590              		@ sp needed
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 20


 591 003a 80BD     		pop	{r7, pc}
 592              	.L38:
 593              		.align	2
 594              	.L37:
 595 003c 09590040 		.word	1073764617
 596              		.cfi_endproc
 597              	.LFE8:
 598              		.size	ADC_SAR_IsEndConversion, .-ADC_SAR_IsEndConversion
 599              		.section	.text.ADC_SAR_GetResult8,"ax",%progbits
 600              		.align	2
 601              		.global	ADC_SAR_GetResult8
 602              		.thumb
 603              		.thumb_func
 604              		.type	ADC_SAR_GetResult8, %function
 605              	ADC_SAR_GetResult8:
 606              	.LFB9:
 494:Generated_Source\PSoC5/ADC_SAR.c **** 
 495:Generated_Source\PSoC5/ADC_SAR.c **** 
 496:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/ADC_SAR.c **** * Function Name: ADC_SAR_GetResult8
 498:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
 499:Generated_Source\PSoC5/ADC_SAR.c **** *
 500:Generated_Source\PSoC5/ADC_SAR.c **** * Summary:
 501:Generated_Source\PSoC5/ADC_SAR.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:Generated_Source\PSoC5/ADC_SAR.c **** *  than 8 bits, the function returns the LSB of the result.
 503:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_IsEndConversion() should be called to verify that the data
 504:Generated_Source\PSoC5/ADC_SAR.c **** *   sample is ready.
 505:Generated_Source\PSoC5/ADC_SAR.c **** *
 506:Generated_Source\PSoC5/ADC_SAR.c **** * Parameters:
 507:Generated_Source\PSoC5/ADC_SAR.c **** *  None.
 508:Generated_Source\PSoC5/ADC_SAR.c **** *
 509:Generated_Source\PSoC5/ADC_SAR.c **** * Return:
 510:Generated_Source\PSoC5/ADC_SAR.c **** *  The LSB of the last ADC conversion.
 511:Generated_Source\PSoC5/ADC_SAR.c **** *
 512:Generated_Source\PSoC5/ADC_SAR.c **** * Global Variables:
 513:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_shift - used to convert the ADC counts to the 2s
 514:Generated_Source\PSoC5/ADC_SAR.c **** *  compliment form.
 515:Generated_Source\PSoC5/ADC_SAR.c **** *
 516:Generated_Source\PSoC5/ADC_SAR.c **** * Side Effects:
 517:Generated_Source\PSoC5/ADC_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 518:Generated_Source\PSoC5/ADC_SAR.c **** *
 519:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
 520:Generated_Source\PSoC5/ADC_SAR.c **** int8 ADC_SAR_GetResult8( void )
 521:Generated_Source\PSoC5/ADC_SAR.c **** {
 607              		.loc 1 521 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 1, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 612 0000 80B4     		push	{r7}
 613              		.cfi_def_cfa_offset 4
 614              		.cfi_offset 7, -4
 615 0002 00AF     		add	r7, sp, #0
 616              		.cfi_def_cfa_register 7
 522:Generated_Source\PSoC5/ADC_SAR.c ****     return( (int8)ADC_SAR_SAR_WRK0_REG - (int8)ADC_SAR_shift);
 617              		.loc 1 522 0
 618 0004 064B     		ldr	r3, .L41
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 21


 619 0006 1B78     		ldrb	r3, [r3]
 620 0008 DAB2     		uxtb	r2, r3
 621 000a 064B     		ldr	r3, .L41+4
 622 000c 1B88     		ldrh	r3, [r3]	@ movhi
 623 000e 1BB2     		sxth	r3, r3
 624 0010 DBB2     		uxtb	r3, r3
 625 0012 D31A     		subs	r3, r2, r3
 626 0014 DBB2     		uxtb	r3, r3
 627 0016 5BB2     		sxtb	r3, r3
 523:Generated_Source\PSoC5/ADC_SAR.c **** }
 628              		.loc 1 523 0
 629 0018 1846     		mov	r0, r3
 630 001a BD46     		mov	sp, r7
 631              		.cfi_def_cfa_register 13
 632              		@ sp needed
 633 001c 80BC     		pop	{r7}
 634              		.cfi_restore 7
 635              		.cfi_def_cfa_offset 0
 636 001e 7047     		bx	lr
 637              	.L42:
 638              		.align	2
 639              	.L41:
 640 0020 A25B0040 		.word	1073765282
 641 0024 00000000 		.word	ADC_SAR_shift
 642              		.cfi_endproc
 643              	.LFE9:
 644              		.size	ADC_SAR_GetResult8, .-ADC_SAR_GetResult8
 645              		.section	.text.ADC_SAR_GetResult16,"ax",%progbits
 646              		.align	2
 647              		.global	ADC_SAR_GetResult16
 648              		.thumb
 649              		.thumb_func
 650              		.type	ADC_SAR_GetResult16, %function
 651              	ADC_SAR_GetResult16:
 652              	.LFB10:
 524:Generated_Source\PSoC5/ADC_SAR.c **** 
 525:Generated_Source\PSoC5/ADC_SAR.c **** 
 526:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
 527:Generated_Source\PSoC5/ADC_SAR.c **** * Function Name: ADC_SAR_GetResult16
 528:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
 529:Generated_Source\PSoC5/ADC_SAR.c **** *
 530:Generated_Source\PSoC5/ADC_SAR.c **** * Summary:
 531:Generated_Source\PSoC5/ADC_SAR.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:Generated_Source\PSoC5/ADC_SAR.c **** *  of 8 to 12 bits.
 533:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_IsEndConversion() should be called to verify that the data
 534:Generated_Source\PSoC5/ADC_SAR.c **** *   sample is ready
 535:Generated_Source\PSoC5/ADC_SAR.c **** *
 536:Generated_Source\PSoC5/ADC_SAR.c **** * Parameters:
 537:Generated_Source\PSoC5/ADC_SAR.c **** *  None.
 538:Generated_Source\PSoC5/ADC_SAR.c **** *
 539:Generated_Source\PSoC5/ADC_SAR.c **** * Return:
 540:Generated_Source\PSoC5/ADC_SAR.c **** *  The 16-bit result of the last ADC conversion
 541:Generated_Source\PSoC5/ADC_SAR.c **** *
 542:Generated_Source\PSoC5/ADC_SAR.c **** * Global Variables:
 543:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_shift - used to convert the ADC counts to the 2s
 544:Generated_Source\PSoC5/ADC_SAR.c **** *  compliment form.
 545:Generated_Source\PSoC5/ADC_SAR.c **** *
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 22


 546:Generated_Source\PSoC5/ADC_SAR.c **** * Side Effects:
 547:Generated_Source\PSoC5/ADC_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 548:Generated_Source\PSoC5/ADC_SAR.c **** *
 549:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
 550:Generated_Source\PSoC5/ADC_SAR.c **** int16 ADC_SAR_GetResult16( void )
 551:Generated_Source\PSoC5/ADC_SAR.c **** {
 653              		.loc 1 551 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 8
 656              		@ frame_needed = 1, uses_anonymous_args = 0
 657              		@ link register save eliminated.
 658 0000 80B4     		push	{r7}
 659              		.cfi_def_cfa_offset 4
 660              		.cfi_offset 7, -4
 661 0002 83B0     		sub	sp, sp, #12
 662              		.cfi_def_cfa_offset 16
 663 0004 00AF     		add	r7, sp, #0
 664              		.cfi_def_cfa_register 7
 552:Generated_Source\PSoC5/ADC_SAR.c ****     uint16 res;
 553:Generated_Source\PSoC5/ADC_SAR.c **** 
 554:Generated_Source\PSoC5/ADC_SAR.c ****     res = CY_GET_REG16(ADC_SAR_SAR_WRK_PTR);
 665              		.loc 1 554 0
 666 0006 084B     		ldr	r3, .L45
 667 0008 1B88     		ldrh	r3, [r3]	@ movhi
 668 000a FB80     		strh	r3, [r7, #6]	@ movhi
 555:Generated_Source\PSoC5/ADC_SAR.c **** 
 556:Generated_Source\PSoC5/ADC_SAR.c ****     return( (int16)res - ADC_SAR_shift );
 669              		.loc 1 556 0
 670 000c 074B     		ldr	r3, .L45+4
 671 000e 1B88     		ldrh	r3, [r3]	@ movhi
 672 0010 1BB2     		sxth	r3, r3
 673 0012 9BB2     		uxth	r3, r3
 674 0014 FA88     		ldrh	r2, [r7, #6]	@ movhi
 675 0016 D31A     		subs	r3, r2, r3
 676 0018 9BB2     		uxth	r3, r3
 677 001a 1BB2     		sxth	r3, r3
 557:Generated_Source\PSoC5/ADC_SAR.c **** }
 678              		.loc 1 557 0
 679 001c 1846     		mov	r0, r3
 680 001e 0C37     		adds	r7, r7, #12
 681              		.cfi_def_cfa_offset 4
 682 0020 BD46     		mov	sp, r7
 683              		.cfi_def_cfa_register 13
 684              		@ sp needed
 685 0022 80BC     		pop	{r7}
 686              		.cfi_restore 7
 687              		.cfi_def_cfa_offset 0
 688 0024 7047     		bx	lr
 689              	.L46:
 690 0026 00BF     		.align	2
 691              	.L45:
 692 0028 A25B0040 		.word	1073765282
 693 002c 00000000 		.word	ADC_SAR_shift
 694              		.cfi_endproc
 695              	.LFE10:
 696              		.size	ADC_SAR_GetResult16, .-ADC_SAR_GetResult16
 697              		.section	.text.ADC_SAR_SetOffset,"ax",%progbits
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 23


 698              		.align	2
 699              		.global	ADC_SAR_SetOffset
 700              		.thumb
 701              		.thumb_func
 702              		.type	ADC_SAR_SetOffset, %function
 703              	ADC_SAR_SetOffset:
 704              	.LFB11:
 558:Generated_Source\PSoC5/ADC_SAR.c **** 
 559:Generated_Source\PSoC5/ADC_SAR.c **** 
 560:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
 561:Generated_Source\PSoC5/ADC_SAR.c **** * Function Name: ADC_SAR_SetOffset
 562:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
 563:Generated_Source\PSoC5/ADC_SAR.c **** *
 564:Generated_Source\PSoC5/ADC_SAR.c **** * Summary:
 565:Generated_Source\PSoC5/ADC_SAR.c **** *  Sets the ADC offset, which is used by ADC_SAR_CountsTo_Volts(),
 566:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_CountsTo_mVolts(), and ADC_SAR_CountsTo_uVolts()
 567:Generated_Source\PSoC5/ADC_SAR.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:Generated_Source\PSoC5/ADC_SAR.c **** *  conversion.
 569:Generated_Source\PSoC5/ADC_SAR.c **** *
 570:Generated_Source\PSoC5/ADC_SAR.c **** * Parameters:
 571:Generated_Source\PSoC5/ADC_SAR.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:Generated_Source\PSoC5/ADC_SAR.c ****    the same input voltage.
 573:Generated_Source\PSoC5/ADC_SAR.c **** *
 574:Generated_Source\PSoC5/ADC_SAR.c **** * Return:
 575:Generated_Source\PSoC5/ADC_SAR.c **** *  None.
 576:Generated_Source\PSoC5/ADC_SAR.c **** *
 577:Generated_Source\PSoC5/ADC_SAR.c **** * Global Variables:
 578:Generated_Source\PSoC5/ADC_SAR.c **** *  The ADC_SAR_offset variable modified. This variable is used for
 579:Generated_Source\PSoC5/ADC_SAR.c **** *  offset calibration purpose.
 580:Generated_Source\PSoC5/ADC_SAR.c **** *  Affects the ADC_SAR_CountsTo_Volts,
 581:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_CountsTo_mVolts, ADC_SAR_CountsTo_uVolts functions
 582:Generated_Source\PSoC5/ADC_SAR.c **** *  by subtracting the given offset.
 583:Generated_Source\PSoC5/ADC_SAR.c **** *
 584:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
 585:Generated_Source\PSoC5/ADC_SAR.c **** void ADC_SAR_SetOffset(int16 offset)
 586:Generated_Source\PSoC5/ADC_SAR.c **** {
 705              		.loc 1 586 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 8
 708              		@ frame_needed = 1, uses_anonymous_args = 0
 709              		@ link register save eliminated.
 710 0000 80B4     		push	{r7}
 711              		.cfi_def_cfa_offset 4
 712              		.cfi_offset 7, -4
 713 0002 83B0     		sub	sp, sp, #12
 714              		.cfi_def_cfa_offset 16
 715 0004 00AF     		add	r7, sp, #0
 716              		.cfi_def_cfa_register 7
 717 0006 0346     		mov	r3, r0
 718 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_offset = offset;
 719              		.loc 1 587 0
 720 000a 044A     		ldr	r2, .L48
 721 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 722 000e 1380     		strh	r3, [r2]	@ movhi
 588:Generated_Source\PSoC5/ADC_SAR.c **** }
 723              		.loc 1 588 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 24


 724 0010 00BF     		nop
 725 0012 0C37     		adds	r7, r7, #12
 726              		.cfi_def_cfa_offset 4
 727 0014 BD46     		mov	sp, r7
 728              		.cfi_def_cfa_register 13
 729              		@ sp needed
 730 0016 80BC     		pop	{r7}
 731              		.cfi_restore 7
 732              		.cfi_def_cfa_offset 0
 733 0018 7047     		bx	lr
 734              	.L49:
 735 001a 00BF     		.align	2
 736              	.L48:
 737 001c 00000000 		.word	ADC_SAR_offset
 738              		.cfi_endproc
 739              	.LFE11:
 740              		.size	ADC_SAR_SetOffset, .-ADC_SAR_SetOffset
 741              		.section	.text.ADC_SAR_CalcGain,"ax",%progbits
 742              		.align	2
 743              		.thumb
 744              		.thumb_func
 745              		.type	ADC_SAR_CalcGain, %function
 746              	ADC_SAR_CalcGain:
 747              	.LFB12:
 589:Generated_Source\PSoC5/ADC_SAR.c **** 
 590:Generated_Source\PSoC5/ADC_SAR.c **** 
 591:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
 592:Generated_Source\PSoC5/ADC_SAR.c **** * Function Name: ADC_SAR_CalcGain
 593:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
 594:Generated_Source\PSoC5/ADC_SAR.c **** *
 595:Generated_Source\PSoC5/ADC_SAR.c **** * Summary:
 596:Generated_Source\PSoC5/ADC_SAR.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:Generated_Source\PSoC5/ADC_SAR.c **** *
 598:Generated_Source\PSoC5/ADC_SAR.c **** * Parameters:
 599:Generated_Source\PSoC5/ADC_SAR.c **** *  uint8: resolution
 600:Generated_Source\PSoC5/ADC_SAR.c **** *
 601:Generated_Source\PSoC5/ADC_SAR.c **** * Return:
 602:Generated_Source\PSoC5/ADC_SAR.c **** *  None.
 603:Generated_Source\PSoC5/ADC_SAR.c **** *
 604:Generated_Source\PSoC5/ADC_SAR.c **** * Global Variables:
 605:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_shift variable initialized. This variable is used to
 606:Generated_Source\PSoC5/ADC_SAR.c **** *  convert the ADC counts to the 2s compliment form.
 607:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_countsPer10Volt variable initialized. This variable is used
 608:Generated_Source\PSoC5/ADC_SAR.c **** *  for gain calibration purpose.
 609:Generated_Source\PSoC5/ADC_SAR.c **** *
 610:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
 611:Generated_Source\PSoC5/ADC_SAR.c **** static void ADC_SAR_CalcGain( uint8 resolution )
 612:Generated_Source\PSoC5/ADC_SAR.c **** {
 748              		.loc 1 612 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 16
 751              		@ frame_needed = 1, uses_anonymous_args = 0
 752 0000 80B5     		push	{r7, lr}
 753              		.cfi_def_cfa_offset 8
 754              		.cfi_offset 7, -8
 755              		.cfi_offset 14, -4
 756 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 25


 757              		.cfi_def_cfa_offset 24
 758 0004 00AF     		add	r7, sp, #0
 759              		.cfi_def_cfa_register 7
 760 0006 0346     		mov	r3, r0
 761 0008 FB71     		strb	r3, [r7, #7]
 613:Generated_Source\PSoC5/ADC_SAR.c ****     int32 counts;
 614:Generated_Source\PSoC5/ADC_SAR.c ****     #if(!((ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSS_TO_VREF) || \
 615:Generated_Source\PSoC5/ADC_SAR.c ****          (ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSSA_TO_VDDA) || \
 616:Generated_Source\PSoC5/ADC_SAR.c ****          (ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSSA_TO_VDAC)) )
 617:Generated_Source\PSoC5/ADC_SAR.c ****         uint16 diff_zero;
 618:Generated_Source\PSoC5/ADC_SAR.c ****     #endif /* End ADC_SAR_DEFAULT_RANGE */
 619:Generated_Source\PSoC5/ADC_SAR.c **** 
 620:Generated_Source\PSoC5/ADC_SAR.c ****     switch (resolution)
 762              		.loc 1 620 0
 763 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 764 000c 0A2B     		cmp	r3, #10
 765 000e 08D0     		beq	.L52
 766 0010 0C2B     		cmp	r3, #12
 767 0012 02D0     		beq	.L53
 768 0014 082B     		cmp	r3, #8
 769 0016 08D0     		beq	.L54
 770 0018 0BE0     		b	.L56
 771              	.L53:
 621:Generated_Source\PSoC5/ADC_SAR.c ****     {
 622:Generated_Source\PSoC5/ADC_SAR.c ****         case (uint8)ADC_SAR__BITS_12:
 623:Generated_Source\PSoC5/ADC_SAR.c ****             counts = (int32)ADC_SAR_SAR_WRK_MAX_12BIT;
 772              		.loc 1 623 0
 773 001a 4FF48053 		mov	r3, #4096
 774 001e FB60     		str	r3, [r7, #12]
 624:Generated_Source\PSoC5/ADC_SAR.c ****             #if(!((ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSS_TO_VREF) || \
 625:Generated_Source\PSoC5/ADC_SAR.c ****                  (ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSSA_TO_VDDA) || \
 626:Generated_Source\PSoC5/ADC_SAR.c ****                  (ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSSA_TO_VDAC)) )
 627:Generated_Source\PSoC5/ADC_SAR.c ****                 diff_zero = ADC_SAR_SAR_DIFF_SHIFT;
 628:Generated_Source\PSoC5/ADC_SAR.c ****             #endif /* End ADC_SAR_DEFAULT_RANGE */
 629:Generated_Source\PSoC5/ADC_SAR.c ****             break;
 775              		.loc 1 629 0
 776 0020 0DE0     		b	.L55
 777              	.L52:
 630:Generated_Source\PSoC5/ADC_SAR.c ****         case (uint8)ADC_SAR__BITS_10:
 631:Generated_Source\PSoC5/ADC_SAR.c ****             counts = (int32)ADC_SAR_SAR_WRK_MAX_10BIT;
 778              		.loc 1 631 0
 779 0022 4FF48063 		mov	r3, #1024
 780 0026 FB60     		str	r3, [r7, #12]
 632:Generated_Source\PSoC5/ADC_SAR.c ****             #if(!((ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSS_TO_VREF) || \
 633:Generated_Source\PSoC5/ADC_SAR.c ****                  (ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSSA_TO_VDDA) || \
 634:Generated_Source\PSoC5/ADC_SAR.c ****                  (ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSSA_TO_VDAC)) )
 635:Generated_Source\PSoC5/ADC_SAR.c ****                 diff_zero = ADC_SAR_SAR_DIFF_SHIFT >> 2u;
 636:Generated_Source\PSoC5/ADC_SAR.c ****             #endif /* End ADC_SAR_DEFAULT_RANGE */
 637:Generated_Source\PSoC5/ADC_SAR.c ****             break;
 781              		.loc 1 637 0
 782 0028 09E0     		b	.L55
 783              	.L54:
 638:Generated_Source\PSoC5/ADC_SAR.c ****         case (uint8)ADC_SAR__BITS_8:
 639:Generated_Source\PSoC5/ADC_SAR.c ****             counts = (int32)ADC_SAR_SAR_WRK_MAX_8BIT;
 784              		.loc 1 639 0
 785 002a 4FF48073 		mov	r3, #256
 786 002e FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 26


 640:Generated_Source\PSoC5/ADC_SAR.c ****             #if(!((ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSS_TO_VREF) || \
 641:Generated_Source\PSoC5/ADC_SAR.c ****                  (ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSSA_TO_VDDA) || \
 642:Generated_Source\PSoC5/ADC_SAR.c ****                  (ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSSA_TO_VDAC)) )
 643:Generated_Source\PSoC5/ADC_SAR.c ****                 diff_zero = ADC_SAR_SAR_DIFF_SHIFT >> 4u;
 644:Generated_Source\PSoC5/ADC_SAR.c ****             #endif /* End ADC_SAR_DEFAULT_RANGE */
 645:Generated_Source\PSoC5/ADC_SAR.c ****             break;
 787              		.loc 1 645 0
 788 0030 05E0     		b	.L55
 789              	.L56:
 646:Generated_Source\PSoC5/ADC_SAR.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:Generated_Source\PSoC5/ADC_SAR.c ****             counts = 0;
 790              		.loc 1 647 0
 791 0032 0023     		movs	r3, #0
 792 0034 FB60     		str	r3, [r7, #12]
 648:Generated_Source\PSoC5/ADC_SAR.c ****             #if(!((ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSS_TO_VREF) || \
 649:Generated_Source\PSoC5/ADC_SAR.c ****                  (ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSSA_TO_VDDA) || \
 650:Generated_Source\PSoC5/ADC_SAR.c ****                  (ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSSA_TO_VDAC)) )
 651:Generated_Source\PSoC5/ADC_SAR.c ****                 diff_zero = 0u;
 652:Generated_Source\PSoC5/ADC_SAR.c ****             #endif /* End ADC_SAR_DEFAULT_RANGE */
 653:Generated_Source\PSoC5/ADC_SAR.c ****             CYASSERT(0u != 0u);
 793              		.loc 1 653 0
 794 0036 0020     		movs	r0, #0
 795 0038 FFF7FEFF 		bl	CyHalt
 654:Generated_Source\PSoC5/ADC_SAR.c ****             break;
 796              		.loc 1 654 0
 797 003c 00BF     		nop
 798              	.L55:
 655:Generated_Source\PSoC5/ADC_SAR.c ****     }
 656:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_countsPerVolt = 0; /* Clear obsolete variable */
 799              		.loc 1 656 0
 800 003e 0C4B     		ldr	r3, .L57
 801 0040 0022     		movs	r2, #0
 802 0042 1A80     		strh	r2, [r3]	@ movhi
 657:Generated_Source\PSoC5/ADC_SAR.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_countsPer10Volt = (((counts * ADC_SAR_10MV_COUNTS) +
 803              		.loc 1 658 0
 804 0044 FB68     		ldr	r3, [r7, #12]
 805 0046 42F21072 		movw	r2, #10000
 806 004a 02FB03F3 		mul	r3, r2, r3
 807 004e 03F6C413 		addw	r3, r3, #2500
 659:Generated_Source\PSoC5/ADC_SAR.c ****                         ADC_SAR_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_DEFAULT_REF_VOLTAGE_MV * 2));
 808              		.loc 1 659 0
 809 0052 084A     		ldr	r2, .L57+4
 810 0054 82FB0312 		smull	r1, r2, r2, r3
 811 0058 D212     		asrs	r2, r2, #11
 812 005a DB17     		asrs	r3, r3, #31
 813 005c D31A     		subs	r3, r2, r3
 658:Generated_Source\PSoC5/ADC_SAR.c ****                         ADC_SAR_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_DEFAULT_REF_VOLTAGE_MV * 2));
 814              		.loc 1 658 0
 815 005e 064A     		ldr	r2, .L57+8
 816 0060 1360     		str	r3, [r2]
 660:Generated_Source\PSoC5/ADC_SAR.c **** 
 661:Generated_Source\PSoC5/ADC_SAR.c ****     #if( (ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSS_TO_VREF) || \
 662:Generated_Source\PSoC5/ADC_SAR.c ****          (ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSSA_TO_VDDA) || \
 663:Generated_Source\PSoC5/ADC_SAR.c ****          (ADC_SAR_DEFAULT_RANGE == ADC_SAR__VSSA_TO_VDAC) )
 664:Generated_Source\PSoC5/ADC_SAR.c ****         ADC_SAR_shift = 0;
 817              		.loc 1 664 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 27


 818 0062 064B     		ldr	r3, .L57+12
 819 0064 0022     		movs	r2, #0
 820 0066 1A80     		strh	r2, [r3]	@ movhi
 665:Generated_Source\PSoC5/ADC_SAR.c ****     #else
 666:Generated_Source\PSoC5/ADC_SAR.c ****         ADC_SAR_shift = diff_zero;
 667:Generated_Source\PSoC5/ADC_SAR.c ****     #endif /* End ADC_SAR_DEFAULT_RANGE */
 668:Generated_Source\PSoC5/ADC_SAR.c **** }
 821              		.loc 1 668 0
 822 0068 00BF     		nop
 823 006a 1037     		adds	r7, r7, #16
 824              		.cfi_def_cfa_offset 8
 825 006c BD46     		mov	sp, r7
 826              		.cfi_def_cfa_register 13
 827              		@ sp needed
 828 006e 80BD     		pop	{r7, pc}
 829              	.L58:
 830              		.align	2
 831              	.L57:
 832 0070 00000000 		.word	ADC_SAR_countsPerVolt
 833 0074 AD8BDB68 		.word	1759218605
 834 0078 00000000 		.word	ADC_SAR_countsPer10Volt
 835 007c 00000000 		.word	ADC_SAR_shift
 836              		.cfi_endproc
 837              	.LFE12:
 838              		.size	ADC_SAR_CalcGain, .-ADC_SAR_CalcGain
 839              		.section	.text.ADC_SAR_SetGain,"ax",%progbits
 840              		.align	2
 841              		.global	ADC_SAR_SetGain
 842              		.thumb
 843              		.thumb_func
 844              		.type	ADC_SAR_SetGain, %function
 845              	ADC_SAR_SetGain:
 846              	.LFB13:
 669:Generated_Source\PSoC5/ADC_SAR.c **** 
 670:Generated_Source\PSoC5/ADC_SAR.c **** 
 671:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/ADC_SAR.c **** * Function Name: ADC_SAR_SetGain
 673:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
 674:Generated_Source\PSoC5/ADC_SAR.c **** *
 675:Generated_Source\PSoC5/ADC_SAR.c **** * Summary:
 676:Generated_Source\PSoC5/ADC_SAR.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:Generated_Source\PSoC5/ADC_SAR.c **** *  that follow. This value is set by default by the reference and input range
 678:Generated_Source\PSoC5/ADC_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:Generated_Source\PSoC5/ADC_SAR.c **** *  input or if the ADC is using an external reference.
 680:Generated_Source\PSoC5/ADC_SAR.c **** *
 681:Generated_Source\PSoC5/ADC_SAR.c **** * Parameters:
 682:Generated_Source\PSoC5/ADC_SAR.c **** *  int16 adcGain counts per volt
 683:Generated_Source\PSoC5/ADC_SAR.c **** *
 684:Generated_Source\PSoC5/ADC_SAR.c **** * Return:
 685:Generated_Source\PSoC5/ADC_SAR.c **** *  None.
 686:Generated_Source\PSoC5/ADC_SAR.c **** *
 687:Generated_Source\PSoC5/ADC_SAR.c **** * Global Variables:
 688:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_countsPer10Volt variable modified. This variable is used
 689:Generated_Source\PSoC5/ADC_SAR.c **** *  for gain calibration purpose.
 690:Generated_Source\PSoC5/ADC_SAR.c **** *
 691:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
 692:Generated_Source\PSoC5/ADC_SAR.c **** void ADC_SAR_SetGain(int16 adcGain)
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 28


 693:Generated_Source\PSoC5/ADC_SAR.c **** {
 847              		.loc 1 693 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 8
 850              		@ frame_needed = 1, uses_anonymous_args = 0
 851              		@ link register save eliminated.
 852 0000 80B4     		push	{r7}
 853              		.cfi_def_cfa_offset 4
 854              		.cfi_offset 7, -4
 855 0002 83B0     		sub	sp, sp, #12
 856              		.cfi_def_cfa_offset 16
 857 0004 00AF     		add	r7, sp, #0
 858              		.cfi_def_cfa_register 7
 859 0006 0346     		mov	r3, r0
 860 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 694:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_countsPer10Volt = (int32)adcGain * 10;
 861              		.loc 1 694 0
 862 000a B7F90620 		ldrsh	r2, [r7, #6]
 863 000e 1346     		mov	r3, r2
 864 0010 9B00     		lsls	r3, r3, #2
 865 0012 1344     		add	r3, r3, r2
 866 0014 5B00     		lsls	r3, r3, #1
 867 0016 1A46     		mov	r2, r3
 868 0018 034B     		ldr	r3, .L60
 869 001a 1A60     		str	r2, [r3]
 695:Generated_Source\PSoC5/ADC_SAR.c **** }
 870              		.loc 1 695 0
 871 001c 00BF     		nop
 872 001e 0C37     		adds	r7, r7, #12
 873              		.cfi_def_cfa_offset 4
 874 0020 BD46     		mov	sp, r7
 875              		.cfi_def_cfa_register 13
 876              		@ sp needed
 877 0022 80BC     		pop	{r7}
 878              		.cfi_restore 7
 879              		.cfi_def_cfa_offset 0
 880 0024 7047     		bx	lr
 881              	.L61:
 882 0026 00BF     		.align	2
 883              	.L60:
 884 0028 00000000 		.word	ADC_SAR_countsPer10Volt
 885              		.cfi_endproc
 886              	.LFE13:
 887              		.size	ADC_SAR_SetGain, .-ADC_SAR_SetGain
 888              		.section	.text.ADC_SAR_SetScaledGain,"ax",%progbits
 889              		.align	2
 890              		.global	ADC_SAR_SetScaledGain
 891              		.thumb
 892              		.thumb_func
 893              		.type	ADC_SAR_SetScaledGain, %function
 894              	ADC_SAR_SetScaledGain:
 895              	.LFB14:
 696:Generated_Source\PSoC5/ADC_SAR.c **** 
 697:Generated_Source\PSoC5/ADC_SAR.c **** 
 698:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
 699:Generated_Source\PSoC5/ADC_SAR.c **** * Function Name: ADC_SAR_SetScaledGain
 700:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 29


 701:Generated_Source\PSoC5/ADC_SAR.c **** *
 702:Generated_Source\PSoC5/ADC_SAR.c **** * Summary:
 703:Generated_Source\PSoC5/ADC_SAR.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:Generated_Source\PSoC5/ADC_SAR.c **** *  that follow. This value is set by default by the reference and input range
 705:Generated_Source\PSoC5/ADC_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:Generated_Source\PSoC5/ADC_SAR.c **** *  input or if the ADC is using an external reference.
 707:Generated_Source\PSoC5/ADC_SAR.c **** *
 708:Generated_Source\PSoC5/ADC_SAR.c **** * Parameters:
 709:Generated_Source\PSoC5/ADC_SAR.c **** *  int32 adcGain  counts per 10 volt
 710:Generated_Source\PSoC5/ADC_SAR.c **** *
 711:Generated_Source\PSoC5/ADC_SAR.c **** * Return:
 712:Generated_Source\PSoC5/ADC_SAR.c **** *  None.
 713:Generated_Source\PSoC5/ADC_SAR.c **** *
 714:Generated_Source\PSoC5/ADC_SAR.c **** * Global Variables:
 715:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_countsPer10Volt variable modified. This variable is used
 716:Generated_Source\PSoC5/ADC_SAR.c **** *  for gain calibration purpose.
 717:Generated_Source\PSoC5/ADC_SAR.c **** *
 718:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
 719:Generated_Source\PSoC5/ADC_SAR.c **** void ADC_SAR_SetScaledGain(int32 adcGain)
 720:Generated_Source\PSoC5/ADC_SAR.c **** {
 896              		.loc 1 720 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 8
 899              		@ frame_needed = 1, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 901 0000 80B4     		push	{r7}
 902              		.cfi_def_cfa_offset 4
 903              		.cfi_offset 7, -4
 904 0002 83B0     		sub	sp, sp, #12
 905              		.cfi_def_cfa_offset 16
 906 0004 00AF     		add	r7, sp, #0
 907              		.cfi_def_cfa_register 7
 908 0006 7860     		str	r0, [r7, #4]
 721:Generated_Source\PSoC5/ADC_SAR.c ****     ADC_SAR_countsPer10Volt = adcGain;
 909              		.loc 1 721 0
 910 0008 034A     		ldr	r2, .L63
 911 000a 7B68     		ldr	r3, [r7, #4]
 912 000c 1360     		str	r3, [r2]
 722:Generated_Source\PSoC5/ADC_SAR.c **** }
 913              		.loc 1 722 0
 914 000e 00BF     		nop
 915 0010 0C37     		adds	r7, r7, #12
 916              		.cfi_def_cfa_offset 4
 917 0012 BD46     		mov	sp, r7
 918              		.cfi_def_cfa_register 13
 919              		@ sp needed
 920 0014 80BC     		pop	{r7}
 921              		.cfi_restore 7
 922              		.cfi_def_cfa_offset 0
 923 0016 7047     		bx	lr
 924              	.L64:
 925              		.align	2
 926              	.L63:
 927 0018 00000000 		.word	ADC_SAR_countsPer10Volt
 928              		.cfi_endproc
 929              	.LFE14:
 930              		.size	ADC_SAR_SetScaledGain, .-ADC_SAR_SetScaledGain
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 30


 931              		.section	.text.ADC_SAR_CountsTo_mVolts,"ax",%progbits
 932              		.align	2
 933              		.global	ADC_SAR_CountsTo_mVolts
 934              		.thumb
 935              		.thumb_func
 936              		.type	ADC_SAR_CountsTo_mVolts, %function
 937              	ADC_SAR_CountsTo_mVolts:
 938              	.LFB15:
 723:Generated_Source\PSoC5/ADC_SAR.c **** 
 724:Generated_Source\PSoC5/ADC_SAR.c **** 
 725:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
 726:Generated_Source\PSoC5/ADC_SAR.c **** * Function Name: ADC_SAR_CountsTo_mVolts
 727:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
 728:Generated_Source\PSoC5/ADC_SAR.c **** *
 729:Generated_Source\PSoC5/ADC_SAR.c **** * Summary:
 730:Generated_Source\PSoC5/ADC_SAR.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:Generated_Source\PSoC5/ADC_SAR.c **** *
 732:Generated_Source\PSoC5/ADC_SAR.c **** * Parameters:
 733:Generated_Source\PSoC5/ADC_SAR.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:Generated_Source\PSoC5/ADC_SAR.c **** *
 735:Generated_Source\PSoC5/ADC_SAR.c **** * Return:
 736:Generated_Source\PSoC5/ADC_SAR.c **** *  int16 Result in mVolts
 737:Generated_Source\PSoC5/ADC_SAR.c **** *
 738:Generated_Source\PSoC5/ADC_SAR.c **** * Global Variables:
 739:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_offset variable used.
 740:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_countsPer10Volt variable used.
 741:Generated_Source\PSoC5/ADC_SAR.c **** *
 742:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
 743:Generated_Source\PSoC5/ADC_SAR.c **** int16 ADC_SAR_CountsTo_mVolts(int16 adcCounts)
 744:Generated_Source\PSoC5/ADC_SAR.c **** {
 939              		.loc 1 744 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 16
 942              		@ frame_needed = 1, uses_anonymous_args = 0
 943              		@ link register save eliminated.
 944 0000 80B4     		push	{r7}
 945              		.cfi_def_cfa_offset 4
 946              		.cfi_offset 7, -4
 947 0002 85B0     		sub	sp, sp, #20
 948              		.cfi_def_cfa_offset 24
 949 0004 00AF     		add	r7, sp, #0
 950              		.cfi_def_cfa_register 7
 951 0006 0346     		mov	r3, r0
 952 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 745:Generated_Source\PSoC5/ADC_SAR.c ****     int16 mVolts;
 746:Generated_Source\PSoC5/ADC_SAR.c ****     int32 countsPer10Volt;
 747:Generated_Source\PSoC5/ADC_SAR.c **** 
 748:Generated_Source\PSoC5/ADC_SAR.c ****     if(ADC_SAR_countsPerVolt != 0)
 953              		.loc 1 748 0
 954 000a 1D4B     		ldr	r3, .L71
 955 000c 1B88     		ldrh	r3, [r3]	@ movhi
 956 000e 1BB2     		sxth	r3, r3
 957 0010 002B     		cmp	r3, #0
 958 0012 09D0     		beq	.L66
 749:Generated_Source\PSoC5/ADC_SAR.c ****     {   /* Support obsolete method */
 750:Generated_Source\PSoC5/ADC_SAR.c ****         countsPer10Volt = (int32)ADC_SAR_countsPerVolt * 10;
 959              		.loc 1 750 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 31


 960 0014 1A4B     		ldr	r3, .L71
 961 0016 1B88     		ldrh	r3, [r3]	@ movhi
 962 0018 1BB2     		sxth	r3, r3
 963 001a 1A46     		mov	r2, r3
 964 001c 1346     		mov	r3, r2
 965 001e 9B00     		lsls	r3, r3, #2
 966 0020 1344     		add	r3, r3, r2
 967 0022 5B00     		lsls	r3, r3, #1
 968 0024 FB60     		str	r3, [r7, #12]
 969 0026 02E0     		b	.L67
 970              	.L66:
 751:Generated_Source\PSoC5/ADC_SAR.c ****     }
 752:Generated_Source\PSoC5/ADC_SAR.c ****     else
 753:Generated_Source\PSoC5/ADC_SAR.c ****     {
 754:Generated_Source\PSoC5/ADC_SAR.c ****         countsPer10Volt = ADC_SAR_countsPer10Volt;
 971              		.loc 1 754 0
 972 0028 164B     		ldr	r3, .L71+4
 973 002a 1B68     		ldr	r3, [r3]
 974 002c FB60     		str	r3, [r7, #12]
 975              	.L67:
 755:Generated_Source\PSoC5/ADC_SAR.c ****     }
 756:Generated_Source\PSoC5/ADC_SAR.c **** 
 757:Generated_Source\PSoC5/ADC_SAR.c ****     /* Subtract ADC offset */
 758:Generated_Source\PSoC5/ADC_SAR.c ****     adcCounts -= ADC_SAR_offset;
 976              		.loc 1 758 0
 977 002e 164B     		ldr	r3, .L71+8
 978 0030 1B88     		ldrh	r3, [r3]	@ movhi
 979 0032 1BB2     		sxth	r3, r3
 980 0034 FA88     		ldrh	r2, [r7, #6]
 981 0036 9BB2     		uxth	r3, r3
 982 0038 D31A     		subs	r3, r2, r3
 983 003a 9BB2     		uxth	r3, r3
 984 003c FB80     		strh	r3, [r7, #6]	@ movhi
 759:Generated_Source\PSoC5/ADC_SAR.c ****     /* Convert to millivolts with rounding */
 760:Generated_Source\PSoC5/ADC_SAR.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_10MV_COUNTS ) + ( (adcCounts > 0) ?
 985              		.loc 1 760 0
 986 003e B7F90630 		ldrsh	r3, [r7, #6]
 987 0042 42F21072 		movw	r2, #10000
 988 0046 02FB03F2 		mul	r2, r2, r3
 761:Generated_Source\PSoC5/ADC_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 989              		.loc 1 761 0
 990 004a B7F90630 		ldrsh	r3, [r7, #6]
 991 004e 002B     		cmp	r3, #0
 992 0050 04DD     		ble	.L68
 993              		.loc 1 761 0 is_stmt 0 discriminator 1
 994 0052 FB68     		ldr	r3, [r7, #12]
 995 0054 D90F     		lsrs	r1, r3, #31
 996 0056 0B44     		add	r3, r3, r1
 997 0058 5B10     		asrs	r3, r3, #1
 998 005a 04E0     		b	.L69
 999              	.L68:
 1000              		.loc 1 761 0 discriminator 2
 1001 005c FB68     		ldr	r3, [r7, #12]
 1002 005e D90F     		lsrs	r1, r3, #31
 1003 0060 0B44     		add	r3, r3, r1
 1004 0062 5B10     		asrs	r3, r3, #1
 1005 0064 5B42     		negs	r3, r3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 32


 1006              	.L69:
 760:Generated_Source\PSoC5/ADC_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1007              		.loc 1 760 0 is_stmt 1
 1008 0066 1A44     		add	r2, r2, r3
 1009              		.loc 1 761 0
 1010 0068 FB68     		ldr	r3, [r7, #12]
 1011 006a 92FBF3F3 		sdiv	r3, r2, r3
 760:Generated_Source\PSoC5/ADC_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1012              		.loc 1 760 0
 1013 006e 7B81     		strh	r3, [r7, #10]	@ movhi
 762:Generated_Source\PSoC5/ADC_SAR.c **** 
 763:Generated_Source\PSoC5/ADC_SAR.c ****     return( mVolts );
 1014              		.loc 1 763 0
 1015 0070 B7F90A30 		ldrsh	r3, [r7, #10]
 764:Generated_Source\PSoC5/ADC_SAR.c **** }
 1016              		.loc 1 764 0
 1017 0074 1846     		mov	r0, r3
 1018 0076 1437     		adds	r7, r7, #20
 1019              		.cfi_def_cfa_offset 4
 1020 0078 BD46     		mov	sp, r7
 1021              		.cfi_def_cfa_register 13
 1022              		@ sp needed
 1023 007a 80BC     		pop	{r7}
 1024              		.cfi_restore 7
 1025              		.cfi_def_cfa_offset 0
 1026 007c 7047     		bx	lr
 1027              	.L72:
 1028 007e 00BF     		.align	2
 1029              	.L71:
 1030 0080 00000000 		.word	ADC_SAR_countsPerVolt
 1031 0084 00000000 		.word	ADC_SAR_countsPer10Volt
 1032 0088 00000000 		.word	ADC_SAR_offset
 1033              		.cfi_endproc
 1034              	.LFE15:
 1035              		.size	ADC_SAR_CountsTo_mVolts, .-ADC_SAR_CountsTo_mVolts
 1036              		.global	__aeabi_ldivmod
 1037              		.section	.text.ADC_SAR_CountsTo_uVolts,"ax",%progbits
 1038              		.align	2
 1039              		.global	ADC_SAR_CountsTo_uVolts
 1040              		.thumb
 1041              		.thumb_func
 1042              		.type	ADC_SAR_CountsTo_uVolts, %function
 1043              	ADC_SAR_CountsTo_uVolts:
 1044              	.LFB16:
 765:Generated_Source\PSoC5/ADC_SAR.c **** 
 766:Generated_Source\PSoC5/ADC_SAR.c **** 
 767:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
 768:Generated_Source\PSoC5/ADC_SAR.c **** * Function Name: ADC_SAR_CountsTo_uVolts
 769:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
 770:Generated_Source\PSoC5/ADC_SAR.c **** *
 771:Generated_Source\PSoC5/ADC_SAR.c **** * Summary:
 772:Generated_Source\PSoC5/ADC_SAR.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:Generated_Source\PSoC5/ADC_SAR.c **** *
 774:Generated_Source\PSoC5/ADC_SAR.c **** * Parameters:
 775:Generated_Source\PSoC5/ADC_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 776:Generated_Source\PSoC5/ADC_SAR.c **** *
 777:Generated_Source\PSoC5/ADC_SAR.c **** * Return:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 33


 778:Generated_Source\PSoC5/ADC_SAR.c **** *  int32 Result in micro Volts
 779:Generated_Source\PSoC5/ADC_SAR.c **** *
 780:Generated_Source\PSoC5/ADC_SAR.c **** * Global Variables:
 781:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_offset variable used.
 782:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_countsPer10Volt used to convert ADC counts to uVolts.
 783:Generated_Source\PSoC5/ADC_SAR.c **** *
 784:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
 785:Generated_Source\PSoC5/ADC_SAR.c **** int32 ADC_SAR_CountsTo_uVolts(int16 adcCounts)
 786:Generated_Source\PSoC5/ADC_SAR.c **** {
 1045              		.loc 1 786 0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 24
 1048              		@ frame_needed = 1, uses_anonymous_args = 0
 1049 0000 90B5     		push	{r4, r7, lr}
 1050              		.cfi_def_cfa_offset 12
 1051              		.cfi_offset 4, -12
 1052              		.cfi_offset 7, -8
 1053              		.cfi_offset 14, -4
 1054 0002 87B0     		sub	sp, sp, #28
 1055              		.cfi_def_cfa_offset 40
 1056 0004 00AF     		add	r7, sp, #0
 1057              		.cfi_def_cfa_register 7
 1058 0006 0346     		mov	r3, r0
 1059 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 787:Generated_Source\PSoC5/ADC_SAR.c **** 
 788:Generated_Source\PSoC5/ADC_SAR.c ****     int64 uVolts;
 789:Generated_Source\PSoC5/ADC_SAR.c ****     int32 countsPer10Volt;
 790:Generated_Source\PSoC5/ADC_SAR.c **** 
 791:Generated_Source\PSoC5/ADC_SAR.c ****     if(ADC_SAR_countsPerVolt != 0)
 1060              		.loc 1 791 0
 1061 000a 1D4B     		ldr	r3, .L77
 1062 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1063 000e 1BB2     		sxth	r3, r3
 1064 0010 002B     		cmp	r3, #0
 1065 0012 09D0     		beq	.L74
 792:Generated_Source\PSoC5/ADC_SAR.c ****     {   /* Support obsolete method */
 793:Generated_Source\PSoC5/ADC_SAR.c ****         countsPer10Volt = (int32)ADC_SAR_countsPerVolt * 10;
 1066              		.loc 1 793 0
 1067 0014 1A4B     		ldr	r3, .L77
 1068 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1069 0018 1BB2     		sxth	r3, r3
 1070 001a 1A46     		mov	r2, r3
 1071 001c 1346     		mov	r3, r2
 1072 001e 9B00     		lsls	r3, r3, #2
 1073 0020 1344     		add	r3, r3, r2
 1074 0022 5B00     		lsls	r3, r3, #1
 1075 0024 7B61     		str	r3, [r7, #20]
 1076 0026 02E0     		b	.L75
 1077              	.L74:
 794:Generated_Source\PSoC5/ADC_SAR.c ****     }
 795:Generated_Source\PSoC5/ADC_SAR.c ****     else
 796:Generated_Source\PSoC5/ADC_SAR.c ****     {
 797:Generated_Source\PSoC5/ADC_SAR.c ****         countsPer10Volt = ADC_SAR_countsPer10Volt;
 1078              		.loc 1 797 0
 1079 0028 164B     		ldr	r3, .L77+4
 1080 002a 1B68     		ldr	r3, [r3]
 1081 002c 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 34


 1082              	.L75:
 798:Generated_Source\PSoC5/ADC_SAR.c ****     }
 799:Generated_Source\PSoC5/ADC_SAR.c **** 
 800:Generated_Source\PSoC5/ADC_SAR.c ****     /* Subtract ADC offset */
 801:Generated_Source\PSoC5/ADC_SAR.c ****     adcCounts -= ADC_SAR_offset;
 1083              		.loc 1 801 0
 1084 002e 164B     		ldr	r3, .L77+8
 1085 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1086 0032 1BB2     		sxth	r3, r3
 1087 0034 FA88     		ldrh	r2, [r7, #6]
 1088 0036 9BB2     		uxth	r3, r3
 1089 0038 D31A     		subs	r3, r2, r3
 1090 003a 9BB2     		uxth	r3, r3
 1091 003c FB80     		strh	r3, [r7, #6]	@ movhi
 802:Generated_Source\PSoC5/ADC_SAR.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:Generated_Source\PSoC5/ADC_SAR.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:Generated_Source\PSoC5/ADC_SAR.c ****     */
 805:Generated_Source\PSoC5/ADC_SAR.c ****     uVolts = (( (int64)adcCounts * ADC_SAR_10UV_COUNTS ) / countsPer10Volt);
 1092              		.loc 1 805 0
 1093 003e B7F90630 		ldrsh	r3, [r7, #6]
 1094 0042 4FEAE374 		asr	r4, r3, #31
 1095 0046 114A     		ldr	r2, .L77+12
 1096 0048 02FB04F1 		mul	r1, r2, r4
 1097 004c 0022     		movs	r2, #0
 1098 004e 02FB03F2 		mul	r2, r2, r3
 1099 0052 0A44     		add	r2, r2, r1
 1100 0054 0D49     		ldr	r1, .L77+12
 1101 0056 A3FB0101 		umull	r0, r1, r3, r1
 1102 005a 5318     		adds	r3, r2, r1
 1103 005c 1946     		mov	r1, r3
 1104 005e 7B69     		ldr	r3, [r7, #20]
 1105 0060 4FEAE374 		asr	r4, r3, #31
 1106 0064 1A46     		mov	r2, r3
 1107 0066 2346     		mov	r3, r4
 1108 0068 FFF7FEFF 		bl	__aeabi_ldivmod
 1109 006c 0346     		mov	r3, r0
 1110 006e 0C46     		mov	r4, r1
 1111 0070 C7E90234 		strd	r3, [r7, #8]
 806:Generated_Source\PSoC5/ADC_SAR.c **** 
 807:Generated_Source\PSoC5/ADC_SAR.c ****     return((int32) uVolts );
 1112              		.loc 1 807 0
 1113 0074 BB68     		ldr	r3, [r7, #8]
 808:Generated_Source\PSoC5/ADC_SAR.c **** }
 1114              		.loc 1 808 0
 1115 0076 1846     		mov	r0, r3
 1116 0078 1C37     		adds	r7, r7, #28
 1117              		.cfi_def_cfa_offset 12
 1118 007a BD46     		mov	sp, r7
 1119              		.cfi_def_cfa_register 13
 1120              		@ sp needed
 1121 007c 90BD     		pop	{r4, r7, pc}
 1122              	.L78:
 1123 007e 00BF     		.align	2
 1124              	.L77:
 1125 0080 00000000 		.word	ADC_SAR_countsPerVolt
 1126 0084 00000000 		.word	ADC_SAR_countsPer10Volt
 1127 0088 00000000 		.word	ADC_SAR_offset
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 35


 1128 008c 80969800 		.word	10000000
 1129              		.cfi_endproc
 1130              	.LFE16:
 1131              		.size	ADC_SAR_CountsTo_uVolts, .-ADC_SAR_CountsTo_uVolts
 1132              		.global	__aeabi_i2f
 1133              		.global	__aeabi_fmul
 1134              		.global	__aeabi_fdiv
 1135              		.section	.text.ADC_SAR_CountsTo_Volts,"ax",%progbits
 1136              		.align	2
 1137              		.global	ADC_SAR_CountsTo_Volts
 1138              		.thumb
 1139              		.thumb_func
 1140              		.type	ADC_SAR_CountsTo_Volts, %function
 1141              	ADC_SAR_CountsTo_Volts:
 1142              	.LFB17:
 809:Generated_Source\PSoC5/ADC_SAR.c **** 
 810:Generated_Source\PSoC5/ADC_SAR.c **** 
 811:Generated_Source\PSoC5/ADC_SAR.c **** /*******************************************************************************
 812:Generated_Source\PSoC5/ADC_SAR.c **** * Function Name: ADC_SAR_CountsTo_Volts
 813:Generated_Source\PSoC5/ADC_SAR.c **** ********************************************************************************
 814:Generated_Source\PSoC5/ADC_SAR.c **** *
 815:Generated_Source\PSoC5/ADC_SAR.c **** * Summary:
 816:Generated_Source\PSoC5/ADC_SAR.c **** *  Converts the ADC output to volts as a floating-point number.
 817:Generated_Source\PSoC5/ADC_SAR.c **** *
 818:Generated_Source\PSoC5/ADC_SAR.c **** * Parameters:
 819:Generated_Source\PSoC5/ADC_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 820:Generated_Source\PSoC5/ADC_SAR.c **** *
 821:Generated_Source\PSoC5/ADC_SAR.c **** * Return:
 822:Generated_Source\PSoC5/ADC_SAR.c **** *  float Result in Volts
 823:Generated_Source\PSoC5/ADC_SAR.c **** *
 824:Generated_Source\PSoC5/ADC_SAR.c **** * Global Variables:
 825:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_offset variable used.
 826:Generated_Source\PSoC5/ADC_SAR.c **** *  ADC_SAR_countsPer10Volt used to convert ADC counts to Volts.
 827:Generated_Source\PSoC5/ADC_SAR.c **** *
 828:Generated_Source\PSoC5/ADC_SAR.c **** *******************************************************************************/
 829:Generated_Source\PSoC5/ADC_SAR.c **** float32 ADC_SAR_CountsTo_Volts(int16 adcCounts)
 830:Generated_Source\PSoC5/ADC_SAR.c **** {
 1143              		.loc 1 830 0
 1144              		.cfi_startproc
 1145              		@ args = 0, pretend = 0, frame = 16
 1146              		@ frame_needed = 1, uses_anonymous_args = 0
 1147 0000 90B5     		push	{r4, r7, lr}
 1148              		.cfi_def_cfa_offset 12
 1149              		.cfi_offset 4, -12
 1150              		.cfi_offset 7, -8
 1151              		.cfi_offset 14, -4
 1152 0002 85B0     		sub	sp, sp, #20
 1153              		.cfi_def_cfa_offset 32
 1154 0004 00AF     		add	r7, sp, #0
 1155              		.cfi_def_cfa_register 7
 1156 0006 0346     		mov	r3, r0
 1157 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 831:Generated_Source\PSoC5/ADC_SAR.c ****     float32 volts;
 832:Generated_Source\PSoC5/ADC_SAR.c ****     int32 countsPer10Volt;
 833:Generated_Source\PSoC5/ADC_SAR.c **** 
 834:Generated_Source\PSoC5/ADC_SAR.c ****     if(ADC_SAR_countsPerVolt != 0)
 1158              		.loc 1 834 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 36


 1159 000a 1A4B     		ldr	r3, .L83
 1160 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1161 000e 1BB2     		sxth	r3, r3
 1162 0010 002B     		cmp	r3, #0
 1163 0012 09D0     		beq	.L80
 835:Generated_Source\PSoC5/ADC_SAR.c ****     {   /* Support obsolete method */
 836:Generated_Source\PSoC5/ADC_SAR.c ****         countsPer10Volt = (int32)ADC_SAR_countsPerVolt * 10;
 1164              		.loc 1 836 0
 1165 0014 174B     		ldr	r3, .L83
 1166 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1167 0018 1BB2     		sxth	r3, r3
 1168 001a 1A46     		mov	r2, r3
 1169 001c 1346     		mov	r3, r2
 1170 001e 9B00     		lsls	r3, r3, #2
 1171 0020 1344     		add	r3, r3, r2
 1172 0022 5B00     		lsls	r3, r3, #1
 1173 0024 FB60     		str	r3, [r7, #12]
 1174 0026 02E0     		b	.L81
 1175              	.L80:
 837:Generated_Source\PSoC5/ADC_SAR.c ****     }
 838:Generated_Source\PSoC5/ADC_SAR.c ****     else
 839:Generated_Source\PSoC5/ADC_SAR.c ****     {
 840:Generated_Source\PSoC5/ADC_SAR.c ****         countsPer10Volt = ADC_SAR_countsPer10Volt;
 1176              		.loc 1 840 0
 1177 0028 134B     		ldr	r3, .L83+4
 1178 002a 1B68     		ldr	r3, [r3]
 1179 002c FB60     		str	r3, [r7, #12]
 1180              	.L81:
 841:Generated_Source\PSoC5/ADC_SAR.c ****     }
 842:Generated_Source\PSoC5/ADC_SAR.c **** 
 843:Generated_Source\PSoC5/ADC_SAR.c ****     /* Subtract ADC offset */
 844:Generated_Source\PSoC5/ADC_SAR.c ****     adcCounts -= ADC_SAR_offset;
 1181              		.loc 1 844 0
 1182 002e 134B     		ldr	r3, .L83+8
 1183 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1184 0032 1BB2     		sxth	r3, r3
 1185 0034 FA88     		ldrh	r2, [r7, #6]
 1186 0036 9BB2     		uxth	r3, r3
 1187 0038 D31A     		subs	r3, r2, r3
 1188 003a 9BB2     		uxth	r3, r3
 1189 003c FB80     		strh	r3, [r7, #6]	@ movhi
 845:Generated_Source\PSoC5/ADC_SAR.c **** 
 846:Generated_Source\PSoC5/ADC_SAR.c ****     volts = ((float32)adcCounts * ADC_SAR_10V_COUNTS) / (float32)countsPer10Volt;
 1190              		.loc 1 846 0
 1191 003e B7F90630 		ldrsh	r3, [r7, #6]
 1192 0042 1846     		mov	r0, r3
 1193 0044 FFF7FEFF 		bl	__aeabi_i2f
 1194 0048 0346     		mov	r3, r0
 1195 004a 0D49     		ldr	r1, .L83+12
 1196 004c 1846     		mov	r0, r3
 1197 004e FFF7FEFF 		bl	__aeabi_fmul
 1198 0052 0346     		mov	r3, r0
 1199 0054 1C46     		mov	r4, r3
 1200 0056 F868     		ldr	r0, [r7, #12]
 1201 0058 FFF7FEFF 		bl	__aeabi_i2f
 1202 005c 0346     		mov	r3, r0
 1203 005e 1946     		mov	r1, r3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 37


 1204 0060 2046     		mov	r0, r4
 1205 0062 FFF7FEFF 		bl	__aeabi_fdiv
 1206 0066 0346     		mov	r3, r0
 1207 0068 BB60     		str	r3, [r7, #8]	@ float
 847:Generated_Source\PSoC5/ADC_SAR.c **** 
 848:Generated_Source\PSoC5/ADC_SAR.c ****     return( volts );
 1208              		.loc 1 848 0
 1209 006a BB68     		ldr	r3, [r7, #8]	@ float
 849:Generated_Source\PSoC5/ADC_SAR.c **** }
 1210              		.loc 1 849 0
 1211 006c 1846     		mov	r0, r3
 1212 006e 1437     		adds	r7, r7, #20
 1213              		.cfi_def_cfa_offset 12
 1214 0070 BD46     		mov	sp, r7
 1215              		.cfi_def_cfa_register 13
 1216              		@ sp needed
 1217 0072 90BD     		pop	{r4, r7, pc}
 1218              	.L84:
 1219              		.align	2
 1220              	.L83:
 1221 0074 00000000 		.word	ADC_SAR_countsPerVolt
 1222 0078 00000000 		.word	ADC_SAR_countsPer10Volt
 1223 007c 00000000 		.word	ADC_SAR_offset
 1224 0080 00002041 		.word	1092616192
 1225              		.cfi_endproc
 1226              	.LFE17:
 1227              		.size	ADC_SAR_CountsTo_Volts, .-ADC_SAR_CountsTo_Volts
 1228              		.text
 1229              	.Letext0:
 1230              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1231              		.section	.debug_info,"",%progbits
 1232              	.Ldebug_info0:
 1233 0000 5E040000 		.4byte	0x45e
 1234 0004 0400     		.2byte	0x4
 1235 0006 00000000 		.4byte	.Ldebug_abbrev0
 1236 000a 04       		.byte	0x4
 1237 000b 01       		.uleb128 0x1
 1238 000c 37000000 		.4byte	.LASF58
 1239 0010 0C       		.byte	0xc
 1240 0011 A4030000 		.4byte	.LASF59
 1241 0015 2B010000 		.4byte	.LASF60
 1242 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1243 001d 00000000 		.4byte	0
 1244 0021 00000000 		.4byte	.Ldebug_line0
 1245 0025 02       		.uleb128 0x2
 1246 0026 04       		.byte	0x4
 1247 0027 05       		.byte	0x5
 1248 0028 696E7400 		.ascii	"int\000"
 1249 002c 03       		.uleb128 0x3
 1250 002d 04       		.byte	0x4
 1251 002e 07       		.byte	0x7
 1252 002f FB010000 		.4byte	.LASF0
 1253 0033 03       		.uleb128 0x3
 1254 0034 08       		.byte	0x8
 1255 0035 05       		.byte	0x5
 1256 0036 EA000000 		.4byte	.LASF1
 1257 003a 03       		.uleb128 0x3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 38


 1258 003b 08       		.byte	0x8
 1259 003c 04       		.byte	0x4
 1260 003d 83020000 		.4byte	.LASF2
 1261 0041 03       		.uleb128 0x3
 1262 0042 01       		.byte	0x1
 1263 0043 06       		.byte	0x6
 1264 0044 F8000000 		.4byte	.LASF3
 1265 0048 03       		.uleb128 0x3
 1266 0049 01       		.byte	0x1
 1267 004a 08       		.byte	0x8
 1268 004b EC020000 		.4byte	.LASF4
 1269 004f 03       		.uleb128 0x3
 1270 0050 02       		.byte	0x2
 1271 0051 05       		.byte	0x5
 1272 0052 0E030000 		.4byte	.LASF5
 1273 0056 03       		.uleb128 0x3
 1274 0057 02       		.byte	0x2
 1275 0058 07       		.byte	0x7
 1276 0059 27020000 		.4byte	.LASF6
 1277 005d 03       		.uleb128 0x3
 1278 005e 04       		.byte	0x4
 1279 005f 05       		.byte	0x5
 1280 0060 0A010000 		.4byte	.LASF7
 1281 0064 03       		.uleb128 0x3
 1282 0065 04       		.byte	0x4
 1283 0066 07       		.byte	0x7
 1284 0067 0F020000 		.4byte	.LASF8
 1285 006b 03       		.uleb128 0x3
 1286 006c 08       		.byte	0x8
 1287 006d 07       		.byte	0x7
 1288 006e C5000000 		.4byte	.LASF9
 1289 0072 03       		.uleb128 0x3
 1290 0073 04       		.byte	0x4
 1291 0074 07       		.byte	0x7
 1292 0075 6A020000 		.4byte	.LASF10
 1293 0079 03       		.uleb128 0x3
 1294 007a 01       		.byte	0x1
 1295 007b 08       		.byte	0x8
 1296 007c 23030000 		.4byte	.LASF11
 1297 0080 04       		.uleb128 0x4
 1298 0081 8A010000 		.4byte	.LASF12
 1299 0085 02       		.byte	0x2
 1300 0086 E701     		.2byte	0x1e7
 1301 0088 48000000 		.4byte	0x48
 1302 008c 04       		.uleb128 0x4
 1303 008d 00000000 		.4byte	.LASF13
 1304 0091 02       		.byte	0x2
 1305 0092 E801     		.2byte	0x1e8
 1306 0094 56000000 		.4byte	0x56
 1307 0098 04       		.uleb128 0x4
 1308 0099 3A020000 		.4byte	.LASF14
 1309 009d 02       		.byte	0x2
 1310 009e EA01     		.2byte	0x1ea
 1311 00a0 41000000 		.4byte	0x41
 1312 00a4 04       		.uleb128 0x4
 1313 00a5 9E030000 		.4byte	.LASF15
 1314 00a9 02       		.byte	0x2
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 39


 1315 00aa EB01     		.2byte	0x1eb
 1316 00ac 4F000000 		.4byte	0x4f
 1317 00b0 04       		.uleb128 0x4
 1318 00b1 04010000 		.4byte	.LASF16
 1319 00b5 02       		.byte	0x2
 1320 00b6 EC01     		.2byte	0x1ec
 1321 00b8 5D000000 		.4byte	0x5d
 1322 00bc 04       		.uleb128 0x4
 1323 00bd 62020000 		.4byte	.LASF17
 1324 00c1 02       		.byte	0x2
 1325 00c2 ED01     		.2byte	0x1ed
 1326 00c4 C8000000 		.4byte	0xc8
 1327 00c8 03       		.uleb128 0x3
 1328 00c9 04       		.byte	0x4
 1329 00ca 04       		.byte	0x4
 1330 00cb C3020000 		.4byte	.LASF18
 1331 00cf 03       		.uleb128 0x3
 1332 00d0 08       		.byte	0x8
 1333 00d1 04       		.byte	0x4
 1334 00d2 90010000 		.4byte	.LASF19
 1335 00d6 04       		.uleb128 0x4
 1336 00d7 A7020000 		.4byte	.LASF20
 1337 00db 02       		.byte	0x2
 1338 00dc F201     		.2byte	0x1f2
 1339 00de 33000000 		.4byte	0x33
 1340 00e2 04       		.uleb128 0x4
 1341 00e3 CF020000 		.4byte	.LASF21
 1342 00e7 02       		.byte	0x2
 1343 00e8 9102     		.2byte	0x291
 1344 00ea EE000000 		.4byte	0xee
 1345 00ee 05       		.uleb128 0x5
 1346 00ef 80000000 		.4byte	0x80
 1347 00f3 04       		.uleb128 0x4
 1348 00f4 84010000 		.4byte	.LASF22
 1349 00f8 02       		.byte	0x2
 1350 00f9 9202     		.2byte	0x292
 1351 00fb FF000000 		.4byte	0xff
 1352 00ff 05       		.uleb128 0x5
 1353 0100 8C000000 		.4byte	0x8c
 1354 0104 06       		.uleb128 0x6
 1355 0105 DC000000 		.4byte	.LASF23
 1356 0109 01       		.byte	0x1
 1357 010a 4A       		.byte	0x4a
 1358 010b 00000000 		.4byte	.LFB0
 1359 010f 24000000 		.4byte	.LFE0-.LFB0
 1360 0113 01       		.uleb128 0x1
 1361 0114 9C       		.byte	0x9c
 1362 0115 06       		.uleb128 0x6
 1363 0116 46020000 		.4byte	.LASF24
 1364 011a 01       		.byte	0x1
 1365 011b 6A       		.byte	0x6a
 1366 011c 00000000 		.4byte	.LFB1
 1367 0120 2C000000 		.4byte	.LFE1-.LFB1
 1368 0124 01       		.uleb128 0x1
 1369 0125 9C       		.byte	0x9c
 1370 0126 07       		.uleb128 0x7
 1371 0127 F8030000 		.4byte	.LASF27
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 40


 1372 012b 01       		.byte	0x1
 1373 012c 8F       		.byte	0x8f
 1374 012d 00000000 		.4byte	.LFB2
 1375 0131 C4000000 		.4byte	.LFE2-.LFB2
 1376 0135 01       		.uleb128 0x1
 1377 0136 9C       		.byte	0x9c
 1378 0137 58010000 		.4byte	0x158
 1379 013b 08       		.uleb128 0x8
 1380 013c F1030000 		.4byte	.LASF25
 1381 0140 01       		.byte	0x1
 1382 0141 91       		.byte	0x91
 1383 0142 80000000 		.4byte	0x80
 1384 0146 02       		.uleb128 0x2
 1385 0147 91       		.byte	0x91
 1386 0148 76       		.sleb128 -10
 1387 0149 08       		.uleb128 0x8
 1388 014a 75030000 		.4byte	.LASF26
 1389 014e 01       		.byte	0x1
 1390 014f 92       		.byte	0x92
 1391 0150 80000000 		.4byte	0x80
 1392 0154 02       		.uleb128 0x2
 1393 0155 91       		.byte	0x91
 1394 0156 77       		.sleb128 -9
 1395 0157 00       		.byte	0
 1396 0158 07       		.uleb128 0x7
 1397 0159 16000000 		.4byte	.LASF28
 1398 015d 01       		.byte	0x1
 1399 015e F8       		.byte	0xf8
 1400 015f 00000000 		.4byte	.LFB3
 1401 0163 5C000000 		.4byte	.LFE3-.LFB3
 1402 0167 01       		.uleb128 0x1
 1403 0168 9C       		.byte	0x9c
 1404 0169 7C010000 		.4byte	0x17c
 1405 016d 08       		.uleb128 0x8
 1406 016e 75030000 		.4byte	.LASF26
 1407 0172 01       		.byte	0x1
 1408 0173 FA       		.byte	0xfa
 1409 0174 80000000 		.4byte	0x80
 1410 0178 02       		.uleb128 0x2
 1411 0179 91       		.byte	0x91
 1412 017a 77       		.sleb128 -9
 1413 017b 00       		.byte	0
 1414 017c 09       		.uleb128 0x9
 1415 017d 86030000 		.4byte	.LASF29
 1416 0181 01       		.byte	0x1
 1417 0182 2201     		.2byte	0x122
 1418 0184 00000000 		.4byte	.LFB4
 1419 0188 40000000 		.4byte	.LFE4-.LFB4
 1420 018c 01       		.uleb128 0x1
 1421 018d 9C       		.byte	0x9c
 1422 018e B1010000 		.4byte	0x1b1
 1423 0192 0A       		.uleb128 0xa
 1424 0193 C9020000 		.4byte	.LASF31
 1425 0197 01       		.byte	0x1
 1426 0198 2201     		.2byte	0x122
 1427 019a 80000000 		.4byte	0x80
 1428 019e 02       		.uleb128 0x2
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 41


 1429 019f 91       		.byte	0x91
 1430 01a0 6F       		.sleb128 -17
 1431 01a1 0B       		.uleb128 0xb
 1432 01a2 F1030000 		.4byte	.LASF25
 1433 01a6 01       		.byte	0x1
 1434 01a7 2401     		.2byte	0x124
 1435 01a9 80000000 		.4byte	0x80
 1436 01ad 02       		.uleb128 0x2
 1437 01ae 91       		.byte	0x91
 1438 01af 77       		.sleb128 -9
 1439 01b0 00       		.byte	0
 1440 01b1 0C       		.uleb128 0xc
 1441 01b2 AD020000 		.4byte	.LASF30
 1442 01b6 01       		.byte	0x1
 1443 01b7 5401     		.2byte	0x154
 1444 01b9 00000000 		.4byte	.LFB5
 1445 01bd 54000000 		.4byte	.LFE5-.LFB5
 1446 01c1 01       		.uleb128 0x1
 1447 01c2 9C       		.byte	0x9c
 1448 01c3 E6010000 		.4byte	0x1e6
 1449 01c7 0A       		.uleb128 0xa
 1450 01c8 18030000 		.4byte	.LASF32
 1451 01cc 01       		.byte	0x1
 1452 01cd 5401     		.2byte	0x154
 1453 01cf 80000000 		.4byte	0x80
 1454 01d3 02       		.uleb128 0x2
 1455 01d4 91       		.byte	0x91
 1456 01d5 6F       		.sleb128 -17
 1457 01d6 0B       		.uleb128 0xb
 1458 01d7 F1030000 		.4byte	.LASF25
 1459 01db 01       		.byte	0x1
 1460 01dc 5601     		.2byte	0x156
 1461 01de 80000000 		.4byte	0x80
 1462 01e2 02       		.uleb128 0x2
 1463 01e3 91       		.byte	0x91
 1464 01e4 77       		.sleb128 -9
 1465 01e5 00       		.byte	0
 1466 01e6 0D       		.uleb128 0xd
 1467 01e7 DC030000 		.4byte	.LASF33
 1468 01eb 01       		.byte	0x1
 1469 01ec 9101     		.2byte	0x191
 1470 01ee 00000000 		.4byte	.LFB6
 1471 01f2 20000000 		.4byte	.LFE6-.LFB6
 1472 01f6 01       		.uleb128 0x1
 1473 01f7 9C       		.byte	0x9c
 1474 01f8 0D       		.uleb128 0xd
 1475 01f9 23000000 		.4byte	.LASF34
 1476 01fd 01       		.byte	0x1
 1477 01fe B301     		.2byte	0x1b3
 1478 0200 00000000 		.4byte	.LFB7
 1479 0204 20000000 		.4byte	.LFE7-.LFB7
 1480 0208 01       		.uleb128 0x1
 1481 0209 9C       		.byte	0x9c
 1482 020a 0E       		.uleb128 0xe
 1483 020b 5D030000 		.4byte	.LASF37
 1484 020f 01       		.byte	0x1
 1485 0210 DB01     		.2byte	0x1db
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 42


 1486 0212 80000000 		.4byte	0x80
 1487 0216 00000000 		.4byte	.LFB8
 1488 021a 40000000 		.4byte	.LFE8-.LFB8
 1489 021e 01       		.uleb128 0x1
 1490 021f 9C       		.byte	0x9c
 1491 0220 43020000 		.4byte	0x243
 1492 0224 0A       		.uleb128 0xa
 1493 0225 F3010000 		.4byte	.LASF35
 1494 0229 01       		.byte	0x1
 1495 022a DB01     		.2byte	0x1db
 1496 022c 80000000 		.4byte	0x80
 1497 0230 02       		.uleb128 0x2
 1498 0231 91       		.byte	0x91
 1499 0232 6F       		.sleb128 -17
 1500 0233 0B       		.uleb128 0xb
 1501 0234 97030000 		.4byte	.LASF36
 1502 0238 01       		.byte	0x1
 1503 0239 DD01     		.2byte	0x1dd
 1504 023b 80000000 		.4byte	0x80
 1505 023f 02       		.uleb128 0x2
 1506 0240 91       		.byte	0x91
 1507 0241 77       		.sleb128 -9
 1508 0242 00       		.byte	0
 1509 0243 0F       		.uleb128 0xf
 1510 0244 BD010000 		.4byte	.LASF61
 1511 0248 01       		.byte	0x1
 1512 0249 0802     		.2byte	0x208
 1513 024b 98000000 		.4byte	0x98
 1514 024f 00000000 		.4byte	.LFB9
 1515 0253 28000000 		.4byte	.LFE9-.LFB9
 1516 0257 01       		.uleb128 0x1
 1517 0258 9C       		.byte	0x9c
 1518 0259 10       		.uleb128 0x10
 1519 025a FA020000 		.4byte	.LASF38
 1520 025e 01       		.byte	0x1
 1521 025f 2602     		.2byte	0x226
 1522 0261 A4000000 		.4byte	0xa4
 1523 0265 00000000 		.4byte	.LFB10
 1524 0269 30000000 		.4byte	.LFE10-.LFB10
 1525 026d 01       		.uleb128 0x1
 1526 026e 9C       		.byte	0x9c
 1527 026f 83020000 		.4byte	0x283
 1528 0273 11       		.uleb128 0x11
 1529 0274 72657300 		.ascii	"res\000"
 1530 0278 01       		.byte	0x1
 1531 0279 2802     		.2byte	0x228
 1532 027b 8C000000 		.4byte	0x8c
 1533 027f 02       		.uleb128 0x2
 1534 0280 91       		.byte	0x91
 1535 0281 76       		.sleb128 -10
 1536 0282 00       		.byte	0
 1537 0283 09       		.uleb128 0x9
 1538 0284 D0010000 		.4byte	.LASF39
 1539 0288 01       		.byte	0x1
 1540 0289 4902     		.2byte	0x249
 1541 028b 00000000 		.4byte	.LFB11
 1542 028f 20000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 43


 1543 0293 01       		.uleb128 0x1
 1544 0294 9C       		.byte	0x9c
 1545 0295 A9020000 		.4byte	0x2a9
 1546 0299 0A       		.uleb128 0xa
 1547 029a 3E030000 		.4byte	.LASF40
 1548 029e 01       		.byte	0x1
 1549 029f 4902     		.2byte	0x249
 1550 02a1 A4000000 		.4byte	0xa4
 1551 02a5 02       		.uleb128 0x2
 1552 02a6 91       		.byte	0x91
 1553 02a7 76       		.sleb128 -10
 1554 02a8 00       		.byte	0
 1555 02a9 12       		.uleb128 0x12
 1556 02aa E2010000 		.4byte	.LASF62
 1557 02ae 01       		.byte	0x1
 1558 02af 6302     		.2byte	0x263
 1559 02b1 00000000 		.4byte	.LFB12
 1560 02b5 80000000 		.4byte	.LFE12-.LFB12
 1561 02b9 01       		.uleb128 0x1
 1562 02ba 9C       		.byte	0x9c
 1563 02bb DE020000 		.4byte	0x2de
 1564 02bf 0A       		.uleb128 0xa
 1565 02c0 18030000 		.4byte	.LASF32
 1566 02c4 01       		.byte	0x1
 1567 02c5 6302     		.2byte	0x263
 1568 02c7 80000000 		.4byte	0x80
 1569 02cb 02       		.uleb128 0x2
 1570 02cc 91       		.byte	0x91
 1571 02cd 6F       		.sleb128 -17
 1572 02ce 0B       		.uleb128 0xb
 1573 02cf 0F000000 		.4byte	.LASF41
 1574 02d3 01       		.byte	0x1
 1575 02d4 6502     		.2byte	0x265
 1576 02d6 B0000000 		.4byte	0xb0
 1577 02da 02       		.uleb128 0x2
 1578 02db 91       		.byte	0x91
 1579 02dc 74       		.sleb128 -12
 1580 02dd 00       		.byte	0
 1581 02de 09       		.uleb128 0x9
 1582 02df 73020000 		.4byte	.LASF42
 1583 02e3 01       		.byte	0x1
 1584 02e4 B402     		.2byte	0x2b4
 1585 02e6 00000000 		.4byte	.LFB13
 1586 02ea 2C000000 		.4byte	.LFE13-.LFB13
 1587 02ee 01       		.uleb128 0x1
 1588 02ef 9C       		.byte	0x9c
 1589 02f0 04030000 		.4byte	0x304
 1590 02f4 0A       		.uleb128 0xa
 1591 02f5 07000000 		.4byte	.LASF43
 1592 02f9 01       		.byte	0x1
 1593 02fa B402     		.2byte	0x2b4
 1594 02fc A4000000 		.4byte	0xa4
 1595 0300 02       		.uleb128 0x2
 1596 0301 91       		.byte	0x91
 1597 0302 76       		.sleb128 -10
 1598 0303 00       		.byte	0
 1599 0304 09       		.uleb128 0x9
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 44


 1600 0305 28030000 		.4byte	.LASF44
 1601 0309 01       		.byte	0x1
 1602 030a CF02     		.2byte	0x2cf
 1603 030c 00000000 		.4byte	.LFB14
 1604 0310 1C000000 		.4byte	.LFE14-.LFB14
 1605 0314 01       		.uleb128 0x1
 1606 0315 9C       		.byte	0x9c
 1607 0316 2A030000 		.4byte	0x32a
 1608 031a 0A       		.uleb128 0xa
 1609 031b 07000000 		.4byte	.LASF43
 1610 031f 01       		.byte	0x1
 1611 0320 CF02     		.2byte	0x2cf
 1612 0322 B0000000 		.4byte	0xb0
 1613 0326 02       		.uleb128 0x2
 1614 0327 91       		.byte	0x91
 1615 0328 74       		.sleb128 -12
 1616 0329 00       		.byte	0
 1617 032a 10       		.uleb128 0x10
 1618 032b D4020000 		.4byte	.LASF45
 1619 032f 01       		.byte	0x1
 1620 0330 E702     		.2byte	0x2e7
 1621 0332 A4000000 		.4byte	0xa4
 1622 0336 00000000 		.4byte	.LFB15
 1623 033a 8C000000 		.4byte	.LFE15-.LFB15
 1624 033e 01       		.uleb128 0x1
 1625 033f 9C       		.byte	0x9c
 1626 0340 72030000 		.4byte	0x372
 1627 0344 0A       		.uleb128 0xa
 1628 0345 45030000 		.4byte	.LASF46
 1629 0349 01       		.byte	0x1
 1630 034a E702     		.2byte	0x2e7
 1631 034c A4000000 		.4byte	0xa4
 1632 0350 02       		.uleb128 0x2
 1633 0351 91       		.byte	0x91
 1634 0352 6E       		.sleb128 -18
 1635 0353 0B       		.uleb128 0xb
 1636 0354 3F020000 		.4byte	.LASF47
 1637 0358 01       		.byte	0x1
 1638 0359 E902     		.2byte	0x2e9
 1639 035b A4000000 		.4byte	0xa4
 1640 035f 02       		.uleb128 0x2
 1641 0360 91       		.byte	0x91
 1642 0361 72       		.sleb128 -14
 1643 0362 0B       		.uleb128 0xb
 1644 0363 97010000 		.4byte	.LASF48
 1645 0367 01       		.byte	0x1
 1646 0368 EA02     		.2byte	0x2ea
 1647 036a B0000000 		.4byte	0xb0
 1648 036e 02       		.uleb128 0x2
 1649 036f 91       		.byte	0x91
 1650 0370 74       		.sleb128 -12
 1651 0371 00       		.byte	0
 1652 0372 0E       		.uleb128 0xe
 1653 0373 8F020000 		.4byte	.LASF49
 1654 0377 01       		.byte	0x1
 1655 0378 1103     		.2byte	0x311
 1656 037a B0000000 		.4byte	0xb0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 45


 1657 037e 00000000 		.4byte	.LFB16
 1658 0382 90000000 		.4byte	.LFE16-.LFB16
 1659 0386 01       		.uleb128 0x1
 1660 0387 9C       		.byte	0x9c
 1661 0388 BA030000 		.4byte	0x3ba
 1662 038c 0A       		.uleb128 0xa
 1663 038d 45030000 		.4byte	.LASF46
 1664 0391 01       		.byte	0x1
 1665 0392 1103     		.2byte	0x311
 1666 0394 A4000000 		.4byte	0xa4
 1667 0398 02       		.uleb128 0x2
 1668 0399 91       		.byte	0x91
 1669 039a 5E       		.sleb128 -34
 1670 039b 0B       		.uleb128 0xb
 1671 039c 08020000 		.4byte	.LASF50
 1672 03a0 01       		.byte	0x1
 1673 03a1 1403     		.2byte	0x314
 1674 03a3 D6000000 		.4byte	0xd6
 1675 03a7 02       		.uleb128 0x2
 1676 03a8 91       		.byte	0x91
 1677 03a9 60       		.sleb128 -32
 1678 03aa 0B       		.uleb128 0xb
 1679 03ab 97010000 		.4byte	.LASF48
 1680 03af 01       		.byte	0x1
 1681 03b0 1503     		.2byte	0x315
 1682 03b2 B0000000 		.4byte	0xb0
 1683 03b6 02       		.uleb128 0x2
 1684 03b7 91       		.byte	0x91
 1685 03b8 6C       		.sleb128 -20
 1686 03b9 00       		.byte	0
 1687 03ba 0E       		.uleb128 0xe
 1688 03bb C5030000 		.4byte	.LASF51
 1689 03bf 01       		.byte	0x1
 1690 03c0 3D03     		.2byte	0x33d
 1691 03c2 BC000000 		.4byte	0xbc
 1692 03c6 00000000 		.4byte	.LFB17
 1693 03ca 84000000 		.4byte	.LFE17-.LFB17
 1694 03ce 01       		.uleb128 0x1
 1695 03cf 9C       		.byte	0x9c
 1696 03d0 02040000 		.4byte	0x402
 1697 03d4 0A       		.uleb128 0xa
 1698 03d5 45030000 		.4byte	.LASF46
 1699 03d9 01       		.byte	0x1
 1700 03da 3D03     		.2byte	0x33d
 1701 03dc A4000000 		.4byte	0xa4
 1702 03e0 02       		.uleb128 0x2
 1703 03e1 91       		.byte	0x91
 1704 03e2 66       		.sleb128 -26
 1705 03e3 0B       		.uleb128 0xb
 1706 03e4 21020000 		.4byte	.LASF52
 1707 03e8 01       		.byte	0x1
 1708 03e9 3F03     		.2byte	0x33f
 1709 03eb BC000000 		.4byte	0xbc
 1710 03ef 02       		.uleb128 0x2
 1711 03f0 91       		.byte	0x91
 1712 03f1 68       		.sleb128 -24
 1713 03f2 0B       		.uleb128 0xb
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 46


 1714 03f3 97010000 		.4byte	.LASF48
 1715 03f7 01       		.byte	0x1
 1716 03f8 4003     		.2byte	0x340
 1717 03fa B0000000 		.4byte	0xb0
 1718 03fe 02       		.uleb128 0x2
 1719 03ff 91       		.byte	0x91
 1720 0400 6C       		.sleb128 -20
 1721 0401 00       		.byte	0
 1722 0402 13       		.uleb128 0x13
 1723 0403 74010000 		.4byte	.LASF53
 1724 0407 01       		.byte	0x1
 1725 0408 23       		.byte	0x23
 1726 0409 80000000 		.4byte	0x80
 1727 040d 05       		.uleb128 0x5
 1728 040e 03       		.byte	0x3
 1729 040f 00000000 		.4byte	ADC_SAR_initVar
 1730 0413 13       		.uleb128 0x13
 1731 0414 53020000 		.4byte	.LASF54
 1732 0418 01       		.byte	0x1
 1733 0419 24       		.byte	0x24
 1734 041a 24040000 		.4byte	0x424
 1735 041e 05       		.uleb128 0x5
 1736 041f 03       		.byte	0x3
 1737 0420 00000000 		.4byte	ADC_SAR_offset
 1738 0424 05       		.uleb128 0x5
 1739 0425 A4000000 		.4byte	0xa4
 1740 0429 13       		.uleb128 0x13
 1741 042a A7010000 		.4byte	.LASF55
 1742 042e 01       		.byte	0x1
 1743 042f 25       		.byte	0x25
 1744 0430 24040000 		.4byte	0x424
 1745 0434 05       		.uleb128 0x5
 1746 0435 03       		.byte	0x3
 1747 0436 00000000 		.4byte	ADC_SAR_countsPerVolt
 1748 043a 13       		.uleb128 0x13
 1749 043b 13010000 		.4byte	.LASF56
 1750 043f 01       		.byte	0x1
 1751 0440 26       		.byte	0x26
 1752 0441 4B040000 		.4byte	0x44b
 1753 0445 05       		.uleb128 0x5
 1754 0446 03       		.byte	0x3
 1755 0447 00000000 		.4byte	ADC_SAR_countsPer10Volt
 1756 044b 05       		.uleb128 0x5
 1757 044c B0000000 		.4byte	0xb0
 1758 0450 13       		.uleb128 0x13
 1759 0451 4F030000 		.4byte	.LASF57
 1760 0455 01       		.byte	0x1
 1761 0456 27       		.byte	0x27
 1762 0457 24040000 		.4byte	0x424
 1763 045b 05       		.uleb128 0x5
 1764 045c 03       		.byte	0x3
 1765 045d 00000000 		.4byte	ADC_SAR_shift
 1766 0461 00       		.byte	0
 1767              		.section	.debug_abbrev,"",%progbits
 1768              	.Ldebug_abbrev0:
 1769 0000 01       		.uleb128 0x1
 1770 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 47


 1771 0002 01       		.byte	0x1
 1772 0003 25       		.uleb128 0x25
 1773 0004 0E       		.uleb128 0xe
 1774 0005 13       		.uleb128 0x13
 1775 0006 0B       		.uleb128 0xb
 1776 0007 03       		.uleb128 0x3
 1777 0008 0E       		.uleb128 0xe
 1778 0009 1B       		.uleb128 0x1b
 1779 000a 0E       		.uleb128 0xe
 1780 000b 55       		.uleb128 0x55
 1781 000c 17       		.uleb128 0x17
 1782 000d 11       		.uleb128 0x11
 1783 000e 01       		.uleb128 0x1
 1784 000f 10       		.uleb128 0x10
 1785 0010 17       		.uleb128 0x17
 1786 0011 00       		.byte	0
 1787 0012 00       		.byte	0
 1788 0013 02       		.uleb128 0x2
 1789 0014 24       		.uleb128 0x24
 1790 0015 00       		.byte	0
 1791 0016 0B       		.uleb128 0xb
 1792 0017 0B       		.uleb128 0xb
 1793 0018 3E       		.uleb128 0x3e
 1794 0019 0B       		.uleb128 0xb
 1795 001a 03       		.uleb128 0x3
 1796 001b 08       		.uleb128 0x8
 1797 001c 00       		.byte	0
 1798 001d 00       		.byte	0
 1799 001e 03       		.uleb128 0x3
 1800 001f 24       		.uleb128 0x24
 1801 0020 00       		.byte	0
 1802 0021 0B       		.uleb128 0xb
 1803 0022 0B       		.uleb128 0xb
 1804 0023 3E       		.uleb128 0x3e
 1805 0024 0B       		.uleb128 0xb
 1806 0025 03       		.uleb128 0x3
 1807 0026 0E       		.uleb128 0xe
 1808 0027 00       		.byte	0
 1809 0028 00       		.byte	0
 1810 0029 04       		.uleb128 0x4
 1811 002a 16       		.uleb128 0x16
 1812 002b 00       		.byte	0
 1813 002c 03       		.uleb128 0x3
 1814 002d 0E       		.uleb128 0xe
 1815 002e 3A       		.uleb128 0x3a
 1816 002f 0B       		.uleb128 0xb
 1817 0030 3B       		.uleb128 0x3b
 1818 0031 05       		.uleb128 0x5
 1819 0032 49       		.uleb128 0x49
 1820 0033 13       		.uleb128 0x13
 1821 0034 00       		.byte	0
 1822 0035 00       		.byte	0
 1823 0036 05       		.uleb128 0x5
 1824 0037 35       		.uleb128 0x35
 1825 0038 00       		.byte	0
 1826 0039 49       		.uleb128 0x49
 1827 003a 13       		.uleb128 0x13
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 48


 1828 003b 00       		.byte	0
 1829 003c 00       		.byte	0
 1830 003d 06       		.uleb128 0x6
 1831 003e 2E       		.uleb128 0x2e
 1832 003f 00       		.byte	0
 1833 0040 3F       		.uleb128 0x3f
 1834 0041 19       		.uleb128 0x19
 1835 0042 03       		.uleb128 0x3
 1836 0043 0E       		.uleb128 0xe
 1837 0044 3A       		.uleb128 0x3a
 1838 0045 0B       		.uleb128 0xb
 1839 0046 3B       		.uleb128 0x3b
 1840 0047 0B       		.uleb128 0xb
 1841 0048 27       		.uleb128 0x27
 1842 0049 19       		.uleb128 0x19
 1843 004a 11       		.uleb128 0x11
 1844 004b 01       		.uleb128 0x1
 1845 004c 12       		.uleb128 0x12
 1846 004d 06       		.uleb128 0x6
 1847 004e 40       		.uleb128 0x40
 1848 004f 18       		.uleb128 0x18
 1849 0050 9642     		.uleb128 0x2116
 1850 0052 19       		.uleb128 0x19
 1851 0053 00       		.byte	0
 1852 0054 00       		.byte	0
 1853 0055 07       		.uleb128 0x7
 1854 0056 2E       		.uleb128 0x2e
 1855 0057 01       		.byte	0x1
 1856 0058 3F       		.uleb128 0x3f
 1857 0059 19       		.uleb128 0x19
 1858 005a 03       		.uleb128 0x3
 1859 005b 0E       		.uleb128 0xe
 1860 005c 3A       		.uleb128 0x3a
 1861 005d 0B       		.uleb128 0xb
 1862 005e 3B       		.uleb128 0x3b
 1863 005f 0B       		.uleb128 0xb
 1864 0060 27       		.uleb128 0x27
 1865 0061 19       		.uleb128 0x19
 1866 0062 11       		.uleb128 0x11
 1867 0063 01       		.uleb128 0x1
 1868 0064 12       		.uleb128 0x12
 1869 0065 06       		.uleb128 0x6
 1870 0066 40       		.uleb128 0x40
 1871 0067 18       		.uleb128 0x18
 1872 0068 9642     		.uleb128 0x2116
 1873 006a 19       		.uleb128 0x19
 1874 006b 01       		.uleb128 0x1
 1875 006c 13       		.uleb128 0x13
 1876 006d 00       		.byte	0
 1877 006e 00       		.byte	0
 1878 006f 08       		.uleb128 0x8
 1879 0070 34       		.uleb128 0x34
 1880 0071 00       		.byte	0
 1881 0072 03       		.uleb128 0x3
 1882 0073 0E       		.uleb128 0xe
 1883 0074 3A       		.uleb128 0x3a
 1884 0075 0B       		.uleb128 0xb
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 49


 1885 0076 3B       		.uleb128 0x3b
 1886 0077 0B       		.uleb128 0xb
 1887 0078 49       		.uleb128 0x49
 1888 0079 13       		.uleb128 0x13
 1889 007a 02       		.uleb128 0x2
 1890 007b 18       		.uleb128 0x18
 1891 007c 00       		.byte	0
 1892 007d 00       		.byte	0
 1893 007e 09       		.uleb128 0x9
 1894 007f 2E       		.uleb128 0x2e
 1895 0080 01       		.byte	0x1
 1896 0081 3F       		.uleb128 0x3f
 1897 0082 19       		.uleb128 0x19
 1898 0083 03       		.uleb128 0x3
 1899 0084 0E       		.uleb128 0xe
 1900 0085 3A       		.uleb128 0x3a
 1901 0086 0B       		.uleb128 0xb
 1902 0087 3B       		.uleb128 0x3b
 1903 0088 05       		.uleb128 0x5
 1904 0089 27       		.uleb128 0x27
 1905 008a 19       		.uleb128 0x19
 1906 008b 11       		.uleb128 0x11
 1907 008c 01       		.uleb128 0x1
 1908 008d 12       		.uleb128 0x12
 1909 008e 06       		.uleb128 0x6
 1910 008f 40       		.uleb128 0x40
 1911 0090 18       		.uleb128 0x18
 1912 0091 9742     		.uleb128 0x2117
 1913 0093 19       		.uleb128 0x19
 1914 0094 01       		.uleb128 0x1
 1915 0095 13       		.uleb128 0x13
 1916 0096 00       		.byte	0
 1917 0097 00       		.byte	0
 1918 0098 0A       		.uleb128 0xa
 1919 0099 05       		.uleb128 0x5
 1920 009a 00       		.byte	0
 1921 009b 03       		.uleb128 0x3
 1922 009c 0E       		.uleb128 0xe
 1923 009d 3A       		.uleb128 0x3a
 1924 009e 0B       		.uleb128 0xb
 1925 009f 3B       		.uleb128 0x3b
 1926 00a0 05       		.uleb128 0x5
 1927 00a1 49       		.uleb128 0x49
 1928 00a2 13       		.uleb128 0x13
 1929 00a3 02       		.uleb128 0x2
 1930 00a4 18       		.uleb128 0x18
 1931 00a5 00       		.byte	0
 1932 00a6 00       		.byte	0
 1933 00a7 0B       		.uleb128 0xb
 1934 00a8 34       		.uleb128 0x34
 1935 00a9 00       		.byte	0
 1936 00aa 03       		.uleb128 0x3
 1937 00ab 0E       		.uleb128 0xe
 1938 00ac 3A       		.uleb128 0x3a
 1939 00ad 0B       		.uleb128 0xb
 1940 00ae 3B       		.uleb128 0x3b
 1941 00af 05       		.uleb128 0x5
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 50


 1942 00b0 49       		.uleb128 0x49
 1943 00b1 13       		.uleb128 0x13
 1944 00b2 02       		.uleb128 0x2
 1945 00b3 18       		.uleb128 0x18
 1946 00b4 00       		.byte	0
 1947 00b5 00       		.byte	0
 1948 00b6 0C       		.uleb128 0xc
 1949 00b7 2E       		.uleb128 0x2e
 1950 00b8 01       		.byte	0x1
 1951 00b9 3F       		.uleb128 0x3f
 1952 00ba 19       		.uleb128 0x19
 1953 00bb 03       		.uleb128 0x3
 1954 00bc 0E       		.uleb128 0xe
 1955 00bd 3A       		.uleb128 0x3a
 1956 00be 0B       		.uleb128 0xb
 1957 00bf 3B       		.uleb128 0x3b
 1958 00c0 05       		.uleb128 0x5
 1959 00c1 27       		.uleb128 0x27
 1960 00c2 19       		.uleb128 0x19
 1961 00c3 11       		.uleb128 0x11
 1962 00c4 01       		.uleb128 0x1
 1963 00c5 12       		.uleb128 0x12
 1964 00c6 06       		.uleb128 0x6
 1965 00c7 40       		.uleb128 0x40
 1966 00c8 18       		.uleb128 0x18
 1967 00c9 9642     		.uleb128 0x2116
 1968 00cb 19       		.uleb128 0x19
 1969 00cc 01       		.uleb128 0x1
 1970 00cd 13       		.uleb128 0x13
 1971 00ce 00       		.byte	0
 1972 00cf 00       		.byte	0
 1973 00d0 0D       		.uleb128 0xd
 1974 00d1 2E       		.uleb128 0x2e
 1975 00d2 00       		.byte	0
 1976 00d3 3F       		.uleb128 0x3f
 1977 00d4 19       		.uleb128 0x19
 1978 00d5 03       		.uleb128 0x3
 1979 00d6 0E       		.uleb128 0xe
 1980 00d7 3A       		.uleb128 0x3a
 1981 00d8 0B       		.uleb128 0xb
 1982 00d9 3B       		.uleb128 0x3b
 1983 00da 05       		.uleb128 0x5
 1984 00db 27       		.uleb128 0x27
 1985 00dc 19       		.uleb128 0x19
 1986 00dd 11       		.uleb128 0x11
 1987 00de 01       		.uleb128 0x1
 1988 00df 12       		.uleb128 0x12
 1989 00e0 06       		.uleb128 0x6
 1990 00e1 40       		.uleb128 0x40
 1991 00e2 18       		.uleb128 0x18
 1992 00e3 9742     		.uleb128 0x2117
 1993 00e5 19       		.uleb128 0x19
 1994 00e6 00       		.byte	0
 1995 00e7 00       		.byte	0
 1996 00e8 0E       		.uleb128 0xe
 1997 00e9 2E       		.uleb128 0x2e
 1998 00ea 01       		.byte	0x1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 51


 1999 00eb 3F       		.uleb128 0x3f
 2000 00ec 19       		.uleb128 0x19
 2001 00ed 03       		.uleb128 0x3
 2002 00ee 0E       		.uleb128 0xe
 2003 00ef 3A       		.uleb128 0x3a
 2004 00f0 0B       		.uleb128 0xb
 2005 00f1 3B       		.uleb128 0x3b
 2006 00f2 05       		.uleb128 0x5
 2007 00f3 27       		.uleb128 0x27
 2008 00f4 19       		.uleb128 0x19
 2009 00f5 49       		.uleb128 0x49
 2010 00f6 13       		.uleb128 0x13
 2011 00f7 11       		.uleb128 0x11
 2012 00f8 01       		.uleb128 0x1
 2013 00f9 12       		.uleb128 0x12
 2014 00fa 06       		.uleb128 0x6
 2015 00fb 40       		.uleb128 0x40
 2016 00fc 18       		.uleb128 0x18
 2017 00fd 9642     		.uleb128 0x2116
 2018 00ff 19       		.uleb128 0x19
 2019 0100 01       		.uleb128 0x1
 2020 0101 13       		.uleb128 0x13
 2021 0102 00       		.byte	0
 2022 0103 00       		.byte	0
 2023 0104 0F       		.uleb128 0xf
 2024 0105 2E       		.uleb128 0x2e
 2025 0106 00       		.byte	0
 2026 0107 3F       		.uleb128 0x3f
 2027 0108 19       		.uleb128 0x19
 2028 0109 03       		.uleb128 0x3
 2029 010a 0E       		.uleb128 0xe
 2030 010b 3A       		.uleb128 0x3a
 2031 010c 0B       		.uleb128 0xb
 2032 010d 3B       		.uleb128 0x3b
 2033 010e 05       		.uleb128 0x5
 2034 010f 27       		.uleb128 0x27
 2035 0110 19       		.uleb128 0x19
 2036 0111 49       		.uleb128 0x49
 2037 0112 13       		.uleb128 0x13
 2038 0113 11       		.uleb128 0x11
 2039 0114 01       		.uleb128 0x1
 2040 0115 12       		.uleb128 0x12
 2041 0116 06       		.uleb128 0x6
 2042 0117 40       		.uleb128 0x40
 2043 0118 18       		.uleb128 0x18
 2044 0119 9742     		.uleb128 0x2117
 2045 011b 19       		.uleb128 0x19
 2046 011c 00       		.byte	0
 2047 011d 00       		.byte	0
 2048 011e 10       		.uleb128 0x10
 2049 011f 2E       		.uleb128 0x2e
 2050 0120 01       		.byte	0x1
 2051 0121 3F       		.uleb128 0x3f
 2052 0122 19       		.uleb128 0x19
 2053 0123 03       		.uleb128 0x3
 2054 0124 0E       		.uleb128 0xe
 2055 0125 3A       		.uleb128 0x3a
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 52


 2056 0126 0B       		.uleb128 0xb
 2057 0127 3B       		.uleb128 0x3b
 2058 0128 05       		.uleb128 0x5
 2059 0129 27       		.uleb128 0x27
 2060 012a 19       		.uleb128 0x19
 2061 012b 49       		.uleb128 0x49
 2062 012c 13       		.uleb128 0x13
 2063 012d 11       		.uleb128 0x11
 2064 012e 01       		.uleb128 0x1
 2065 012f 12       		.uleb128 0x12
 2066 0130 06       		.uleb128 0x6
 2067 0131 40       		.uleb128 0x40
 2068 0132 18       		.uleb128 0x18
 2069 0133 9742     		.uleb128 0x2117
 2070 0135 19       		.uleb128 0x19
 2071 0136 01       		.uleb128 0x1
 2072 0137 13       		.uleb128 0x13
 2073 0138 00       		.byte	0
 2074 0139 00       		.byte	0
 2075 013a 11       		.uleb128 0x11
 2076 013b 34       		.uleb128 0x34
 2077 013c 00       		.byte	0
 2078 013d 03       		.uleb128 0x3
 2079 013e 08       		.uleb128 0x8
 2080 013f 3A       		.uleb128 0x3a
 2081 0140 0B       		.uleb128 0xb
 2082 0141 3B       		.uleb128 0x3b
 2083 0142 05       		.uleb128 0x5
 2084 0143 49       		.uleb128 0x49
 2085 0144 13       		.uleb128 0x13
 2086 0145 02       		.uleb128 0x2
 2087 0146 18       		.uleb128 0x18
 2088 0147 00       		.byte	0
 2089 0148 00       		.byte	0
 2090 0149 12       		.uleb128 0x12
 2091 014a 2E       		.uleb128 0x2e
 2092 014b 01       		.byte	0x1
 2093 014c 03       		.uleb128 0x3
 2094 014d 0E       		.uleb128 0xe
 2095 014e 3A       		.uleb128 0x3a
 2096 014f 0B       		.uleb128 0xb
 2097 0150 3B       		.uleb128 0x3b
 2098 0151 05       		.uleb128 0x5
 2099 0152 27       		.uleb128 0x27
 2100 0153 19       		.uleb128 0x19
 2101 0154 11       		.uleb128 0x11
 2102 0155 01       		.uleb128 0x1
 2103 0156 12       		.uleb128 0x12
 2104 0157 06       		.uleb128 0x6
 2105 0158 40       		.uleb128 0x40
 2106 0159 18       		.uleb128 0x18
 2107 015a 9642     		.uleb128 0x2116
 2108 015c 19       		.uleb128 0x19
 2109 015d 01       		.uleb128 0x1
 2110 015e 13       		.uleb128 0x13
 2111 015f 00       		.byte	0
 2112 0160 00       		.byte	0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 53


 2113 0161 13       		.uleb128 0x13
 2114 0162 34       		.uleb128 0x34
 2115 0163 00       		.byte	0
 2116 0164 03       		.uleb128 0x3
 2117 0165 0E       		.uleb128 0xe
 2118 0166 3A       		.uleb128 0x3a
 2119 0167 0B       		.uleb128 0xb
 2120 0168 3B       		.uleb128 0x3b
 2121 0169 0B       		.uleb128 0xb
 2122 016a 49       		.uleb128 0x49
 2123 016b 13       		.uleb128 0x13
 2124 016c 3F       		.uleb128 0x3f
 2125 016d 19       		.uleb128 0x19
 2126 016e 02       		.uleb128 0x2
 2127 016f 18       		.uleb128 0x18
 2128 0170 00       		.byte	0
 2129 0171 00       		.byte	0
 2130 0172 00       		.byte	0
 2131              		.section	.debug_aranges,"",%progbits
 2132 0000 A4000000 		.4byte	0xa4
 2133 0004 0200     		.2byte	0x2
 2134 0006 00000000 		.4byte	.Ldebug_info0
 2135 000a 04       		.byte	0x4
 2136 000b 00       		.byte	0
 2137 000c 0000     		.2byte	0
 2138 000e 0000     		.2byte	0
 2139 0010 00000000 		.4byte	.LFB0
 2140 0014 24000000 		.4byte	.LFE0-.LFB0
 2141 0018 00000000 		.4byte	.LFB1
 2142 001c 2C000000 		.4byte	.LFE1-.LFB1
 2143 0020 00000000 		.4byte	.LFB2
 2144 0024 C4000000 		.4byte	.LFE2-.LFB2
 2145 0028 00000000 		.4byte	.LFB3
 2146 002c 5C000000 		.4byte	.LFE3-.LFB3
 2147 0030 00000000 		.4byte	.LFB4
 2148 0034 40000000 		.4byte	.LFE4-.LFB4
 2149 0038 00000000 		.4byte	.LFB5
 2150 003c 54000000 		.4byte	.LFE5-.LFB5
 2151 0040 00000000 		.4byte	.LFB6
 2152 0044 20000000 		.4byte	.LFE6-.LFB6
 2153 0048 00000000 		.4byte	.LFB7
 2154 004c 20000000 		.4byte	.LFE7-.LFB7
 2155 0050 00000000 		.4byte	.LFB8
 2156 0054 40000000 		.4byte	.LFE8-.LFB8
 2157 0058 00000000 		.4byte	.LFB9
 2158 005c 28000000 		.4byte	.LFE9-.LFB9
 2159 0060 00000000 		.4byte	.LFB10
 2160 0064 30000000 		.4byte	.LFE10-.LFB10
 2161 0068 00000000 		.4byte	.LFB11
 2162 006c 20000000 		.4byte	.LFE11-.LFB11
 2163 0070 00000000 		.4byte	.LFB12
 2164 0074 80000000 		.4byte	.LFE12-.LFB12
 2165 0078 00000000 		.4byte	.LFB13
 2166 007c 2C000000 		.4byte	.LFE13-.LFB13
 2167 0080 00000000 		.4byte	.LFB14
 2168 0084 1C000000 		.4byte	.LFE14-.LFB14
 2169 0088 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 54


 2170 008c 8C000000 		.4byte	.LFE15-.LFB15
 2171 0090 00000000 		.4byte	.LFB16
 2172 0094 90000000 		.4byte	.LFE16-.LFB16
 2173 0098 00000000 		.4byte	.LFB17
 2174 009c 84000000 		.4byte	.LFE17-.LFB17
 2175 00a0 00000000 		.4byte	0
 2176 00a4 00000000 		.4byte	0
 2177              		.section	.debug_ranges,"",%progbits
 2178              	.Ldebug_ranges0:
 2179 0000 00000000 		.4byte	.LFB0
 2180 0004 24000000 		.4byte	.LFE0
 2181 0008 00000000 		.4byte	.LFB1
 2182 000c 2C000000 		.4byte	.LFE1
 2183 0010 00000000 		.4byte	.LFB2
 2184 0014 C4000000 		.4byte	.LFE2
 2185 0018 00000000 		.4byte	.LFB3
 2186 001c 5C000000 		.4byte	.LFE3
 2187 0020 00000000 		.4byte	.LFB4
 2188 0024 40000000 		.4byte	.LFE4
 2189 0028 00000000 		.4byte	.LFB5
 2190 002c 54000000 		.4byte	.LFE5
 2191 0030 00000000 		.4byte	.LFB6
 2192 0034 20000000 		.4byte	.LFE6
 2193 0038 00000000 		.4byte	.LFB7
 2194 003c 20000000 		.4byte	.LFE7
 2195 0040 00000000 		.4byte	.LFB8
 2196 0044 40000000 		.4byte	.LFE8
 2197 0048 00000000 		.4byte	.LFB9
 2198 004c 28000000 		.4byte	.LFE9
 2199 0050 00000000 		.4byte	.LFB10
 2200 0054 30000000 		.4byte	.LFE10
 2201 0058 00000000 		.4byte	.LFB11
 2202 005c 20000000 		.4byte	.LFE11
 2203 0060 00000000 		.4byte	.LFB12
 2204 0064 80000000 		.4byte	.LFE12
 2205 0068 00000000 		.4byte	.LFB13
 2206 006c 2C000000 		.4byte	.LFE13
 2207 0070 00000000 		.4byte	.LFB14
 2208 0074 1C000000 		.4byte	.LFE14
 2209 0078 00000000 		.4byte	.LFB15
 2210 007c 8C000000 		.4byte	.LFE15
 2211 0080 00000000 		.4byte	.LFB16
 2212 0084 90000000 		.4byte	.LFE16
 2213 0088 00000000 		.4byte	.LFB17
 2214 008c 84000000 		.4byte	.LFE17
 2215 0090 00000000 		.4byte	0
 2216 0094 00000000 		.4byte	0
 2217              		.section	.debug_line,"",%progbits
 2218              	.Ldebug_line0:
 2219 0000 03020000 		.section	.debug_str,"MS",%progbits,1
 2219      02004400 
 2219      00000201 
 2219      FB0E0D00 
 2219      01010101 
 2220              	.LASF13:
 2221 0000 75696E74 		.ascii	"uint16\000"
 2221      313600
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 55


 2222              	.LASF43:
 2223 0007 61646347 		.ascii	"adcGain\000"
 2223      61696E00 
 2224              	.LASF41:
 2225 000f 636F756E 		.ascii	"counts\000"
 2225      747300
 2226              	.LASF28:
 2227 0016 4144435F 		.ascii	"ADC_SAR_Stop\000"
 2227      5341525F 
 2227      53746F70 
 2227      00
 2228              	.LASF34:
 2229 0023 4144435F 		.ascii	"ADC_SAR_StopConvert\000"
 2229      5341525F 
 2229      53746F70 
 2229      436F6E76 
 2229      65727400 
 2230              	.LASF58:
 2231 0037 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2231      43313120 
 2231      352E342E 
 2231      31203230 
 2231      31363036 
 2232 006a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2232      20726576 
 2232      6973696F 
 2232      6E203233 
 2232      37373135 
 2233 009d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2233      66756E63 
 2233      74696F6E 
 2233      2D736563 
 2233      74696F6E 
 2234              	.LASF9:
 2235 00c5 6C6F6E67 		.ascii	"long long unsigned int\000"
 2235      206C6F6E 
 2235      6720756E 
 2235      7369676E 
 2235      65642069 
 2236              	.LASF23:
 2237 00dc 4144435F 		.ascii	"ADC_SAR_Start\000"
 2237      5341525F 
 2237      53746172 
 2237      7400
 2238              	.LASF1:
 2239 00ea 6C6F6E67 		.ascii	"long long int\000"
 2239      206C6F6E 
 2239      6720696E 
 2239      7400
 2240              	.LASF3:
 2241 00f8 7369676E 		.ascii	"signed char\000"
 2241      65642063 
 2241      68617200 
 2242              	.LASF16:
 2243 0104 696E7433 		.ascii	"int32\000"
 2243      3200
 2244              	.LASF7:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 56


 2245 010a 6C6F6E67 		.ascii	"long int\000"
 2245      20696E74 
 2245      00
 2246              	.LASF56:
 2247 0113 4144435F 		.ascii	"ADC_SAR_countsPer10Volt\000"
 2247      5341525F 
 2247      636F756E 
 2247      74735065 
 2247      72313056 
 2248              	.LASF60:
 2249 012b 433A5C55 		.ascii	"C:\\Users\\yram171\\Downloads\\Yukyung CODE\\psoc_c"
 2249      73657273 
 2249      5C797261 
 2249      6D313731 
 2249      5C446F77 
 2250 0159 6F64655F 		.ascii	"ode_base\\CS301_Class.cydsn\000"
 2250      62617365 
 2250      5C435333 
 2250      30315F43 
 2250      6C617373 
 2251              	.LASF53:
 2252 0174 4144435F 		.ascii	"ADC_SAR_initVar\000"
 2252      5341525F 
 2252      696E6974 
 2252      56617200 
 2253              	.LASF22:
 2254 0184 72656731 		.ascii	"reg16\000"
 2254      3600
 2255              	.LASF12:
 2256 018a 75696E74 		.ascii	"uint8\000"
 2256      3800
 2257              	.LASF19:
 2258 0190 646F7562 		.ascii	"double\000"
 2258      6C6500
 2259              	.LASF48:
 2260 0197 636F756E 		.ascii	"countsPer10Volt\000"
 2260      74735065 
 2260      72313056 
 2260      6F6C7400 
 2261              	.LASF55:
 2262 01a7 4144435F 		.ascii	"ADC_SAR_countsPerVolt\000"
 2262      5341525F 
 2262      636F756E 
 2262      74735065 
 2262      72566F6C 
 2263              	.LASF61:
 2264 01bd 4144435F 		.ascii	"ADC_SAR_GetResult8\000"
 2264      5341525F 
 2264      47657452 
 2264      6573756C 
 2264      743800
 2265              	.LASF39:
 2266 01d0 4144435F 		.ascii	"ADC_SAR_SetOffset\000"
 2266      5341525F 
 2266      5365744F 
 2266      66667365 
 2266      7400
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 57


 2267              	.LASF62:
 2268 01e2 4144435F 		.ascii	"ADC_SAR_CalcGain\000"
 2268      5341525F 
 2268      43616C63 
 2268      4761696E 
 2268      00
 2269              	.LASF35:
 2270 01f3 7265744D 		.ascii	"retMode\000"
 2270      6F646500 
 2271              	.LASF0:
 2272 01fb 756E7369 		.ascii	"unsigned int\000"
 2272      676E6564 
 2272      20696E74 
 2272      00
 2273              	.LASF50:
 2274 0208 75566F6C 		.ascii	"uVolts\000"
 2274      747300
 2275              	.LASF8:
 2276 020f 6C6F6E67 		.ascii	"long unsigned int\000"
 2276      20756E73 
 2276      69676E65 
 2276      6420696E 
 2276      7400
 2277              	.LASF52:
 2278 0221 766F6C74 		.ascii	"volts\000"
 2278      7300
 2279              	.LASF6:
 2280 0227 73686F72 		.ascii	"short unsigned int\000"
 2280      7420756E 
 2280      7369676E 
 2280      65642069 
 2280      6E7400
 2281              	.LASF14:
 2282 023a 696E7438 		.ascii	"int8\000"
 2282      00
 2283              	.LASF47:
 2284 023f 6D566F6C 		.ascii	"mVolts\000"
 2284      747300
 2285              	.LASF24:
 2286 0246 4144435F 		.ascii	"ADC_SAR_Init\000"
 2286      5341525F 
 2286      496E6974 
 2286      00
 2287              	.LASF54:
 2288 0253 4144435F 		.ascii	"ADC_SAR_offset\000"
 2288      5341525F 
 2288      6F666673 
 2288      657400
 2289              	.LASF17:
 2290 0262 666C6F61 		.ascii	"float32\000"
 2290      74333200 
 2291              	.LASF10:
 2292 026a 73697A65 		.ascii	"sizetype\000"
 2292      74797065 
 2292      00
 2293              	.LASF42:
 2294 0273 4144435F 		.ascii	"ADC_SAR_SetGain\000"
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 58


 2294      5341525F 
 2294      53657447 
 2294      61696E00 
 2295              	.LASF2:
 2296 0283 6C6F6E67 		.ascii	"long double\000"
 2296      20646F75 
 2296      626C6500 
 2297              	.LASF49:
 2298 028f 4144435F 		.ascii	"ADC_SAR_CountsTo_uVolts\000"
 2298      5341525F 
 2298      436F756E 
 2298      7473546F 
 2298      5F75566F 
 2299              	.LASF20:
 2300 02a7 696E7436 		.ascii	"int64\000"
 2300      3400
 2301              	.LASF30:
 2302 02ad 4144435F 		.ascii	"ADC_SAR_SetResolution\000"
 2302      5341525F 
 2302      53657452 
 2302      65736F6C 
 2302      7574696F 
 2303              	.LASF18:
 2304 02c3 666C6F61 		.ascii	"float\000"
 2304      7400
 2305              	.LASF31:
 2306 02c9 706F7765 		.ascii	"power\000"
 2306      7200
 2307              	.LASF21:
 2308 02cf 72656738 		.ascii	"reg8\000"
 2308      00
 2309              	.LASF45:
 2310 02d4 4144435F 		.ascii	"ADC_SAR_CountsTo_mVolts\000"
 2310      5341525F 
 2310      436F756E 
 2310      7473546F 
 2310      5F6D566F 
 2311              	.LASF4:
 2312 02ec 756E7369 		.ascii	"unsigned char\000"
 2312      676E6564 
 2312      20636861 
 2312      7200
 2313              	.LASF38:
 2314 02fa 4144435F 		.ascii	"ADC_SAR_GetResult16\000"
 2314      5341525F 
 2314      47657452 
 2314      6573756C 
 2314      74313600 
 2315              	.LASF5:
 2316 030e 73686F72 		.ascii	"short int\000"
 2316      7420696E 
 2316      7400
 2317              	.LASF32:
 2318 0318 7265736F 		.ascii	"resolution\000"
 2318      6C757469 
 2318      6F6E00
 2319              	.LASF11:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 59


 2320 0323 63686172 		.ascii	"char\000"
 2320      00
 2321              	.LASF44:
 2322 0328 4144435F 		.ascii	"ADC_SAR_SetScaledGain\000"
 2322      5341525F 
 2322      53657453 
 2322      63616C65 
 2322      64476169 
 2323              	.LASF40:
 2324 033e 6F666673 		.ascii	"offset\000"
 2324      657400
 2325              	.LASF46:
 2326 0345 61646343 		.ascii	"adcCounts\000"
 2326      6F756E74 
 2326      7300
 2327              	.LASF57:
 2328 034f 4144435F 		.ascii	"ADC_SAR_shift\000"
 2328      5341525F 
 2328      73686966 
 2328      7400
 2329              	.LASF37:
 2330 035d 4144435F 		.ascii	"ADC_SAR_IsEndConversion\000"
 2330      5341525F 
 2330      4973456E 
 2330      64436F6E 
 2330      76657273 
 2331              	.LASF26:
 2332 0375 656E6162 		.ascii	"enableInterrupts\000"
 2332      6C65496E 
 2332      74657272 
 2332      75707473 
 2332      00
 2333              	.LASF29:
 2334 0386 4144435F 		.ascii	"ADC_SAR_SetPower\000"
 2334      5341525F 
 2334      53657450 
 2334      6F776572 
 2334      00
 2335              	.LASF36:
 2336 0397 73746174 		.ascii	"status\000"
 2336      757300
 2337              	.LASF15:
 2338 039e 696E7431 		.ascii	"int16\000"
 2338      3600
 2339              	.LASF59:
 2340 03a4 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC_SAR.c\000"
 2340      72617465 
 2340      645F536F 
 2340      75726365 
 2340      5C50536F 
 2341              	.LASF51:
 2342 03c5 4144435F 		.ascii	"ADC_SAR_CountsTo_Volts\000"
 2342      5341525F 
 2342      436F756E 
 2342      7473546F 
 2342      5F566F6C 
 2343              	.LASF33:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccVZOewa.s 			page 60


 2344 03dc 4144435F 		.ascii	"ADC_SAR_StartConvert\000"
 2344      5341525F 
 2344      53746172 
 2344      74436F6E 
 2344      76657274 
 2345              	.LASF25:
 2346 03f1 746D7052 		.ascii	"tmpReg\000"
 2346      656700
 2347              	.LASF27:
 2348 03f8 4144435F 		.ascii	"ADC_SAR_Enable\000"
 2348      5341525F 
 2348      456E6162 
 2348      6C6500
 2349              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

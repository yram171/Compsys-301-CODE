ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"isrRF_RX.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.isrRF_RX_Start,"ax",%progbits
  20              		.align	2
  21              		.global	isrRF_RX_Start
  22              		.thumb
  23              		.thumb_func
  24              		.type	isrRF_RX_Start, %function
  25              	isrRF_RX_Start:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\isrRF_RX.c"
   1:Generated_Source\PSoC5/isrRF_RX.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/isrRF_RX.c **** * File Name: isrRF_RX.c  
   3:Generated_Source\PSoC5/isrRF_RX.c **** * Version 1.71
   4:Generated_Source\PSoC5/isrRF_RX.c **** *
   5:Generated_Source\PSoC5/isrRF_RX.c **** *  Description:
   6:Generated_Source\PSoC5/isrRF_RX.c **** *   API for controlling the state of an interrupt.
   7:Generated_Source\PSoC5/isrRF_RX.c **** *
   8:Generated_Source\PSoC5/isrRF_RX.c **** *
   9:Generated_Source\PSoC5/isrRF_RX.c **** *  Note:
  10:Generated_Source\PSoC5/isrRF_RX.c **** *
  11:Generated_Source\PSoC5/isrRF_RX.c **** ********************************************************************************
  12:Generated_Source\PSoC5/isrRF_RX.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/isrRF_RX.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:Generated_Source\PSoC5/isrRF_RX.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:Generated_Source\PSoC5/isrRF_RX.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/isrRF_RX.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/isrRF_RX.c **** 
  18:Generated_Source\PSoC5/isrRF_RX.c **** 
  19:Generated_Source\PSoC5/isrRF_RX.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC5/isrRF_RX.c **** #include <CyLib.h>
  21:Generated_Source\PSoC5/isrRF_RX.c **** #include <isrRF_RX.h>
  22:Generated_Source\PSoC5/isrRF_RX.c **** 
  23:Generated_Source\PSoC5/isrRF_RX.c **** 
  24:Generated_Source\PSoC5/isrRF_RX.c **** #if !defined(isrRF_RX__REMOVED) /* Check for removal by optimization */
  25:Generated_Source\PSoC5/isrRF_RX.c **** 
  26:Generated_Source\PSoC5/isrRF_RX.c **** /*******************************************************************************
  27:Generated_Source\PSoC5/isrRF_RX.c **** *  Place your includes, defines and code here 
  28:Generated_Source\PSoC5/isrRF_RX.c **** ********************************************************************************/
  29:Generated_Source\PSoC5/isrRF_RX.c **** /* `#START isrRF_RX_intc` */
  30:Generated_Source\PSoC5/isrRF_RX.c **** extern uint8 flag_rx;
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 2


  31:Generated_Source\PSoC5/isrRF_RX.c **** /* `#END` */
  32:Generated_Source\PSoC5/isrRF_RX.c **** 
  33:Generated_Source\PSoC5/isrRF_RX.c **** #ifndef CYINT_IRQ_BASE
  34:Generated_Source\PSoC5/isrRF_RX.c **** #define CYINT_IRQ_BASE      16
  35:Generated_Source\PSoC5/isrRF_RX.c **** #endif /* CYINT_IRQ_BASE */
  36:Generated_Source\PSoC5/isrRF_RX.c **** #ifndef CYINT_VECT_TABLE
  37:Generated_Source\PSoC5/isrRF_RX.c **** #define CYINT_VECT_TABLE    ((cyisraddress **) CYREG_NVIC_VECT_OFFSET)
  38:Generated_Source\PSoC5/isrRF_RX.c **** #endif /* CYINT_VECT_TABLE */
  39:Generated_Source\PSoC5/isrRF_RX.c **** 
  40:Generated_Source\PSoC5/isrRF_RX.c **** /* Declared in startup, used to set unused interrupts to. */
  41:Generated_Source\PSoC5/isrRF_RX.c **** CY_ISR_PROTO(IntDefaultHandler);
  42:Generated_Source\PSoC5/isrRF_RX.c **** 
  43:Generated_Source\PSoC5/isrRF_RX.c **** 
  44:Generated_Source\PSoC5/isrRF_RX.c **** /*******************************************************************************
  45:Generated_Source\PSoC5/isrRF_RX.c **** * Function Name: isrRF_RX_Start
  46:Generated_Source\PSoC5/isrRF_RX.c **** ********************************************************************************
  47:Generated_Source\PSoC5/isrRF_RX.c **** *
  48:Generated_Source\PSoC5/isrRF_RX.c **** * Summary:
  49:Generated_Source\PSoC5/isrRF_RX.c **** *  Set up the interrupt and enable it. This function disables the interrupt, 
  50:Generated_Source\PSoC5/isrRF_RX.c **** *  sets the default interrupt vector, sets the priority from the value in the
  51:Generated_Source\PSoC5/isrRF_RX.c **** *  Design Wide Resources Interrupt Editor, then enables the interrupt to the 
  52:Generated_Source\PSoC5/isrRF_RX.c **** *  interrupt controller.
  53:Generated_Source\PSoC5/isrRF_RX.c **** *
  54:Generated_Source\PSoC5/isrRF_RX.c **** * Parameters:  
  55:Generated_Source\PSoC5/isrRF_RX.c **** *   None
  56:Generated_Source\PSoC5/isrRF_RX.c **** *
  57:Generated_Source\PSoC5/isrRF_RX.c **** * Return:
  58:Generated_Source\PSoC5/isrRF_RX.c **** *   None
  59:Generated_Source\PSoC5/isrRF_RX.c **** *
  60:Generated_Source\PSoC5/isrRF_RX.c **** *******************************************************************************/
  61:Generated_Source\PSoC5/isrRF_RX.c **** void isrRF_RX_Start(void)
  62:Generated_Source\PSoC5/isrRF_RX.c **** {
  28              		.loc 1 62 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  63:Generated_Source\PSoC5/isrRF_RX.c ****     /* For all we know the interrupt is active. */
  64:Generated_Source\PSoC5/isrRF_RX.c ****     isrRF_RX_Disable();
  38              		.loc 1 64 0
  39 0004 FFF7FEFF 		bl	isrRF_RX_Disable
  65:Generated_Source\PSoC5/isrRF_RX.c **** 
  66:Generated_Source\PSoC5/isrRF_RX.c ****     /* Set the ISR to point to the isrRF_RX Interrupt. */
  67:Generated_Source\PSoC5/isrRF_RX.c ****     isrRF_RX_SetVector(&isrRF_RX_Interrupt);
  40              		.loc 1 67 0
  41 0008 0448     		ldr	r0, .L2
  42 000a FFF7FEFF 		bl	isrRF_RX_SetVector
  68:Generated_Source\PSoC5/isrRF_RX.c **** 
  69:Generated_Source\PSoC5/isrRF_RX.c ****     /* Set the priority. */
  70:Generated_Source\PSoC5/isrRF_RX.c ****     isrRF_RX_SetPriority((uint8)isrRF_RX_INTC_PRIOR_NUMBER);
  43              		.loc 1 70 0
  44 000e 0720     		movs	r0, #7
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 3


  45 0010 FFF7FEFF 		bl	isrRF_RX_SetPriority
  71:Generated_Source\PSoC5/isrRF_RX.c **** 
  72:Generated_Source\PSoC5/isrRF_RX.c ****     /* Enable it. */
  73:Generated_Source\PSoC5/isrRF_RX.c ****     isrRF_RX_Enable();
  46              		.loc 1 73 0
  47 0014 FFF7FEFF 		bl	isrRF_RX_Enable
  74:Generated_Source\PSoC5/isrRF_RX.c **** }
  48              		.loc 1 74 0
  49 0018 00BF     		nop
  50 001a 80BD     		pop	{r7, pc}
  51              	.L3:
  52              		.align	2
  53              	.L2:
  54 001c 00000000 		.word	isrRF_RX_Interrupt
  55              		.cfi_endproc
  56              	.LFE0:
  57              		.size	isrRF_RX_Start, .-isrRF_RX_Start
  58              		.section	.text.isrRF_RX_StartEx,"ax",%progbits
  59              		.align	2
  60              		.global	isrRF_RX_StartEx
  61              		.thumb
  62              		.thumb_func
  63              		.type	isrRF_RX_StartEx, %function
  64              	isrRF_RX_StartEx:
  65              	.LFB1:
  75:Generated_Source\PSoC5/isrRF_RX.c **** 
  76:Generated_Source\PSoC5/isrRF_RX.c **** 
  77:Generated_Source\PSoC5/isrRF_RX.c **** /*******************************************************************************
  78:Generated_Source\PSoC5/isrRF_RX.c **** * Function Name: isrRF_RX_StartEx
  79:Generated_Source\PSoC5/isrRF_RX.c **** ********************************************************************************
  80:Generated_Source\PSoC5/isrRF_RX.c **** *
  81:Generated_Source\PSoC5/isrRF_RX.c **** * Summary:
  82:Generated_Source\PSoC5/isrRF_RX.c **** *  Sets up the interrupt and enables it. This function disables the interrupt,
  83:Generated_Source\PSoC5/isrRF_RX.c **** *  sets the interrupt vector based on the address passed in, sets the priority 
  84:Generated_Source\PSoC5/isrRF_RX.c **** *  from the value in the Design Wide Resources Interrupt Editor, then enables 
  85:Generated_Source\PSoC5/isrRF_RX.c **** *  the interrupt to the interrupt controller.
  86:Generated_Source\PSoC5/isrRF_RX.c **** *  
  87:Generated_Source\PSoC5/isrRF_RX.c **** *  When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
  88:Generated_Source\PSoC5/isrRF_RX.c **** *  used to provide consistent definition across compilers:
  89:Generated_Source\PSoC5/isrRF_RX.c **** *  
  90:Generated_Source\PSoC5/isrRF_RX.c **** *  Function definition example:
  91:Generated_Source\PSoC5/isrRF_RX.c **** *   CY_ISR(MyISR)
  92:Generated_Source\PSoC5/isrRF_RX.c **** *   {
  93:Generated_Source\PSoC5/isrRF_RX.c **** *   }
  94:Generated_Source\PSoC5/isrRF_RX.c **** *   Function prototype example:
  95:Generated_Source\PSoC5/isrRF_RX.c **** *   CY_ISR_PROTO(MyISR);
  96:Generated_Source\PSoC5/isrRF_RX.c **** *
  97:Generated_Source\PSoC5/isrRF_RX.c **** * Parameters:  
  98:Generated_Source\PSoC5/isrRF_RX.c **** *   address: Address of the ISR to set in the interrupt vector table.
  99:Generated_Source\PSoC5/isrRF_RX.c **** *
 100:Generated_Source\PSoC5/isrRF_RX.c **** * Return:
 101:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 102:Generated_Source\PSoC5/isrRF_RX.c **** *
 103:Generated_Source\PSoC5/isrRF_RX.c **** *******************************************************************************/
 104:Generated_Source\PSoC5/isrRF_RX.c **** void isrRF_RX_StartEx(cyisraddress address)
 105:Generated_Source\PSoC5/isrRF_RX.c **** {
  66              		.loc 1 105 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 4


  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 8
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 82B0     		sub	sp, sp, #8
  75              		.cfi_def_cfa_offset 16
  76 0004 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
  78 0006 7860     		str	r0, [r7, #4]
 106:Generated_Source\PSoC5/isrRF_RX.c ****     /* For all we know the interrupt is active. */
 107:Generated_Source\PSoC5/isrRF_RX.c ****     isrRF_RX_Disable();
  79              		.loc 1 107 0
  80 0008 FFF7FEFF 		bl	isrRF_RX_Disable
 108:Generated_Source\PSoC5/isrRF_RX.c **** 
 109:Generated_Source\PSoC5/isrRF_RX.c ****     /* Set the ISR to point to the isrRF_RX Interrupt. */
 110:Generated_Source\PSoC5/isrRF_RX.c ****     isrRF_RX_SetVector(address);
  81              		.loc 1 110 0
  82 000c 7868     		ldr	r0, [r7, #4]
  83 000e FFF7FEFF 		bl	isrRF_RX_SetVector
 111:Generated_Source\PSoC5/isrRF_RX.c **** 
 112:Generated_Source\PSoC5/isrRF_RX.c ****     /* Set the priority. */
 113:Generated_Source\PSoC5/isrRF_RX.c ****     isrRF_RX_SetPriority((uint8)isrRF_RX_INTC_PRIOR_NUMBER);
  84              		.loc 1 113 0
  85 0012 0720     		movs	r0, #7
  86 0014 FFF7FEFF 		bl	isrRF_RX_SetPriority
 114:Generated_Source\PSoC5/isrRF_RX.c **** 
 115:Generated_Source\PSoC5/isrRF_RX.c ****     /* Enable it. */
 116:Generated_Source\PSoC5/isrRF_RX.c ****     isrRF_RX_Enable();
  87              		.loc 1 116 0
  88 0018 FFF7FEFF 		bl	isrRF_RX_Enable
 117:Generated_Source\PSoC5/isrRF_RX.c **** }
  89              		.loc 1 117 0
  90 001c 00BF     		nop
  91 001e 0837     		adds	r7, r7, #8
  92              		.cfi_def_cfa_offset 8
  93 0020 BD46     		mov	sp, r7
  94              		.cfi_def_cfa_register 13
  95              		@ sp needed
  96 0022 80BD     		pop	{r7, pc}
  97              		.cfi_endproc
  98              	.LFE1:
  99              		.size	isrRF_RX_StartEx, .-isrRF_RX_StartEx
 100              		.section	.text.isrRF_RX_Stop,"ax",%progbits
 101              		.align	2
 102              		.global	isrRF_RX_Stop
 103              		.thumb
 104              		.thumb_func
 105              		.type	isrRF_RX_Stop, %function
 106              	isrRF_RX_Stop:
 107              	.LFB2:
 118:Generated_Source\PSoC5/isrRF_RX.c **** 
 119:Generated_Source\PSoC5/isrRF_RX.c **** 
 120:Generated_Source\PSoC5/isrRF_RX.c **** /*******************************************************************************
 121:Generated_Source\PSoC5/isrRF_RX.c **** * Function Name: isrRF_RX_Stop
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 5


 122:Generated_Source\PSoC5/isrRF_RX.c **** ********************************************************************************
 123:Generated_Source\PSoC5/isrRF_RX.c **** *
 124:Generated_Source\PSoC5/isrRF_RX.c **** * Summary:
 125:Generated_Source\PSoC5/isrRF_RX.c **** *   Disables and removes the interrupt.
 126:Generated_Source\PSoC5/isrRF_RX.c **** *
 127:Generated_Source\PSoC5/isrRF_RX.c **** * Parameters:  
 128:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 129:Generated_Source\PSoC5/isrRF_RX.c **** *
 130:Generated_Source\PSoC5/isrRF_RX.c **** * Return:
 131:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 132:Generated_Source\PSoC5/isrRF_RX.c **** *
 133:Generated_Source\PSoC5/isrRF_RX.c **** *******************************************************************************/
 134:Generated_Source\PSoC5/isrRF_RX.c **** void isrRF_RX_Stop(void)
 135:Generated_Source\PSoC5/isrRF_RX.c **** {
 108              		.loc 1 135 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 1, uses_anonymous_args = 0
 112 0000 80B5     		push	{r7, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 00AF     		add	r7, sp, #0
 117              		.cfi_def_cfa_register 7
 136:Generated_Source\PSoC5/isrRF_RX.c ****     /* Disable this interrupt. */
 137:Generated_Source\PSoC5/isrRF_RX.c ****     isrRF_RX_Disable();
 118              		.loc 1 137 0
 119 0004 FFF7FEFF 		bl	isrRF_RX_Disable
 138:Generated_Source\PSoC5/isrRF_RX.c **** 
 139:Generated_Source\PSoC5/isrRF_RX.c ****     /* Set the ISR to point to the passive one. */
 140:Generated_Source\PSoC5/isrRF_RX.c ****     isrRF_RX_SetVector(&IntDefaultHandler);
 120              		.loc 1 140 0
 121 0008 0248     		ldr	r0, .L6
 122 000a FFF7FEFF 		bl	isrRF_RX_SetVector
 141:Generated_Source\PSoC5/isrRF_RX.c **** }
 123              		.loc 1 141 0
 124 000e 00BF     		nop
 125 0010 80BD     		pop	{r7, pc}
 126              	.L7:
 127 0012 00BF     		.align	2
 128              	.L6:
 129 0014 00000000 		.word	IntDefaultHandler
 130              		.cfi_endproc
 131              	.LFE2:
 132              		.size	isrRF_RX_Stop, .-isrRF_RX_Stop
 133              		.section	.text.isrRF_RX_Interrupt,"ax",%progbits
 134              		.align	2
 135              		.global	isrRF_RX_Interrupt
 136              		.thumb
 137              		.thumb_func
 138              		.type	isrRF_RX_Interrupt, %function
 139              	isrRF_RX_Interrupt:
 140              	.LFB3:
 142:Generated_Source\PSoC5/isrRF_RX.c **** 
 143:Generated_Source\PSoC5/isrRF_RX.c **** 
 144:Generated_Source\PSoC5/isrRF_RX.c **** /*******************************************************************************
 145:Generated_Source\PSoC5/isrRF_RX.c **** * Function Name: isrRF_RX_Interrupt
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 6


 146:Generated_Source\PSoC5/isrRF_RX.c **** ********************************************************************************
 147:Generated_Source\PSoC5/isrRF_RX.c **** *
 148:Generated_Source\PSoC5/isrRF_RX.c **** * Summary:
 149:Generated_Source\PSoC5/isrRF_RX.c **** *   The default Interrupt Service Routine for isrRF_RX.
 150:Generated_Source\PSoC5/isrRF_RX.c **** *
 151:Generated_Source\PSoC5/isrRF_RX.c **** *   Add custom code between the coments to keep the next version of this file
 152:Generated_Source\PSoC5/isrRF_RX.c **** *   from over writting your code.
 153:Generated_Source\PSoC5/isrRF_RX.c **** *
 154:Generated_Source\PSoC5/isrRF_RX.c **** * Parameters:  
 155:Generated_Source\PSoC5/isrRF_RX.c **** *
 156:Generated_Source\PSoC5/isrRF_RX.c **** * Return:
 157:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 158:Generated_Source\PSoC5/isrRF_RX.c **** *
 159:Generated_Source\PSoC5/isrRF_RX.c **** *******************************************************************************/
 160:Generated_Source\PSoC5/isrRF_RX.c **** CY_ISR(isrRF_RX_Interrupt)
 161:Generated_Source\PSoC5/isrRF_RX.c **** {
 141              		.loc 1 161 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 80B4     		push	{r7}
 147              		.cfi_def_cfa_offset 4
 148              		.cfi_offset 7, -4
 149 0002 00AF     		add	r7, sp, #0
 150              		.cfi_def_cfa_register 7
 162:Generated_Source\PSoC5/isrRF_RX.c ****     #ifdef isrRF_RX_INTERRUPT_INTERRUPT_CALLBACK
 163:Generated_Source\PSoC5/isrRF_RX.c ****         isrRF_RX_Interrupt_InterruptCallback();
 164:Generated_Source\PSoC5/isrRF_RX.c ****     #endif /* isrRF_RX_INTERRUPT_INTERRUPT_CALLBACK */ 
 165:Generated_Source\PSoC5/isrRF_RX.c **** 
 166:Generated_Source\PSoC5/isrRF_RX.c ****     /*  Place your Interrupt code here. */
 167:Generated_Source\PSoC5/isrRF_RX.c ****     /* `#START isrRF_RX_Interrupt` */
 168:Generated_Source\PSoC5/isrRF_RX.c ****     flag_rx = 1;
 151              		.loc 1 168 0
 152 0004 034B     		ldr	r3, .L9
 153 0006 0122     		movs	r2, #1
 154 0008 1A70     		strb	r2, [r3]
 169:Generated_Source\PSoC5/isrRF_RX.c ****     /* `#END` */
 170:Generated_Source\PSoC5/isrRF_RX.c **** }
 155              		.loc 1 170 0
 156 000a 00BF     		nop
 157 000c BD46     		mov	sp, r7
 158              		.cfi_def_cfa_register 13
 159              		@ sp needed
 160 000e 80BC     		pop	{r7}
 161              		.cfi_restore 7
 162              		.cfi_def_cfa_offset 0
 163 0010 7047     		bx	lr
 164              	.L10:
 165 0012 00BF     		.align	2
 166              	.L9:
 167 0014 00000000 		.word	flag_rx
 168              		.cfi_endproc
 169              	.LFE3:
 170              		.size	isrRF_RX_Interrupt, .-isrRF_RX_Interrupt
 171              		.section	.text.isrRF_RX_SetVector,"ax",%progbits
 172              		.align	2
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 7


 173              		.global	isrRF_RX_SetVector
 174              		.thumb
 175              		.thumb_func
 176              		.type	isrRF_RX_SetVector, %function
 177              	isrRF_RX_SetVector:
 178              	.LFB4:
 171:Generated_Source\PSoC5/isrRF_RX.c **** 
 172:Generated_Source\PSoC5/isrRF_RX.c **** 
 173:Generated_Source\PSoC5/isrRF_RX.c **** /*******************************************************************************
 174:Generated_Source\PSoC5/isrRF_RX.c **** * Function Name: isrRF_RX_SetVector
 175:Generated_Source\PSoC5/isrRF_RX.c **** ********************************************************************************
 176:Generated_Source\PSoC5/isrRF_RX.c **** *
 177:Generated_Source\PSoC5/isrRF_RX.c **** * Summary:
 178:Generated_Source\PSoC5/isrRF_RX.c **** *   Change the ISR vector for the Interrupt. Note calling isrRF_RX_Start
 179:Generated_Source\PSoC5/isrRF_RX.c **** *   will override any effect this method would have had. To set the vector 
 180:Generated_Source\PSoC5/isrRF_RX.c **** *   before the component has been started use isrRF_RX_StartEx instead.
 181:Generated_Source\PSoC5/isrRF_RX.c **** * 
 182:Generated_Source\PSoC5/isrRF_RX.c **** *   When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 183:Generated_Source\PSoC5/isrRF_RX.c **** *   used to provide consistent definition across compilers:
 184:Generated_Source\PSoC5/isrRF_RX.c **** *
 185:Generated_Source\PSoC5/isrRF_RX.c **** *   Function definition example:
 186:Generated_Source\PSoC5/isrRF_RX.c **** *   CY_ISR(MyISR)
 187:Generated_Source\PSoC5/isrRF_RX.c **** *   {
 188:Generated_Source\PSoC5/isrRF_RX.c **** *   }
 189:Generated_Source\PSoC5/isrRF_RX.c **** *
 190:Generated_Source\PSoC5/isrRF_RX.c **** *   Function prototype example:
 191:Generated_Source\PSoC5/isrRF_RX.c **** *     CY_ISR_PROTO(MyISR);
 192:Generated_Source\PSoC5/isrRF_RX.c **** *
 193:Generated_Source\PSoC5/isrRF_RX.c **** * Parameters:
 194:Generated_Source\PSoC5/isrRF_RX.c **** *   address: Address of the ISR to set in the interrupt vector table.
 195:Generated_Source\PSoC5/isrRF_RX.c **** *
 196:Generated_Source\PSoC5/isrRF_RX.c **** * Return:
 197:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 198:Generated_Source\PSoC5/isrRF_RX.c **** *
 199:Generated_Source\PSoC5/isrRF_RX.c **** *******************************************************************************/
 200:Generated_Source\PSoC5/isrRF_RX.c **** void isrRF_RX_SetVector(cyisraddress address)
 201:Generated_Source\PSoC5/isrRF_RX.c **** {
 179              		.loc 1 201 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 16
 182              		@ frame_needed = 1, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184 0000 80B4     		push	{r7}
 185              		.cfi_def_cfa_offset 4
 186              		.cfi_offset 7, -4
 187 0002 85B0     		sub	sp, sp, #20
 188              		.cfi_def_cfa_offset 24
 189 0004 00AF     		add	r7, sp, #0
 190              		.cfi_def_cfa_register 7
 191 0006 7860     		str	r0, [r7, #4]
 202:Generated_Source\PSoC5/isrRF_RX.c ****     cyisraddress * ramVectorTable;
 203:Generated_Source\PSoC5/isrRF_RX.c **** 
 204:Generated_Source\PSoC5/isrRF_RX.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 192              		.loc 1 204 0
 193 0008 054B     		ldr	r3, .L12
 194 000a 1B68     		ldr	r3, [r3]
 195 000c FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 8


 205:Generated_Source\PSoC5/isrRF_RX.c **** 
 206:Generated_Source\PSoC5/isrRF_RX.c ****     ramVectorTable[CYINT_IRQ_BASE + (uint32)isrRF_RX__INTC_NUMBER] = address;
 196              		.loc 1 206 0
 197 000e FB68     		ldr	r3, [r7, #12]
 198 0010 5033     		adds	r3, r3, #80
 199 0012 7A68     		ldr	r2, [r7, #4]
 200 0014 1A60     		str	r2, [r3]
 207:Generated_Source\PSoC5/isrRF_RX.c **** }
 201              		.loc 1 207 0
 202 0016 00BF     		nop
 203 0018 1437     		adds	r7, r7, #20
 204              		.cfi_def_cfa_offset 4
 205 001a BD46     		mov	sp, r7
 206              		.cfi_def_cfa_register 13
 207              		@ sp needed
 208 001c 80BC     		pop	{r7}
 209              		.cfi_restore 7
 210              		.cfi_def_cfa_offset 0
 211 001e 7047     		bx	lr
 212              	.L13:
 213              		.align	2
 214              	.L12:
 215 0020 08ED00E0 		.word	-536810232
 216              		.cfi_endproc
 217              	.LFE4:
 218              		.size	isrRF_RX_SetVector, .-isrRF_RX_SetVector
 219              		.section	.text.isrRF_RX_GetVector,"ax",%progbits
 220              		.align	2
 221              		.global	isrRF_RX_GetVector
 222              		.thumb
 223              		.thumb_func
 224              		.type	isrRF_RX_GetVector, %function
 225              	isrRF_RX_GetVector:
 226              	.LFB5:
 208:Generated_Source\PSoC5/isrRF_RX.c **** 
 209:Generated_Source\PSoC5/isrRF_RX.c **** 
 210:Generated_Source\PSoC5/isrRF_RX.c **** /*******************************************************************************
 211:Generated_Source\PSoC5/isrRF_RX.c **** * Function Name: isrRF_RX_GetVector
 212:Generated_Source\PSoC5/isrRF_RX.c **** ********************************************************************************
 213:Generated_Source\PSoC5/isrRF_RX.c **** *
 214:Generated_Source\PSoC5/isrRF_RX.c **** * Summary:
 215:Generated_Source\PSoC5/isrRF_RX.c **** *   Gets the "address" of the current ISR vector for the Interrupt.
 216:Generated_Source\PSoC5/isrRF_RX.c **** *
 217:Generated_Source\PSoC5/isrRF_RX.c **** * Parameters:
 218:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 219:Generated_Source\PSoC5/isrRF_RX.c **** *
 220:Generated_Source\PSoC5/isrRF_RX.c **** * Return:
 221:Generated_Source\PSoC5/isrRF_RX.c **** *   Address of the ISR in the interrupt vector table.
 222:Generated_Source\PSoC5/isrRF_RX.c **** *
 223:Generated_Source\PSoC5/isrRF_RX.c **** *******************************************************************************/
 224:Generated_Source\PSoC5/isrRF_RX.c **** cyisraddress isrRF_RX_GetVector(void)
 225:Generated_Source\PSoC5/isrRF_RX.c **** {
 227              		.loc 1 225 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 8
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231              		@ link register save eliminated.
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 9


 232 0000 80B4     		push	{r7}
 233              		.cfi_def_cfa_offset 4
 234              		.cfi_offset 7, -4
 235 0002 83B0     		sub	sp, sp, #12
 236              		.cfi_def_cfa_offset 16
 237 0004 00AF     		add	r7, sp, #0
 238              		.cfi_def_cfa_register 7
 226:Generated_Source\PSoC5/isrRF_RX.c ****     cyisraddress * ramVectorTable;
 227:Generated_Source\PSoC5/isrRF_RX.c **** 
 228:Generated_Source\PSoC5/isrRF_RX.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 239              		.loc 1 228 0
 240 0006 054B     		ldr	r3, .L16
 241 0008 1B68     		ldr	r3, [r3]
 242 000a 7B60     		str	r3, [r7, #4]
 229:Generated_Source\PSoC5/isrRF_RX.c **** 
 230:Generated_Source\PSoC5/isrRF_RX.c ****     return ramVectorTable[CYINT_IRQ_BASE + (uint32)isrRF_RX__INTC_NUMBER];
 243              		.loc 1 230 0
 244 000c 7B68     		ldr	r3, [r7, #4]
 245 000e 1B6D     		ldr	r3, [r3, #80]
 231:Generated_Source\PSoC5/isrRF_RX.c **** }
 246              		.loc 1 231 0
 247 0010 1846     		mov	r0, r3
 248 0012 0C37     		adds	r7, r7, #12
 249              		.cfi_def_cfa_offset 4
 250 0014 BD46     		mov	sp, r7
 251              		.cfi_def_cfa_register 13
 252              		@ sp needed
 253 0016 80BC     		pop	{r7}
 254              		.cfi_restore 7
 255              		.cfi_def_cfa_offset 0
 256 0018 7047     		bx	lr
 257              	.L17:
 258 001a 00BF     		.align	2
 259              	.L16:
 260 001c 08ED00E0 		.word	-536810232
 261              		.cfi_endproc
 262              	.LFE5:
 263              		.size	isrRF_RX_GetVector, .-isrRF_RX_GetVector
 264              		.section	.text.isrRF_RX_SetPriority,"ax",%progbits
 265              		.align	2
 266              		.global	isrRF_RX_SetPriority
 267              		.thumb
 268              		.thumb_func
 269              		.type	isrRF_RX_SetPriority, %function
 270              	isrRF_RX_SetPriority:
 271              	.LFB6:
 232:Generated_Source\PSoC5/isrRF_RX.c **** 
 233:Generated_Source\PSoC5/isrRF_RX.c **** 
 234:Generated_Source\PSoC5/isrRF_RX.c **** /*******************************************************************************
 235:Generated_Source\PSoC5/isrRF_RX.c **** * Function Name: isrRF_RX_SetPriority
 236:Generated_Source\PSoC5/isrRF_RX.c **** ********************************************************************************
 237:Generated_Source\PSoC5/isrRF_RX.c **** *
 238:Generated_Source\PSoC5/isrRF_RX.c **** * Summary:
 239:Generated_Source\PSoC5/isrRF_RX.c **** *   Sets the Priority of the Interrupt. 
 240:Generated_Source\PSoC5/isrRF_RX.c **** *
 241:Generated_Source\PSoC5/isrRF_RX.c **** *   Note calling isrRF_RX_Start or isrRF_RX_StartEx will 
 242:Generated_Source\PSoC5/isrRF_RX.c **** *   override any effect this API would have had. This API should only be called
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 10


 243:Generated_Source\PSoC5/isrRF_RX.c **** *   after isrRF_RX_Start or isrRF_RX_StartEx has been called. 
 244:Generated_Source\PSoC5/isrRF_RX.c **** *   To set the initial priority for the component, use the Design-Wide Resources
 245:Generated_Source\PSoC5/isrRF_RX.c **** *   Interrupt Editor.
 246:Generated_Source\PSoC5/isrRF_RX.c **** *
 247:Generated_Source\PSoC5/isrRF_RX.c **** *   Note This API has no effect on Non-maskable interrupt NMI).
 248:Generated_Source\PSoC5/isrRF_RX.c **** *
 249:Generated_Source\PSoC5/isrRF_RX.c **** * Parameters:
 250:Generated_Source\PSoC5/isrRF_RX.c **** *   priority: Priority of the interrupt, 0 being the highest priority
 251:Generated_Source\PSoC5/isrRF_RX.c **** *             PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 252:Generated_Source\PSoC5/isrRF_RX.c **** *             PSoC 4: Priority is from 0 to 3.
 253:Generated_Source\PSoC5/isrRF_RX.c **** *
 254:Generated_Source\PSoC5/isrRF_RX.c **** * Return:
 255:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 256:Generated_Source\PSoC5/isrRF_RX.c **** *
 257:Generated_Source\PSoC5/isrRF_RX.c **** *******************************************************************************/
 258:Generated_Source\PSoC5/isrRF_RX.c **** void isrRF_RX_SetPriority(uint8 priority)
 259:Generated_Source\PSoC5/isrRF_RX.c **** {
 272              		.loc 1 259 0
 273              		.cfi_startproc
 274              		@ args = 0, pretend = 0, frame = 8
 275              		@ frame_needed = 1, uses_anonymous_args = 0
 276              		@ link register save eliminated.
 277 0000 80B4     		push	{r7}
 278              		.cfi_def_cfa_offset 4
 279              		.cfi_offset 7, -4
 280 0002 83B0     		sub	sp, sp, #12
 281              		.cfi_def_cfa_offset 16
 282 0004 00AF     		add	r7, sp, #0
 283              		.cfi_def_cfa_register 7
 284 0006 0346     		mov	r3, r0
 285 0008 FB71     		strb	r3, [r7, #7]
 260:Generated_Source\PSoC5/isrRF_RX.c ****     *isrRF_RX_INTC_PRIOR = priority << 5;
 286              		.loc 1 260 0
 287 000a 054A     		ldr	r2, .L19
 288 000c FB79     		ldrb	r3, [r7, #7]
 289 000e 5B01     		lsls	r3, r3, #5
 290 0010 DBB2     		uxtb	r3, r3
 291 0012 1370     		strb	r3, [r2]
 261:Generated_Source\PSoC5/isrRF_RX.c **** }
 292              		.loc 1 261 0
 293 0014 00BF     		nop
 294 0016 0C37     		adds	r7, r7, #12
 295              		.cfi_def_cfa_offset 4
 296 0018 BD46     		mov	sp, r7
 297              		.cfi_def_cfa_register 13
 298              		@ sp needed
 299 001a 80BC     		pop	{r7}
 300              		.cfi_restore 7
 301              		.cfi_def_cfa_offset 0
 302 001c 7047     		bx	lr
 303              	.L20:
 304 001e 00BF     		.align	2
 305              	.L19:
 306 0020 04E400E0 		.word	-536812540
 307              		.cfi_endproc
 308              	.LFE6:
 309              		.size	isrRF_RX_SetPriority, .-isrRF_RX_SetPriority
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 11


 310              		.section	.text.isrRF_RX_GetPriority,"ax",%progbits
 311              		.align	2
 312              		.global	isrRF_RX_GetPriority
 313              		.thumb
 314              		.thumb_func
 315              		.type	isrRF_RX_GetPriority, %function
 316              	isrRF_RX_GetPriority:
 317              	.LFB7:
 262:Generated_Source\PSoC5/isrRF_RX.c **** 
 263:Generated_Source\PSoC5/isrRF_RX.c **** 
 264:Generated_Source\PSoC5/isrRF_RX.c **** /*******************************************************************************
 265:Generated_Source\PSoC5/isrRF_RX.c **** * Function Name: isrRF_RX_GetPriority
 266:Generated_Source\PSoC5/isrRF_RX.c **** ********************************************************************************
 267:Generated_Source\PSoC5/isrRF_RX.c **** *
 268:Generated_Source\PSoC5/isrRF_RX.c **** * Summary:
 269:Generated_Source\PSoC5/isrRF_RX.c **** *   Gets the Priority of the Interrupt.
 270:Generated_Source\PSoC5/isrRF_RX.c **** *
 271:Generated_Source\PSoC5/isrRF_RX.c **** * Parameters:
 272:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 273:Generated_Source\PSoC5/isrRF_RX.c **** *
 274:Generated_Source\PSoC5/isrRF_RX.c **** * Return:
 275:Generated_Source\PSoC5/isrRF_RX.c **** *   Priority of the interrupt, 0 being the highest priority
 276:Generated_Source\PSoC5/isrRF_RX.c **** *    PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 277:Generated_Source\PSoC5/isrRF_RX.c **** *    PSoC 4: Priority is from 0 to 3.
 278:Generated_Source\PSoC5/isrRF_RX.c **** *
 279:Generated_Source\PSoC5/isrRF_RX.c **** *******************************************************************************/
 280:Generated_Source\PSoC5/isrRF_RX.c **** uint8 isrRF_RX_GetPriority(void)
 281:Generated_Source\PSoC5/isrRF_RX.c **** {
 318              		.loc 1 281 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 8
 321              		@ frame_needed = 1, uses_anonymous_args = 0
 322              		@ link register save eliminated.
 323 0000 80B4     		push	{r7}
 324              		.cfi_def_cfa_offset 4
 325              		.cfi_offset 7, -4
 326 0002 83B0     		sub	sp, sp, #12
 327              		.cfi_def_cfa_offset 16
 328 0004 00AF     		add	r7, sp, #0
 329              		.cfi_def_cfa_register 7
 282:Generated_Source\PSoC5/isrRF_RX.c ****     uint8 priority;
 283:Generated_Source\PSoC5/isrRF_RX.c **** 
 284:Generated_Source\PSoC5/isrRF_RX.c **** 
 285:Generated_Source\PSoC5/isrRF_RX.c ****     priority = *isrRF_RX_INTC_PRIOR >> 5;
 330              		.loc 1 285 0
 331 0006 054B     		ldr	r3, .L23
 332 0008 1B78     		ldrb	r3, [r3]
 333 000a DBB2     		uxtb	r3, r3
 334 000c 5B09     		lsrs	r3, r3, #5
 335 000e FB71     		strb	r3, [r7, #7]
 286:Generated_Source\PSoC5/isrRF_RX.c **** 
 287:Generated_Source\PSoC5/isrRF_RX.c ****     return priority;
 336              		.loc 1 287 0
 337 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 288:Generated_Source\PSoC5/isrRF_RX.c **** }
 338              		.loc 1 288 0
 339 0012 1846     		mov	r0, r3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 12


 340 0014 0C37     		adds	r7, r7, #12
 341              		.cfi_def_cfa_offset 4
 342 0016 BD46     		mov	sp, r7
 343              		.cfi_def_cfa_register 13
 344              		@ sp needed
 345 0018 80BC     		pop	{r7}
 346              		.cfi_restore 7
 347              		.cfi_def_cfa_offset 0
 348 001a 7047     		bx	lr
 349              	.L24:
 350              		.align	2
 351              	.L23:
 352 001c 04E400E0 		.word	-536812540
 353              		.cfi_endproc
 354              	.LFE7:
 355              		.size	isrRF_RX_GetPriority, .-isrRF_RX_GetPriority
 356              		.section	.text.isrRF_RX_Enable,"ax",%progbits
 357              		.align	2
 358              		.global	isrRF_RX_Enable
 359              		.thumb
 360              		.thumb_func
 361              		.type	isrRF_RX_Enable, %function
 362              	isrRF_RX_Enable:
 363              	.LFB8:
 289:Generated_Source\PSoC5/isrRF_RX.c **** 
 290:Generated_Source\PSoC5/isrRF_RX.c **** 
 291:Generated_Source\PSoC5/isrRF_RX.c **** /*******************************************************************************
 292:Generated_Source\PSoC5/isrRF_RX.c **** * Function Name: isrRF_RX_Enable
 293:Generated_Source\PSoC5/isrRF_RX.c **** ********************************************************************************
 294:Generated_Source\PSoC5/isrRF_RX.c **** *
 295:Generated_Source\PSoC5/isrRF_RX.c **** * Summary:
 296:Generated_Source\PSoC5/isrRF_RX.c **** *   Enables the interrupt to the interrupt controller. Do not call this function
 297:Generated_Source\PSoC5/isrRF_RX.c **** *   unless ISR_Start() has been called or the functionality of the ISR_Start() 
 298:Generated_Source\PSoC5/isrRF_RX.c **** *   function, which sets the vector and the priority, has been called.
 299:Generated_Source\PSoC5/isrRF_RX.c **** *
 300:Generated_Source\PSoC5/isrRF_RX.c **** * Parameters:
 301:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 302:Generated_Source\PSoC5/isrRF_RX.c **** *
 303:Generated_Source\PSoC5/isrRF_RX.c **** * Return:
 304:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 305:Generated_Source\PSoC5/isrRF_RX.c **** *
 306:Generated_Source\PSoC5/isrRF_RX.c **** *******************************************************************************/
 307:Generated_Source\PSoC5/isrRF_RX.c **** void isrRF_RX_Enable(void)
 308:Generated_Source\PSoC5/isrRF_RX.c **** {
 364              		.loc 1 308 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 0
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369 0000 80B4     		push	{r7}
 370              		.cfi_def_cfa_offset 4
 371              		.cfi_offset 7, -4
 372 0002 00AF     		add	r7, sp, #0
 373              		.cfi_def_cfa_register 7
 309:Generated_Source\PSoC5/isrRF_RX.c ****     /* Enable the general interrupt. */
 310:Generated_Source\PSoC5/isrRF_RX.c ****     *isrRF_RX_INTC_SET_EN = isrRF_RX__INTC_MASK;
 374              		.loc 1 310 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 13


 375 0004 034B     		ldr	r3, .L26
 376 0006 1022     		movs	r2, #16
 377 0008 1A60     		str	r2, [r3]
 311:Generated_Source\PSoC5/isrRF_RX.c **** }
 378              		.loc 1 311 0
 379 000a 00BF     		nop
 380 000c BD46     		mov	sp, r7
 381              		.cfi_def_cfa_register 13
 382              		@ sp needed
 383 000e 80BC     		pop	{r7}
 384              		.cfi_restore 7
 385              		.cfi_def_cfa_offset 0
 386 0010 7047     		bx	lr
 387              	.L27:
 388 0012 00BF     		.align	2
 389              	.L26:
 390 0014 00E100E0 		.word	-536813312
 391              		.cfi_endproc
 392              	.LFE8:
 393              		.size	isrRF_RX_Enable, .-isrRF_RX_Enable
 394              		.section	.text.isrRF_RX_GetState,"ax",%progbits
 395              		.align	2
 396              		.global	isrRF_RX_GetState
 397              		.thumb
 398              		.thumb_func
 399              		.type	isrRF_RX_GetState, %function
 400              	isrRF_RX_GetState:
 401              	.LFB9:
 312:Generated_Source\PSoC5/isrRF_RX.c **** 
 313:Generated_Source\PSoC5/isrRF_RX.c **** 
 314:Generated_Source\PSoC5/isrRF_RX.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/isrRF_RX.c **** * Function Name: isrRF_RX_GetState
 316:Generated_Source\PSoC5/isrRF_RX.c **** ********************************************************************************
 317:Generated_Source\PSoC5/isrRF_RX.c **** *
 318:Generated_Source\PSoC5/isrRF_RX.c **** * Summary:
 319:Generated_Source\PSoC5/isrRF_RX.c **** *   Gets the state (enabled, disabled) of the Interrupt.
 320:Generated_Source\PSoC5/isrRF_RX.c **** *
 321:Generated_Source\PSoC5/isrRF_RX.c **** * Parameters:
 322:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 323:Generated_Source\PSoC5/isrRF_RX.c **** *
 324:Generated_Source\PSoC5/isrRF_RX.c **** * Return:
 325:Generated_Source\PSoC5/isrRF_RX.c **** *   1 if enabled, 0 if disabled.
 326:Generated_Source\PSoC5/isrRF_RX.c **** *
 327:Generated_Source\PSoC5/isrRF_RX.c **** *******************************************************************************/
 328:Generated_Source\PSoC5/isrRF_RX.c **** uint8 isrRF_RX_GetState(void)
 329:Generated_Source\PSoC5/isrRF_RX.c **** {
 402              		.loc 1 329 0
 403              		.cfi_startproc
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 1, uses_anonymous_args = 0
 406              		@ link register save eliminated.
 407 0000 80B4     		push	{r7}
 408              		.cfi_def_cfa_offset 4
 409              		.cfi_offset 7, -4
 410 0002 00AF     		add	r7, sp, #0
 411              		.cfi_def_cfa_register 7
 330:Generated_Source\PSoC5/isrRF_RX.c ****     /* Get the state of the general interrupt. */
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 14


 331:Generated_Source\PSoC5/isrRF_RX.c ****     return ((*isrRF_RX_INTC_SET_EN & (uint32)isrRF_RX__INTC_MASK) != 0u) ? 1u:0u;
 412              		.loc 1 331 0
 413 0004 064B     		ldr	r3, .L32
 414 0006 1B68     		ldr	r3, [r3]
 415 0008 03F01003 		and	r3, r3, #16
 416 000c 002B     		cmp	r3, #0
 417 000e 01D0     		beq	.L29
 418              		.loc 1 331 0 is_stmt 0 discriminator 1
 419 0010 0123     		movs	r3, #1
 420 0012 00E0     		b	.L30
 421              	.L29:
 422              		.loc 1 331 0 discriminator 2
 423 0014 0023     		movs	r3, #0
 424              	.L30:
 332:Generated_Source\PSoC5/isrRF_RX.c **** }
 425              		.loc 1 332 0 is_stmt 1 discriminator 4
 426 0016 1846     		mov	r0, r3
 427 0018 BD46     		mov	sp, r7
 428              		.cfi_def_cfa_register 13
 429              		@ sp needed
 430 001a 80BC     		pop	{r7}
 431              		.cfi_restore 7
 432              		.cfi_def_cfa_offset 0
 433 001c 7047     		bx	lr
 434              	.L33:
 435 001e 00BF     		.align	2
 436              	.L32:
 437 0020 00E100E0 		.word	-536813312
 438              		.cfi_endproc
 439              	.LFE9:
 440              		.size	isrRF_RX_GetState, .-isrRF_RX_GetState
 441              		.section	.text.isrRF_RX_Disable,"ax",%progbits
 442              		.align	2
 443              		.global	isrRF_RX_Disable
 444              		.thumb
 445              		.thumb_func
 446              		.type	isrRF_RX_Disable, %function
 447              	isrRF_RX_Disable:
 448              	.LFB10:
 333:Generated_Source\PSoC5/isrRF_RX.c **** 
 334:Generated_Source\PSoC5/isrRF_RX.c **** 
 335:Generated_Source\PSoC5/isrRF_RX.c **** /*******************************************************************************
 336:Generated_Source\PSoC5/isrRF_RX.c **** * Function Name: isrRF_RX_Disable
 337:Generated_Source\PSoC5/isrRF_RX.c **** ********************************************************************************
 338:Generated_Source\PSoC5/isrRF_RX.c **** *
 339:Generated_Source\PSoC5/isrRF_RX.c **** * Summary:
 340:Generated_Source\PSoC5/isrRF_RX.c **** *   Disables the Interrupt in the interrupt controller.
 341:Generated_Source\PSoC5/isrRF_RX.c **** *
 342:Generated_Source\PSoC5/isrRF_RX.c **** * Parameters:
 343:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 344:Generated_Source\PSoC5/isrRF_RX.c **** *
 345:Generated_Source\PSoC5/isrRF_RX.c **** * Return:
 346:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 347:Generated_Source\PSoC5/isrRF_RX.c **** *
 348:Generated_Source\PSoC5/isrRF_RX.c **** *******************************************************************************/
 349:Generated_Source\PSoC5/isrRF_RX.c **** void isrRF_RX_Disable(void)
 350:Generated_Source\PSoC5/isrRF_RX.c **** {
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 15


 449              		.loc 1 350 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 1, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 454 0000 80B4     		push	{r7}
 455              		.cfi_def_cfa_offset 4
 456              		.cfi_offset 7, -4
 457 0002 00AF     		add	r7, sp, #0
 458              		.cfi_def_cfa_register 7
 351:Generated_Source\PSoC5/isrRF_RX.c ****     /* Disable the general interrupt. */
 352:Generated_Source\PSoC5/isrRF_RX.c ****     *isrRF_RX_INTC_CLR_EN = isrRF_RX__INTC_MASK;
 459              		.loc 1 352 0
 460 0004 034B     		ldr	r3, .L35
 461 0006 1022     		movs	r2, #16
 462 0008 1A60     		str	r2, [r3]
 353:Generated_Source\PSoC5/isrRF_RX.c **** }
 463              		.loc 1 353 0
 464 000a 00BF     		nop
 465 000c BD46     		mov	sp, r7
 466              		.cfi_def_cfa_register 13
 467              		@ sp needed
 468 000e 80BC     		pop	{r7}
 469              		.cfi_restore 7
 470              		.cfi_def_cfa_offset 0
 471 0010 7047     		bx	lr
 472              	.L36:
 473 0012 00BF     		.align	2
 474              	.L35:
 475 0014 80E100E0 		.word	-536813184
 476              		.cfi_endproc
 477              	.LFE10:
 478              		.size	isrRF_RX_Disable, .-isrRF_RX_Disable
 479              		.section	.text.isrRF_RX_SetPending,"ax",%progbits
 480              		.align	2
 481              		.global	isrRF_RX_SetPending
 482              		.thumb
 483              		.thumb_func
 484              		.type	isrRF_RX_SetPending, %function
 485              	isrRF_RX_SetPending:
 486              	.LFB11:
 354:Generated_Source\PSoC5/isrRF_RX.c **** 
 355:Generated_Source\PSoC5/isrRF_RX.c **** 
 356:Generated_Source\PSoC5/isrRF_RX.c **** /*******************************************************************************
 357:Generated_Source\PSoC5/isrRF_RX.c **** * Function Name: isrRF_RX_SetPending
 358:Generated_Source\PSoC5/isrRF_RX.c **** ********************************************************************************
 359:Generated_Source\PSoC5/isrRF_RX.c **** *
 360:Generated_Source\PSoC5/isrRF_RX.c **** * Summary:
 361:Generated_Source\PSoC5/isrRF_RX.c **** *   Causes the Interrupt to enter the pending state, a software method of
 362:Generated_Source\PSoC5/isrRF_RX.c **** *   generating the interrupt.
 363:Generated_Source\PSoC5/isrRF_RX.c **** *
 364:Generated_Source\PSoC5/isrRF_RX.c **** * Parameters:
 365:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 366:Generated_Source\PSoC5/isrRF_RX.c **** *
 367:Generated_Source\PSoC5/isrRF_RX.c **** * Return:
 368:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 369:Generated_Source\PSoC5/isrRF_RX.c **** *
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 16


 370:Generated_Source\PSoC5/isrRF_RX.c **** * Side Effects:
 371:Generated_Source\PSoC5/isrRF_RX.c **** *   If interrupts are enabled and the interrupt is set up properly, the ISR is
 372:Generated_Source\PSoC5/isrRF_RX.c **** *   entered (depending on the priority of this interrupt and other pending 
 373:Generated_Source\PSoC5/isrRF_RX.c **** *   interrupts).
 374:Generated_Source\PSoC5/isrRF_RX.c **** *
 375:Generated_Source\PSoC5/isrRF_RX.c **** *******************************************************************************/
 376:Generated_Source\PSoC5/isrRF_RX.c **** void isrRF_RX_SetPending(void)
 377:Generated_Source\PSoC5/isrRF_RX.c **** {
 487              		.loc 1 377 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 1, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492 0000 80B4     		push	{r7}
 493              		.cfi_def_cfa_offset 4
 494              		.cfi_offset 7, -4
 495 0002 00AF     		add	r7, sp, #0
 496              		.cfi_def_cfa_register 7
 378:Generated_Source\PSoC5/isrRF_RX.c ****     *isrRF_RX_INTC_SET_PD = isrRF_RX__INTC_MASK;
 497              		.loc 1 378 0
 498 0004 034B     		ldr	r3, .L38
 499 0006 1022     		movs	r2, #16
 500 0008 1A60     		str	r2, [r3]
 379:Generated_Source\PSoC5/isrRF_RX.c **** }
 501              		.loc 1 379 0
 502 000a 00BF     		nop
 503 000c BD46     		mov	sp, r7
 504              		.cfi_def_cfa_register 13
 505              		@ sp needed
 506 000e 80BC     		pop	{r7}
 507              		.cfi_restore 7
 508              		.cfi_def_cfa_offset 0
 509 0010 7047     		bx	lr
 510              	.L39:
 511 0012 00BF     		.align	2
 512              	.L38:
 513 0014 00E200E0 		.word	-536813056
 514              		.cfi_endproc
 515              	.LFE11:
 516              		.size	isrRF_RX_SetPending, .-isrRF_RX_SetPending
 517              		.section	.text.isrRF_RX_ClearPending,"ax",%progbits
 518              		.align	2
 519              		.global	isrRF_RX_ClearPending
 520              		.thumb
 521              		.thumb_func
 522              		.type	isrRF_RX_ClearPending, %function
 523              	isrRF_RX_ClearPending:
 524              	.LFB12:
 380:Generated_Source\PSoC5/isrRF_RX.c **** 
 381:Generated_Source\PSoC5/isrRF_RX.c **** 
 382:Generated_Source\PSoC5/isrRF_RX.c **** /*******************************************************************************
 383:Generated_Source\PSoC5/isrRF_RX.c **** * Function Name: isrRF_RX_ClearPending
 384:Generated_Source\PSoC5/isrRF_RX.c **** ********************************************************************************
 385:Generated_Source\PSoC5/isrRF_RX.c **** *
 386:Generated_Source\PSoC5/isrRF_RX.c **** * Summary:
 387:Generated_Source\PSoC5/isrRF_RX.c **** *   Clears a pending interrupt in the interrupt controller.
 388:Generated_Source\PSoC5/isrRF_RX.c **** *
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 17


 389:Generated_Source\PSoC5/isrRF_RX.c **** *   Note Some interrupt sources are clear-on-read and require the block 
 390:Generated_Source\PSoC5/isrRF_RX.c **** *   interrupt/status register to be read/cleared with the appropriate block API 
 391:Generated_Source\PSoC5/isrRF_RX.c **** *   (GPIO, UART, and so on). Otherwise the ISR will continue to remain in 
 392:Generated_Source\PSoC5/isrRF_RX.c **** *   pending state even though the interrupt itself is cleared using this API.
 393:Generated_Source\PSoC5/isrRF_RX.c **** *
 394:Generated_Source\PSoC5/isrRF_RX.c **** * Parameters:
 395:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 396:Generated_Source\PSoC5/isrRF_RX.c **** *
 397:Generated_Source\PSoC5/isrRF_RX.c **** * Return:
 398:Generated_Source\PSoC5/isrRF_RX.c **** *   None
 399:Generated_Source\PSoC5/isrRF_RX.c **** *
 400:Generated_Source\PSoC5/isrRF_RX.c **** *******************************************************************************/
 401:Generated_Source\PSoC5/isrRF_RX.c **** void isrRF_RX_ClearPending(void)
 402:Generated_Source\PSoC5/isrRF_RX.c **** {
 525              		.loc 1 402 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 1, uses_anonymous_args = 0
 529              		@ link register save eliminated.
 530 0000 80B4     		push	{r7}
 531              		.cfi_def_cfa_offset 4
 532              		.cfi_offset 7, -4
 533 0002 00AF     		add	r7, sp, #0
 534              		.cfi_def_cfa_register 7
 403:Generated_Source\PSoC5/isrRF_RX.c ****     *isrRF_RX_INTC_CLR_PD = isrRF_RX__INTC_MASK;
 535              		.loc 1 403 0
 536 0004 034B     		ldr	r3, .L41
 537 0006 1022     		movs	r2, #16
 538 0008 1A60     		str	r2, [r3]
 404:Generated_Source\PSoC5/isrRF_RX.c **** }
 539              		.loc 1 404 0
 540 000a 00BF     		nop
 541 000c BD46     		mov	sp, r7
 542              		.cfi_def_cfa_register 13
 543              		@ sp needed
 544 000e 80BC     		pop	{r7}
 545              		.cfi_restore 7
 546              		.cfi_def_cfa_offset 0
 547 0010 7047     		bx	lr
 548              	.L42:
 549 0012 00BF     		.align	2
 550              	.L41:
 551 0014 80E200E0 		.word	-536812928
 552              		.cfi_endproc
 553              	.LFE12:
 554              		.size	isrRF_RX_ClearPending, .-isrRF_RX_ClearPending
 555              		.text
 556              	.Letext0:
 557              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 558              		.section	.debug_info,"",%progbits
 559              	.Ldebug_info0:
 560 0000 48020000 		.4byte	0x248
 561 0004 0400     		.2byte	0x4
 562 0006 00000000 		.4byte	.Ldebug_abbrev0
 563 000a 04       		.byte	0x4
 564 000b 01       		.uleb128 0x1
 565 000c 6A000000 		.4byte	.LASF34
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 18


 566 0010 0C       		.byte	0xc
 567 0011 00000000 		.4byte	.LASF35
 568 0015 22000000 		.4byte	.LASF36
 569 0019 00000000 		.4byte	.Ldebug_ranges0+0
 570 001d 00000000 		.4byte	0
 571 0021 00000000 		.4byte	.Ldebug_line0
 572 0025 02       		.uleb128 0x2
 573 0026 04       		.byte	0x4
 574 0027 05       		.byte	0x5
 575 0028 696E7400 		.ascii	"int\000"
 576 002c 03       		.uleb128 0x3
 577 002d 04       		.byte	0x4
 578 002e 07       		.byte	0x7
 579 002f E2010000 		.4byte	.LASF0
 580 0033 03       		.uleb128 0x3
 581 0034 08       		.byte	0x8
 582 0035 05       		.byte	0x5
 583 0036 4A020000 		.4byte	.LASF1
 584 003a 03       		.uleb128 0x3
 585 003b 08       		.byte	0x8
 586 003c 04       		.byte	0x4
 587 003d A7020000 		.4byte	.LASF2
 588 0041 03       		.uleb128 0x3
 589 0042 01       		.byte	0x1
 590 0043 06       		.byte	0x6
 591 0044 C4020000 		.4byte	.LASF3
 592 0048 03       		.uleb128 0x3
 593 0049 01       		.byte	0x1
 594 004a 08       		.byte	0x8
 595 004b 45010000 		.4byte	.LASF4
 596 004f 03       		.uleb128 0x3
 597 0050 02       		.byte	0x2
 598 0051 05       		.byte	0x5
 599 0052 7D020000 		.4byte	.LASF5
 600 0056 03       		.uleb128 0x3
 601 0057 02       		.byte	0x2
 602 0058 07       		.byte	0x7
 603 0059 FE000000 		.4byte	.LASF6
 604 005d 03       		.uleb128 0x3
 605 005e 04       		.byte	0x4
 606 005f 05       		.byte	0x5
 607 0060 96020000 		.4byte	.LASF7
 608 0064 03       		.uleb128 0x3
 609 0065 04       		.byte	0x4
 610 0066 07       		.byte	0x7
 611 0067 5E010000 		.4byte	.LASF8
 612 006b 03       		.uleb128 0x3
 613 006c 08       		.byte	0x8
 614 006d 07       		.byte	0x7
 615 006e F7010000 		.4byte	.LASF9
 616 0072 03       		.uleb128 0x3
 617 0073 04       		.byte	0x4
 618 0074 07       		.byte	0x7
 619 0075 41020000 		.4byte	.LASF10
 620 0079 03       		.uleb128 0x3
 621 007a 01       		.byte	0x1
 622 007b 08       		.byte	0x8
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 19


 623 007c 11010000 		.4byte	.LASF11
 624 0080 04       		.uleb128 0x4
 625 0081 04       		.byte	0x4
 626 0082 86000000 		.4byte	0x86
 627 0086 05       		.uleb128 0x5
 628 0087 06       		.uleb128 0x6
 629 0088 70010000 		.4byte	.LASF12
 630 008c 02       		.byte	0x2
 631 008d E701     		.2byte	0x1e7
 632 008f 48000000 		.4byte	0x48
 633 0093 06       		.uleb128 0x6
 634 0094 DB010000 		.4byte	.LASF13
 635 0098 02       		.byte	0x2
 636 0099 E901     		.2byte	0x1e9
 637 009b 64000000 		.4byte	0x64
 638 009f 03       		.uleb128 0x3
 639 00a0 04       		.byte	0x4
 640 00a1 04       		.byte	0x4
 641 00a2 F8000000 		.4byte	.LASF14
 642 00a6 03       		.uleb128 0x3
 643 00a7 08       		.byte	0x8
 644 00a8 04       		.byte	0x4
 645 00a9 16010000 		.4byte	.LASF15
 646 00ad 06       		.uleb128 0x6
 647 00ae 59010000 		.4byte	.LASF16
 648 00b2 02       		.byte	0x2
 649 00b3 9102     		.2byte	0x291
 650 00b5 B9000000 		.4byte	0xb9
 651 00b9 07       		.uleb128 0x7
 652 00ba 87000000 		.4byte	0x87
 653 00be 06       		.uleb128 0x6
 654 00bf 53010000 		.4byte	.LASF17
 655 00c3 02       		.byte	0x2
 656 00c4 9302     		.2byte	0x293
 657 00c6 CA000000 		.4byte	0xca
 658 00ca 07       		.uleb128 0x7
 659 00cb 93000000 		.4byte	0x93
 660 00cf 06       		.uleb128 0x6
 661 00d0 21020000 		.4byte	.LASF18
 662 00d4 02       		.byte	0x2
 663 00d5 A302     		.2byte	0x2a3
 664 00d7 80000000 		.4byte	0x80
 665 00db 08       		.uleb128 0x8
 666 00dc 87020000 		.4byte	.LASF19
 667 00e0 01       		.byte	0x1
 668 00e1 3D       		.byte	0x3d
 669 00e2 00000000 		.4byte	.LFB0
 670 00e6 20000000 		.4byte	.LFE0-.LFB0
 671 00ea 01       		.uleb128 0x1
 672 00eb 9C       		.byte	0x9c
 673 00ec 09       		.uleb128 0x9
 674 00ed 8F010000 		.4byte	.LASF22
 675 00f1 01       		.byte	0x1
 676 00f2 68       		.byte	0x68
 677 00f3 00000000 		.4byte	.LFB1
 678 00f7 24000000 		.4byte	.LFE1-.LFB1
 679 00fb 01       		.uleb128 0x1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 20


 680 00fc 9C       		.byte	0x9c
 681 00fd 10010000 		.4byte	0x110
 682 0101 0A       		.uleb128 0xa
 683 0102 EF010000 		.4byte	.LASF24
 684 0106 01       		.byte	0x1
 685 0107 68       		.byte	0x68
 686 0108 CF000000 		.4byte	0xcf
 687 010c 02       		.uleb128 0x2
 688 010d 91       		.byte	0x91
 689 010e 74       		.sleb128 -12
 690 010f 00       		.byte	0
 691 0110 08       		.uleb128 0x8
 692 0111 D0020000 		.4byte	.LASF20
 693 0115 01       		.byte	0x1
 694 0116 86       		.byte	0x86
 695 0117 00000000 		.4byte	.LFB2
 696 011b 18000000 		.4byte	.LFE2-.LFB2
 697 011f 01       		.uleb128 0x1
 698 0120 9C       		.byte	0x9c
 699 0121 0B       		.uleb128 0xb
 700 0122 2E020000 		.4byte	.LASF21
 701 0126 01       		.byte	0x1
 702 0127 A0       		.byte	0xa0
 703 0128 00000000 		.4byte	.LFB3
 704 012c 18000000 		.4byte	.LFE3-.LFB3
 705 0130 01       		.uleb128 0x1
 706 0131 9C       		.byte	0x9c
 707 0132 0C       		.uleb128 0xc
 708 0133 32010000 		.4byte	.LASF23
 709 0137 01       		.byte	0x1
 710 0138 C8       		.byte	0xc8
 711 0139 00000000 		.4byte	.LFB4
 712 013d 24000000 		.4byte	.LFE4-.LFB4
 713 0141 01       		.uleb128 0x1
 714 0142 9C       		.byte	0x9c
 715 0143 64010000 		.4byte	0x164
 716 0147 0A       		.uleb128 0xa
 717 0148 EF010000 		.4byte	.LASF24
 718 014c 01       		.byte	0x1
 719 014d C8       		.byte	0xc8
 720 014e CF000000 		.4byte	0xcf
 721 0152 02       		.uleb128 0x2
 722 0153 91       		.byte	0x91
 723 0154 6C       		.sleb128 -20
 724 0155 0D       		.uleb128 0xd
 725 0156 6E020000 		.4byte	.LASF25
 726 015a 01       		.byte	0x1
 727 015b CA       		.byte	0xca
 728 015c 64010000 		.4byte	0x164
 729 0160 02       		.uleb128 0x2
 730 0161 91       		.byte	0x91
 731 0162 74       		.sleb128 -12
 732 0163 00       		.byte	0
 733 0164 04       		.uleb128 0x4
 734 0165 04       		.byte	0x4
 735 0166 CF000000 		.4byte	0xcf
 736 016a 0E       		.uleb128 0xe
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 21


 737 016b 0E020000 		.4byte	.LASF28
 738 016f 01       		.byte	0x1
 739 0170 E0       		.byte	0xe0
 740 0171 CF000000 		.4byte	0xcf
 741 0175 00000000 		.4byte	.LFB5
 742 0179 20000000 		.4byte	.LFE5-.LFB5
 743 017d 01       		.uleb128 0x1
 744 017e 9C       		.byte	0x9c
 745 017f 92010000 		.4byte	0x192
 746 0183 0D       		.uleb128 0xd
 747 0184 6E020000 		.4byte	.LASF25
 748 0188 01       		.byte	0x1
 749 0189 E2       		.byte	0xe2
 750 018a 64010000 		.4byte	0x164
 751 018e 02       		.uleb128 0x2
 752 018f 91       		.byte	0x91
 753 0190 74       		.sleb128 -12
 754 0191 00       		.byte	0
 755 0192 0F       		.uleb128 0xf
 756 0193 B4010000 		.4byte	.LASF26
 757 0197 01       		.byte	0x1
 758 0198 0201     		.2byte	0x102
 759 019a 00000000 		.4byte	.LFB6
 760 019e 24000000 		.4byte	.LFE6-.LFB6
 761 01a2 01       		.uleb128 0x1
 762 01a3 9C       		.byte	0x9c
 763 01a4 B8010000 		.4byte	0x1b8
 764 01a8 10       		.uleb128 0x10
 765 01a9 86010000 		.4byte	.LASF27
 766 01ad 01       		.byte	0x1
 767 01ae 0201     		.2byte	0x102
 768 01b0 87000000 		.4byte	0x87
 769 01b4 02       		.uleb128 0x2
 770 01b5 91       		.byte	0x91
 771 01b6 77       		.sleb128 -9
 772 01b7 00       		.byte	0
 773 01b8 11       		.uleb128 0x11
 774 01b9 1D010000 		.4byte	.LASF29
 775 01bd 01       		.byte	0x1
 776 01be 1801     		.2byte	0x118
 777 01c0 87000000 		.4byte	0x87
 778 01c4 00000000 		.4byte	.LFB7
 779 01c8 20000000 		.4byte	.LFE7-.LFB7
 780 01cc 01       		.uleb128 0x1
 781 01cd 9C       		.byte	0x9c
 782 01ce E2010000 		.4byte	0x1e2
 783 01d2 12       		.uleb128 0x12
 784 01d3 86010000 		.4byte	.LASF27
 785 01d7 01       		.byte	0x1
 786 01d8 1A01     		.2byte	0x11a
 787 01da 87000000 		.4byte	0x87
 788 01de 02       		.uleb128 0x2
 789 01df 91       		.byte	0x91
 790 01e0 77       		.sleb128 -9
 791 01e1 00       		.byte	0
 792 01e2 13       		.uleb128 0x13
 793 01e3 76010000 		.4byte	.LASF30
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 22


 794 01e7 01       		.byte	0x1
 795 01e8 3301     		.2byte	0x133
 796 01ea 00000000 		.4byte	.LFB8
 797 01ee 18000000 		.4byte	.LFE8-.LFB8
 798 01f2 01       		.uleb128 0x1
 799 01f3 9C       		.byte	0x9c
 800 01f4 14       		.uleb128 0x14
 801 01f5 C9010000 		.4byte	.LASF37
 802 01f9 01       		.byte	0x1
 803 01fa 4801     		.2byte	0x148
 804 01fc 87000000 		.4byte	0x87
 805 0200 00000000 		.4byte	.LFB9
 806 0204 24000000 		.4byte	.LFE9-.LFB9
 807 0208 01       		.uleb128 0x1
 808 0209 9C       		.byte	0x9c
 809 020a 13       		.uleb128 0x13
 810 020b B3020000 		.4byte	.LASF31
 811 020f 01       		.byte	0x1
 812 0210 5D01     		.2byte	0x15d
 813 0212 00000000 		.4byte	.LFB10
 814 0216 18000000 		.4byte	.LFE10-.LFB10
 815 021a 01       		.uleb128 0x1
 816 021b 9C       		.byte	0x9c
 817 021c 13       		.uleb128 0x13
 818 021d A0010000 		.4byte	.LASF32
 819 0221 01       		.byte	0x1
 820 0222 7801     		.2byte	0x178
 821 0224 00000000 		.4byte	.LFB11
 822 0228 18000000 		.4byte	.LFE11-.LFB11
 823 022c 01       		.uleb128 0x1
 824 022d 9C       		.byte	0x9c
 825 022e 13       		.uleb128 0x13
 826 022f 58020000 		.4byte	.LASF33
 827 0233 01       		.byte	0x1
 828 0234 9101     		.2byte	0x191
 829 0236 00000000 		.4byte	.LFB12
 830 023a 18000000 		.4byte	.LFE12-.LFB12
 831 023e 01       		.uleb128 0x1
 832 023f 9C       		.byte	0x9c
 833 0240 15       		.uleb128 0x15
 834 0241 9F020000 		.4byte	.LASF38
 835 0245 01       		.byte	0x1
 836 0246 1E       		.byte	0x1e
 837 0247 87000000 		.4byte	0x87
 838 024b 00       		.byte	0
 839              		.section	.debug_abbrev,"",%progbits
 840              	.Ldebug_abbrev0:
 841 0000 01       		.uleb128 0x1
 842 0001 11       		.uleb128 0x11
 843 0002 01       		.byte	0x1
 844 0003 25       		.uleb128 0x25
 845 0004 0E       		.uleb128 0xe
 846 0005 13       		.uleb128 0x13
 847 0006 0B       		.uleb128 0xb
 848 0007 03       		.uleb128 0x3
 849 0008 0E       		.uleb128 0xe
 850 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 23


 851 000a 0E       		.uleb128 0xe
 852 000b 55       		.uleb128 0x55
 853 000c 17       		.uleb128 0x17
 854 000d 11       		.uleb128 0x11
 855 000e 01       		.uleb128 0x1
 856 000f 10       		.uleb128 0x10
 857 0010 17       		.uleb128 0x17
 858 0011 00       		.byte	0
 859 0012 00       		.byte	0
 860 0013 02       		.uleb128 0x2
 861 0014 24       		.uleb128 0x24
 862 0015 00       		.byte	0
 863 0016 0B       		.uleb128 0xb
 864 0017 0B       		.uleb128 0xb
 865 0018 3E       		.uleb128 0x3e
 866 0019 0B       		.uleb128 0xb
 867 001a 03       		.uleb128 0x3
 868 001b 08       		.uleb128 0x8
 869 001c 00       		.byte	0
 870 001d 00       		.byte	0
 871 001e 03       		.uleb128 0x3
 872 001f 24       		.uleb128 0x24
 873 0020 00       		.byte	0
 874 0021 0B       		.uleb128 0xb
 875 0022 0B       		.uleb128 0xb
 876 0023 3E       		.uleb128 0x3e
 877 0024 0B       		.uleb128 0xb
 878 0025 03       		.uleb128 0x3
 879 0026 0E       		.uleb128 0xe
 880 0027 00       		.byte	0
 881 0028 00       		.byte	0
 882 0029 04       		.uleb128 0x4
 883 002a 0F       		.uleb128 0xf
 884 002b 00       		.byte	0
 885 002c 0B       		.uleb128 0xb
 886 002d 0B       		.uleb128 0xb
 887 002e 49       		.uleb128 0x49
 888 002f 13       		.uleb128 0x13
 889 0030 00       		.byte	0
 890 0031 00       		.byte	0
 891 0032 05       		.uleb128 0x5
 892 0033 15       		.uleb128 0x15
 893 0034 00       		.byte	0
 894 0035 27       		.uleb128 0x27
 895 0036 19       		.uleb128 0x19
 896 0037 00       		.byte	0
 897 0038 00       		.byte	0
 898 0039 06       		.uleb128 0x6
 899 003a 16       		.uleb128 0x16
 900 003b 00       		.byte	0
 901 003c 03       		.uleb128 0x3
 902 003d 0E       		.uleb128 0xe
 903 003e 3A       		.uleb128 0x3a
 904 003f 0B       		.uleb128 0xb
 905 0040 3B       		.uleb128 0x3b
 906 0041 05       		.uleb128 0x5
 907 0042 49       		.uleb128 0x49
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 24


 908 0043 13       		.uleb128 0x13
 909 0044 00       		.byte	0
 910 0045 00       		.byte	0
 911 0046 07       		.uleb128 0x7
 912 0047 35       		.uleb128 0x35
 913 0048 00       		.byte	0
 914 0049 49       		.uleb128 0x49
 915 004a 13       		.uleb128 0x13
 916 004b 00       		.byte	0
 917 004c 00       		.byte	0
 918 004d 08       		.uleb128 0x8
 919 004e 2E       		.uleb128 0x2e
 920 004f 00       		.byte	0
 921 0050 3F       		.uleb128 0x3f
 922 0051 19       		.uleb128 0x19
 923 0052 03       		.uleb128 0x3
 924 0053 0E       		.uleb128 0xe
 925 0054 3A       		.uleb128 0x3a
 926 0055 0B       		.uleb128 0xb
 927 0056 3B       		.uleb128 0x3b
 928 0057 0B       		.uleb128 0xb
 929 0058 27       		.uleb128 0x27
 930 0059 19       		.uleb128 0x19
 931 005a 11       		.uleb128 0x11
 932 005b 01       		.uleb128 0x1
 933 005c 12       		.uleb128 0x12
 934 005d 06       		.uleb128 0x6
 935 005e 40       		.uleb128 0x40
 936 005f 18       		.uleb128 0x18
 937 0060 9642     		.uleb128 0x2116
 938 0062 19       		.uleb128 0x19
 939 0063 00       		.byte	0
 940 0064 00       		.byte	0
 941 0065 09       		.uleb128 0x9
 942 0066 2E       		.uleb128 0x2e
 943 0067 01       		.byte	0x1
 944 0068 3F       		.uleb128 0x3f
 945 0069 19       		.uleb128 0x19
 946 006a 03       		.uleb128 0x3
 947 006b 0E       		.uleb128 0xe
 948 006c 3A       		.uleb128 0x3a
 949 006d 0B       		.uleb128 0xb
 950 006e 3B       		.uleb128 0x3b
 951 006f 0B       		.uleb128 0xb
 952 0070 27       		.uleb128 0x27
 953 0071 19       		.uleb128 0x19
 954 0072 11       		.uleb128 0x11
 955 0073 01       		.uleb128 0x1
 956 0074 12       		.uleb128 0x12
 957 0075 06       		.uleb128 0x6
 958 0076 40       		.uleb128 0x40
 959 0077 18       		.uleb128 0x18
 960 0078 9642     		.uleb128 0x2116
 961 007a 19       		.uleb128 0x19
 962 007b 01       		.uleb128 0x1
 963 007c 13       		.uleb128 0x13
 964 007d 00       		.byte	0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 25


 965 007e 00       		.byte	0
 966 007f 0A       		.uleb128 0xa
 967 0080 05       		.uleb128 0x5
 968 0081 00       		.byte	0
 969 0082 03       		.uleb128 0x3
 970 0083 0E       		.uleb128 0xe
 971 0084 3A       		.uleb128 0x3a
 972 0085 0B       		.uleb128 0xb
 973 0086 3B       		.uleb128 0x3b
 974 0087 0B       		.uleb128 0xb
 975 0088 49       		.uleb128 0x49
 976 0089 13       		.uleb128 0x13
 977 008a 02       		.uleb128 0x2
 978 008b 18       		.uleb128 0x18
 979 008c 00       		.byte	0
 980 008d 00       		.byte	0
 981 008e 0B       		.uleb128 0xb
 982 008f 2E       		.uleb128 0x2e
 983 0090 00       		.byte	0
 984 0091 3F       		.uleb128 0x3f
 985 0092 19       		.uleb128 0x19
 986 0093 03       		.uleb128 0x3
 987 0094 0E       		.uleb128 0xe
 988 0095 3A       		.uleb128 0x3a
 989 0096 0B       		.uleb128 0xb
 990 0097 3B       		.uleb128 0x3b
 991 0098 0B       		.uleb128 0xb
 992 0099 27       		.uleb128 0x27
 993 009a 19       		.uleb128 0x19
 994 009b 11       		.uleb128 0x11
 995 009c 01       		.uleb128 0x1
 996 009d 12       		.uleb128 0x12
 997 009e 06       		.uleb128 0x6
 998 009f 40       		.uleb128 0x40
 999 00a0 18       		.uleb128 0x18
 1000 00a1 9742     		.uleb128 0x2117
 1001 00a3 19       		.uleb128 0x19
 1002 00a4 00       		.byte	0
 1003 00a5 00       		.byte	0
 1004 00a6 0C       		.uleb128 0xc
 1005 00a7 2E       		.uleb128 0x2e
 1006 00a8 01       		.byte	0x1
 1007 00a9 3F       		.uleb128 0x3f
 1008 00aa 19       		.uleb128 0x19
 1009 00ab 03       		.uleb128 0x3
 1010 00ac 0E       		.uleb128 0xe
 1011 00ad 3A       		.uleb128 0x3a
 1012 00ae 0B       		.uleb128 0xb
 1013 00af 3B       		.uleb128 0x3b
 1014 00b0 0B       		.uleb128 0xb
 1015 00b1 27       		.uleb128 0x27
 1016 00b2 19       		.uleb128 0x19
 1017 00b3 11       		.uleb128 0x11
 1018 00b4 01       		.uleb128 0x1
 1019 00b5 12       		.uleb128 0x12
 1020 00b6 06       		.uleb128 0x6
 1021 00b7 40       		.uleb128 0x40
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 26


 1022 00b8 18       		.uleb128 0x18
 1023 00b9 9742     		.uleb128 0x2117
 1024 00bb 19       		.uleb128 0x19
 1025 00bc 01       		.uleb128 0x1
 1026 00bd 13       		.uleb128 0x13
 1027 00be 00       		.byte	0
 1028 00bf 00       		.byte	0
 1029 00c0 0D       		.uleb128 0xd
 1030 00c1 34       		.uleb128 0x34
 1031 00c2 00       		.byte	0
 1032 00c3 03       		.uleb128 0x3
 1033 00c4 0E       		.uleb128 0xe
 1034 00c5 3A       		.uleb128 0x3a
 1035 00c6 0B       		.uleb128 0xb
 1036 00c7 3B       		.uleb128 0x3b
 1037 00c8 0B       		.uleb128 0xb
 1038 00c9 49       		.uleb128 0x49
 1039 00ca 13       		.uleb128 0x13
 1040 00cb 02       		.uleb128 0x2
 1041 00cc 18       		.uleb128 0x18
 1042 00cd 00       		.byte	0
 1043 00ce 00       		.byte	0
 1044 00cf 0E       		.uleb128 0xe
 1045 00d0 2E       		.uleb128 0x2e
 1046 00d1 01       		.byte	0x1
 1047 00d2 3F       		.uleb128 0x3f
 1048 00d3 19       		.uleb128 0x19
 1049 00d4 03       		.uleb128 0x3
 1050 00d5 0E       		.uleb128 0xe
 1051 00d6 3A       		.uleb128 0x3a
 1052 00d7 0B       		.uleb128 0xb
 1053 00d8 3B       		.uleb128 0x3b
 1054 00d9 0B       		.uleb128 0xb
 1055 00da 27       		.uleb128 0x27
 1056 00db 19       		.uleb128 0x19
 1057 00dc 49       		.uleb128 0x49
 1058 00dd 13       		.uleb128 0x13
 1059 00de 11       		.uleb128 0x11
 1060 00df 01       		.uleb128 0x1
 1061 00e0 12       		.uleb128 0x12
 1062 00e1 06       		.uleb128 0x6
 1063 00e2 40       		.uleb128 0x40
 1064 00e3 18       		.uleb128 0x18
 1065 00e4 9742     		.uleb128 0x2117
 1066 00e6 19       		.uleb128 0x19
 1067 00e7 01       		.uleb128 0x1
 1068 00e8 13       		.uleb128 0x13
 1069 00e9 00       		.byte	0
 1070 00ea 00       		.byte	0
 1071 00eb 0F       		.uleb128 0xf
 1072 00ec 2E       		.uleb128 0x2e
 1073 00ed 01       		.byte	0x1
 1074 00ee 3F       		.uleb128 0x3f
 1075 00ef 19       		.uleb128 0x19
 1076 00f0 03       		.uleb128 0x3
 1077 00f1 0E       		.uleb128 0xe
 1078 00f2 3A       		.uleb128 0x3a
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 27


 1079 00f3 0B       		.uleb128 0xb
 1080 00f4 3B       		.uleb128 0x3b
 1081 00f5 05       		.uleb128 0x5
 1082 00f6 27       		.uleb128 0x27
 1083 00f7 19       		.uleb128 0x19
 1084 00f8 11       		.uleb128 0x11
 1085 00f9 01       		.uleb128 0x1
 1086 00fa 12       		.uleb128 0x12
 1087 00fb 06       		.uleb128 0x6
 1088 00fc 40       		.uleb128 0x40
 1089 00fd 18       		.uleb128 0x18
 1090 00fe 9742     		.uleb128 0x2117
 1091 0100 19       		.uleb128 0x19
 1092 0101 01       		.uleb128 0x1
 1093 0102 13       		.uleb128 0x13
 1094 0103 00       		.byte	0
 1095 0104 00       		.byte	0
 1096 0105 10       		.uleb128 0x10
 1097 0106 05       		.uleb128 0x5
 1098 0107 00       		.byte	0
 1099 0108 03       		.uleb128 0x3
 1100 0109 0E       		.uleb128 0xe
 1101 010a 3A       		.uleb128 0x3a
 1102 010b 0B       		.uleb128 0xb
 1103 010c 3B       		.uleb128 0x3b
 1104 010d 05       		.uleb128 0x5
 1105 010e 49       		.uleb128 0x49
 1106 010f 13       		.uleb128 0x13
 1107 0110 02       		.uleb128 0x2
 1108 0111 18       		.uleb128 0x18
 1109 0112 00       		.byte	0
 1110 0113 00       		.byte	0
 1111 0114 11       		.uleb128 0x11
 1112 0115 2E       		.uleb128 0x2e
 1113 0116 01       		.byte	0x1
 1114 0117 3F       		.uleb128 0x3f
 1115 0118 19       		.uleb128 0x19
 1116 0119 03       		.uleb128 0x3
 1117 011a 0E       		.uleb128 0xe
 1118 011b 3A       		.uleb128 0x3a
 1119 011c 0B       		.uleb128 0xb
 1120 011d 3B       		.uleb128 0x3b
 1121 011e 05       		.uleb128 0x5
 1122 011f 27       		.uleb128 0x27
 1123 0120 19       		.uleb128 0x19
 1124 0121 49       		.uleb128 0x49
 1125 0122 13       		.uleb128 0x13
 1126 0123 11       		.uleb128 0x11
 1127 0124 01       		.uleb128 0x1
 1128 0125 12       		.uleb128 0x12
 1129 0126 06       		.uleb128 0x6
 1130 0127 40       		.uleb128 0x40
 1131 0128 18       		.uleb128 0x18
 1132 0129 9742     		.uleb128 0x2117
 1133 012b 19       		.uleb128 0x19
 1134 012c 01       		.uleb128 0x1
 1135 012d 13       		.uleb128 0x13
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 28


 1136 012e 00       		.byte	0
 1137 012f 00       		.byte	0
 1138 0130 12       		.uleb128 0x12
 1139 0131 34       		.uleb128 0x34
 1140 0132 00       		.byte	0
 1141 0133 03       		.uleb128 0x3
 1142 0134 0E       		.uleb128 0xe
 1143 0135 3A       		.uleb128 0x3a
 1144 0136 0B       		.uleb128 0xb
 1145 0137 3B       		.uleb128 0x3b
 1146 0138 05       		.uleb128 0x5
 1147 0139 49       		.uleb128 0x49
 1148 013a 13       		.uleb128 0x13
 1149 013b 02       		.uleb128 0x2
 1150 013c 18       		.uleb128 0x18
 1151 013d 00       		.byte	0
 1152 013e 00       		.byte	0
 1153 013f 13       		.uleb128 0x13
 1154 0140 2E       		.uleb128 0x2e
 1155 0141 00       		.byte	0
 1156 0142 3F       		.uleb128 0x3f
 1157 0143 19       		.uleb128 0x19
 1158 0144 03       		.uleb128 0x3
 1159 0145 0E       		.uleb128 0xe
 1160 0146 3A       		.uleb128 0x3a
 1161 0147 0B       		.uleb128 0xb
 1162 0148 3B       		.uleb128 0x3b
 1163 0149 05       		.uleb128 0x5
 1164 014a 27       		.uleb128 0x27
 1165 014b 19       		.uleb128 0x19
 1166 014c 11       		.uleb128 0x11
 1167 014d 01       		.uleb128 0x1
 1168 014e 12       		.uleb128 0x12
 1169 014f 06       		.uleb128 0x6
 1170 0150 40       		.uleb128 0x40
 1171 0151 18       		.uleb128 0x18
 1172 0152 9742     		.uleb128 0x2117
 1173 0154 19       		.uleb128 0x19
 1174 0155 00       		.byte	0
 1175 0156 00       		.byte	0
 1176 0157 14       		.uleb128 0x14
 1177 0158 2E       		.uleb128 0x2e
 1178 0159 00       		.byte	0
 1179 015a 3F       		.uleb128 0x3f
 1180 015b 19       		.uleb128 0x19
 1181 015c 03       		.uleb128 0x3
 1182 015d 0E       		.uleb128 0xe
 1183 015e 3A       		.uleb128 0x3a
 1184 015f 0B       		.uleb128 0xb
 1185 0160 3B       		.uleb128 0x3b
 1186 0161 05       		.uleb128 0x5
 1187 0162 27       		.uleb128 0x27
 1188 0163 19       		.uleb128 0x19
 1189 0164 49       		.uleb128 0x49
 1190 0165 13       		.uleb128 0x13
 1191 0166 11       		.uleb128 0x11
 1192 0167 01       		.uleb128 0x1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 29


 1193 0168 12       		.uleb128 0x12
 1194 0169 06       		.uleb128 0x6
 1195 016a 40       		.uleb128 0x40
 1196 016b 18       		.uleb128 0x18
 1197 016c 9742     		.uleb128 0x2117
 1198 016e 19       		.uleb128 0x19
 1199 016f 00       		.byte	0
 1200 0170 00       		.byte	0
 1201 0171 15       		.uleb128 0x15
 1202 0172 34       		.uleb128 0x34
 1203 0173 00       		.byte	0
 1204 0174 03       		.uleb128 0x3
 1205 0175 0E       		.uleb128 0xe
 1206 0176 3A       		.uleb128 0x3a
 1207 0177 0B       		.uleb128 0xb
 1208 0178 3B       		.uleb128 0x3b
 1209 0179 0B       		.uleb128 0xb
 1210 017a 49       		.uleb128 0x49
 1211 017b 13       		.uleb128 0x13
 1212 017c 3F       		.uleb128 0x3f
 1213 017d 19       		.uleb128 0x19
 1214 017e 3C       		.uleb128 0x3c
 1215 017f 19       		.uleb128 0x19
 1216 0180 00       		.byte	0
 1217 0181 00       		.byte	0
 1218 0182 00       		.byte	0
 1219              		.section	.debug_aranges,"",%progbits
 1220 0000 7C000000 		.4byte	0x7c
 1221 0004 0200     		.2byte	0x2
 1222 0006 00000000 		.4byte	.Ldebug_info0
 1223 000a 04       		.byte	0x4
 1224 000b 00       		.byte	0
 1225 000c 0000     		.2byte	0
 1226 000e 0000     		.2byte	0
 1227 0010 00000000 		.4byte	.LFB0
 1228 0014 20000000 		.4byte	.LFE0-.LFB0
 1229 0018 00000000 		.4byte	.LFB1
 1230 001c 24000000 		.4byte	.LFE1-.LFB1
 1231 0020 00000000 		.4byte	.LFB2
 1232 0024 18000000 		.4byte	.LFE2-.LFB2
 1233 0028 00000000 		.4byte	.LFB3
 1234 002c 18000000 		.4byte	.LFE3-.LFB3
 1235 0030 00000000 		.4byte	.LFB4
 1236 0034 24000000 		.4byte	.LFE4-.LFB4
 1237 0038 00000000 		.4byte	.LFB5
 1238 003c 20000000 		.4byte	.LFE5-.LFB5
 1239 0040 00000000 		.4byte	.LFB6
 1240 0044 24000000 		.4byte	.LFE6-.LFB6
 1241 0048 00000000 		.4byte	.LFB7
 1242 004c 20000000 		.4byte	.LFE7-.LFB7
 1243 0050 00000000 		.4byte	.LFB8
 1244 0054 18000000 		.4byte	.LFE8-.LFB8
 1245 0058 00000000 		.4byte	.LFB9
 1246 005c 24000000 		.4byte	.LFE9-.LFB9
 1247 0060 00000000 		.4byte	.LFB10
 1248 0064 18000000 		.4byte	.LFE10-.LFB10
 1249 0068 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 30


 1250 006c 18000000 		.4byte	.LFE11-.LFB11
 1251 0070 00000000 		.4byte	.LFB12
 1252 0074 18000000 		.4byte	.LFE12-.LFB12
 1253 0078 00000000 		.4byte	0
 1254 007c 00000000 		.4byte	0
 1255              		.section	.debug_ranges,"",%progbits
 1256              	.Ldebug_ranges0:
 1257 0000 00000000 		.4byte	.LFB0
 1258 0004 20000000 		.4byte	.LFE0
 1259 0008 00000000 		.4byte	.LFB1
 1260 000c 24000000 		.4byte	.LFE1
 1261 0010 00000000 		.4byte	.LFB2
 1262 0014 18000000 		.4byte	.LFE2
 1263 0018 00000000 		.4byte	.LFB3
 1264 001c 18000000 		.4byte	.LFE3
 1265 0020 00000000 		.4byte	.LFB4
 1266 0024 24000000 		.4byte	.LFE4
 1267 0028 00000000 		.4byte	.LFB5
 1268 002c 20000000 		.4byte	.LFE5
 1269 0030 00000000 		.4byte	.LFB6
 1270 0034 24000000 		.4byte	.LFE6
 1271 0038 00000000 		.4byte	.LFB7
 1272 003c 20000000 		.4byte	.LFE7
 1273 0040 00000000 		.4byte	.LFB8
 1274 0044 18000000 		.4byte	.LFE8
 1275 0048 00000000 		.4byte	.LFB9
 1276 004c 24000000 		.4byte	.LFE9
 1277 0050 00000000 		.4byte	.LFB10
 1278 0054 18000000 		.4byte	.LFE10
 1279 0058 00000000 		.4byte	.LFB11
 1280 005c 18000000 		.4byte	.LFE11
 1281 0060 00000000 		.4byte	.LFB12
 1282 0064 18000000 		.4byte	.LFE12
 1283 0068 00000000 		.4byte	0
 1284 006c 00000000 		.4byte	0
 1285              		.section	.debug_line,"",%progbits
 1286              	.Ldebug_line0:
 1287 0000 4E010000 		.section	.debug_str,"MS",%progbits,1
 1287      02004500 
 1287      00000201 
 1287      FB0E0D00 
 1287      01010101 
 1288              	.LASF35:
 1289 0000 47656E65 		.ascii	"Generated_Source\\PSoC5\\isrRF_RX.c\000"
 1289      72617465 
 1289      645F536F 
 1289      75726365 
 1289      5C50536F 
 1290              	.LASF36:
 1291 0022 433A5C55 		.ascii	"C:\\Users\\yram171\\Downloads\\Compsys-301-CODE\\YA"
 1291      73657273 
 1291      5C797261 
 1291      6D313731 
 1291      5C446F77 
 1292 0050 53482043 		.ascii	"SH Code\\CS301_Class.cydsn\000"
 1292      6F64655C 
 1292      43533330 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 31


 1292      315F436C 
 1292      6173732E 
 1293              	.LASF34:
 1294 006a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1294      43313120 
 1294      352E342E 
 1294      31203230 
 1294      31363036 
 1295 009d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1295      20726576 
 1295      6973696F 
 1295      6E203233 
 1295      37373135 
 1296 00d0 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1296      66756E63 
 1296      74696F6E 
 1296      2D736563 
 1296      74696F6E 
 1297              	.LASF14:
 1298 00f8 666C6F61 		.ascii	"float\000"
 1298      7400
 1299              	.LASF6:
 1300 00fe 73686F72 		.ascii	"short unsigned int\000"
 1300      7420756E 
 1300      7369676E 
 1300      65642069 
 1300      6E7400
 1301              	.LASF11:
 1302 0111 63686172 		.ascii	"char\000"
 1302      00
 1303              	.LASF15:
 1304 0116 646F7562 		.ascii	"double\000"
 1304      6C6500
 1305              	.LASF29:
 1306 011d 69737252 		.ascii	"isrRF_RX_GetPriority\000"
 1306      465F5258 
 1306      5F476574 
 1306      5072696F 
 1306      72697479 
 1307              	.LASF23:
 1308 0132 69737252 		.ascii	"isrRF_RX_SetVector\000"
 1308      465F5258 
 1308      5F536574 
 1308      56656374 
 1308      6F7200
 1309              	.LASF4:
 1310 0145 756E7369 		.ascii	"unsigned char\000"
 1310      676E6564 
 1310      20636861 
 1310      7200
 1311              	.LASF17:
 1312 0153 72656733 		.ascii	"reg32\000"
 1312      3200
 1313              	.LASF16:
 1314 0159 72656738 		.ascii	"reg8\000"
 1314      00
 1315              	.LASF8:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 32


 1316 015e 6C6F6E67 		.ascii	"long unsigned int\000"
 1316      20756E73 
 1316      69676E65 
 1316      6420696E 
 1316      7400
 1317              	.LASF12:
 1318 0170 75696E74 		.ascii	"uint8\000"
 1318      3800
 1319              	.LASF30:
 1320 0176 69737252 		.ascii	"isrRF_RX_Enable\000"
 1320      465F5258 
 1320      5F456E61 
 1320      626C6500 
 1321              	.LASF27:
 1322 0186 7072696F 		.ascii	"priority\000"
 1322      72697479 
 1322      00
 1323              	.LASF22:
 1324 018f 69737252 		.ascii	"isrRF_RX_StartEx\000"
 1324      465F5258 
 1324      5F537461 
 1324      72744578 
 1324      00
 1325              	.LASF32:
 1326 01a0 69737252 		.ascii	"isrRF_RX_SetPending\000"
 1326      465F5258 
 1326      5F536574 
 1326      50656E64 
 1326      696E6700 
 1327              	.LASF26:
 1328 01b4 69737252 		.ascii	"isrRF_RX_SetPriority\000"
 1328      465F5258 
 1328      5F536574 
 1328      5072696F 
 1328      72697479 
 1329              	.LASF37:
 1330 01c9 69737252 		.ascii	"isrRF_RX_GetState\000"
 1330      465F5258 
 1330      5F476574 
 1330      53746174 
 1330      6500
 1331              	.LASF13:
 1332 01db 75696E74 		.ascii	"uint32\000"
 1332      333200
 1333              	.LASF0:
 1334 01e2 756E7369 		.ascii	"unsigned int\000"
 1334      676E6564 
 1334      20696E74 
 1334      00
 1335              	.LASF24:
 1336 01ef 61646472 		.ascii	"address\000"
 1336      65737300 
 1337              	.LASF9:
 1338 01f7 6C6F6E67 		.ascii	"long long unsigned int\000"
 1338      206C6F6E 
 1338      6720756E 
 1338      7369676E 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 33


 1338      65642069 
 1339              	.LASF28:
 1340 020e 69737252 		.ascii	"isrRF_RX_GetVector\000"
 1340      465F5258 
 1340      5F476574 
 1340      56656374 
 1340      6F7200
 1341              	.LASF18:
 1342 0221 63796973 		.ascii	"cyisraddress\000"
 1342      72616464 
 1342      72657373 
 1342      00
 1343              	.LASF21:
 1344 022e 69737252 		.ascii	"isrRF_RX_Interrupt\000"
 1344      465F5258 
 1344      5F496E74 
 1344      65727275 
 1344      707400
 1345              	.LASF10:
 1346 0241 73697A65 		.ascii	"sizetype\000"
 1346      74797065 
 1346      00
 1347              	.LASF1:
 1348 024a 6C6F6E67 		.ascii	"long long int\000"
 1348      206C6F6E 
 1348      6720696E 
 1348      7400
 1349              	.LASF33:
 1350 0258 69737252 		.ascii	"isrRF_RX_ClearPending\000"
 1350      465F5258 
 1350      5F436C65 
 1350      61725065 
 1350      6E64696E 
 1351              	.LASF25:
 1352 026e 72616D56 		.ascii	"ramVectorTable\000"
 1352      6563746F 
 1352      72546162 
 1352      6C6500
 1353              	.LASF5:
 1354 027d 73686F72 		.ascii	"short int\000"
 1354      7420696E 
 1354      7400
 1355              	.LASF19:
 1356 0287 69737252 		.ascii	"isrRF_RX_Start\000"
 1356      465F5258 
 1356      5F537461 
 1356      727400
 1357              	.LASF7:
 1358 0296 6C6F6E67 		.ascii	"long int\000"
 1358      20696E74 
 1358      00
 1359              	.LASF38:
 1360 029f 666C6167 		.ascii	"flag_rx\000"
 1360      5F727800 
 1361              	.LASF2:
 1362 02a7 6C6F6E67 		.ascii	"long double\000"
 1362      20646F75 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccZ5rYjP.s 			page 34


 1362      626C6500 
 1363              	.LASF31:
 1364 02b3 69737252 		.ascii	"isrRF_RX_Disable\000"
 1364      465F5258 
 1364      5F446973 
 1364      61626C65 
 1364      00
 1365              	.LASF3:
 1366 02c4 7369676E 		.ascii	"signed char\000"
 1366      65642063 
 1366      68617200 
 1367              	.LASF20:
 1368 02d0 69737252 		.ascii	"isrRF_RX_Stop\000"
 1368      465F5258 
 1368      5F53746F 
 1368      7000
 1369              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	sen1_on_line:
  21 0000 00       		.space	1
  22              	sen2_on_line:
  23 0001 00       		.space	1
  24              	sen3_on_line:
  25 0002 00       		.space	1
  26              	sen4_on_line:
  27 0003 00       		.space	1
  28              	sen5_on_line:
  29 0004 00       		.space	1
  30              	sen6_on_line:
  31 0005 00       		.space	1
  32              	g_direction:
  33 0006 00       		.space	1
  34              	g_stop_now:
  35 0007 00       		.space	1
  36              		.align	2
  37              	g_dist_mm:
  38 0008 00000000 		.space	4
  39              		.align	1
  40              	dir_delay_ticks:
  41 000c 0000     		.space	2
  42              	dir_latched_side:
  43 000e 00       		.space	1
  44 000f 00       		.align	1
  45              	turn_cooldown_ticks:
  46 0010 0000     		.space	2
  47              		.global	__aeabi_ldivmod
  48              		.section	.text.isr_qd_Handler,"ax",%progbits
  49              		.align	2
  50              		.global	isr_qd_Handler
  51              		.thumb
  52              		.thumb_func
  53              		.type	isr_qd_Handler, %function
  54              	isr_qd_Handler:
  55              	.LFB64:
  56              		.file 1 "main.c"
   1:main.c        **** /* ========================= main.c (with PI steering + turn-call delay) =========================
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 2


   2:main.c        ****  * - Keeps straight-line PI active during a short delay after g_direction flips (Option A)
   3:main.c        ****  * - Then calls Directions_Handle(&g_direction) to run the maneuver
   4:main.c        ****  * - Resets PI integrator after the turn completes
   5:main.c        ****  * ============================================================================================== *
   6:main.c        **** 
   7:main.c        **** #include <project.h>
   8:main.c        **** #include <stdint.h>
   9:main.c        **** #include <stdbool.h>
  10:main.c        **** 
  11:main.c        **** #include <sensors.h>     // Sensor_ComputePeakToPeak()
  12:main.c        **** #include "motor_s.h"     // set_motors_*, motor_enable
  13:main.c        **** #include "directions.h"  // Directions_* turning module
  14:main.c        **** 
  15:main.c        **** 
  16:main.c        **** /* ===== Loop pacing (kept) ===== */
  17:main.c        **** #define LOOP_DT_MS               8u
  18:main.c        **** #define DT_S   ( (float)LOOP_DT_MS / 1000.0f )
  19:main.c        **** 
  20:main.c        **** /* ===== Cruise speed / distance target (kept) ===== */
  21:main.c        **** #define VMAX_CONST_MM_S        1000
  22:main.c        **** #define SPEED_FRAC_PERCENT      20
  23:main.c        **** #define V_CRUISE_MM_S  ((int32_t)VMAX_CONST_MM_S * (int32_t)SPEED_FRAC_PERCENT / 100)
  24:main.c        **** #define TARGET_DIST_MM        150  // HALF THE DISTANCE   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  25:main.c        **** 
  26:main.c        **** /* ===== Encoder â†’ mm conversion (kept) ===== */
  27:main.c        **** #define QD_SAMPLE_MS             5u
  28:main.c        **** #define CPR_OUTSHAFT           228u
  29:main.c        **** #define R_MM                    34
  30:main.c        **** #define PI_X1000              3142
  31:main.c        **** #define PERIM_MM_X1000   ((int32_t)(2 * PI_X1000 * R_MM))
  32:main.c        **** #define MM_PER_COUNT_X1000     ( PERIM_MM_X1000 / CPR_OUTSHAFT )
  33:main.c        **** #define CALIB_DIST_X1000     1000   // Changed to 1000 to avoid scaling
  34:main.c        **** #define APPLY_CALIB_DIST(x)  ( (int32_t)(((int64_t)(x) * CALIB_DIST_X1000 + 500)/1000) )
  35:main.c        **** 
  36:main.c        **** /* ===== S1/S2 relaxed detection (kept) ===== */
  37:main.c        **** #define S_MINC_COUNTS            10
  38:main.c        **** #define S_MAXC_COUNTS           100
  39:main.c        **** #define S_HYST_COUNTS           16u
  40:main.c        **** 
  41:main.c        **** /* ===== Turn request filtering (kept) ===== */
  42:main.c        **** #define TURN_DEBOUNCE_TICKS       5u
  43:main.c        **** #define CLEAR_ARM_TICKS           4u
  44:main.c        **** 
  45:main.c        **** #define DIR_CALL_DELAY_MS        (100)  /* wait ~200 ms before starting the maneuver */
  46:main.c        **** #define DIR_CALL_DELAY_TICKS     ((DIR_CALL_DELAY_MS + LOOP_DT_MS - 1) / LOOP_DT_MS)
  47:main.c        **** 
  48:main.c        **** 
  49:main.c        **** // Cooldown after turn to ignore intersection sensors V1 & V2
  50:main.c        ****  #define TURN_COOLDOWN_MS (400)
  51:main.c        **** //static volatile uint16_t TURN_COOLDOWN_MS;
  52:main.c        **** 
  53:main.c        **** #define TURN_COOLDOWN_TICKS ((TURN_COOLDOWN_MS + LOOP_DT_MS - 1) / LOOP_DT_MS
  54:main.c        **** 
  55:main.c        **** 
  56:main.c        **** 
  57:main.c        **** /* ===== Local sensor flags (used for S1/S2 edge) ===== */
  58:main.c        **** static uint8_t sen1_on_line=0, sen2_on_line=0, sen3_on_line=0;
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 3


  59:main.c        **** static uint8_t sen4_on_line=0, sen5_on_line=0, sen6_on_line=0;
  60:main.c        **** 
  61:main.c        **** /* ===== Global state (kept) ===== */
  62:main.c        **** static volatile uint8_t g_direction = 0;   /* 0=straight, 1=left, 2=right */
  63:main.c        **** static volatile uint8_t g_stop_now  = 0;
  64:main.c        **** static volatile int32_t g_dist_mm   = 0;
  65:main.c        **** 
  66:main.c        **** /* ===== Option A state ===== */
  67:main.c        **** static uint16_t dir_delay_ticks = 0;        /* countdown in loop ticks */
  68:main.c        **** static uint8_t  dir_latched_side = 0;       /* remembers 1 or 2 while waiting */
  69:main.c        **** 
  70:main.c        **** 
  71:main.c        **** static uint16_t turn_cooldown_ticks = 0;
  72:main.c        **** 
  73:main.c        **** 
  74:main.c        **** /* ------------------------------- 5 ms Timer ISR: accumulate distance (kept) ---------------------
  75:main.c        **** CY_ISR(isr_qd_Handler)
  76:main.c        **** {
  57              		.loc 1 76 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 48
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  62              		.cfi_def_cfa_offset 36
  63              		.cfi_offset 4, -36
  64              		.cfi_offset 5, -32
  65              		.cfi_offset 6, -28
  66              		.cfi_offset 7, -24
  67              		.cfi_offset 8, -20
  68              		.cfi_offset 9, -16
  69              		.cfi_offset 10, -12
  70              		.cfi_offset 11, -8
  71              		.cfi_offset 14, -4
  72 0004 8DB0     		sub	sp, sp, #52
  73              		.cfi_def_cfa_offset 88
  74 0006 00AF     		add	r7, sp, #0
  75              		.cfi_def_cfa_register 7
  77:main.c        ****     if (g_direction == 0u) {  // Only accumulate distance when moving straight
  76              		.loc 1 77 0
  77 0008 404B     		ldr	r3, .L7
  78 000a 1B78     		ldrb	r3, [r3]
  79 000c DBB2     		uxtb	r3, r3
  80 000e 002B     		cmp	r3, #0
  81 0010 74D1     		bne	.L2
  82              	.LBB2:
  78:main.c        ****         int32_t raw1 = QuadDec_M1_GetCounter();  QuadDec_M1_SetCounter(0);
  83              		.loc 1 78 0
  84 0012 FFF7FEFF 		bl	QuadDec_M1_GetCounter
  85 0016 0346     		mov	r3, r0
  86 0018 FB62     		str	r3, [r7, #44]
  87 001a 0020     		movs	r0, #0
  88 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  79:main.c        ****         int32_t raw2 = QuadDec_M2_GetCounter();  QuadDec_M2_SetCounter(0);
  89              		.loc 1 79 0
  90 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
  91 0024 0346     		mov	r3, r0
  92 0026 BB62     		str	r3, [r7, #40]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 4


  93 0028 0020     		movs	r0, #0
  94 002a FFF7FEFF 		bl	QuadDec_M2_SetCounter
  80:main.c        **** 
  81:main.c        ****         int32_t d1 = raw1, d2 = raw2;
  95              		.loc 1 81 0
  96 002e FB6A     		ldr	r3, [r7, #44]
  97 0030 7B62     		str	r3, [r7, #36]
  98 0032 BB6A     		ldr	r3, [r7, #40]
  99 0034 3B62     		str	r3, [r7, #32]
  82:main.c        ****         int32_t a1 = (d1 >= 0) ? d1 : -d1;
 100              		.loc 1 82 0
 101 0036 7B6A     		ldr	r3, [r7, #36]
 102 0038 002B     		cmp	r3, #0
 103 003a B8BF     		it	lt
 104 003c 5B42     		rsblt	r3, r3, #0
 105 003e FB61     		str	r3, [r7, #28]
  83:main.c        ****         int32_t a2 = (d2 >= 0) ? d2 : -d2;
 106              		.loc 1 83 0
 107 0040 3B6A     		ldr	r3, [r7, #32]
 108 0042 002B     		cmp	r3, #0
 109 0044 B8BF     		it	lt
 110 0046 5B42     		rsblt	r3, r3, #0
 111 0048 BB61     		str	r3, [r7, #24]
  84:main.c        ****         int32_t davg_abs = (a1 + a2) / 2;
 112              		.loc 1 84 0
 113 004a FA69     		ldr	r2, [r7, #28]
 114 004c BB69     		ldr	r3, [r7, #24]
 115 004e 1344     		add	r3, r3, r2
 116 0050 DA0F     		lsrs	r2, r3, #31
 117 0052 1344     		add	r3, r3, r2
 118 0054 5B10     		asrs	r3, r3, #1
 119 0056 7B61     		str	r3, [r7, #20]
  85:main.c        ****         int32_t davg_sign = ((d1 + d2) >= 0) ? +1 : -1;
 120              		.loc 1 85 0
 121 0058 7A6A     		ldr	r2, [r7, #36]
 122 005a 3B6A     		ldr	r3, [r7, #32]
 123 005c 1344     		add	r3, r3, r2
 124 005e 002B     		cmp	r3, #0
 125 0060 01DB     		blt	.L3
 126              		.loc 1 85 0 is_stmt 0 discriminator 1
 127 0062 0123     		movs	r3, #1
 128 0064 01E0     		b	.L4
 129              	.L3:
 130              		.loc 1 85 0 discriminator 2
 131 0066 4FF0FF33 		mov	r3, #-1
 132              	.L4:
 133              		.loc 1 85 0 discriminator 4
 134 006a 3B61     		str	r3, [r7, #16]
  86:main.c        **** 
  87:main.c        ****         // Calculate the distance moved
  88:main.c        ****         int64_t num = (int64_t)(davg_abs) * MM_PER_COUNT_X1000;  // Calculate mm from encoder count
 135              		.loc 1 88 0 is_stmt 1 discriminator 4
 136 006c 7B69     		ldr	r3, [r7, #20]
 137 006e 1946     		mov	r1, r3
 138 0070 4FEAE172 		asr	r2, r1, #31
 139 0074 0B46     		mov	r3, r1
 140 0076 1446     		mov	r4, r2
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 5


 141 0078 DB18     		adds	r3, r3, r3
 142 007a 44EB0404 		adc	r4, r4, r4
 143 007e 5B18     		adds	r3, r3, r1
 144 0080 44EB0204 		adc	r4, r4, r2
 145 0084 4FEA840B 		lsl	fp, r4, #2
 146 0088 4BEA937B 		orr	fp, fp, r3, lsr #30
 147 008c 4FEA830A 		lsl	r10, r3, #2
 148 0090 5346     		mov	r3, r10
 149 0092 5C46     		mov	r4, fp
 150 0094 5B18     		adds	r3, r3, r1
 151 0096 44EB0204 		adc	r4, r4, r2
 152 009a E600     		lsls	r6, r4, #3
 153 009c 46EA5376 		orr	r6, r6, r3, lsr #29
 154 00a0 DD00     		lsls	r5, r3, #3
 155 00a2 5B19     		adds	r3, r3, r5
 156 00a4 44EB0604 		adc	r4, r4, r6
 157 00a8 4FEAC409 		lsl	r9, r4, #3
 158 00ac 49EA5379 		orr	r9, r9, r3, lsr #29
 159 00b0 4FEAC308 		lsl	r8, r3, #3
 160 00b4 4346     		mov	r3, r8
 161 00b6 4C46     		mov	r4, r9
 162 00b8 5B18     		adds	r3, r3, r1
 163 00ba 44EB0204 		adc	r4, r4, r2
 164 00be C7E90234 		strd	r3, [r7, #8]
  89:main.c        ****         int32_t dmm_abs = (int32_t)((num + 500) / 1000);          // Round to nearest mm
 165              		.loc 1 89 0 discriminator 4
 166 00c2 D7E90234 		ldrd	r3, [r7, #8]
 167 00c6 13F5FA70 		adds	r0, r3, #500
 168 00ca 44F10001 		adc	r1, r4, #0
 169 00ce 4FF47A72 		mov	r2, #1000
 170 00d2 4FF00003 		mov	r3, #0
 171 00d6 FFF7FEFF 		bl	__aeabi_ldivmod
 172 00da 0346     		mov	r3, r0
 173 00dc 0C46     		mov	r4, r1
 174 00de 7B60     		str	r3, [r7, #4]
  90:main.c        ****         int32_t dmm_signed = (davg_sign >= 0) ? +dmm_abs : -dmm_abs;
 175              		.loc 1 90 0 discriminator 4
 176 00e0 3B69     		ldr	r3, [r7, #16]
 177 00e2 002B     		cmp	r3, #0
 178 00e4 02DA     		bge	.L5
 179              		.loc 1 90 0 is_stmt 0 discriminator 1
 180 00e6 7B68     		ldr	r3, [r7, #4]
 181 00e8 5B42     		negs	r3, r3
 182 00ea 00E0     		b	.L6
 183              	.L5:
 184              		.loc 1 90 0 discriminator 2
 185 00ec 7B68     		ldr	r3, [r7, #4]
 186              	.L6:
 187              		.loc 1 90 0 discriminator 4
 188 00ee 3B60     		str	r3, [r7]
  91:main.c        **** 
  92:main.c        ****         // Update the global distance traveled
  93:main.c        ****         g_dist_mm += dmm_signed;
 189              		.loc 1 93 0 is_stmt 1 discriminator 4
 190 00f0 074B     		ldr	r3, .L7+4
 191 00f2 1A68     		ldr	r2, [r3]
 192 00f4 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 6


 193 00f6 1344     		add	r3, r3, r2
 194 00f8 054A     		ldr	r2, .L7+4
 195 00fa 1360     		str	r3, [r2]
 196              	.L2:
 197              	.LBE2:
  94:main.c        **** 
  95:main.c        ****         // Optionally add small smoothing for distance (comment this out if you don't want smoothin
  96:main.c        ****         // static int32_t v_mm = 0;
  97:main.c        ****         // v_mm = v_mm + ((dmm_signed - v_mm) >> 2); // ~alpha=0.25
  98:main.c        ****         // g_dist_mm += v_mm;
  99:main.c        ****     }
 100:main.c        **** 
 101:main.c        ****     (void)Timer_QD_ReadStatusRegister();  // Clear the interrupt flag
 198              		.loc 1 101 0
 199 00fc FFF7FEFF 		bl	Timer_QD_ReadStatusRegister
 102:main.c        **** }
 200              		.loc 1 102 0
 201 0100 00BF     		nop
 202 0102 3437     		adds	r7, r7, #52
 203              		.cfi_def_cfa_offset 36
 204 0104 BD46     		mov	sp, r7
 205              		.cfi_def_cfa_register 13
 206              		@ sp needed
 207 0106 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 208              	.L8:
 209 010a 00BF     		.align	2
 210              	.L7:
 211 010c 06000000 		.word	g_direction
 212 0110 08000000 		.word	g_dist_mm
 213              		.cfi_endproc
 214              	.LFE64:
 215              		.size	isr_qd_Handler, .-isr_qd_Handler
 216              		.global	__aeabi_i2f
 217              		.global	__aeabi_fdiv
 218              		.section	.text.norm01_from_pp,"ax",%progbits
 219              		.align	2
 220              		.thumb
 221              		.thumb_func
 222              		.type	norm01_from_pp, %function
 223              	norm01_from_pp:
 224              	.LFB65:
 103:main.c        **** 
 104:main.c        **** /* Utility: normalize peak-to-peak to [0..1] */
 105:main.c        **** static inline float norm01_from_pp(uint16_t pp)
 106:main.c        **** {
 225              		.loc 1 106 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 8
 228              		@ frame_needed = 1, uses_anonymous_args = 0
 229 0000 80B5     		push	{r7, lr}
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 82B0     		sub	sp, sp, #8
 234              		.cfi_def_cfa_offset 16
 235 0004 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 7


 237 0006 0346     		mov	r3, r0
 238 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 107:main.c        ****     if (pp <= S_MINC_COUNTS) return 0.0f;
 239              		.loc 1 107 0
 240 000a FB88     		ldrh	r3, [r7, #6]
 241 000c 0A2B     		cmp	r3, #10
 242 000e 02D8     		bhi	.L10
 243              		.loc 1 107 0 is_stmt 0 discriminator 1
 244 0010 4FF00003 		mov	r3, #0
 245 0014 10E0     		b	.L11
 246              	.L10:
 108:main.c        ****     if (pp >= S_MAXC_COUNTS) return 1.0f;
 247              		.loc 1 108 0 is_stmt 1
 248 0016 FB88     		ldrh	r3, [r7, #6]
 249 0018 632B     		cmp	r3, #99
 250 001a 02D9     		bls	.L12
 251              		.loc 1 108 0 is_stmt 0 discriminator 1
 252 001c 4FF07E53 		mov	r3, #1065353216
 253 0020 0AE0     		b	.L11
 254              	.L12:
 109:main.c        ****     return (float)(pp - S_MINC_COUNTS) / (float)(S_MAXC_COUNTS - S_MINC_COUNTS);
 255              		.loc 1 109 0 is_stmt 1
 256 0022 FB88     		ldrh	r3, [r7, #6]
 257 0024 0A3B     		subs	r3, r3, #10
 258 0026 1846     		mov	r0, r3
 259 0028 FFF7FEFF 		bl	__aeabi_i2f
 260 002c 0346     		mov	r3, r0
 261 002e 0449     		ldr	r1, .L13
 262 0030 1846     		mov	r0, r3
 263 0032 FFF7FEFF 		bl	__aeabi_fdiv
 264 0036 0346     		mov	r3, r0
 265              	.L11:
 110:main.c        **** }
 266              		.loc 1 110 0
 267 0038 1846     		mov	r0, r3
 268 003a 0837     		adds	r7, r7, #8
 269              		.cfi_def_cfa_offset 8
 270 003c BD46     		mov	sp, r7
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 003e 80BD     		pop	{r7, pc}
 274              	.L14:
 275              		.align	2
 276              	.L13:
 277 0040 0000B442 		.word	1119092736
 278              		.cfi_endproc
 279              	.LFE65:
 280              		.size	norm01_from_pp, .-norm01_from_pp
 281              		.section	.text.light_sensors_update_and_maybe_request_turn,"ax",%progbits
 282              		.align	2
 283              		.thumb
 284              		.thumb_func
 285              		.type	light_sensors_update_and_maybe_request_turn, %function
 286              	light_sensors_update_and_maybe_request_turn:
 287              	.LFB66:
 111:main.c        **** 
 112:main.c        **** /* Read sensors and (maybe) request a turn based on S1 / S2 (kept) */
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 8


 113:main.c        **** static void light_sensors_update_and_maybe_request_turn(uint16_t* V4_pp, uint16_t* V5_pp, uint16_t*
 114:main.c        **** {
 288              		.loc 1 114 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 32
 291              		@ frame_needed = 1, uses_anonymous_args = 0
 292 0000 80B5     		push	{r7, lr}
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 7, -8
 295              		.cfi_offset 14, -4
 296 0002 88B0     		sub	sp, sp, #32
 297              		.cfi_def_cfa_offset 40
 298 0004 00AF     		add	r7, sp, #0
 299              		.cfi_def_cfa_register 7
 300 0006 F860     		str	r0, [r7, #12]
 301 0008 B960     		str	r1, [r7, #8]
 302 000a 7A60     		str	r2, [r7, #4]
 115:main.c        ****     uint16_t V1 = Sensor_ComputePeakToPeak(0);
 303              		.loc 1 115 0
 304 000c 0020     		movs	r0, #0
 305 000e FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 306 0012 0346     		mov	r3, r0
 307 0014 FB83     		strh	r3, [r7, #30]	@ movhi
 116:main.c        ****     uint16_t V2 = Sensor_ComputePeakToPeak(1);
 308              		.loc 1 116 0
 309 0016 0120     		movs	r0, #1
 310 0018 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 311 001c 0346     		mov	r3, r0
 312 001e BB83     		strh	r3, [r7, #28]	@ movhi
 117:main.c        ****     uint16_t V3 = Sensor_ComputePeakToPeak(2);
 313              		.loc 1 117 0
 314 0020 0220     		movs	r0, #2
 315 0022 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 316 0026 0346     		mov	r3, r0
 317 0028 7B83     		strh	r3, [r7, #26]	@ movhi
 118:main.c        ****     uint16_t V4 = Sensor_ComputePeakToPeak(3);
 318              		.loc 1 118 0
 319 002a 0320     		movs	r0, #3
 320 002c FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 321 0030 0346     		mov	r3, r0
 322 0032 3B83     		strh	r3, [r7, #24]	@ movhi
 119:main.c        ****     uint16_t V5 = Sensor_ComputePeakToPeak(4);
 323              		.loc 1 119 0
 324 0034 0420     		movs	r0, #4
 325 0036 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 326 003a 0346     		mov	r3, r0
 327 003c FB82     		strh	r3, [r7, #22]	@ movhi
 120:main.c        ****     uint16_t V6 = Sensor_ComputePeakToPeak(5);
 328              		.loc 1 120 0
 329 003e 0520     		movs	r0, #5
 330 0040 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 331 0044 0346     		mov	r3, r0
 332 0046 BB82     		strh	r3, [r7, #20]	@ movhi
 121:main.c        **** 
 122:main.c        ****     if (V4_pp) *V4_pp = V4;
 333              		.loc 1 122 0
 334 0048 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 9


 335 004a 002B     		cmp	r3, #0
 336 004c 02D0     		beq	.L16
 337              		.loc 1 122 0 is_stmt 0 discriminator 1
 338 004e FB68     		ldr	r3, [r7, #12]
 339 0050 3A8B     		ldrh	r2, [r7, #24]	@ movhi
 340 0052 1A80     		strh	r2, [r3]	@ movhi
 341              	.L16:
 123:main.c        ****     if (V5_pp) *V5_pp = V5;
 342              		.loc 1 123 0 is_stmt 1
 343 0054 BB68     		ldr	r3, [r7, #8]
 344 0056 002B     		cmp	r3, #0
 345 0058 02D0     		beq	.L17
 346              		.loc 1 123 0 is_stmt 0 discriminator 1
 347 005a BB68     		ldr	r3, [r7, #8]
 348 005c FA8A     		ldrh	r2, [r7, #22]	@ movhi
 349 005e 1A80     		strh	r2, [r3]	@ movhi
 350              	.L17:
 124:main.c        ****     if (V6_pp) *V6_pp = V6;
 351              		.loc 1 124 0 is_stmt 1
 352 0060 7B68     		ldr	r3, [r7, #4]
 353 0062 002B     		cmp	r3, #0
 354 0064 02D0     		beq	.L18
 355              		.loc 1 124 0 is_stmt 0 discriminator 1
 356 0066 7B68     		ldr	r3, [r7, #4]
 357 0068 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 358 006a 1A80     		strh	r2, [r3]	@ movhi
 359              	.L18:
 125:main.c        ****     
 126:main.c        ****     sen1_on_line = (V1 > 10 && V1 < 100) ? 1u : 0u;
 360              		.loc 1 126 0 is_stmt 1
 361 006c FB8B     		ldrh	r3, [r7, #30]
 362 006e 0A2B     		cmp	r3, #10
 363 0070 04D9     		bls	.L19
 364              		.loc 1 126 0 is_stmt 0 discriminator 1
 365 0072 FB8B     		ldrh	r3, [r7, #30]
 366 0074 632B     		cmp	r3, #99
 367 0076 01D8     		bhi	.L19
 368              		.loc 1 126 0 discriminator 3
 369 0078 0122     		movs	r2, #1
 370 007a 00E0     		b	.L20
 371              	.L19:
 372              		.loc 1 126 0 discriminator 4
 373 007c 0022     		movs	r2, #0
 374              	.L20:
 375              		.loc 1 126 0 discriminator 6
 376 007e 2A4B     		ldr	r3, .L34
 377 0080 1A70     		strb	r2, [r3]
 127:main.c        ****     sen2_on_line = (V2 > 10 && V2 < 100) ? 1u : 0u;
 378              		.loc 1 127 0 is_stmt 1 discriminator 6
 379 0082 BB8B     		ldrh	r3, [r7, #28]
 380 0084 0A2B     		cmp	r3, #10
 381 0086 04D9     		bls	.L21
 382              		.loc 1 127 0 is_stmt 0 discriminator 1
 383 0088 BB8B     		ldrh	r3, [r7, #28]
 384 008a 632B     		cmp	r3, #99
 385 008c 01D8     		bhi	.L21
 386              		.loc 1 127 0 discriminator 3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 10


 387 008e 0122     		movs	r2, #1
 388 0090 00E0     		b	.L22
 389              	.L21:
 390              		.loc 1 127 0 discriminator 4
 391 0092 0022     		movs	r2, #0
 392              	.L22:
 393              		.loc 1 127 0 discriminator 6
 394 0094 254B     		ldr	r3, .L34+4
 395 0096 1A70     		strb	r2, [r3]
 128:main.c        ****     sen3_on_line = (V3 > 10 && V3 < 100) ? 1u : 0u;
 396              		.loc 1 128 0 is_stmt 1 discriminator 6
 397 0098 7B8B     		ldrh	r3, [r7, #26]
 398 009a 0A2B     		cmp	r3, #10
 399 009c 04D9     		bls	.L23
 400              		.loc 1 128 0 is_stmt 0 discriminator 1
 401 009e 7B8B     		ldrh	r3, [r7, #26]
 402 00a0 632B     		cmp	r3, #99
 403 00a2 01D8     		bhi	.L23
 404              		.loc 1 128 0 discriminator 3
 405 00a4 0122     		movs	r2, #1
 406 00a6 00E0     		b	.L24
 407              	.L23:
 408              		.loc 1 128 0 discriminator 4
 409 00a8 0022     		movs	r2, #0
 410              	.L24:
 411              		.loc 1 128 0 discriminator 6
 412 00aa 214B     		ldr	r3, .L34+8
 413 00ac 1A70     		strb	r2, [r3]
 129:main.c        ****     sen4_on_line = (V4 > 10 && V4 < 100) ? 1u : 0u;
 414              		.loc 1 129 0 is_stmt 1 discriminator 6
 415 00ae 3B8B     		ldrh	r3, [r7, #24]
 416 00b0 0A2B     		cmp	r3, #10
 417 00b2 04D9     		bls	.L25
 418              		.loc 1 129 0 is_stmt 0 discriminator 1
 419 00b4 3B8B     		ldrh	r3, [r7, #24]
 420 00b6 632B     		cmp	r3, #99
 421 00b8 01D8     		bhi	.L25
 422              		.loc 1 129 0 discriminator 3
 423 00ba 0122     		movs	r2, #1
 424 00bc 00E0     		b	.L26
 425              	.L25:
 426              		.loc 1 129 0 discriminator 4
 427 00be 0022     		movs	r2, #0
 428              	.L26:
 429              		.loc 1 129 0 discriminator 6
 430 00c0 1C4B     		ldr	r3, .L34+12
 431 00c2 1A70     		strb	r2, [r3]
 130:main.c        ****     sen5_on_line = (V5 > 10 && V5 < 100) ? 1u : 0u;
 432              		.loc 1 130 0 is_stmt 1 discriminator 6
 433 00c4 FB8A     		ldrh	r3, [r7, #22]
 434 00c6 0A2B     		cmp	r3, #10
 435 00c8 04D9     		bls	.L27
 436              		.loc 1 130 0 is_stmt 0 discriminator 1
 437 00ca FB8A     		ldrh	r3, [r7, #22]
 438 00cc 632B     		cmp	r3, #99
 439 00ce 01D8     		bhi	.L27
 440              		.loc 1 130 0 discriminator 3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 11


 441 00d0 0122     		movs	r2, #1
 442 00d2 00E0     		b	.L28
 443              	.L27:
 444              		.loc 1 130 0 discriminator 4
 445 00d4 0022     		movs	r2, #0
 446              	.L28:
 447              		.loc 1 130 0 discriminator 6
 448 00d6 184B     		ldr	r3, .L34+16
 449 00d8 1A70     		strb	r2, [r3]
 131:main.c        ****     sen6_on_line = (V6 > 10 && V6 < 100) ? 1u : 0u;
 450              		.loc 1 131 0 is_stmt 1 discriminator 6
 451 00da BB8A     		ldrh	r3, [r7, #20]
 452 00dc 0A2B     		cmp	r3, #10
 453 00de 04D9     		bls	.L29
 454              		.loc 1 131 0 is_stmt 0 discriminator 1
 455 00e0 BB8A     		ldrh	r3, [r7, #20]
 456 00e2 632B     		cmp	r3, #99
 457 00e4 01D8     		bhi	.L29
 458              		.loc 1 131 0 discriminator 3
 459 00e6 0122     		movs	r2, #1
 460 00e8 00E0     		b	.L30
 461              	.L29:
 462              		.loc 1 131 0 discriminator 4
 463 00ea 0022     		movs	r2, #0
 464              	.L30:
 465              		.loc 1 131 0 discriminator 6
 466 00ec 134B     		ldr	r3, .L34+20
 467 00ee 1A70     		strb	r2, [r3]
 132:main.c        **** 
 133:main.c        ****     if (g_direction == 0u && turn_cooldown_ticks == 0u){
 468              		.loc 1 133 0 is_stmt 1 discriminator 6
 469 00f0 134B     		ldr	r3, .L34+24
 470 00f2 1B78     		ldrb	r3, [r3]
 471 00f4 DBB2     		uxtb	r3, r3
 472 00f6 002B     		cmp	r3, #0
 473 00f8 12D1     		bne	.L33
 474              		.loc 1 133 0 is_stmt 0 discriminator 1
 475 00fa 124B     		ldr	r3, .L34+28
 476 00fc 1B88     		ldrh	r3, [r3]
 477 00fe 002B     		cmp	r3, #0
 478 0100 0ED1     		bne	.L33
 134:main.c        ****         if (sen1_on_line){
 479              		.loc 1 134 0 is_stmt 1
 480 0102 094B     		ldr	r3, .L34
 481 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 482 0106 002B     		cmp	r3, #0
 483 0108 03D0     		beq	.L32
 135:main.c        ****             g_direction = 1;  // LEFT turn
 484              		.loc 1 135 0
 485 010a 0D4B     		ldr	r3, .L34+24
 486 010c 0122     		movs	r2, #1
 487 010e 1A70     		strb	r2, [r3]
 136:main.c        ****         } else if (sen2_on_line){
 137:main.c        ****             g_direction = 2;  // RIGHT turn
 138:main.c        ****         }
 139:main.c        ****     }
 140:main.c        **** }
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 12


 488              		.loc 1 140 0
 489 0110 06E0     		b	.L33
 490              	.L32:
 136:main.c        ****         } else if (sen2_on_line){
 491              		.loc 1 136 0
 492 0112 064B     		ldr	r3, .L34+4
 493 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 494 0116 002B     		cmp	r3, #0
 495 0118 02D0     		beq	.L33
 137:main.c        ****         }
 496              		.loc 1 137 0
 497 011a 094B     		ldr	r3, .L34+24
 498 011c 0222     		movs	r2, #2
 499 011e 1A70     		strb	r2, [r3]
 500              	.L33:
 501              		.loc 1 140 0
 502 0120 00BF     		nop
 503 0122 2037     		adds	r7, r7, #32
 504              		.cfi_def_cfa_offset 8
 505 0124 BD46     		mov	sp, r7
 506              		.cfi_def_cfa_register 13
 507              		@ sp needed
 508 0126 80BD     		pop	{r7, pc}
 509              	.L35:
 510              		.align	2
 511              	.L34:
 512 0128 00000000 		.word	sen1_on_line
 513 012c 01000000 		.word	sen2_on_line
 514 0130 02000000 		.word	sen3_on_line
 515 0134 03000000 		.word	sen4_on_line
 516 0138 04000000 		.word	sen5_on_line
 517 013c 05000000 		.word	sen6_on_line
 518 0140 06000000 		.word	g_direction
 519 0144 10000000 		.word	turn_cooldown_ticks
 520              		.cfi_endproc
 521              	.LFE66:
 522              		.size	light_sensors_update_and_maybe_request_turn, .-light_sensors_update_and_maybe_request_turn
 523              		.global	__aeabi_fcmplt
 524              		.global	__aeabi_fcmpgt
 525              		.section	.text._clampf,"ax",%progbits
 526              		.align	2
 527              		.thumb
 528              		.thumb_func
 529              		.type	_clampf, %function
 530              	_clampf:
 531              	.LFB67:
 141:main.c        **** 
 142:main.c        **** /* ================= PI Controller (same as your current file) ================= */
 143:main.c        **** #define STEER_MAX        15
 144:main.c        **** #define KP               18.0f
 145:main.c        **** #define KI               2.0f
 146:main.c        **** #define INT_LIM          30.0f
 147:main.c        **** #define LOSS_TIMEOUT_T   0.25f
 148:main.c        **** 
 149:main.c        **** typedef struct { float i, u, t_loss; } pi_t;
 150:main.c        **** static inline float _clampf(float x, float lo, float hi){ return (x<lo?lo:(x>hi?hi:x)); }
 532              		.loc 1 150 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 13


 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 16
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 0000 80B5     		push	{r7, lr}
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 84B0     		sub	sp, sp, #16
 541              		.cfi_def_cfa_offset 24
 542 0004 00AF     		add	r7, sp, #0
 543              		.cfi_def_cfa_register 7
 544 0006 F860     		str	r0, [r7, #12]	@ float
 545 0008 B960     		str	r1, [r7, #8]	@ float
 546 000a 7A60     		str	r2, [r7, #4]	@ float
 547              		.loc 1 150 0
 548 000c B968     		ldr	r1, [r7, #8]	@ float
 549 000e F868     		ldr	r0, [r7, #12]	@ float
 550 0010 FFF7FEFF 		bl	__aeabi_fcmplt
 551 0014 0346     		mov	r3, r0
 552 0016 002B     		cmp	r3, #0
 553 0018 01D0     		beq	.L46
 554              		.loc 1 150 0 is_stmt 0 discriminator 1
 555 001a BB68     		ldr	r3, [r7, #8]	@ float
 556 001c 09E0     		b	.L43
 557              	.L46:
 558              		.loc 1 150 0 discriminator 2
 559 001e 7968     		ldr	r1, [r7, #4]	@ float
 560 0020 F868     		ldr	r0, [r7, #12]	@ float
 561 0022 FFF7FEFF 		bl	__aeabi_fcmpgt
 562 0026 0346     		mov	r3, r0
 563 0028 002B     		cmp	r3, #0
 564 002a 01D0     		beq	.L47
 565              		.loc 1 150 0 discriminator 4
 566 002c 7B68     		ldr	r3, [r7, #4]	@ float
 567 002e 00E0     		b	.L43
 568              	.L47:
 569              		.loc 1 150 0 discriminator 5
 570 0030 FB68     		ldr	r3, [r7, #12]	@ float
 571              	.L43:
 572              		.loc 1 150 0 discriminator 9
 573 0032 1846     		mov	r0, r3
 574 0034 1037     		adds	r7, r7, #16
 575              		.cfi_def_cfa_offset 8
 576 0036 BD46     		mov	sp, r7
 577              		.cfi_def_cfa_register 13
 578              		@ sp needed
 579 0038 80BD     		pop	{r7, pc}
 580              		.cfi_endproc
 581              	.LFE67:
 582              		.size	_clampf, .-_clampf
 583              		.global	__aeabi_fmul
 584              		.global	__aeabi_fadd
 585              		.global	__aeabi_fsub
 586              		.global	__aeabi_fcmpge
 587              		.global	__aeabi_f2iz
 588              		.global	__aeabi_fcmple
 589 003a 00BF     		.section	.text.pi_step,"ax",%progbits
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 14


 590              		.align	2
 591              		.thumb
 592              		.thumb_func
 593              		.type	pi_step, %function
 594              	pi_step:
 595              	.LFB68:
 151:main.c        **** 
 152:main.c        **** static int pi_step(pi_t* pi, uint16_t V4_pp, uint16_t V5_pp, uint16_t V6_pp)
 153:main.c        **** {
 596              		.loc 1 153 0 is_stmt 1
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 64
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600 0000 90B5     		push	{r4, r7, lr}
 601              		.cfi_def_cfa_offset 12
 602              		.cfi_offset 4, -12
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0002 91B0     		sub	sp, sp, #68
 606              		.cfi_def_cfa_offset 80
 607 0004 00AF     		add	r7, sp, #0
 608              		.cfi_def_cfa_register 7
 609 0006 F860     		str	r0, [r7, #12]
 610 0008 0846     		mov	r0, r1
 611 000a 1146     		mov	r1, r2
 612 000c 1A46     		mov	r2, r3
 613 000e 0346     		mov	r3, r0	@ movhi
 614 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 615 0012 0B46     		mov	r3, r1	@ movhi
 616 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 617 0016 1346     		mov	r3, r2	@ movhi
 618 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 154:main.c        ****     float c4 = norm01_from_pp(V4_pp)*1.5f;
 619              		.loc 1 154 0
 620 001a 7B89     		ldrh	r3, [r7, #10]
 621 001c 1846     		mov	r0, r3
 622 001e FFF7FEFF 		bl	norm01_from_pp
 623 0022 0346     		mov	r3, r0
 624 0024 4FF07F51 		mov	r1, #1069547520
 625 0028 1846     		mov	r0, r3
 626 002a FFF7FEFF 		bl	__aeabi_fmul
 627 002e 0346     		mov	r3, r0
 628 0030 BB63     		str	r3, [r7, #56]	@ float
 155:main.c        ****     float c5 = norm01_from_pp(V5_pp)*1.5f;
 629              		.loc 1 155 0
 630 0032 3B89     		ldrh	r3, [r7, #8]
 631 0034 1846     		mov	r0, r3
 632 0036 FFF7FEFF 		bl	norm01_from_pp
 633 003a 0346     		mov	r3, r0
 634 003c 4FF07F51 		mov	r1, #1069547520
 635 0040 1846     		mov	r0, r3
 636 0042 FFF7FEFF 		bl	__aeabi_fmul
 637 0046 0346     		mov	r3, r0
 638 0048 7B63     		str	r3, [r7, #52]	@ float
 156:main.c        ****     float c6 = norm01_from_pp(V6_pp)*1.5f;
 639              		.loc 1 156 0
 640 004a FB88     		ldrh	r3, [r7, #6]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 15


 641 004c 1846     		mov	r0, r3
 642 004e FFF7FEFF 		bl	norm01_from_pp
 643 0052 0346     		mov	r3, r0
 644 0054 4FF07F51 		mov	r1, #1069547520
 645 0058 1846     		mov	r0, r3
 646 005a FFF7FEFF 		bl	__aeabi_fmul
 647 005e 0346     		mov	r3, r0
 648 0060 3B63     		str	r3, [r7, #48]	@ float
 157:main.c        ****     float sum = c4 + c5 + c6;
 649              		.loc 1 157 0
 650 0062 796B     		ldr	r1, [r7, #52]	@ float
 651 0064 B86B     		ldr	r0, [r7, #56]	@ float
 652 0066 FFF7FEFF 		bl	__aeabi_fadd
 653 006a 0346     		mov	r3, r0
 654 006c 396B     		ldr	r1, [r7, #48]	@ float
 655 006e 1846     		mov	r0, r3
 656 0070 FFF7FEFF 		bl	__aeabi_fadd
 657 0074 0346     		mov	r3, r0
 658 0076 FB62     		str	r3, [r7, #44]	@ float
 158:main.c        ****     bool valid = (sum > 0.08f);
 659              		.loc 1 158 0
 660 0078 0123     		movs	r3, #1
 661 007a 1C46     		mov	r4, r3
 662 007c 7849     		ldr	r1, .L68
 663 007e F86A     		ldr	r0, [r7, #44]	@ float
 664 0080 FFF7FEFF 		bl	__aeabi_fcmpgt
 665 0084 0346     		mov	r3, r0
 666 0086 002B     		cmp	r3, #0
 667 0088 01D1     		bne	.L49
 668 008a 0023     		movs	r3, #0
 669 008c 1C46     		mov	r4, r3
 670              	.L49:
 671 008e 87F82B40 		strb	r4, [r7, #43]
 159:main.c        **** 
 160:main.c        ****     float pos = 0.0f;
 672              		.loc 1 160 0
 673 0092 4FF00003 		mov	r3, #0
 674 0096 FB63     		str	r3, [r7, #60]	@ float
 161:main.c        ****     if (valid) pos = (-1.0f * c4 + 0.0f * c5 + 1.0f * c6) / sum;
 675              		.loc 1 161 0
 676 0098 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 677 009c 002B     		cmp	r3, #0
 678 009e 15D0     		beq	.L50
 679              		.loc 1 161 0 is_stmt 0 discriminator 1
 680 00a0 4FF00001 		mov	r1, #0
 681 00a4 786B     		ldr	r0, [r7, #52]	@ float
 682 00a6 FFF7FEFF 		bl	__aeabi_fmul
 683 00aa 0346     		mov	r3, r0
 684 00ac B96B     		ldr	r1, [r7, #56]	@ float
 685 00ae 1846     		mov	r0, r3
 686 00b0 FFF7FEFF 		bl	__aeabi_fsub
 687 00b4 0346     		mov	r3, r0
 688 00b6 396B     		ldr	r1, [r7, #48]	@ float
 689 00b8 1846     		mov	r0, r3
 690 00ba FFF7FEFF 		bl	__aeabi_fadd
 691 00be 0346     		mov	r3, r0
 692 00c0 F96A     		ldr	r1, [r7, #44]	@ float
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 16


 693 00c2 1846     		mov	r0, r3
 694 00c4 FFF7FEFF 		bl	__aeabi_fdiv
 695 00c8 0346     		mov	r3, r0
 696 00ca FB63     		str	r3, [r7, #60]	@ float
 697              	.L50:
 162:main.c        **** 
 163:main.c        ****     float e = pos;
 698              		.loc 1 163 0 is_stmt 1
 699 00cc FB6B     		ldr	r3, [r7, #60]	@ float
 700 00ce 7B62     		str	r3, [r7, #36]	@ float
 164:main.c        **** 
 165:main.c        ****     if (!valid) {
 701              		.loc 1 165 0
 702 00d0 97F82B30 		ldrb	r3, [r7, #43]
 703 00d4 83F00103 		eor	r3, r3, #1
 704 00d8 DBB2     		uxtb	r3, r3
 705 00da 002B     		cmp	r3, #0
 706 00dc 2AD0     		beq	.L51
 166:main.c        ****         pi->t_loss += DT_S;
 707              		.loc 1 166 0
 708 00de FB68     		ldr	r3, [r7, #12]
 709 00e0 9B68     		ldr	r3, [r3, #8]	@ float
 710 00e2 6049     		ldr	r1, .L68+4
 711 00e4 1846     		mov	r0, r3
 712 00e6 FFF7FEFF 		bl	__aeabi_fadd
 713 00ea 0346     		mov	r3, r0
 714 00ec 1A46     		mov	r2, r3
 715 00ee FB68     		ldr	r3, [r7, #12]
 716 00f0 9A60     		str	r2, [r3, #8]	@ float
 167:main.c        ****         if (pi->t_loss >= LOSS_TIMEOUT_T) pi->i *= 0.92f;
 717              		.loc 1 167 0
 718 00f2 FB68     		ldr	r3, [r7, #12]
 719 00f4 9B68     		ldr	r3, [r3, #8]	@ float
 720 00f6 4FF07A51 		mov	r1, #1048576000
 721 00fa 1846     		mov	r0, r3
 722 00fc FFF7FEFF 		bl	__aeabi_fcmpge
 723 0100 0346     		mov	r3, r0
 724 0102 002B     		cmp	r3, #0
 725 0104 09D0     		beq	.L52
 726              		.loc 1 167 0 is_stmt 0 discriminator 1
 727 0106 FB68     		ldr	r3, [r7, #12]
 728 0108 1B68     		ldr	r3, [r3]	@ float
 729 010a 5749     		ldr	r1, .L68+8
 730 010c 1846     		mov	r0, r3
 731 010e FFF7FEFF 		bl	__aeabi_fmul
 732 0112 0346     		mov	r3, r0
 733 0114 1A46     		mov	r2, r3
 734 0116 FB68     		ldr	r3, [r7, #12]
 735 0118 1A60     		str	r2, [r3]	@ float
 736              	.L52:
 168:main.c        ****         return (int)_clampf(pi->u, -(float)STEER_MAX, (float)STEER_MAX);
 737              		.loc 1 168 0 is_stmt 1
 738 011a FB68     		ldr	r3, [r7, #12]
 739 011c 5B68     		ldr	r3, [r3, #4]	@ float
 740 011e 534A     		ldr	r2, .L68+12
 741 0120 5349     		ldr	r1, .L68+16
 742 0122 1846     		mov	r0, r3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 17


 743 0124 FFF7FEFF 		bl	_clampf
 744 0128 0346     		mov	r3, r0
 745 012a 1846     		mov	r0, r3
 746 012c FFF7FEFF 		bl	__aeabi_f2iz
 747 0130 0346     		mov	r3, r0
 748 0132 91E0     		b	.L54
 749              	.L51:
 169:main.c        ****     }
 170:main.c        ****     pi->t_loss = 0.0f;
 750              		.loc 1 170 0
 751 0134 FB68     		ldr	r3, [r7, #12]
 752 0136 4FF00002 		mov	r2, #0
 753 013a 9A60     		str	r2, [r3, #8]	@ float
 171:main.c        **** 
 172:main.c        ****     float i_next = _clampf(pi->i + e * DT_S, -INT_LIM, +INT_LIM);
 754              		.loc 1 172 0
 755 013c FB68     		ldr	r3, [r7, #12]
 756 013e 1C68     		ldr	r4, [r3]	@ float
 757 0140 4849     		ldr	r1, .L68+4
 758 0142 786A     		ldr	r0, [r7, #36]	@ float
 759 0144 FFF7FEFF 		bl	__aeabi_fmul
 760 0148 0346     		mov	r3, r0
 761 014a 1946     		mov	r1, r3
 762 014c 2046     		mov	r0, r4
 763 014e FFF7FEFF 		bl	__aeabi_fadd
 764 0152 0346     		mov	r3, r0
 765 0154 474A     		ldr	r2, .L68+20
 766 0156 4849     		ldr	r1, .L68+24
 767 0158 1846     		mov	r0, r3
 768 015a FFF7FEFF 		bl	_clampf
 769 015e 3862     		str	r0, [r7, #32]	@ float
 173:main.c        ****     float u_raw  = KP * e + KI * i_next;
 770              		.loc 1 173 0
 771 0160 4649     		ldr	r1, .L68+28
 772 0162 786A     		ldr	r0, [r7, #36]	@ float
 773 0164 FFF7FEFF 		bl	__aeabi_fmul
 774 0168 0346     		mov	r3, r0
 775 016a 1C46     		mov	r4, r3
 776 016c 3B6A     		ldr	r3, [r7, #32]	@ float
 777 016e 1946     		mov	r1, r3
 778 0170 1846     		mov	r0, r3
 779 0172 FFF7FEFF 		bl	__aeabi_fadd
 780 0176 0346     		mov	r3, r0
 781 0178 1946     		mov	r1, r3
 782 017a 2046     		mov	r0, r4
 783 017c FFF7FEFF 		bl	__aeabi_fadd
 784 0180 0346     		mov	r3, r0
 785 0182 FB61     		str	r3, [r7, #28]	@ float
 174:main.c        ****     float u      = _clampf(u_raw, -(float)STEER_MAX, (float)STEER_MAX);
 786              		.loc 1 174 0
 787 0184 394A     		ldr	r2, .L68+12
 788 0186 3A49     		ldr	r1, .L68+16
 789 0188 F869     		ldr	r0, [r7, #28]	@ float
 790 018a FFF7FEFF 		bl	_clampf
 791 018e B861     		str	r0, [r7, #24]	@ float
 175:main.c        **** 
 176:main.c        ****     bool sat_hi = (u >=  (float)STEER_MAX - 1e-3f);
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 18


 792              		.loc 1 176 0
 793 0190 0123     		movs	r3, #1
 794 0192 1C46     		mov	r4, r3
 795 0194 3A49     		ldr	r1, .L68+32
 796 0196 B869     		ldr	r0, [r7, #24]	@ float
 797 0198 FFF7FEFF 		bl	__aeabi_fcmpge
 798 019c 0346     		mov	r3, r0
 799 019e 002B     		cmp	r3, #0
 800 01a0 01D1     		bne	.L55
 801 01a2 0023     		movs	r3, #0
 802 01a4 1C46     		mov	r4, r3
 803              	.L55:
 804 01a6 FC75     		strb	r4, [r7, #23]
 177:main.c        ****     bool sat_lo = (u <= -(float)STEER_MAX + 1e-3f);
 805              		.loc 1 177 0
 806 01a8 0123     		movs	r3, #1
 807 01aa 1C46     		mov	r4, r3
 808 01ac 3549     		ldr	r1, .L68+36
 809 01ae B869     		ldr	r0, [r7, #24]	@ float
 810 01b0 FFF7FEFF 		bl	__aeabi_fcmple
 811 01b4 0346     		mov	r3, r0
 812 01b6 002B     		cmp	r3, #0
 813 01b8 01D1     		bne	.L56
 814 01ba 0023     		movs	r3, #0
 815 01bc 1C46     		mov	r4, r3
 816              	.L56:
 817 01be BC75     		strb	r4, [r7, #22]
 178:main.c        **** 
 179:main.c        ****     if ((sat_hi && (KI * i_next > KI * pi->i)) ||
 818              		.loc 1 179 0
 819 01c0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 820 01c2 002B     		cmp	r3, #0
 821 01c4 14D0     		beq	.L57
 822              		.loc 1 179 0 is_stmt 0 discriminator 1
 823 01c6 3B6A     		ldr	r3, [r7, #32]	@ float
 824 01c8 1946     		mov	r1, r3
 825 01ca 1846     		mov	r0, r3
 826 01cc FFF7FEFF 		bl	__aeabi_fadd
 827 01d0 0346     		mov	r3, r0
 828 01d2 1C46     		mov	r4, r3
 829 01d4 FB68     		ldr	r3, [r7, #12]
 830 01d6 1B68     		ldr	r3, [r3]	@ float
 831 01d8 1946     		mov	r1, r3
 832 01da 1846     		mov	r0, r3
 833 01dc FFF7FEFF 		bl	__aeabi_fadd
 834 01e0 0346     		mov	r3, r0
 835 01e2 1946     		mov	r1, r3
 836 01e4 2046     		mov	r0, r4
 837 01e6 FFF7FEFF 		bl	__aeabi_fcmpgt
 838 01ea 0346     		mov	r3, r0
 839 01ec 002B     		cmp	r3, #0
 840 01ee 1AD1     		bne	.L59
 841              	.L57:
 842              		.loc 1 179 0 discriminator 3
 843 01f0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 844 01f2 002B     		cmp	r3, #0
 845 01f4 14D0     		beq	.L60
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 19


 180:main.c        ****         (sat_lo && (KI * i_next < KI * pi->i))) {
 846              		.loc 1 180 0 is_stmt 1
 847 01f6 3B6A     		ldr	r3, [r7, #32]	@ float
 848 01f8 1946     		mov	r1, r3
 849 01fa 1846     		mov	r0, r3
 850 01fc FFF7FEFF 		bl	__aeabi_fadd
 851 0200 0346     		mov	r3, r0
 852 0202 1C46     		mov	r4, r3
 853 0204 FB68     		ldr	r3, [r7, #12]
 854 0206 1B68     		ldr	r3, [r3]	@ float
 855 0208 1946     		mov	r1, r3
 856 020a 1846     		mov	r0, r3
 857 020c FFF7FEFF 		bl	__aeabi_fadd
 858 0210 0346     		mov	r3, r0
 859 0212 1946     		mov	r1, r3
 860 0214 2046     		mov	r0, r4
 861 0216 FFF7FEFF 		bl	__aeabi_fcmplt
 862 021a 0346     		mov	r3, r0
 863 021c 002B     		cmp	r3, #0
 864 021e 02D1     		bne	.L59
 865              	.L60:
 181:main.c        ****         /* donâ€™t integrate further into saturation */
 182:main.c        ****     } else {
 183:main.c        ****         pi->i = i_next;
 866              		.loc 1 183 0
 867 0220 FB68     		ldr	r3, [r7, #12]
 868 0222 3A6A     		ldr	r2, [r7, #32]	@ float
 869 0224 1A60     		str	r2, [r3]	@ float
 870              	.L59:
 184:main.c        ****     }
 185:main.c        **** 
 186:main.c        ****     pi->u = u;
 871              		.loc 1 186 0
 872 0226 FB68     		ldr	r3, [r7, #12]
 873 0228 BA69     		ldr	r2, [r7, #24]	@ float
 874 022a 5A60     		str	r2, [r3, #4]	@ float
 187:main.c        ****     return (int)(u + (u>=0?0.5f:-0.5f));
 875              		.loc 1 187 0
 876 022c 4FF00001 		mov	r1, #0
 877 0230 B869     		ldr	r0, [r7, #24]	@ float
 878 0232 FFF7FEFF 		bl	__aeabi_fcmpge
 879 0236 0346     		mov	r3, r0
 880 0238 002B     		cmp	r3, #0
 881 023a 02D0     		beq	.L67
 882              		.loc 1 187 0 is_stmt 0 discriminator 1
 883 023c 4FF07C53 		mov	r3, #1056964608
 884 0240 01E0     		b	.L64
 885              	.L67:
 886              		.loc 1 187 0 discriminator 2
 887 0242 4FF03F43 		mov	r3, #-1090519040
 888              	.L64:
 889              		.loc 1 187 0 discriminator 4
 890 0246 B969     		ldr	r1, [r7, #24]	@ float
 891 0248 1846     		mov	r0, r3
 892 024a FFF7FEFF 		bl	__aeabi_fadd
 893 024e 0346     		mov	r3, r0
 894 0250 1846     		mov	r0, r3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 20


 895 0252 FFF7FEFF 		bl	__aeabi_f2iz
 896 0256 0346     		mov	r3, r0
 897              	.L54:
 188:main.c        **** }
 898              		.loc 1 188 0 is_stmt 1
 899 0258 1846     		mov	r0, r3
 900 025a 4437     		adds	r7, r7, #68
 901              		.cfi_def_cfa_offset 12
 902 025c BD46     		mov	sp, r7
 903              		.cfi_def_cfa_register 13
 904              		@ sp needed
 905 025e 90BD     		pop	{r4, r7, pc}
 906              	.L69:
 907              		.align	2
 908              	.L68:
 909 0260 0AD7A33D 		.word	1034147594
 910 0264 6F12033C 		.word	1006834287
 911 0268 1F856B3F 		.word	1064011039
 912 026c 00007041 		.word	1097859072
 913 0270 000070C1 		.word	-1049624576
 914 0274 0000F041 		.word	1106247680
 915 0278 0000F0C1 		.word	-1041235968
 916 027c 00009041 		.word	1099956224
 917 0280 E7FB6F41 		.word	1097858023
 918 0284 E7FB6FC1 		.word	-1049625625
 919              		.cfi_endproc
 920              	.LFE68:
 921              		.size	pi_step, .-pi_step
 922              		.section	.rodata
 923              		.align	2
 924              	.LC0:
 925 0000 00       		.byte	0
 926 0001 01       		.byte	1
 927 0002 00       		.byte	0
 928 0003 02       		.byte	2
 929 0004 00       		.byte	0
 930 0005 02       		.byte	2
 931 0006 00       		.byte	0
 932 0007 00       		.byte	0
 933 0008 03       		.byte	3
 934 0009 00       		.byte	0
 935 000a 02       		.byte	2
 936 000b 00       		.byte	0
 937 000c 01       		.byte	1
 938 000d 00       		.byte	0
 939 000e 02       		.byte	2
 940 000f 00       		.byte	0
 941 0010 01       		.byte	1
 942 0011 00       		.byte	0
 943 0012 02       		.byte	2
 944 0013 00       		.byte	0
 945 0014 02       		.byte	2
 946 0015 00       		.byte	0
 947 0016 02       		.byte	2
 948 0017 00       		.byte	0
 949 0018 01       		.byte	1
 950 0019 00       		.byte	0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 21


 951 001a 03       		.byte	3
 952 001b 00       		.byte	0
 953 001c 02       		.byte	2
 954 001d 00       		.byte	0
 955 001e 01       		.byte	1
 956 001f 00       		.byte	0
 957 0020 00       		.byte	0
 958 0021 01       		.byte	1
 959 0022 00       		.byte	0
 960 0023 00       		.byte	0
 961 0024 00       		.byte	0
 962 0025 01       		.byte	1
 963 0026 00       		.byte	0
 964 0027 01       		.byte	1
 965 0028 00       		.byte	0
 966 0029 02       		.byte	2
 967 002a 00       		.byte	0
 968 002b 00       		.byte	0
 969 002c 02       		.byte	2
 970 002d 00       		.byte	0
 971 002e 01       		.byte	1
 972 002f 00       		.byte	0
 973 0030 02       		.byte	2
 974 0031 00       		.byte	0
 975 0032 06       		.byte	6
 976              		.section	.text.main,"ax",%progbits
 977              		.align	2
 978              		.global	main
 979              		.thumb
 980              		.thumb_func
 981              		.type	main, %function
 982              	main:
 983              	.LFB69:
 189:main.c        **** 
 190:main.c        **** int main(void)
 191:main.c        **** {
 984              		.loc 1 191 0
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 104
 987              		@ frame_needed = 1, uses_anonymous_args = 0
 988 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 989              		.cfi_def_cfa_offset 20
 990              		.cfi_offset 4, -20
 991              		.cfi_offset 5, -16
 992              		.cfi_offset 6, -12
 993              		.cfi_offset 7, -8
 994              		.cfi_offset 14, -4
 995 0002 9BB0     		sub	sp, sp, #108
 996              		.cfi_def_cfa_offset 128
 997 0004 00AF     		add	r7, sp, #0
 998              		.cfi_def_cfa_register 7
 192:main.c        ****     motor_enable(1u, 1u);
 999              		.loc 1 192 0
 1000 0006 0121     		movs	r1, #1
 1001 0008 0120     		movs	r0, #1
 1002 000a FFF7FEFF 		bl	motor_enable
 193:main.c        ****     CyGlobalIntEnable;
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 22


 1003              		.loc 1 193 0
 1004              		.syntax unified
 1005              	@ 193 "main.c" 1
 1006 000e 62B6     		CPSIE   i
 1007              	@ 0 "" 2
 194:main.c        **** 
 195:main.c        ****     /* ADC for sensors */
 196:main.c        ****     ADC_Start();
 1008              		.loc 1 196 0
 1009              		.thumb
 1010              		.syntax unified
 1011 0010 FFF7FEFF 		bl	ADC_Start
 197:main.c        ****     CyDelay(10);
 1012              		.loc 1 197 0
 1013 0014 0A20     		movs	r0, #10
 1014 0016 FFF7FEFF 		bl	CyDelay
 198:main.c        **** 
 199:main.c        ****     /* Encoders + 5 ms tick (distance only) */
 200:main.c        ****     Clock_QENC_Start();
 1015              		.loc 1 200 0
 1016 001a FFF7FEFF 		bl	Clock_QENC_Start
 201:main.c        ****     QuadDec_M1_Start(); QuadDec_M2_Start();
 1017              		.loc 1 201 0
 1018 001e FFF7FEFF 		bl	QuadDec_M1_Start
 1019 0022 FFF7FEFF 		bl	QuadDec_M2_Start
 202:main.c        ****     QuadDec_M1_SetCounter(0); QuadDec_M2_SetCounter(0);
 1020              		.loc 1 202 0
 1021 0026 0020     		movs	r0, #0
 1022 0028 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 1023 002c 0020     		movs	r0, #0
 1024 002e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 203:main.c        ****     Clock_QD_Start();
 1025              		.loc 1 203 0
 1026 0032 FFF7FEFF 		bl	Clock_QD_Start
 204:main.c        ****     Timer_QD_Start();  // 5 ms period in TopDesign
 1027              		.loc 1 204 0
 1028 0036 FFF7FEFF 		bl	Timer_QD_Start
 205:main.c        ****     isr_qd_StartEx(isr_qd_Handler);
 1029              		.loc 1 205 0
 1030 003a A248     		ldr	r0, .L131
 1031 003c FFF7FEFF 		bl	isr_qd_StartEx
 206:main.c        **** 
 207:main.c        ****     /* PWM & motor driver */
 208:main.c        ****     Clock_PWM_Start();
 1032              		.loc 1 208 0
 1033 0040 FFF7FEFF 		bl	Clock_PWM_Start
 209:main.c        ****     PWM_1_Start(); PWM_2_Start();
 1034              		.loc 1 209 0
 1035 0044 FFF7FEFF 		bl	PWM_1_Start
 1036 0048 FFF7FEFF 		bl	PWM_2_Start
 210:main.c        ****     PWM_1_WritePeriod(PWM_PERIOD);
 1037              		.loc 1 210 0
 1038 004c C820     		movs	r0, #200
 1039 004e FFF7FEFF 		bl	PWM_1_WritePeriod
 211:main.c        ****     PWM_2_WritePeriod(PWM_PERIOD);
 1040              		.loc 1 211 0
 1041 0052 C820     		movs	r0, #200
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 23


 1042 0054 FFF7FEFF 		bl	PWM_2_WritePeriod
 212:main.c        ****     set_motors_symmetric(0);
 1043              		.loc 1 212 0
 1044 0058 0020     		movs	r0, #0
 1045 005a FFF7FEFF 		bl	set_motors_symmetric
 213:main.c        ****     motor_enable(0u, 0u);
 1046              		.loc 1 213 0
 1047 005e 0021     		movs	r1, #0
 1048 0060 0020     		movs	r0, #0
 1049 0062 FFF7FEFF 		bl	motor_enable
 214:main.c        **** 
 215:main.c        ****     /* Directions module */
 216:main.c        ****     Directions_Init();
 1050              		.loc 1 216 0
 1051 0066 FFF7FEFF 		bl	Directions_Init
 217:main.c        ****     g_direction = 0u;
 1052              		.loc 1 217 0
 1053 006a 974B     		ldr	r3, .L131+4
 1054 006c 0022     		movs	r2, #0
 1055 006e 1A70     		strb	r2, [r3]
 218:main.c        **** 
 219:main.c        ****     /* Feed-forward cruise duty (kept) */
 220:main.c        ****     int center_duty_est = (int)((V_CRUISE_MM_S * 100) / VMAX_CONST_MM_S);
 1056              		.loc 1 220 0
 1057 0070 1423     		movs	r3, #20
 1058 0072 7B66     		str	r3, [r7, #100]
 221:main.c        ****     if (center_duty_est < 0) center_duty_est = 0;
 1059              		.loc 1 221 0
 1060 0074 7B6E     		ldr	r3, [r7, #100]
 1061 0076 002B     		cmp	r3, #0
 1062 0078 01DA     		bge	.L71
 1063              		.loc 1 221 0 is_stmt 0 discriminator 1
 1064 007a 0023     		movs	r3, #0
 1065 007c 7B66     		str	r3, [r7, #100]
 1066              	.L71:
 222:main.c        ****     if (center_duty_est > 100) center_duty_est = 100;
 1067              		.loc 1 222 0 is_stmt 1
 1068 007e 7B6E     		ldr	r3, [r7, #100]
 1069 0080 642B     		cmp	r3, #100
 1070 0082 01DD     		ble	.L72
 1071              		.loc 1 222 0 is_stmt 0 discriminator 1
 1072 0084 6423     		movs	r3, #100
 1073 0086 7B66     		str	r3, [r7, #100]
 1074              	.L72:
 223:main.c        **** 
 224:main.c        ****     /* PI state */
 225:main.c        ****     pi_t pi = { .i = 0.0f, .u = 0.0f, .t_loss = 0.0f };
 1075              		.loc 1 225 0 is_stmt 1
 1076 0088 4FF00003 		mov	r3, #0
 1077 008c FB63     		str	r3, [r7, #60]	@ float
 1078 008e 4FF00003 		mov	r3, #0
 1079 0092 3B64     		str	r3, [r7, #64]	@ float
 1080 0094 4FF00003 		mov	r3, #0
 1081 0098 7B64     		str	r3, [r7, #68]	@ float
 226:main.c        ****     
 227:main.c        ****     CyDelay(1000);  // So the motors don't jump
 1082              		.loc 1 227 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 24


 1083 009a 4FF47A70 		mov	r0, #1000
 1084 009e FFF7FEFF 		bl	CyDelay
 228:main.c        ****     set_motors_with_trim_and_steer(100,-10);
 1085              		.loc 1 228 0
 1086 00a2 6FF00901 		mvn	r1, #9
 1087 00a6 6420     		movs	r0, #100
 1088 00a8 FFF7FEFF 		bl	set_motors_with_trim_and_steer
 229:main.c        ****     CyDelay(40);
 1089              		.loc 1 229 0
 1090 00ac 2820     		movs	r0, #40
 1091 00ae FFF7FEFF 		bl	CyDelay
 230:main.c        ****     set_motors_symmetric(0); 
 1092              		.loc 1 230 0
 1093 00b2 0020     		movs	r0, #0
 1094 00b4 FFF7FEFF 		bl	set_motors_symmetric
 231:main.c        ****     
 232:main.c        ****     
 233:main.c        ****     // Pathfinding array
 234:main.c        ****     /* 
 235:main.c        ****      * STRAIGHT -> 0, TURN LEFT -> 1, TURN RIGHT -> 2, TURN U_TURN -> 3,
 236:main.c        ****      * REACH -> 5, END -> 6
 237:main.c        ****      */
 238:main.c        ****     
 239:main.c        **** const uint8_t CMD_STATES[] = {
 1095              		.loc 1 239 0
 1096 00b8 844B     		ldr	r3, .L131+8
 1097 00ba 1C46     		mov	r4, r3
 1098 00bc 07F10806 		add	r6, r7, #8
 1099 00c0 04F1300E 		add	lr, r4, #48
 1100              	.L73:
 1101 00c4 3546     		mov	r5, r6
 1102 00c6 2346     		mov	r3, r4
 1103 00c8 1868     		ldr	r0, [r3]	@ unaligned
 1104 00ca 5968     		ldr	r1, [r3, #4]	@ unaligned
 1105 00cc 9A68     		ldr	r2, [r3, #8]	@ unaligned
 1106 00ce DB68     		ldr	r3, [r3, #12]	@ unaligned
 1107 00d0 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1108 00d2 1034     		adds	r4, r4, #16
 1109 00d4 1036     		adds	r6, r6, #16
 1110 00d6 7445     		cmp	r4, lr
 1111 00d8 F4D1     		bne	.L73
 1112 00da 3346     		mov	r3, r6
 1113 00dc 2246     		mov	r2, r4
 1114 00de 1188     		ldrh	r1, [r2]	@ unaligned
 1115 00e0 9278     		ldrb	r2, [r2, #2]
 1116 00e2 1980     		strh	r1, [r3]	@ unaligned
 1117 00e4 9A70     		strb	r2, [r3, #2]
 240:main.c        ****     // 31 entries, aligned 1:1 with COMMANDS[i]
 241:main.c        **** //    0, // START
 242:main.c        **** //    2, // RIGHT
 243:main.c        **** //    0,
 244:main.c        **** //    2, // RIGHT
 245:main.c        ****     0,
 246:main.c        ****     1, // LEFT
 247:main.c        ****     0,
 248:main.c        ****     2, // RIGHT
 249:main.c        ****     0,
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 25


 250:main.c        ****     2, // RIGHT
 251:main.c        ****     0,
 252:main.c        ****     0,// 5, // REACH
 253:main.c        ****     3, // UTURN
 254:main.c        ****     0,
 255:main.c        ****     2, // RIGHT
 256:main.c        ****     0,
 257:main.c        ****     1, // LEFT
 258:main.c        ****     0,
 259:main.c        ****     2, // RIGHT
 260:main.c        ****     0,
 261:main.c        ****     1, // LEFT
 262:main.c        ****     0,// 5, // REACH
 263:main.c        ****     2, // RIGHT
 264:main.c        ****     0,
 265:main.c        ****     2, // RIGHT
 266:main.c        ****     0,
 267:main.c        ****     2, // RIGHT
 268:main.c        ****     0,
 269:main.c        ****     1, // LEFT
 270:main.c        ****     0,// 5, // REACH
 271:main.c        ****     3, // UTURN
 272:main.c        ****     0,
 273:main.c        ****     2, // RIGHT
 274:main.c        ****     0,
 275:main.c        ****     1, // LEFT
 276:main.c        ****     0,
 277:main.c        ****     0,
 278:main.c        ****     1, // LEFT
 279:main.c        ****     0,
 280:main.c        ****     0,
 281:main.c        ****     0,
 282:main.c        ****     1, // LEFT
 283:main.c        ****     0,// 5, // REACH
 284:main.c        ****     1, // LEFT
 285:main.c        ****     0,
 286:main.c        ****     2, // RIGHT
 287:main.c        ****     0,
 288:main.c        ****     0,
 289:main.c        ****     2, // RIGHT
 290:main.c        ****     0,
 291:main.c        ****     1, // LEFT
 292:main.c        ****     0,
 293:main.c        ****     2, // RIGHT
 294:main.c        ****     0,
 295:main.c        ****     6  // END
 296:main.c        **** }; 
 297:main.c        ****     int8_t indexMAX = 50;  // Loop index
 1118              		.loc 1 297 0
 1119 00e6 3223     		movs	r3, #50
 1120 00e8 87F85730 		strb	r3, [r7, #87]
 298:main.c        ****     
 299:main.c        ****     // For Testing
 300:main.c        ****     //const uint8_t CMD_STATES[] = {1,2};
 301:main.c        ****     //int8_t indexMAX = 1;  // Loop index
 302:main.c        ****     
 303:main.c        ****     
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 26


 304:main.c        ****     int8_t i = 0;  // Loop index
 1121              		.loc 1 304 0
 1122 00ec 0023     		movs	r3, #0
 1123 00ee 87F86330 		strb	r3, [r7, #99]
 305:main.c        ****     int32_t target_dist = 0;
 1124              		.loc 1 305 0
 1125 00f2 0023     		movs	r3, #0
 1126 00f4 FB65     		str	r3, [r7, #92]
 306:main.c        ****     
 307:main.c        ****     int8_t straight_complete = 0;
 1127              		.loc 1 307 0
 1128 00f6 0023     		movs	r3, #0
 1129 00f8 87F85B30 		strb	r3, [r7, #91]
 308:main.c        ****     int8_t turn_complete = 0;
 1130              		.loc 1 308 0
 1131 00fc 0023     		movs	r3, #0
 1132 00fe 87F85A30 		strb	r3, [r7, #90]
 309:main.c        ****     int8_t uTurn_complete = 0;
 1133              		.loc 1 309 0
 1134 0102 0023     		movs	r3, #0
 1135 0104 87F85930 		strb	r3, [r7, #89]
 310:main.c        ****     int8_t fruit_complete = 0;
 1136              		.loc 1 310 0
 1137 0108 0023     		movs	r3, #0
 1138 010a 87F85830 		strb	r3, [r7, #88]
 1139              	.L130:
 1140              	.LBB3:
 311:main.c        **** 
 312:main.c        ****     for(;;){
 313:main.c        ****         
 314:main.c        ****         // This check will make the robot stay stopped
 315:main.c        ****         // once the path is complete.
 316:main.c        ****         if (g_stop_now) {
 1141              		.loc 1 316 0
 1142 010e 704B     		ldr	r3, .L131+12
 1143 0110 1B78     		ldrb	r3, [r3]
 1144 0112 DBB2     		uxtb	r3, r3
 1145 0114 002B     		cmp	r3, #0
 1146 0116 07D0     		beq	.L74
 317:main.c        ****             set_motors_symmetric(0);
 1147              		.loc 1 317 0
 1148 0118 0020     		movs	r0, #0
 1149 011a FFF7FEFF 		bl	set_motors_symmetric
 318:main.c        ****             motor_enable(1u, 1u);
 1150              		.loc 1 318 0
 1151 011e 0121     		movs	r1, #1
 1152 0120 0120     		movs	r0, #1
 1153 0122 FFF7FEFF 		bl	motor_enable
 319:main.c        ****             continue;
 1154              		.loc 1 319 0
 1155 0126 84E2     		b	.L129
 1156              	.L74:
 320:main.c        ****         }
 321:main.c        **** 
 322:main.c        ****         /* Read sensors + maybe request turn */
 323:main.c        ****         uint16_t V4_pp=0, V5_pp=0, V6_pp=0;
 1157              		.loc 1 323 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 27


 1158 0128 0023     		movs	r3, #0
 1159 012a FB80     		strh	r3, [r7, #6]	@ movhi
 1160 012c 0023     		movs	r3, #0
 1161 012e BB80     		strh	r3, [r7, #4]	@ movhi
 1162 0130 0023     		movs	r3, #0
 1163 0132 7B80     		strh	r3, [r7, #2]	@ movhi
 324:main.c        ****         light_sensors_update_and_maybe_request_turn(&V4_pp, &V5_pp, &V6_pp);
 1164              		.loc 1 324 0
 1165 0134 BA1C     		adds	r2, r7, #2
 1166 0136 391D     		adds	r1, r7, #4
 1167 0138 BB1D     		adds	r3, r7, #6
 1168 013a 1846     		mov	r0, r3
 1169 013c FFF7FEFF 		bl	light_sensors_update_and_maybe_request_turn
 325:main.c        ****         
 326:main.c        **** 
 327:main.c        **** //        /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 328:main.c        **** //        /* Arm once on the first detection (edge 0 -> 1/2) */
 329:main.c        **** //        if ((g_direction == 1u || g_direction == 2u) && dir_latched_side == 0){
 330:main.c        **** //            dir_latched_side = g_direction;          /* remember side */
 331:main.c        **** //            dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 332:main.c        **** //            //CyDelay(50);
 333:main.c        **** //        }
 334:main.c        **** //        /* If request cleared during delay, cancel gracefully */
 335:main.c        **** //        if (g_direction == 0u && dir_latched_side != 0){
 336:main.c        **** //            dir_latched_side = 0;
 337:main.c        **** //            dir_delay_ticks  = 0;
 338:main.c        **** //        }
 339:main.c        **** //
 340:main.c        **** //        if (g_direction == 1u || g_direction == 2u){
 341:main.c        **** //            if (dir_delay_ticks > 0){
 342:main.c        **** //                /* Still delaying: keep doing normal straight PI */
 343:main.c        **** //                dir_delay_ticks--;
 344:main.c        **** //            } else {
 345:main.c        **** //                /* Delay elapsed: perform the maneuver */
 346:main.c        **** //                Directions_Handle(&g_direction);
 347:main.c        **** //
 348:main.c        **** //                /* When turn completes, Directions sets g_direction back to 0 */
 349:main.c        **** //                if (g_direction == 0u){
 350:main.c        **** //                    pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 351:main.c        **** //                    dir_latched_side = 0;                        /* ready next time */
 352:main.c        **** //                    
 353:main.c        **** //                    
 354:main.c        **** //                    turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 355:main.c        **** //                }
 356:main.c        **** //                CyDelay(LOOP_DT_MS);
 357:main.c        **** //                continue;  /* skip the rest this tick */
 358:main.c        **** //            }
 359:main.c        **** //        }
 360:main.c        **** //        /* ---------------- end turn handling with delay ---------------- */
 361:main.c        **** //
 362:main.c        **** //        /* Straight run with PI steering */
 363:main.c        **** //        
 364:main.c        **** //        if(turn_cooldown_ticks > 0) {
 365:main.c        **** //            turn_cooldown_ticks--;
 366:main.c        **** //        }
 367:main.c        **** //        
 368:main.c        **** //        /*
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 28


 369:main.c        **** //        // Add bias when back right sensor is under line
 370:main.c        **** //        uint16_t V5 = Sensor_ComputePeakToPeak(4);
 371:main.c        **** //        sen5_on_line = (V5 > 10 && V5 < 100) ? 1u : 0u;
 372:main.c        **** //        if (sen5_on_line == 1) {
 373:main.c        **** //            Motors_SetPercent(0,25);
 374:main.c        **** //            //set_motors_with_trim_and_steer(50,50); 
 375:main.c        **** //            CyDelay(10);
 376:main.c        **** //        } */
 377:main.c        ****         
 378:main.c        ****         
 379:main.c        **** //        int steer = pi_step(&pi, V4_pp, V5_pp, V6_pp);
 380:main.c        **** //        set_motors_with_trim_and_steer(center_duty_est, steer);
 381:main.c        **** //        
 382:main.c        **** //        
 383:main.c        **** //        /* Distance stop */    // g_dist_mm = total distance traveled
 384:main.c        **** //        g_stop_now = (g_dist_mm >= TARGET_DIST_MM) ? 1u : 0u;
 385:main.c        **** //        if (g_stop_now) {
 386:main.c        **** //            set_motors_symmetric(0);
 387:main.c        **** //            motor_enable(1u, 1u);
 388:main.c        **** //            g_direction = 0u;
 389:main.c        **** //            continue;
 390:main.c        **** //        }
 391:main.c        ****         
 392:main.c        ****         
 393:main.c        ****         
 394:main.c        ****         
 395:main.c        ****         /* Straight run with PI steering */        
 396:main.c        ****         if(turn_cooldown_ticks > 0) {
 1170              		.loc 1 396 0
 1171 0140 644B     		ldr	r3, .L131+16
 1172 0142 1B88     		ldrh	r3, [r3]
 1173 0144 002B     		cmp	r3, #0
 1174 0146 05D0     		beq	.L76
 397:main.c        ****             turn_cooldown_ticks--;
 1175              		.loc 1 397 0
 1176 0148 624B     		ldr	r3, .L131+16
 1177 014a 1B88     		ldrh	r3, [r3]
 1178 014c 013B     		subs	r3, r3, #1
 1179 014e 9AB2     		uxth	r2, r3
 1180 0150 604B     		ldr	r3, .L131+16
 1181 0152 1A80     		strh	r2, [r3]	@ movhi
 1182              	.L76:
 398:main.c        ****        }
 399:main.c        ****         
 400:main.c        ****         
 401:main.c        ****         // PATHFINDING ALGORITHM
 402:main.c        ****         
 403:main.c        ****         if (CMD_STATES[i] == 0) {
 1183              		.loc 1 403 0
 1184 0154 97F96330 		ldrsb	r3, [r7, #99]
 1185 0158 07F16802 		add	r2, r7, #104
 1186 015c 1344     		add	r3, r3, r2
 1187 015e 13F8603C 		ldrb	r3, [r3, #-96]	@ zero_extendqisi2
 1188 0162 002B     		cmp	r3, #0
 1189 0164 3ED1     		bne	.L77
 1190              	.LBB4:
 404:main.c        ****             // Go STRAIGHT
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 29


 405:main.c        ****             int steer = pi_step(&pi, V4_pp, V5_pp, V6_pp);
 1191              		.loc 1 405 0
 1192 0166 F988     		ldrh	r1, [r7, #6]
 1193 0168 BA88     		ldrh	r2, [r7, #4]
 1194 016a 7B88     		ldrh	r3, [r7, #2]
 1195 016c 07F13C00 		add	r0, r7, #60
 1196 0170 FFF7FEFF 		bl	pi_step
 1197 0174 3865     		str	r0, [r7, #80]
 406:main.c        ****             set_motors_with_trim_and_steer(center_duty_est, steer);
 1198              		.loc 1 406 0
 1199 0176 396D     		ldr	r1, [r7, #80]
 1200 0178 786E     		ldr	r0, [r7, #100]
 1201 017a FFF7FEFF 		bl	set_motors_with_trim_and_steer
 407:main.c        ****             
 408:main.c        ****             uint16_t V1 = Sensor_ComputePeakToPeak(0);
 1202              		.loc 1 408 0
 1203 017e 0020     		movs	r0, #0
 1204 0180 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 1205 0184 0346     		mov	r3, r0
 1206 0186 A7F84E30 		strh	r3, [r7, #78]	@ movhi
 409:main.c        ****             sen1_on_line = (V1 > 10 && V1 < 100) ? 1u : 0u;
 1207              		.loc 1 409 0
 1208 018a B7F84E30 		ldrh	r3, [r7, #78]
 1209 018e 0A2B     		cmp	r3, #10
 1210 0190 05D9     		bls	.L78
 1211              		.loc 1 409 0 is_stmt 0 discriminator 1
 1212 0192 B7F84E30 		ldrh	r3, [r7, #78]
 1213 0196 632B     		cmp	r3, #99
 1214 0198 01D8     		bhi	.L78
 1215              		.loc 1 409 0 discriminator 3
 1216 019a 0122     		movs	r2, #1
 1217 019c 00E0     		b	.L79
 1218              	.L78:
 1219              		.loc 1 409 0 discriminator 4
 1220 019e 0022     		movs	r2, #0
 1221              	.L79:
 1222              		.loc 1 409 0 discriminator 6
 1223 01a0 4D4B     		ldr	r3, .L131+20
 1224 01a2 1A70     		strb	r2, [r3]
 410:main.c        ****             uint16_t V2 = Sensor_ComputePeakToPeak(1);
 1225              		.loc 1 410 0 is_stmt 1 discriminator 6
 1226 01a4 0120     		movs	r0, #1
 1227 01a6 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 1228 01aa 0346     		mov	r3, r0
 1229 01ac A7F84C30 		strh	r3, [r7, #76]	@ movhi
 411:main.c        ****             sen2_on_line = (V2 > 10 && V2 < 100) ? 1u : 0u;
 1230              		.loc 1 411 0 discriminator 6
 1231 01b0 B7F84C30 		ldrh	r3, [r7, #76]
 1232 01b4 0A2B     		cmp	r3, #10
 1233 01b6 05D9     		bls	.L80
 1234              		.loc 1 411 0 is_stmt 0 discriminator 1
 1235 01b8 B7F84C30 		ldrh	r3, [r7, #76]
 1236 01bc 632B     		cmp	r3, #99
 1237 01be 01D8     		bhi	.L80
 1238              		.loc 1 411 0 discriminator 3
 1239 01c0 0122     		movs	r2, #1
 1240 01c2 00E0     		b	.L81
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 30


 1241              	.L80:
 1242              		.loc 1 411 0 discriminator 4
 1243 01c4 0022     		movs	r2, #0
 1244              	.L81:
 1245              		.loc 1 411 0 discriminator 6
 1246 01c6 454B     		ldr	r3, .L131+24
 1247 01c8 1A70     		strb	r2, [r3]
 412:main.c        ****             if (sen1_on_line == 1u || sen2_on_line == 1u) {
 1248              		.loc 1 412 0 is_stmt 1 discriminator 6
 1249 01ca 434B     		ldr	r3, .L131+20
 1250 01cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1251 01ce 012B     		cmp	r3, #1
 1252 01d0 04D0     		beq	.L82
 1253              		.loc 1 412 0 is_stmt 0 discriminator 1
 1254 01d2 424B     		ldr	r3, .L131+24
 1255 01d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1256 01d6 012B     		cmp	r3, #1
 1257 01d8 40F0C381 		bne	.L84
 1258              	.L82:
 413:main.c        ****                 straight_complete = 1;
 1259              		.loc 1 413 0 is_stmt 1
 1260 01dc 0123     		movs	r3, #1
 1261 01de 87F85B30 		strb	r3, [r7, #91]
 1262 01e2 BEE1     		b	.L84
 1263              	.L77:
 1264              	.LBE4:
 414:main.c        ****             }
 415:main.c        ****             
 416:main.c        ****         } else if((CMD_STATES[i] == 1)) {
 1265              		.loc 1 416 0
 1266 01e4 97F96330 		ldrsb	r3, [r7, #99]
 1267 01e8 07F16802 		add	r2, r7, #104
 1268 01ec 1344     		add	r3, r3, r2
 1269 01ee 13F8603C 		ldrb	r3, [r3, #-96]	@ zero_extendqisi2
 1270 01f2 012B     		cmp	r3, #1
 1271 01f4 78D1     		bne	.L85
 417:main.c        ****             // Go LEFT
 418:main.c        ****             
 419:main.c        ****             g_direction = 1u;
 1272              		.loc 1 419 0
 1273 01f6 344B     		ldr	r3, .L131+4
 1274 01f8 0122     		movs	r2, #1
 1275 01fa 1A70     		strb	r2, [r3]
 420:main.c        ****             /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 421:main.c        ****                 /* Arm once on the first detection (edge 0 -> 1/2) */
 422:main.c        ****                 if ((g_direction == 1u || g_direction == 2u) && dir_latched_side == 0){
 1276              		.loc 1 422 0
 1277 01fc 324B     		ldr	r3, .L131+4
 1278 01fe 1B78     		ldrb	r3, [r3]
 1279 0200 DBB2     		uxtb	r3, r3
 1280 0202 012B     		cmp	r3, #1
 1281 0204 04D0     		beq	.L86
 1282              		.loc 1 422 0 is_stmt 0 discriminator 2
 1283 0206 304B     		ldr	r3, .L131+4
 1284 0208 1B78     		ldrb	r3, [r3]
 1285 020a DBB2     		uxtb	r3, r3
 1286 020c 022B     		cmp	r3, #2
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 31


 1287 020e 0BD1     		bne	.L87
 1288              	.L86:
 1289              		.loc 1 422 0 discriminator 3
 1290 0210 334B     		ldr	r3, .L131+28
 1291 0212 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1292 0214 002B     		cmp	r3, #0
 1293 0216 07D1     		bne	.L87
 423:main.c        ****                     dir_latched_side = g_direction;          /* remember side */
 1294              		.loc 1 423 0 is_stmt 1
 1295 0218 2B4B     		ldr	r3, .L131+4
 1296 021a 1B78     		ldrb	r3, [r3]
 1297 021c DAB2     		uxtb	r2, r3
 1298 021e 304B     		ldr	r3, .L131+28
 1299 0220 1A70     		strb	r2, [r3]
 424:main.c        ****                     dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 1300              		.loc 1 424 0
 1301 0222 304B     		ldr	r3, .L131+32
 1302 0224 0D22     		movs	r2, #13
 1303 0226 1A80     		strh	r2, [r3]	@ movhi
 1304              	.L87:
 425:main.c        ****                     //CyDelay(50);
 426:main.c        ****                 }
 427:main.c        ****                 /* If request cleared during delay, cancel gracefully */
 428:main.c        ****                 if (g_direction == 0u && dir_latched_side != 0){
 1305              		.loc 1 428 0
 1306 0228 274B     		ldr	r3, .L131+4
 1307 022a 1B78     		ldrb	r3, [r3]
 1308 022c DBB2     		uxtb	r3, r3
 1309 022e 002B     		cmp	r3, #0
 1310 0230 09D1     		bne	.L88
 1311              		.loc 1 428 0 is_stmt 0 discriminator 1
 1312 0232 2B4B     		ldr	r3, .L131+28
 1313 0234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1314 0236 002B     		cmp	r3, #0
 1315 0238 05D0     		beq	.L88
 429:main.c        ****                     dir_latched_side = 0;
 1316              		.loc 1 429 0 is_stmt 1
 1317 023a 294B     		ldr	r3, .L131+28
 1318 023c 0022     		movs	r2, #0
 1319 023e 1A70     		strb	r2, [r3]
 430:main.c        ****                     dir_delay_ticks  = 0;
 1320              		.loc 1 430 0
 1321 0240 284B     		ldr	r3, .L131+32
 1322 0242 0022     		movs	r2, #0
 1323 0244 1A80     		strh	r2, [r3]	@ movhi
 1324              	.L88:
 431:main.c        ****                 }
 432:main.c        **** 
 433:main.c        ****                 if (g_direction == 1u || g_direction == 2u){
 1325              		.loc 1 433 0
 1326 0246 204B     		ldr	r3, .L131+4
 1327 0248 1B78     		ldrb	r3, [r3]
 1328 024a DBB2     		uxtb	r3, r3
 1329 024c 012B     		cmp	r3, #1
 1330 024e 04D0     		beq	.L89
 1331              		.loc 1 433 0 is_stmt 0 discriminator 1
 1332 0250 1D4B     		ldr	r3, .L131+4
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 32


 1333 0252 1B78     		ldrb	r3, [r3]
 1334 0254 DBB2     		uxtb	r3, r3
 1335 0256 022B     		cmp	r3, #2
 1336 0258 28D1     		bne	.L90
 1337              	.L89:
 434:main.c        ****                     if (dir_delay_ticks > 0){
 1338              		.loc 1 434 0 is_stmt 1
 1339 025a 224B     		ldr	r3, .L131+32
 1340 025c 1B88     		ldrh	r3, [r3]
 1341 025e 002B     		cmp	r3, #0
 1342 0260 06D0     		beq	.L91
 435:main.c        ****                         /* Still delaying: keep doing normal straight PI */
 436:main.c        ****                         dir_delay_ticks--;
 1343              		.loc 1 436 0
 1344 0262 204B     		ldr	r3, .L131+32
 1345 0264 1B88     		ldrh	r3, [r3]
 1346 0266 013B     		subs	r3, r3, #1
 1347 0268 9AB2     		uxth	r2, r3
 1348 026a 1E4B     		ldr	r3, .L131+32
 1349 026c 1A80     		strh	r2, [r3]	@ movhi
 1350 026e 1DE0     		b	.L90
 1351              	.L91:
 437:main.c        ****                     } else {
 438:main.c        ****                         /* Delay elapsed: perform the maneuver */
 439:main.c        ****                         Directions_Handle(&g_direction);
 1352              		.loc 1 439 0
 1353 0270 1548     		ldr	r0, .L131+4
 1354 0272 FFF7FEFF 		bl	Directions_Handle
 440:main.c        **** 
 441:main.c        ****                         /* When turn completes, Directions sets g_direction back to 0 */
 442:main.c        ****                         if (g_direction == 0u){
 1355              		.loc 1 442 0
 1356 0276 144B     		ldr	r3, .L131+4
 1357 0278 1B78     		ldrb	r3, [r3]
 1358 027a DBB2     		uxtb	r3, r3
 1359 027c 002B     		cmp	r3, #0
 1360 027e 11D1     		bne	.L92
 443:main.c        ****                             pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 1361              		.loc 1 443 0
 1362 0280 4FF00003 		mov	r3, #0
 1363 0284 FB63     		str	r3, [r7, #60]	@ float
 1364 0286 4FF00003 		mov	r3, #0
 1365 028a 3B64     		str	r3, [r7, #64]	@ float
 1366 028c 4FF00003 		mov	r3, #0
 1367 0290 7B64     		str	r3, [r7, #68]	@ float
 444:main.c        ****                             dir_latched_side = 0;                        /* ready next time */
 1368              		.loc 1 444 0
 1369 0292 134B     		ldr	r3, .L131+28
 1370 0294 0022     		movs	r2, #0
 1371 0296 1A70     		strb	r2, [r3]
 445:main.c        ****                             
 446:main.c        ****                             
 447:main.c        ****                             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1372              		.loc 1 447 0
 1373 0298 0E4B     		ldr	r3, .L131+16
 1374 029a 3222     		movs	r2, #50
 1375 029c 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 33


 448:main.c        ****                             turn_complete = 1;
 1376              		.loc 1 448 0
 1377 029e 0123     		movs	r3, #1
 1378 02a0 87F85A30 		strb	r3, [r7, #90]
 1379              	.L92:
 449:main.c        ****                         }
 450:main.c        ****                         CyDelay(LOOP_DT_MS);
 1380              		.loc 1 450 0
 1381 02a4 0820     		movs	r0, #8
 1382 02a6 FFF7FEFF 		bl	CyDelay
 451:main.c        ****                         continue;  /* skip the rest this tick */
 1383              		.loc 1 451 0
 1384 02aa C2E1     		b	.L129
 1385              	.L90:
 452:main.c        ****                     }
 453:main.c        ****                 }
 454:main.c        ****                 /* ---------------- end turn handling with delay ---------------- */
 455:main.c        ****                 /* Straight run with PI steering */
 456:main.c        ****         
 457:main.c        ****         if(turn_cooldown_ticks > 0) {
 1386              		.loc 1 457 0
 1387 02ac 094B     		ldr	r3, .L131+16
 1388 02ae 1B88     		ldrh	r3, [r3]
 1389 02b0 002B     		cmp	r3, #0
 1390 02b2 00F05681 		beq	.L84
 458:main.c        ****             turn_cooldown_ticks--;
 1391              		.loc 1 458 0
 1392 02b6 074B     		ldr	r3, .L131+16
 1393 02b8 1B88     		ldrh	r3, [r3]
 1394 02ba 013B     		subs	r3, r3, #1
 1395 02bc 9AB2     		uxth	r2, r3
 1396 02be 054B     		ldr	r3, .L131+16
 1397 02c0 1A80     		strh	r2, [r3]	@ movhi
 1398 02c2 4EE1     		b	.L84
 1399              	.L132:
 1400              		.align	2
 1401              	.L131:
 1402 02c4 00000000 		.word	isr_qd_Handler
 1403 02c8 06000000 		.word	g_direction
 1404 02cc 00000000 		.word	.LC0
 1405 02d0 07000000 		.word	g_stop_now
 1406 02d4 10000000 		.word	turn_cooldown_ticks
 1407 02d8 00000000 		.word	sen1_on_line
 1408 02dc 01000000 		.word	sen2_on_line
 1409 02e0 0E000000 		.word	dir_latched_side
 1410 02e4 0C000000 		.word	dir_delay_ticks
 1411              	.L85:
 459:main.c        ****         }
 460:main.c        ****                 
 461:main.c        ****             
 462:main.c        ****         } else if((CMD_STATES[i] == 2)) {
 1412              		.loc 1 462 0
 1413 02e8 97F96330 		ldrsb	r3, [r7, #99]
 1414 02ec 07F16802 		add	r2, r7, #104
 1415 02f0 1344     		add	r3, r3, r2
 1416 02f2 13F8603C 		ldrb	r3, [r3, #-96]	@ zero_extendqisi2
 1417 02f6 022B     		cmp	r3, #2
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 34


 1418 02f8 66D1     		bne	.L94
 463:main.c        ****             // Go RIGHT
 464:main.c        ****             g_direction = 2u;
 1419              		.loc 1 464 0
 1420 02fa 8D4B     		ldr	r3, .L133
 1421 02fc 0222     		movs	r2, #2
 1422 02fe 1A70     		strb	r2, [r3]
 465:main.c        ****             /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 466:main.c        ****                 /* Arm once on the first detection (edge 0 -> 1/2) */
 467:main.c        ****                 if ((g_direction == 1u || g_direction == 2u) && dir_latched_side == 0){
 1423              		.loc 1 467 0
 1424 0300 8B4B     		ldr	r3, .L133
 1425 0302 1B78     		ldrb	r3, [r3]
 1426 0304 DBB2     		uxtb	r3, r3
 1427 0306 012B     		cmp	r3, #1
 1428 0308 04D0     		beq	.L95
 1429              		.loc 1 467 0 is_stmt 0 discriminator 2
 1430 030a 894B     		ldr	r3, .L133
 1431 030c 1B78     		ldrb	r3, [r3]
 1432 030e DBB2     		uxtb	r3, r3
 1433 0310 022B     		cmp	r3, #2
 1434 0312 0BD1     		bne	.L96
 1435              	.L95:
 1436              		.loc 1 467 0 discriminator 3
 1437 0314 874B     		ldr	r3, .L133+4
 1438 0316 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1439 0318 002B     		cmp	r3, #0
 1440 031a 07D1     		bne	.L96
 468:main.c        ****                     dir_latched_side = g_direction;          /* remember side */
 1441              		.loc 1 468 0 is_stmt 1
 1442 031c 844B     		ldr	r3, .L133
 1443 031e 1B78     		ldrb	r3, [r3]
 1444 0320 DAB2     		uxtb	r2, r3
 1445 0322 844B     		ldr	r3, .L133+4
 1446 0324 1A70     		strb	r2, [r3]
 469:main.c        ****                     dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 1447              		.loc 1 469 0
 1448 0326 844B     		ldr	r3, .L133+8
 1449 0328 0D22     		movs	r2, #13
 1450 032a 1A80     		strh	r2, [r3]	@ movhi
 1451              	.L96:
 470:main.c        ****                     //CyDelay(50);
 471:main.c        ****                 }
 472:main.c        ****                 /* If request cleared during delay, cancel gracefully */
 473:main.c        ****                 if (g_direction == 0u && dir_latched_side != 0){
 1452              		.loc 1 473 0
 1453 032c 804B     		ldr	r3, .L133
 1454 032e 1B78     		ldrb	r3, [r3]
 1455 0330 DBB2     		uxtb	r3, r3
 1456 0332 002B     		cmp	r3, #0
 1457 0334 09D1     		bne	.L97
 1458              		.loc 1 473 0 is_stmt 0 discriminator 1
 1459 0336 7F4B     		ldr	r3, .L133+4
 1460 0338 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1461 033a 002B     		cmp	r3, #0
 1462 033c 05D0     		beq	.L97
 474:main.c        ****                     dir_latched_side = 0;
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 35


 1463              		.loc 1 474 0 is_stmt 1
 1464 033e 7D4B     		ldr	r3, .L133+4
 1465 0340 0022     		movs	r2, #0
 1466 0342 1A70     		strb	r2, [r3]
 475:main.c        ****                     dir_delay_ticks  = 0;
 1467              		.loc 1 475 0
 1468 0344 7C4B     		ldr	r3, .L133+8
 1469 0346 0022     		movs	r2, #0
 1470 0348 1A80     		strh	r2, [r3]	@ movhi
 1471              	.L97:
 476:main.c        ****                 }
 477:main.c        **** 
 478:main.c        ****                 if (g_direction == 1u || g_direction == 2u){
 1472              		.loc 1 478 0
 1473 034a 794B     		ldr	r3, .L133
 1474 034c 1B78     		ldrb	r3, [r3]
 1475 034e DBB2     		uxtb	r3, r3
 1476 0350 012B     		cmp	r3, #1
 1477 0352 04D0     		beq	.L98
 1478              		.loc 1 478 0 is_stmt 0 discriminator 1
 1479 0354 764B     		ldr	r3, .L133
 1480 0356 1B78     		ldrb	r3, [r3]
 1481 0358 DBB2     		uxtb	r3, r3
 1482 035a 022B     		cmp	r3, #2
 1483 035c 28D1     		bne	.L99
 1484              	.L98:
 479:main.c        ****                     if (dir_delay_ticks > 0){
 1485              		.loc 1 479 0 is_stmt 1
 1486 035e 764B     		ldr	r3, .L133+8
 1487 0360 1B88     		ldrh	r3, [r3]
 1488 0362 002B     		cmp	r3, #0
 1489 0364 06D0     		beq	.L100
 480:main.c        ****                         /* Still delaying: keep doing normal straight PI */
 481:main.c        ****                         dir_delay_ticks--;
 1490              		.loc 1 481 0
 1491 0366 744B     		ldr	r3, .L133+8
 1492 0368 1B88     		ldrh	r3, [r3]
 1493 036a 013B     		subs	r3, r3, #1
 1494 036c 9AB2     		uxth	r2, r3
 1495 036e 724B     		ldr	r3, .L133+8
 1496 0370 1A80     		strh	r2, [r3]	@ movhi
 1497 0372 1DE0     		b	.L99
 1498              	.L100:
 482:main.c        ****                     } else {
 483:main.c        ****                         /* Delay elapsed: perform the maneuver */
 484:main.c        ****                         Directions_Handle(&g_direction);
 1499              		.loc 1 484 0
 1500 0374 6E48     		ldr	r0, .L133
 1501 0376 FFF7FEFF 		bl	Directions_Handle
 485:main.c        **** 
 486:main.c        ****                         /* When turn completes, Directions sets g_direction back to 0 */
 487:main.c        ****                         if (g_direction == 0u){
 1502              		.loc 1 487 0
 1503 037a 6D4B     		ldr	r3, .L133
 1504 037c 1B78     		ldrb	r3, [r3]
 1505 037e DBB2     		uxtb	r3, r3
 1506 0380 002B     		cmp	r3, #0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 36


 1507 0382 11D1     		bne	.L101
 488:main.c        ****                             pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 1508              		.loc 1 488 0
 1509 0384 4FF00003 		mov	r3, #0
 1510 0388 FB63     		str	r3, [r7, #60]	@ float
 1511 038a 4FF00003 		mov	r3, #0
 1512 038e 3B64     		str	r3, [r7, #64]	@ float
 1513 0390 4FF00003 		mov	r3, #0
 1514 0394 7B64     		str	r3, [r7, #68]	@ float
 489:main.c        ****                             dir_latched_side = 0;                        /* ready next time */
 1515              		.loc 1 489 0
 1516 0396 674B     		ldr	r3, .L133+4
 1517 0398 0022     		movs	r2, #0
 1518 039a 1A70     		strb	r2, [r3]
 490:main.c        ****                             
 491:main.c        ****                             
 492:main.c        ****                             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1519              		.loc 1 492 0
 1520 039c 674B     		ldr	r3, .L133+12
 1521 039e 3222     		movs	r2, #50
 1522 03a0 1A80     		strh	r2, [r3]	@ movhi
 493:main.c        ****                             turn_complete = 1;
 1523              		.loc 1 493 0
 1524 03a2 0123     		movs	r3, #1
 1525 03a4 87F85A30 		strb	r3, [r7, #90]
 1526              	.L101:
 494:main.c        ****                         }
 495:main.c        ****                         CyDelay(LOOP_DT_MS);
 1527              		.loc 1 495 0
 1528 03a8 0820     		movs	r0, #8
 1529 03aa FFF7FEFF 		bl	CyDelay
 496:main.c        ****                         continue;  /* skip the rest this tick */
 1530              		.loc 1 496 0
 1531 03ae 40E1     		b	.L129
 1532              	.L99:
 497:main.c        ****                     }
 498:main.c        ****                 }
 499:main.c        ****                 /* ---------------- end turn handling with delay ---------------- */
 500:main.c        ****                 /* Straight run with PI steering */
 501:main.c        ****         
 502:main.c        ****         if(turn_cooldown_ticks > 0) {
 1533              		.loc 1 502 0
 1534 03b0 624B     		ldr	r3, .L133+12
 1535 03b2 1B88     		ldrh	r3, [r3]
 1536 03b4 002B     		cmp	r3, #0
 1537 03b6 00F0D480 		beq	.L84
 503:main.c        ****             turn_cooldown_ticks--;
 1538              		.loc 1 503 0
 1539 03ba 604B     		ldr	r3, .L133+12
 1540 03bc 1B88     		ldrh	r3, [r3]
 1541 03be 013B     		subs	r3, r3, #1
 1542 03c0 9AB2     		uxth	r2, r3
 1543 03c2 5E4B     		ldr	r3, .L133+12
 1544 03c4 1A80     		strh	r2, [r3]	@ movhi
 1545 03c6 CCE0     		b	.L84
 1546              	.L94:
 504:main.c        ****         }
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 37


 505:main.c        ****             
 506:main.c        ****         } else if((CMD_STATES[i] == 3)) {
 1547              		.loc 1 506 0
 1548 03c8 97F96330 		ldrsb	r3, [r7, #99]
 1549 03cc 07F16802 		add	r2, r7, #104
 1550 03d0 1344     		add	r3, r3, r2
 1551 03d2 13F8603C 		ldrb	r3, [r3, #-96]	@ zero_extendqisi2
 1552 03d6 032B     		cmp	r3, #3
 1553 03d8 6FD1     		bne	.L103
 507:main.c        ****             // Do U-TURN
 508:main.c        ****             g_direction = 3u;
 1554              		.loc 1 508 0
 1555 03da 554B     		ldr	r3, .L133
 1556 03dc 0322     		movs	r2, #3
 1557 03de 1A70     		strb	r2, [r3]
 509:main.c        ****             /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 510:main.c        ****                 /* Arm once on the first detection (edge 0 -> 1/2) */
 511:main.c        ****                 if ((g_direction == 1u || g_direction == 2u || g_direction == 3u) && dir_latched_si
 1558              		.loc 1 511 0
 1559 03e0 534B     		ldr	r3, .L133
 1560 03e2 1B78     		ldrb	r3, [r3]
 1561 03e4 DBB2     		uxtb	r3, r3
 1562 03e6 012B     		cmp	r3, #1
 1563 03e8 09D0     		beq	.L104
 1564              		.loc 1 511 0 is_stmt 0 discriminator 2
 1565 03ea 514B     		ldr	r3, .L133
 1566 03ec 1B78     		ldrb	r3, [r3]
 1567 03ee DBB2     		uxtb	r3, r3
 1568 03f0 022B     		cmp	r3, #2
 1569 03f2 04D0     		beq	.L104
 1570              		.loc 1 511 0 discriminator 4
 1571 03f4 4E4B     		ldr	r3, .L133
 1572 03f6 1B78     		ldrb	r3, [r3]
 1573 03f8 DBB2     		uxtb	r3, r3
 1574 03fa 032B     		cmp	r3, #3
 1575 03fc 0BD1     		bne	.L105
 1576              	.L104:
 1577              		.loc 1 511 0 discriminator 5
 1578 03fe 4D4B     		ldr	r3, .L133+4
 1579 0400 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1580 0402 002B     		cmp	r3, #0
 1581 0404 07D1     		bne	.L105
 512:main.c        ****                     dir_latched_side = g_direction;          /* remember side */
 1582              		.loc 1 512 0 is_stmt 1
 1583 0406 4A4B     		ldr	r3, .L133
 1584 0408 1B78     		ldrb	r3, [r3]
 1585 040a DAB2     		uxtb	r2, r3
 1586 040c 494B     		ldr	r3, .L133+4
 1587 040e 1A70     		strb	r2, [r3]
 513:main.c        ****                     dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 1588              		.loc 1 513 0
 1589 0410 494B     		ldr	r3, .L133+8
 1590 0412 0D22     		movs	r2, #13
 1591 0414 1A80     		strh	r2, [r3]	@ movhi
 1592              	.L105:
 514:main.c        ****                     //CyDelay(50);
 515:main.c        ****                 }
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 38


 516:main.c        ****                 /* If request cleared during delay, cancel gracefully */
 517:main.c        ****                 if (g_direction == 0u && dir_latched_side != 0){
 1593              		.loc 1 517 0
 1594 0416 464B     		ldr	r3, .L133
 1595 0418 1B78     		ldrb	r3, [r3]
 1596 041a DBB2     		uxtb	r3, r3
 1597 041c 002B     		cmp	r3, #0
 1598 041e 09D1     		bne	.L106
 1599              		.loc 1 517 0 is_stmt 0 discriminator 1
 1600 0420 444B     		ldr	r3, .L133+4
 1601 0422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1602 0424 002B     		cmp	r3, #0
 1603 0426 05D0     		beq	.L106
 518:main.c        ****                     dir_latched_side = 0;
 1604              		.loc 1 518 0 is_stmt 1
 1605 0428 424B     		ldr	r3, .L133+4
 1606 042a 0022     		movs	r2, #0
 1607 042c 1A70     		strb	r2, [r3]
 519:main.c        ****                     dir_delay_ticks  = 0;
 1608              		.loc 1 519 0
 1609 042e 424B     		ldr	r3, .L133+8
 1610 0430 0022     		movs	r2, #0
 1611 0432 1A80     		strh	r2, [r3]	@ movhi
 1612              	.L106:
 520:main.c        ****                 }
 521:main.c        **** 
 522:main.c        ****                 if (g_direction == 1u || g_direction == 2u || g_direction == 3u){
 1613              		.loc 1 522 0
 1614 0434 3E4B     		ldr	r3, .L133
 1615 0436 1B78     		ldrb	r3, [r3]
 1616 0438 DBB2     		uxtb	r3, r3
 1617 043a 012B     		cmp	r3, #1
 1618 043c 09D0     		beq	.L107
 1619              		.loc 1 522 0 is_stmt 0 discriminator 1
 1620 043e 3C4B     		ldr	r3, .L133
 1621 0440 1B78     		ldrb	r3, [r3]
 1622 0442 DBB2     		uxtb	r3, r3
 1623 0444 022B     		cmp	r3, #2
 1624 0446 04D0     		beq	.L107
 1625              		.loc 1 522 0 discriminator 2
 1626 0448 394B     		ldr	r3, .L133
 1627 044a 1B78     		ldrb	r3, [r3]
 1628 044c DBB2     		uxtb	r3, r3
 1629 044e 032B     		cmp	r3, #3
 1630 0450 28D1     		bne	.L108
 1631              	.L107:
 523:main.c        ****                     if (dir_delay_ticks > 0){
 1632              		.loc 1 523 0 is_stmt 1
 1633 0452 394B     		ldr	r3, .L133+8
 1634 0454 1B88     		ldrh	r3, [r3]
 1635 0456 002B     		cmp	r3, #0
 1636 0458 06D0     		beq	.L109
 524:main.c        ****                         /* Still delaying: keep doing normal straight PI */
 525:main.c        ****                         dir_delay_ticks--;
 1637              		.loc 1 525 0
 1638 045a 374B     		ldr	r3, .L133+8
 1639 045c 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 39


 1640 045e 013B     		subs	r3, r3, #1
 1641 0460 9AB2     		uxth	r2, r3
 1642 0462 354B     		ldr	r3, .L133+8
 1643 0464 1A80     		strh	r2, [r3]	@ movhi
 1644 0466 1DE0     		b	.L108
 1645              	.L109:
 526:main.c        ****                     } else {
 527:main.c        ****                         /* Delay elapsed: perform the maneuver */
 528:main.c        ****                         Directions_Handle(&g_direction);
 1646              		.loc 1 528 0
 1647 0468 3148     		ldr	r0, .L133
 1648 046a FFF7FEFF 		bl	Directions_Handle
 529:main.c        **** 
 530:main.c        ****                         /* When turn completes, Directions sets g_direction back to 0 */
 531:main.c        ****                         if (g_direction == 0u){
 1649              		.loc 1 531 0
 1650 046e 304B     		ldr	r3, .L133
 1651 0470 1B78     		ldrb	r3, [r3]
 1652 0472 DBB2     		uxtb	r3, r3
 1653 0474 002B     		cmp	r3, #0
 1654 0476 11D1     		bne	.L110
 532:main.c        ****                             pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 1655              		.loc 1 532 0
 1656 0478 4FF00003 		mov	r3, #0
 1657 047c FB63     		str	r3, [r7, #60]	@ float
 1658 047e 4FF00003 		mov	r3, #0
 1659 0482 3B64     		str	r3, [r7, #64]	@ float
 1660 0484 4FF00003 		mov	r3, #0
 1661 0488 7B64     		str	r3, [r7, #68]	@ float
 533:main.c        ****                             dir_latched_side = 0;                        /* ready next time */
 1662              		.loc 1 533 0
 1663 048a 2A4B     		ldr	r3, .L133+4
 1664 048c 0022     		movs	r2, #0
 1665 048e 1A70     		strb	r2, [r3]
 534:main.c        ****                             
 535:main.c        ****                             
 536:main.c        ****                             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1666              		.loc 1 536 0
 1667 0490 2A4B     		ldr	r3, .L133+12
 1668 0492 3222     		movs	r2, #50
 1669 0494 1A80     		strh	r2, [r3]	@ movhi
 537:main.c        ****                             uTurn_complete = 1;
 1670              		.loc 1 537 0
 1671 0496 0123     		movs	r3, #1
 1672 0498 87F85930 		strb	r3, [r7, #89]
 1673              	.L110:
 538:main.c        ****                         }
 539:main.c        ****                         CyDelay(LOOP_DT_MS);
 1674              		.loc 1 539 0
 1675 049c 0820     		movs	r0, #8
 1676 049e FFF7FEFF 		bl	CyDelay
 540:main.c        ****                         continue;  /* skip the rest this tick */
 1677              		.loc 1 540 0
 1678 04a2 C6E0     		b	.L129
 1679              	.L108:
 541:main.c        ****                     }
 542:main.c        ****                 }
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 40


 543:main.c        ****                 /* ---------------- end turn handling with delay ---------------- */
 544:main.c        ****                 /* Straight run with PI steering */
 545:main.c        ****         
 546:main.c        ****         if(turn_cooldown_ticks > 0) {
 1680              		.loc 1 546 0
 1681 04a4 254B     		ldr	r3, .L133+12
 1682 04a6 1B88     		ldrh	r3, [r3]
 1683 04a8 002B     		cmp	r3, #0
 1684 04aa 5AD0     		beq	.L84
 547:main.c        ****             turn_cooldown_ticks--;
 1685              		.loc 1 547 0
 1686 04ac 234B     		ldr	r3, .L133+12
 1687 04ae 1B88     		ldrh	r3, [r3]
 1688 04b0 013B     		subs	r3, r3, #1
 1689 04b2 9AB2     		uxth	r2, r3
 1690 04b4 214B     		ldr	r3, .L133+12
 1691 04b6 1A80     		strh	r2, [r3]	@ movhi
 1692 04b8 53E0     		b	.L84
 1693              	.L103:
 548:main.c        ****         }
 549:main.c        ****           
 550:main.c        ****             
 551:main.c        ****         } else if((CMD_STATES[i] == 5)) {
 1694              		.loc 1 551 0
 1695 04ba 97F96330 		ldrsb	r3, [r7, #99]
 1696 04be 07F16802 		add	r2, r7, #104
 1697 04c2 1344     		add	r3, r3, r2
 1698 04c4 13F8603C 		ldrb	r3, [r3, #-96]	@ zero_extendqisi2
 1699 04c8 052B     		cmp	r3, #5
 1700 04ca 3DD1     		bne	.L112
 552:main.c        ****         // REACH FOOD
 553:main.c        **** 
 554:main.c        ****          // --- FIX 1: Set the target distance *only once* ---
 555:main.c        ****          // We know we just entered this state if target_dist is 0
 556:main.c        ****         if (target_dist == 0) {
 1701              		.loc 1 556 0
 1702 04cc FB6D     		ldr	r3, [r7, #92]
 1703 04ce 002B     		cmp	r3, #0
 1704 04d0 03D1     		bne	.L113
 557:main.c        ****          // Set target to be 500mm *from our current position*
 558:main.c        ****          target_dist = g_dist_mm + 150 ; // in mm
 1705              		.loc 1 558 0
 1706 04d2 1B4B     		ldr	r3, .L133+16
 1707 04d4 1B68     		ldr	r3, [r3]
 1708 04d6 9633     		adds	r3, r3, #150
 1709 04d8 FB65     		str	r3, [r7, #92]
 1710              	.L113:
 559:main.c        ****          }
 560:main.c        **** 
 561:main.c        ****         // Check if we have *now* reached that target
 562:main.c        ****          g_stop_now = (g_dist_mm >= target_dist) ? 1u : 0u;
 1711              		.loc 1 562 0
 1712 04da 194B     		ldr	r3, .L133+16
 1713 04dc 1A68     		ldr	r2, [r3]
 1714 04de FB6D     		ldr	r3, [r7, #92]
 1715 04e0 9A42     		cmp	r2, r3
 1716 04e2 01DB     		blt	.L114
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 41


 1717              		.loc 1 562 0 is_stmt 0 discriminator 1
 1718 04e4 0122     		movs	r2, #1
 1719 04e6 00E0     		b	.L115
 1720              	.L114:
 1721              		.loc 1 562 0 discriminator 2
 1722 04e8 0022     		movs	r2, #0
 1723              	.L115:
 1724              		.loc 1 562 0 discriminator 4
 1725 04ea 164B     		ldr	r3, .L133+20
 1726 04ec 1A70     		strb	r2, [r3]
 563:main.c        **** 
 564:main.c        ****          // --- FIX 2 & 3: Use if/else and remove 'continue' ---
 565:main.c        ****          if (g_stop_now) {
 1727              		.loc 1 565 0 is_stmt 1 discriminator 4
 1728 04ee 154B     		ldr	r3, .L133+20
 1729 04f0 1B78     		ldrb	r3, [r3]
 1730 04f2 DBB2     		uxtb	r3, r3
 1731 04f4 002B     		cmp	r3, #0
 1732 04f6 0DD0     		beq	.L116
 566:main.c        ****          // Target met: STOP
 567:main.c        ****          set_motors_symmetric(0);
 1733              		.loc 1 567 0
 1734 04f8 0020     		movs	r0, #0
 1735 04fa FFF7FEFF 		bl	set_motors_symmetric
 568:main.c        ****          motor_enable(1u, 1u); // Disable the motors
 1736              		.loc 1 568 0
 1737 04fe 0121     		movs	r1, #1
 1738 0500 0120     		movs	r0, #1
 1739 0502 FFF7FEFF 		bl	motor_enable
 569:main.c        ****         
 570:main.c        ****          fruit_complete = 1; // Flag that this state is done
 1740              		.loc 1 570 0
 1741 0506 0123     		movs	r3, #1
 1742 0508 87F85830 		strb	r3, [r7, #88]
 571:main.c        ****         D4_Write(1);
 1743              		.loc 1 571 0
 1744 050c 0120     		movs	r0, #1
 1745 050e FFF7FEFF 		bl	D4_Write
 1746 0512 26E0     		b	.L84
 1747              	.L116:
 1748              	.LBB5:
 572:main.c        ****          // DO NOT 'continue' here
 573:main.c        ****         } else {
 574:main.c        ****          // Target not met: KEEP DRIVING
 575:main.c        ****          int steer = pi_step(&pi, V4_pp, V5_pp, V6_pp);
 1749              		.loc 1 575 0
 1750 0514 F988     		ldrh	r1, [r7, #6]
 1751 0516 BA88     		ldrh	r2, [r7, #4]
 1752 0518 7B88     		ldrh	r3, [r7, #2]
 1753 051a 07F13C00 		add	r0, r7, #60
 1754 051e FFF7FEFF 		bl	pi_step
 1755 0522 B864     		str	r0, [r7, #72]
 576:main.c        ****          set_motors_with_trim_and_steer(center_duty_est, steer);
 1756              		.loc 1 576 0
 1757 0524 B96C     		ldr	r1, [r7, #72]
 1758 0526 786E     		ldr	r0, [r7, #100]
 1759 0528 FFF7FEFF 		bl	set_motors_with_trim_and_steer
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 42


 1760 052c 19E0     		b	.L84
 1761              	.L134:
 1762 052e 00BF     		.align	2
 1763              	.L133:
 1764 0530 06000000 		.word	g_direction
 1765 0534 0E000000 		.word	dir_latched_side
 1766 0538 0C000000 		.word	dir_delay_ticks
 1767 053c 10000000 		.word	turn_cooldown_ticks
 1768 0540 08000000 		.word	g_dist_mm
 1769 0544 07000000 		.word	g_stop_now
 1770              	.L112:
 1771              	.LBE5:
 577:main.c        ****          }
 578:main.c        **** 
 579:main.c        ****         
 580:main.c        ****         
 581:main.c        ****         
 582:main.c        ****         } else if((CMD_STATES[i] == 6)) {
 1772              		.loc 1 582 0
 1773 0548 97F96330 		ldrsb	r3, [r7, #99]
 1774 054c 07F16802 		add	r2, r7, #104
 1775 0550 1344     		add	r3, r3, r2
 1776 0552 13F8603C 		ldrb	r3, [r3, #-96]	@ zero_extendqisi2
 1777 0556 062B     		cmp	r3, #6
 1778 0558 03D1     		bne	.L84
 583:main.c        ****          // FINISH
 584:main.c        ****             motor_enable(1u, 1u);
 1779              		.loc 1 584 0
 1780 055a 0121     		movs	r1, #1
 1781 055c 0120     		movs	r0, #1
 1782 055e FFF7FEFF 		bl	motor_enable
 1783              	.L84:
 585:main.c        ****         
 586:main.c        ****         
 587:main.c        ****         }
 588:main.c        ****         
 589:main.c        ****         // food
 590:main.c        ****         if (i == 13 || i == 23 || i == 31 || i == 44) {
 1784              		.loc 1 590 0
 1785 0562 97F96330 		ldrsb	r3, [r7, #99]
 1786 0566 0D2B     		cmp	r3, #13
 1787 0568 0BD0     		beq	.L118
 1788              		.loc 1 590 0 is_stmt 0 discriminator 1
 1789 056a 97F96330 		ldrsb	r3, [r7, #99]
 1790 056e 172B     		cmp	r3, #23
 1791 0570 07D0     		beq	.L118
 1792              		.loc 1 590 0 discriminator 2
 1793 0572 97F96330 		ldrsb	r3, [r7, #99]
 1794 0576 1F2B     		cmp	r3, #31
 1795 0578 03D0     		beq	.L118
 1796              		.loc 1 590 0 discriminator 3
 1797 057a 97F96330 		ldrsb	r3, [r7, #99]
 1798 057e 2C2B     		cmp	r3, #44
 1799 0580 03D1     		bne	.L119
 1800              	.L118:
 591:main.c        ****             CyDelay(2000);
 1801              		.loc 1 591 0 is_stmt 1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 43


 1802 0582 4FF4FA60 		mov	r0, #2000
 1803 0586 FFF7FEFF 		bl	CyDelay
 1804              	.L119:
 592:main.c        ****         } 
 593:main.c        ****         
 594:main.c        ****         
 595:main.c        ****         
 596:main.c        ****         if (i== 4 ) {
 1805              		.loc 1 596 0
 1806 058a 97F96330 		ldrsb	r3, [r7, #99]
 1807 058e 042B     		cmp	r3, #4
 1808 0590 02D1     		bne	.L120
 597:main.c        ****             //TURN_COOLDOWN_MS = 4000;
 598:main.c        ****             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1809              		.loc 1 598 0
 1810 0592 284B     		ldr	r3, .L135
 1811 0594 3222     		movs	r2, #50
 1812 0596 1A80     		strh	r2, [r3]	@ movhi
 1813              	.L120:
 599:main.c        ****         } 
 600:main.c        ****         if ( i== 10) {
 1814              		.loc 1 600 0
 1815 0598 97F96330 		ldrsb	r3, [r7, #99]
 1816 059c 0A2B     		cmp	r3, #10
 1817 059e 02D1     		bne	.L121
 601:main.c        ****             //TURN_COOLDOWN_MS = 2000;
 602:main.c        ****             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1818              		.loc 1 602 0
 1819 05a0 244B     		ldr	r3, .L135
 1820 05a2 3222     		movs	r2, #50
 1821 05a4 1A80     		strh	r2, [r3]	@ movhi
 1822              	.L121:
 603:main.c        ****         }
 604:main.c        ****         if ( i== 35) {
 1823              		.loc 1 604 0
 1824 05a6 97F96330 		ldrsb	r3, [r7, #99]
 1825 05aa 232B     		cmp	r3, #35
 1826 05ac 02D1     		bne	.L122
 605:main.c        ****             //TURN_COOLDOWN_MS = 5000;
 606:main.c        ****             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1827              		.loc 1 606 0
 1828 05ae 214B     		ldr	r3, .L135
 1829 05b0 3222     		movs	r2, #50
 1830 05b2 1A80     		strh	r2, [r3]	@ movhi
 1831              	.L122:
 607:main.c        ****         }
 608:main.c        ****         if ( i== 38) {
 1832              		.loc 1 608 0
 1833 05b4 97F96330 		ldrsb	r3, [r7, #99]
 1834 05b8 262B     		cmp	r3, #38
 1835 05ba 02D1     		bne	.L123
 609:main.c        ****             //TURN_COOLDOWN_MS = 500;
 610:main.c        ****             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1836              		.loc 1 610 0
 1837 05bc 1D4B     		ldr	r3, .L135
 1838 05be 3222     		movs	r2, #50
 1839 05c0 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 44


 1840              	.L123:
 611:main.c        ****         }
 612:main.c        ****         if ( i== 46) {
 1841              		.loc 1 612 0
 1842 05c2 97F96330 		ldrsb	r3, [r7, #99]
 1843 05c6 2E2B     		cmp	r3, #46
 1844 05c8 02D1     		bne	.L124
 613:main.c        ****             //TURN_COOLDOWN_MS = 1000;
 614:main.c        ****             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1845              		.loc 1 614 0
 1846 05ca 1A4B     		ldr	r3, .L135
 1847 05cc 3222     		movs	r2, #50
 1848 05ce 1A80     		strh	r2, [r3]	@ movhi
 1849              	.L124:
 615:main.c        ****         }
 616:main.c        ****         
 617:main.c        ****         
 618:main.c        ****         if (straight_complete == 1u || turn_complete == 1u || uTurn_complete == 1u || fruit_complet
 1850              		.loc 1 618 0
 1851 05d0 97F95B30 		ldrsb	r3, [r7, #91]
 1852 05d4 012B     		cmp	r3, #1
 1853 05d6 0BD0     		beq	.L125
 1854              		.loc 1 618 0 is_stmt 0 discriminator 1
 1855 05d8 97F95A30 		ldrsb	r3, [r7, #90]
 1856 05dc 012B     		cmp	r3, #1
 1857 05de 07D0     		beq	.L125
 1858              		.loc 1 618 0 discriminator 2
 1859 05e0 97F95930 		ldrsb	r3, [r7, #89]
 1860 05e4 012B     		cmp	r3, #1
 1861 05e6 03D0     		beq	.L125
 1862              		.loc 1 618 0 discriminator 3
 1863 05e8 97F95830 		ldrsb	r3, [r7, #88]
 1864 05ec 012B     		cmp	r3, #1
 1865 05ee 1DD1     		bne	.L126
 1866              	.L125:
 619:main.c        ****             
 620:main.c        ****             // Check if we are at the end of the array
 621:main.c        ****         if (i >= indexMAX) {
 1867              		.loc 1 621 0 is_stmt 1
 1868 05f0 97F96320 		ldrsb	r2, [r7, #99]
 1869 05f4 97F95730 		ldrsb	r3, [r7, #87]
 1870 05f8 9A42     		cmp	r2, r3
 1871 05fa 03DB     		blt	.L127
 622:main.c        ****          // We are done. Set permanent stop flag.
 623:main.c        ****          g_stop_now = 1;
 1872              		.loc 1 623 0
 1873 05fc 0E4B     		ldr	r3, .L135+4
 1874 05fe 0122     		movs	r2, #1
 1875 0600 1A70     		strb	r2, [r3]
 1876 0602 05E0     		b	.L128
 1877              	.L127:
 624:main.c        ****          } else {
 625:main.c        ****          // Not done. Advance to the next state.
 626:main.c        ****          i += 1;
 1878              		.loc 1 626 0
 1879 0604 97F86330 		ldrb	r3, [r7, #99]	@ zero_extendqisi2
 1880 0608 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 45


 1881 060a DBB2     		uxtb	r3, r3
 1882 060c 87F86330 		strb	r3, [r7, #99]
 1883              	.L128:
 627:main.c        ****         }
 628:main.c        ****             
 629:main.c        ****             straight_complete = 0;
 1884              		.loc 1 629 0
 1885 0610 0023     		movs	r3, #0
 1886 0612 87F85B30 		strb	r3, [r7, #91]
 630:main.c        ****             turn_complete = 0;
 1887              		.loc 1 630 0
 1888 0616 0023     		movs	r3, #0
 1889 0618 87F85A30 		strb	r3, [r7, #90]
 631:main.c        ****             uTurn_complete = 0;
 1890              		.loc 1 631 0
 1891 061c 0023     		movs	r3, #0
 1892 061e 87F85930 		strb	r3, [r7, #89]
 632:main.c        ****             fruit_complete = 0;
 1893              		.loc 1 632 0
 1894 0622 0023     		movs	r3, #0
 1895 0624 87F85830 		strb	r3, [r7, #88]
 633:main.c        ****             
 634:main.c        ****             target_dist = 0;
 1896              		.loc 1 634 0
 1897 0628 0023     		movs	r3, #0
 1898 062a FB65     		str	r3, [r7, #92]
 1899              	.L126:
 635:main.c        ****         }
 636:main.c        ****         
 637:main.c        **** 
 638:main.c        ****         CyDelay(LOOP_DT_MS);
 1900              		.loc 1 638 0
 1901 062c 0820     		movs	r0, #8
 1902 062e FFF7FEFF 		bl	CyDelay
 1903              	.L129:
 1904              	.LBE3:
 639:main.c        ****     }
 1905              		.loc 1 639 0 discriminator 1
 1906 0632 6CE5     		b	.L130
 1907              	.L136:
 1908              		.align	2
 1909              	.L135:
 1910 0634 10000000 		.word	turn_cooldown_ticks
 1911 0638 07000000 		.word	g_stop_now
 1912              		.cfi_endproc
 1913              	.LFE69:
 1914              		.size	main, .-main
 1915              		.text
 1916              	.Letext0:
 1917              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1918              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1919              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 1920              		.section	.debug_info,"",%progbits
 1921              	.Ldebug_info0:
 1922 0000 1A060000 		.4byte	0x61a
 1923 0004 0400     		.2byte	0x4
 1924 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 46


 1925 000a 04       		.byte	0x4
 1926 000b 01       		.uleb128 0x1
 1927 000c 60000000 		.4byte	.LASF65
 1928 0010 0C       		.byte	0xc
 1929 0011 10030000 		.4byte	.LASF66
 1930 0015 1B010000 		.4byte	.LASF67
 1931 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1932 001d 00000000 		.4byte	0
 1933 0021 00000000 		.4byte	.Ldebug_line0
 1934 0025 02       		.uleb128 0x2
 1935 0026 AA020000 		.4byte	.LASF0
 1936 002a 02       		.byte	0x2
 1937 002b 1B       		.byte	0x1b
 1938 002c 30000000 		.4byte	0x30
 1939 0030 03       		.uleb128 0x3
 1940 0031 01       		.byte	0x1
 1941 0032 06       		.byte	0x6
 1942 0033 1E020000 		.4byte	.LASF2
 1943 0037 02       		.uleb128 0x2
 1944 0038 A0010000 		.4byte	.LASF1
 1945 003c 02       		.byte	0x2
 1946 003d 1D       		.byte	0x1d
 1947 003e 42000000 		.4byte	0x42
 1948 0042 03       		.uleb128 0x3
 1949 0043 01       		.byte	0x1
 1950 0044 08       		.byte	0x8
 1951 0045 AA010000 		.4byte	.LASF3
 1952 0049 03       		.uleb128 0x3
 1953 004a 02       		.byte	0x2
 1954 004b 05       		.byte	0x5
 1955 004c 3F000000 		.4byte	.LASF4
 1956 0050 02       		.uleb128 0x2
 1957 0051 F3000000 		.4byte	.LASF5
 1958 0055 02       		.byte	0x2
 1959 0056 2B       		.byte	0x2b
 1960 0057 5B000000 		.4byte	0x5b
 1961 005b 03       		.uleb128 0x3
 1962 005c 02       		.byte	0x2
 1963 005d 07       		.byte	0x7
 1964 005e 8A020000 		.4byte	.LASF6
 1965 0062 02       		.uleb128 0x2
 1966 0063 6D030000 		.4byte	.LASF7
 1967 0067 02       		.byte	0x2
 1968 0068 3F       		.byte	0x3f
 1969 0069 6D000000 		.4byte	0x6d
 1970 006d 03       		.uleb128 0x3
 1971 006e 04       		.byte	0x4
 1972 006f 05       		.byte	0x5
 1973 0070 87010000 		.4byte	.LASF8
 1974 0074 03       		.uleb128 0x3
 1975 0075 04       		.byte	0x4
 1976 0076 07       		.byte	0x7
 1977 0077 17030000 		.4byte	.LASF9
 1978 007b 02       		.uleb128 0x2
 1979 007c 90010000 		.4byte	.LASF10
 1980 0080 02       		.byte	0x2
 1981 0081 59       		.byte	0x59
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 47


 1982 0082 86000000 		.4byte	0x86
 1983 0086 03       		.uleb128 0x3
 1984 0087 08       		.byte	0x8
 1985 0088 05       		.byte	0x5
 1986 0089 6F010000 		.4byte	.LASF11
 1987 008d 03       		.uleb128 0x3
 1988 008e 08       		.byte	0x8
 1989 008f 07       		.byte	0x7
 1990 0090 2A020000 		.4byte	.LASF12
 1991 0094 04       		.uleb128 0x4
 1992 0095 04       		.byte	0x4
 1993 0096 05       		.byte	0x5
 1994 0097 696E7400 		.ascii	"int\000"
 1995 009b 03       		.uleb128 0x3
 1996 009c 04       		.byte	0x4
 1997 009d 07       		.byte	0x7
 1998 009e 4E020000 		.4byte	.LASF13
 1999 00a2 02       		.uleb128 0x2
 2000 00a3 38000000 		.4byte	.LASF14
 2001 00a7 03       		.byte	0x3
 2002 00a8 14       		.byte	0x14
 2003 00a9 25000000 		.4byte	0x25
 2004 00ad 02       		.uleb128 0x2
 2005 00ae 06010000 		.4byte	.LASF15
 2006 00b2 03       		.byte	0x3
 2007 00b3 18       		.byte	0x18
 2008 00b4 37000000 		.4byte	0x37
 2009 00b8 02       		.uleb128 0x2
 2010 00b9 61020000 		.4byte	.LASF16
 2011 00bd 03       		.byte	0x3
 2012 00be 24       		.byte	0x24
 2013 00bf 50000000 		.4byte	0x50
 2014 00c3 02       		.uleb128 0x2
 2015 00c4 D2020000 		.4byte	.LASF17
 2016 00c8 03       		.byte	0x3
 2017 00c9 2C       		.byte	0x2c
 2018 00ca 62000000 		.4byte	0x62
 2019 00ce 02       		.uleb128 0x2
 2020 00cf FE000000 		.4byte	.LASF18
 2021 00d3 03       		.byte	0x3
 2022 00d4 38       		.byte	0x38
 2023 00d5 7B000000 		.4byte	0x7b
 2024 00d9 03       		.uleb128 0x3
 2025 00da 04       		.byte	0x4
 2026 00db 04       		.byte	0x4
 2027 00dc 69010000 		.4byte	.LASF19
 2028 00e0 03       		.uleb128 0x3
 2029 00e1 08       		.byte	0x8
 2030 00e2 04       		.byte	0x4
 2031 00e3 99030000 		.4byte	.LASF20
 2032 00e7 03       		.uleb128 0x3
 2033 00e8 01       		.byte	0x1
 2034 00e9 08       		.byte	0x8
 2035 00ea 7D010000 		.4byte	.LASF21
 2036 00ee 03       		.uleb128 0x3
 2037 00ef 08       		.byte	0x8
 2038 00f0 04       		.byte	0x4
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 48


 2039 00f1 D9010000 		.4byte	.LASF22
 2040 00f5 03       		.uleb128 0x3
 2041 00f6 04       		.byte	0x4
 2042 00f7 07       		.byte	0x7
 2043 00f8 57000000 		.4byte	.LASF23
 2044 00fc 05       		.uleb128 0x5
 2045 00fd AD000000 		.4byte	0xad
 2046 0101 06       		.uleb128 0x6
 2047 0102 0C       		.byte	0xc
 2048 0103 01       		.byte	0x1
 2049 0104 95       		.byte	0x95
 2050 0105 2A010000 		.4byte	0x12a
 2051 0109 07       		.uleb128 0x7
 2052 010a 6900     		.ascii	"i\000"
 2053 010c 01       		.byte	0x1
 2054 010d 95       		.byte	0x95
 2055 010e D9000000 		.4byte	0xd9
 2056 0112 00       		.byte	0
 2057 0113 07       		.uleb128 0x7
 2058 0114 7500     		.ascii	"u\000"
 2059 0116 01       		.byte	0x1
 2060 0117 95       		.byte	0x95
 2061 0118 D9000000 		.4byte	0xd9
 2062 011c 04       		.byte	0x4
 2063 011d 08       		.uleb128 0x8
 2064 011e 66030000 		.4byte	.LASF24
 2065 0122 01       		.byte	0x1
 2066 0123 95       		.byte	0x95
 2067 0124 D9000000 		.4byte	0xd9
 2068 0128 08       		.byte	0x8
 2069 0129 00       		.byte	0
 2070 012a 02       		.uleb128 0x2
 2071 012b 82010000 		.4byte	.LASF25
 2072 012f 01       		.byte	0x1
 2073 0130 95       		.byte	0x95
 2074 0131 01010000 		.4byte	0x101
 2075 0135 09       		.uleb128 0x9
 2076 0136 B3020000 		.4byte	.LASF68
 2077 013a 01       		.byte	0x1
 2078 013b 4B       		.byte	0x4b
 2079 013c 00000000 		.4byte	.LFB64
 2080 0140 14010000 		.4byte	.LFE64-.LFB64
 2081 0144 01       		.uleb128 0x1
 2082 0145 9C       		.byte	0x9c
 2083 0146 F0010000 		.4byte	0x1f0
 2084 014a 0A       		.uleb128 0xa
 2085 014b 12000000 		.4byte	.LBB2
 2086 014f EA000000 		.4byte	.LBE2-.LBB2
 2087 0153 0B       		.uleb128 0xb
 2088 0154 D4010000 		.4byte	.LASF26
 2089 0158 01       		.byte	0x1
 2090 0159 4E       		.byte	0x4e
 2091 015a C3000000 		.4byte	0xc3
 2092 015e 02       		.uleb128 0x2
 2093 015f 91       		.byte	0x91
 2094 0160 54       		.sleb128 -44
 2095 0161 0B       		.uleb128 0xb
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 49


 2096 0162 0E010000 		.4byte	.LASF27
 2097 0166 01       		.byte	0x1
 2098 0167 4F       		.byte	0x4f
 2099 0168 C3000000 		.4byte	0xc3
 2100 016c 02       		.uleb128 0x2
 2101 016d 91       		.byte	0x91
 2102 016e 50       		.sleb128 -48
 2103 016f 0C       		.uleb128 0xc
 2104 0170 643100   		.ascii	"d1\000"
 2105 0173 01       		.byte	0x1
 2106 0174 51       		.byte	0x51
 2107 0175 C3000000 		.4byte	0xc3
 2108 0179 02       		.uleb128 0x2
 2109 017a 91       		.byte	0x91
 2110 017b 4C       		.sleb128 -52
 2111 017c 0C       		.uleb128 0xc
 2112 017d 643200   		.ascii	"d2\000"
 2113 0180 01       		.byte	0x1
 2114 0181 51       		.byte	0x51
 2115 0182 C3000000 		.4byte	0xc3
 2116 0186 02       		.uleb128 0x2
 2117 0187 91       		.byte	0x91
 2118 0188 48       		.sleb128 -56
 2119 0189 0C       		.uleb128 0xc
 2120 018a 613100   		.ascii	"a1\000"
 2121 018d 01       		.byte	0x1
 2122 018e 52       		.byte	0x52
 2123 018f C3000000 		.4byte	0xc3
 2124 0193 02       		.uleb128 0x2
 2125 0194 91       		.byte	0x91
 2126 0195 44       		.sleb128 -60
 2127 0196 0C       		.uleb128 0xc
 2128 0197 613200   		.ascii	"a2\000"
 2129 019a 01       		.byte	0x1
 2130 019b 53       		.byte	0x53
 2131 019c C3000000 		.4byte	0xc3
 2132 01a0 02       		.uleb128 0x2
 2133 01a1 91       		.byte	0x91
 2134 01a2 40       		.sleb128 -64
 2135 01a3 0B       		.uleb128 0xb
 2136 01a4 C3030000 		.4byte	.LASF28
 2137 01a8 01       		.byte	0x1
 2138 01a9 54       		.byte	0x54
 2139 01aa C3000000 		.4byte	0xc3
 2140 01ae 03       		.uleb128 0x3
 2141 01af 91       		.byte	0x91
 2142 01b0 BC7F     		.sleb128 -68
 2143 01b2 0B       		.uleb128 0xb
 2144 01b3 29030000 		.4byte	.LASF29
 2145 01b7 01       		.byte	0x1
 2146 01b8 55       		.byte	0x55
 2147 01b9 C3000000 		.4byte	0xc3
 2148 01bd 03       		.uleb128 0x3
 2149 01be 91       		.byte	0x91
 2150 01bf B87F     		.sleb128 -72
 2151 01c1 0C       		.uleb128 0xc
 2152 01c2 6E756D00 		.ascii	"num\000"
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 50


 2153 01c6 01       		.byte	0x1
 2154 01c7 58       		.byte	0x58
 2155 01c8 CE000000 		.4byte	0xce
 2156 01cc 03       		.uleb128 0x3
 2157 01cd 91       		.byte	0x91
 2158 01ce B07F     		.sleb128 -80
 2159 01d0 0B       		.uleb128 0xb
 2160 01d1 13010000 		.4byte	.LASF30
 2161 01d5 01       		.byte	0x1
 2162 01d6 59       		.byte	0x59
 2163 01d7 C3000000 		.4byte	0xc3
 2164 01db 03       		.uleb128 0x3
 2165 01dc 91       		.byte	0x91
 2166 01dd AC7F     		.sleb128 -84
 2167 01df 0B       		.uleb128 0xb
 2168 01e0 EE020000 		.4byte	.LASF31
 2169 01e4 01       		.byte	0x1
 2170 01e5 5A       		.byte	0x5a
 2171 01e6 C3000000 		.4byte	0xc3
 2172 01ea 03       		.uleb128 0x3
 2173 01eb 91       		.byte	0x91
 2174 01ec A87F     		.sleb128 -88
 2175 01ee 00       		.byte	0
 2176 01ef 00       		.byte	0
 2177 01f0 0D       		.uleb128 0xd
 2178 01f1 77030000 		.4byte	.LASF35
 2179 01f5 01       		.byte	0x1
 2180 01f6 69       		.byte	0x69
 2181 01f7 D9000000 		.4byte	0xd9
 2182 01fb 00000000 		.4byte	.LFB65
 2183 01ff 44000000 		.4byte	.LFE65-.LFB65
 2184 0203 01       		.uleb128 0x1
 2185 0204 9C       		.byte	0x9c
 2186 0205 17020000 		.4byte	0x217
 2187 0209 0E       		.uleb128 0xe
 2188 020a 707000   		.ascii	"pp\000"
 2189 020d 01       		.byte	0x1
 2190 020e 69       		.byte	0x69
 2191 020f B8000000 		.4byte	0xb8
 2192 0213 02       		.uleb128 0x2
 2193 0214 91       		.byte	0x91
 2194 0215 76       		.sleb128 -10
 2195 0216 00       		.byte	0
 2196 0217 0F       		.uleb128 0xf
 2197 0218 33030000 		.4byte	.LASF69
 2198 021c 01       		.byte	0x1
 2199 021d 71       		.byte	0x71
 2200 021e 00000000 		.4byte	.LFB66
 2201 0222 48010000 		.4byte	.LFE66-.LFB66
 2202 0226 01       		.uleb128 0x1
 2203 0227 9C       		.byte	0x9c
 2204 0228 A5020000 		.4byte	0x2a5
 2205 022c 10       		.uleb128 0x10
 2206 022d 29000000 		.4byte	.LASF32
 2207 0231 01       		.byte	0x1
 2208 0232 71       		.byte	0x71
 2209 0233 A5020000 		.4byte	0x2a5
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 51


 2210 0237 02       		.uleb128 0x2
 2211 0238 91       		.byte	0x91
 2212 0239 64       		.sleb128 -28
 2213 023a 10       		.uleb128 0x10
 2214 023b 63010000 		.4byte	.LASF33
 2215 023f 01       		.byte	0x1
 2216 0240 71       		.byte	0x71
 2217 0241 A5020000 		.4byte	0x2a5
 2218 0245 02       		.uleb128 0x2
 2219 0246 91       		.byte	0x91
 2220 0247 60       		.sleb128 -32
 2221 0248 10       		.uleb128 0x10
 2222 0249 5B020000 		.4byte	.LASF34
 2223 024d 01       		.byte	0x1
 2224 024e 71       		.byte	0x71
 2225 024f A5020000 		.4byte	0x2a5
 2226 0253 02       		.uleb128 0x2
 2227 0254 91       		.byte	0x91
 2228 0255 5C       		.sleb128 -36
 2229 0256 0C       		.uleb128 0xc
 2230 0257 563100   		.ascii	"V1\000"
 2231 025a 01       		.byte	0x1
 2232 025b 73       		.byte	0x73
 2233 025c B8000000 		.4byte	0xb8
 2234 0260 02       		.uleb128 0x2
 2235 0261 91       		.byte	0x91
 2236 0262 76       		.sleb128 -10
 2237 0263 0C       		.uleb128 0xc
 2238 0264 563200   		.ascii	"V2\000"
 2239 0267 01       		.byte	0x1
 2240 0268 74       		.byte	0x74
 2241 0269 B8000000 		.4byte	0xb8
 2242 026d 02       		.uleb128 0x2
 2243 026e 91       		.byte	0x91
 2244 026f 74       		.sleb128 -12
 2245 0270 0C       		.uleb128 0xc
 2246 0271 563300   		.ascii	"V3\000"
 2247 0274 01       		.byte	0x1
 2248 0275 75       		.byte	0x75
 2249 0276 B8000000 		.4byte	0xb8
 2250 027a 02       		.uleb128 0x2
 2251 027b 91       		.byte	0x91
 2252 027c 72       		.sleb128 -14
 2253 027d 0C       		.uleb128 0xc
 2254 027e 563400   		.ascii	"V4\000"
 2255 0281 01       		.byte	0x1
 2256 0282 76       		.byte	0x76
 2257 0283 B8000000 		.4byte	0xb8
 2258 0287 02       		.uleb128 0x2
 2259 0288 91       		.byte	0x91
 2260 0289 70       		.sleb128 -16
 2261 028a 0C       		.uleb128 0xc
 2262 028b 563500   		.ascii	"V5\000"
 2263 028e 01       		.byte	0x1
 2264 028f 77       		.byte	0x77
 2265 0290 B8000000 		.4byte	0xb8
 2266 0294 02       		.uleb128 0x2
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 52


 2267 0295 91       		.byte	0x91
 2268 0296 6E       		.sleb128 -18
 2269 0297 0C       		.uleb128 0xc
 2270 0298 563600   		.ascii	"V6\000"
 2271 029b 01       		.byte	0x1
 2272 029c 78       		.byte	0x78
 2273 029d B8000000 		.4byte	0xb8
 2274 02a1 02       		.uleb128 0x2
 2275 02a2 91       		.byte	0x91
 2276 02a3 6C       		.sleb128 -20
 2277 02a4 00       		.byte	0
 2278 02a5 11       		.uleb128 0x11
 2279 02a6 04       		.byte	0x4
 2280 02a7 B8000000 		.4byte	0xb8
 2281 02ab 0D       		.uleb128 0xd
 2282 02ac 77020000 		.4byte	.LASF36
 2283 02b0 01       		.byte	0x1
 2284 02b1 96       		.byte	0x96
 2285 02b2 D9000000 		.4byte	0xd9
 2286 02b6 00000000 		.4byte	.LFB67
 2287 02ba 3A000000 		.4byte	.LFE67-.LFB67
 2288 02be 01       		.uleb128 0x1
 2289 02bf 9C       		.byte	0x9c
 2290 02c0 EB020000 		.4byte	0x2eb
 2291 02c4 0E       		.uleb128 0xe
 2292 02c5 7800     		.ascii	"x\000"
 2293 02c7 01       		.byte	0x1
 2294 02c8 96       		.byte	0x96
 2295 02c9 D9000000 		.4byte	0xd9
 2296 02cd 02       		.uleb128 0x2
 2297 02ce 91       		.byte	0x91
 2298 02cf 74       		.sleb128 -12
 2299 02d0 0E       		.uleb128 0xe
 2300 02d1 6C6F00   		.ascii	"lo\000"
 2301 02d4 01       		.byte	0x1
 2302 02d5 96       		.byte	0x96
 2303 02d6 D9000000 		.4byte	0xd9
 2304 02da 02       		.uleb128 0x2
 2305 02db 91       		.byte	0x91
 2306 02dc 70       		.sleb128 -16
 2307 02dd 0E       		.uleb128 0xe
 2308 02de 686900   		.ascii	"hi\000"
 2309 02e1 01       		.byte	0x1
 2310 02e2 96       		.byte	0x96
 2311 02e3 D9000000 		.4byte	0xd9
 2312 02e7 02       		.uleb128 0x2
 2313 02e8 91       		.byte	0x91
 2314 02e9 6C       		.sleb128 -20
 2315 02ea 00       		.byte	0
 2316 02eb 0D       		.uleb128 0xd
 2317 02ec DA020000 		.4byte	.LASF37
 2318 02f0 01       		.byte	0x1
 2319 02f1 98       		.byte	0x98
 2320 02f2 94000000 		.4byte	0x94
 2321 02f6 00000000 		.4byte	.LFB68
 2322 02fa 88020000 		.4byte	.LFE68-.LFB68
 2323 02fe 01       		.uleb128 0x1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 53


 2324 02ff 9C       		.byte	0x9c
 2325 0300 E1030000 		.4byte	0x3e1
 2326 0304 0E       		.uleb128 0xe
 2327 0305 706900   		.ascii	"pi\000"
 2328 0308 01       		.byte	0x1
 2329 0309 98       		.byte	0x98
 2330 030a E1030000 		.4byte	0x3e1
 2331 030e 03       		.uleb128 0x3
 2332 030f 91       		.byte	0x91
 2333 0310 BC7F     		.sleb128 -68
 2334 0312 10       		.uleb128 0x10
 2335 0313 29000000 		.4byte	.LASF32
 2336 0317 01       		.byte	0x1
 2337 0318 98       		.byte	0x98
 2338 0319 B8000000 		.4byte	0xb8
 2339 031d 03       		.uleb128 0x3
 2340 031e 91       		.byte	0x91
 2341 031f BA7F     		.sleb128 -70
 2342 0321 10       		.uleb128 0x10
 2343 0322 63010000 		.4byte	.LASF33
 2344 0326 01       		.byte	0x1
 2345 0327 98       		.byte	0x98
 2346 0328 B8000000 		.4byte	0xb8
 2347 032c 03       		.uleb128 0x3
 2348 032d 91       		.byte	0x91
 2349 032e B87F     		.sleb128 -72
 2350 0330 10       		.uleb128 0x10
 2351 0331 5B020000 		.4byte	.LASF34
 2352 0335 01       		.byte	0x1
 2353 0336 98       		.byte	0x98
 2354 0337 B8000000 		.4byte	0xb8
 2355 033b 03       		.uleb128 0x3
 2356 033c 91       		.byte	0x91
 2357 033d B67F     		.sleb128 -74
 2358 033f 0C       		.uleb128 0xc
 2359 0340 633400   		.ascii	"c4\000"
 2360 0343 01       		.byte	0x1
 2361 0344 9A       		.byte	0x9a
 2362 0345 D9000000 		.4byte	0xd9
 2363 0349 02       		.uleb128 0x2
 2364 034a 91       		.byte	0x91
 2365 034b 68       		.sleb128 -24
 2366 034c 0C       		.uleb128 0xc
 2367 034d 633500   		.ascii	"c5\000"
 2368 0350 01       		.byte	0x1
 2369 0351 9B       		.byte	0x9b
 2370 0352 D9000000 		.4byte	0xd9
 2371 0356 02       		.uleb128 0x2
 2372 0357 91       		.byte	0x91
 2373 0358 64       		.sleb128 -28
 2374 0359 0C       		.uleb128 0xc
 2375 035a 633600   		.ascii	"c6\000"
 2376 035d 01       		.byte	0x1
 2377 035e 9C       		.byte	0x9c
 2378 035f D9000000 		.4byte	0xd9
 2379 0363 02       		.uleb128 0x2
 2380 0364 91       		.byte	0x91
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 54


 2381 0365 60       		.sleb128 -32
 2382 0366 0C       		.uleb128 0xc
 2383 0367 73756D00 		.ascii	"sum\000"
 2384 036b 01       		.byte	0x1
 2385 036c 9D       		.byte	0x9d
 2386 036d D9000000 		.4byte	0xd9
 2387 0371 02       		.uleb128 0x2
 2388 0372 91       		.byte	0x91
 2389 0373 5C       		.sleb128 -36
 2390 0374 0B       		.uleb128 0xb
 2391 0375 00000000 		.4byte	.LASF38
 2392 0379 01       		.byte	0x1
 2393 037a 9E       		.byte	0x9e
 2394 037b E7030000 		.4byte	0x3e7
 2395 037f 02       		.uleb128 0x2
 2396 0380 91       		.byte	0x91
 2397 0381 5B       		.sleb128 -37
 2398 0382 0C       		.uleb128 0xc
 2399 0383 706F7300 		.ascii	"pos\000"
 2400 0387 01       		.byte	0x1
 2401 0388 A0       		.byte	0xa0
 2402 0389 D9000000 		.4byte	0xd9
 2403 038d 02       		.uleb128 0x2
 2404 038e 91       		.byte	0x91
 2405 038f 6C       		.sleb128 -20
 2406 0390 0C       		.uleb128 0xc
 2407 0391 6500     		.ascii	"e\000"
 2408 0393 01       		.byte	0x1
 2409 0394 A3       		.byte	0xa3
 2410 0395 D9000000 		.4byte	0xd9
 2411 0399 02       		.uleb128 0x2
 2412 039a 91       		.byte	0x91
 2413 039b 54       		.sleb128 -44
 2414 039c 0B       		.uleb128 0xb
 2415 039d 09030000 		.4byte	.LASF39
 2416 03a1 01       		.byte	0x1
 2417 03a2 AC       		.byte	0xac
 2418 03a3 D9000000 		.4byte	0xd9
 2419 03a7 02       		.uleb128 0x2
 2420 03a8 91       		.byte	0x91
 2421 03a9 50       		.sleb128 -48
 2422 03aa 0B       		.uleb128 0xb
 2423 03ab 9A010000 		.4byte	.LASF40
 2424 03af 01       		.byte	0x1
 2425 03b0 AD       		.byte	0xad
 2426 03b1 D9000000 		.4byte	0xd9
 2427 03b5 02       		.uleb128 0x2
 2428 03b6 91       		.byte	0x91
 2429 03b7 4C       		.sleb128 -52
 2430 03b8 0C       		.uleb128 0xc
 2431 03b9 7500     		.ascii	"u\000"
 2432 03bb 01       		.byte	0x1
 2433 03bc AE       		.byte	0xae
 2434 03bd D9000000 		.4byte	0xd9
 2435 03c1 02       		.uleb128 0x2
 2436 03c2 91       		.byte	0x91
 2437 03c3 48       		.sleb128 -56
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 55


 2438 03c4 0B       		.uleb128 0xb
 2439 03c5 5F030000 		.4byte	.LASF41
 2440 03c9 01       		.byte	0x1
 2441 03ca B0       		.byte	0xb0
 2442 03cb E7030000 		.4byte	0x3e7
 2443 03cf 02       		.uleb128 0x2
 2444 03d0 91       		.byte	0x91
 2445 03d1 47       		.sleb128 -57
 2446 03d2 0B       		.uleb128 0xb
 2447 03d3 92030000 		.4byte	.LASF42
 2448 03d7 01       		.byte	0x1
 2449 03d8 B1       		.byte	0xb1
 2450 03d9 E7030000 		.4byte	0x3e7
 2451 03dd 02       		.uleb128 0x2
 2452 03de 91       		.byte	0x91
 2453 03df 46       		.sleb128 -58
 2454 03e0 00       		.byte	0
 2455 03e1 11       		.uleb128 0x11
 2456 03e2 04       		.byte	0x4
 2457 03e3 2A010000 		.4byte	0x12a
 2458 03e7 03       		.uleb128 0x3
 2459 03e8 01       		.byte	0x1
 2460 03e9 02       		.byte	0x2
 2461 03ea E8020000 		.4byte	.LASF43
 2462 03ee 12       		.uleb128 0x12
 2463 03ef EE000000 		.4byte	.LASF70
 2464 03f3 01       		.byte	0x1
 2465 03f4 BE       		.byte	0xbe
 2466 03f5 94000000 		.4byte	0x94
 2467 03f9 00000000 		.4byte	.LFB69
 2468 03fd 3C060000 		.4byte	.LFE69-.LFB69
 2469 0401 01       		.uleb128 0x1
 2470 0402 9C       		.byte	0x9c
 2471 0403 26050000 		.4byte	0x526
 2472 0407 0B       		.uleb128 0xb
 2473 0408 C2020000 		.4byte	.LASF44
 2474 040c 01       		.byte	0x1
 2475 040d DC       		.byte	0xdc
 2476 040e 94000000 		.4byte	0x94
 2477 0412 02       		.uleb128 0x2
 2478 0413 91       		.byte	0x91
 2479 0414 64       		.sleb128 -28
 2480 0415 0C       		.uleb128 0xc
 2481 0416 706900   		.ascii	"pi\000"
 2482 0419 01       		.byte	0x1
 2483 041a E1       		.byte	0xe1
 2484 041b 2A010000 		.4byte	0x12a
 2485 041f 03       		.uleb128 0x3
 2486 0420 91       		.byte	0x91
 2487 0421 BC7F     		.sleb128 -68
 2488 0423 0B       		.uleb128 0xb
 2489 0424 7F020000 		.4byte	.LASF45
 2490 0428 01       		.byte	0x1
 2491 0429 EF       		.byte	0xef
 2492 042a 3B050000 		.4byte	0x53b
 2493 042e 03       		.uleb128 0x3
 2494 042f 91       		.byte	0x91
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 56


 2495 0430 887F     		.sleb128 -120
 2496 0432 13       		.uleb128 0x13
 2497 0433 2F000000 		.4byte	.LASF46
 2498 0437 01       		.byte	0x1
 2499 0438 2901     		.2byte	0x129
 2500 043a A2000000 		.4byte	0xa2
 2501 043e 02       		.uleb128 0x2
 2502 043f 91       		.byte	0x91
 2503 0440 57       		.sleb128 -41
 2504 0441 14       		.uleb128 0x14
 2505 0442 6900     		.ascii	"i\000"
 2506 0444 01       		.byte	0x1
 2507 0445 3001     		.2byte	0x130
 2508 0447 A2000000 		.4byte	0xa2
 2509 044b 02       		.uleb128 0x2
 2510 044c 91       		.byte	0x91
 2511 044d 63       		.sleb128 -29
 2512 044e 13       		.uleb128 0x13
 2513 044f B7030000 		.4byte	.LASF47
 2514 0453 01       		.byte	0x1
 2515 0454 3101     		.2byte	0x131
 2516 0456 C3000000 		.4byte	0xc3
 2517 045a 02       		.uleb128 0x2
 2518 045b 91       		.byte	0x91
 2519 045c 5C       		.sleb128 -36
 2520 045d 13       		.uleb128 0x13
 2521 045e 17000000 		.4byte	.LASF48
 2522 0462 01       		.byte	0x1
 2523 0463 3301     		.2byte	0x133
 2524 0465 A2000000 		.4byte	0xa2
 2525 0469 02       		.uleb128 0x2
 2526 046a 91       		.byte	0x91
 2527 046b 5B       		.sleb128 -37
 2528 046c 13       		.uleb128 0x13
 2529 046d 49000000 		.4byte	.LASF49
 2530 0471 01       		.byte	0x1
 2531 0472 3401     		.2byte	0x134
 2532 0474 A2000000 		.4byte	0xa2
 2533 0478 02       		.uleb128 0x2
 2534 0479 91       		.byte	0x91
 2535 047a 5A       		.sleb128 -38
 2536 047b 13       		.uleb128 0x13
 2537 047c CC030000 		.4byte	.LASF50
 2538 0480 01       		.byte	0x1
 2539 0481 3501     		.2byte	0x135
 2540 0483 A2000000 		.4byte	0xa2
 2541 0487 02       		.uleb128 0x2
 2542 0488 91       		.byte	0x91
 2543 0489 59       		.sleb128 -39
 2544 048a 13       		.uleb128 0x13
 2545 048b C5010000 		.4byte	.LASF51
 2546 048f 01       		.byte	0x1
 2547 0490 3601     		.2byte	0x136
 2548 0492 A2000000 		.4byte	0xa2
 2549 0496 02       		.uleb128 0x2
 2550 0497 91       		.byte	0x91
 2551 0498 58       		.sleb128 -40
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 57


 2552 0499 0A       		.uleb128 0xa
 2553 049a 0E010000 		.4byte	.LBB3
 2554 049e 24050000 		.4byte	.LBE3-.LBB3
 2555 04a2 13       		.uleb128 0x13
 2556 04a3 29000000 		.4byte	.LASF32
 2557 04a7 01       		.byte	0x1
 2558 04a8 4301     		.2byte	0x143
 2559 04aa B8000000 		.4byte	0xb8
 2560 04ae 03       		.uleb128 0x3
 2561 04af 91       		.byte	0x91
 2562 04b0 867F     		.sleb128 -122
 2563 04b2 13       		.uleb128 0x13
 2564 04b3 63010000 		.4byte	.LASF33
 2565 04b7 01       		.byte	0x1
 2566 04b8 4301     		.2byte	0x143
 2567 04ba B8000000 		.4byte	0xb8
 2568 04be 03       		.uleb128 0x3
 2569 04bf 91       		.byte	0x91
 2570 04c0 847F     		.sleb128 -124
 2571 04c2 13       		.uleb128 0x13
 2572 04c3 5B020000 		.4byte	.LASF34
 2573 04c7 01       		.byte	0x1
 2574 04c8 4301     		.2byte	0x143
 2575 04ca B8000000 		.4byte	0xb8
 2576 04ce 03       		.uleb128 0x3
 2577 04cf 91       		.byte	0x91
 2578 04d0 827F     		.sleb128 -126
 2579 04d2 15       		.uleb128 0x15
 2580 04d3 66010000 		.4byte	.LBB4
 2581 04d7 7E000000 		.4byte	.LBE4-.LBB4
 2582 04db 0B050000 		.4byte	0x50b
 2583 04df 13       		.uleb128 0x13
 2584 04e0 E2020000 		.4byte	.LASF52
 2585 04e4 01       		.byte	0x1
 2586 04e5 9501     		.2byte	0x195
 2587 04e7 94000000 		.4byte	0x94
 2588 04eb 02       		.uleb128 0x2
 2589 04ec 91       		.byte	0x91
 2590 04ed 50       		.sleb128 -48
 2591 04ee 14       		.uleb128 0x14
 2592 04ef 563100   		.ascii	"V1\000"
 2593 04f2 01       		.byte	0x1
 2594 04f3 9801     		.2byte	0x198
 2595 04f5 B8000000 		.4byte	0xb8
 2596 04f9 02       		.uleb128 0x2
 2597 04fa 91       		.byte	0x91
 2598 04fb 4E       		.sleb128 -50
 2599 04fc 14       		.uleb128 0x14
 2600 04fd 563200   		.ascii	"V2\000"
 2601 0500 01       		.byte	0x1
 2602 0501 9A01     		.2byte	0x19a
 2603 0503 B8000000 		.4byte	0xb8
 2604 0507 02       		.uleb128 0x2
 2605 0508 91       		.byte	0x91
 2606 0509 4C       		.sleb128 -52
 2607 050a 00       		.byte	0
 2608 050b 0A       		.uleb128 0xa
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 58


 2609 050c 14050000 		.4byte	.LBB5
 2610 0510 34000000 		.4byte	.LBE5-.LBB5
 2611 0514 13       		.uleb128 0x13
 2612 0515 E2020000 		.4byte	.LASF52
 2613 0519 01       		.byte	0x1
 2614 051a 3F02     		.2byte	0x23f
 2615 051c 94000000 		.4byte	0x94
 2616 0520 02       		.uleb128 0x2
 2617 0521 91       		.byte	0x91
 2618 0522 48       		.sleb128 -56
 2619 0523 00       		.byte	0
 2620 0524 00       		.byte	0
 2621 0525 00       		.byte	0
 2622 0526 16       		.uleb128 0x16
 2623 0527 36050000 		.4byte	0x536
 2624 052b 36050000 		.4byte	0x536
 2625 052f 17       		.uleb128 0x17
 2626 0530 F5000000 		.4byte	0xf5
 2627 0534 32       		.byte	0x32
 2628 0535 00       		.byte	0
 2629 0536 18       		.uleb128 0x18
 2630 0537 AD000000 		.4byte	0xad
 2631 053b 18       		.uleb128 0x18
 2632 053c 26050000 		.4byte	0x526
 2633 0540 0B       		.uleb128 0xb
 2634 0541 B8010000 		.4byte	.LASF53
 2635 0545 01       		.byte	0x1
 2636 0546 3A       		.byte	0x3a
 2637 0547 AD000000 		.4byte	0xad
 2638 054b 05       		.uleb128 0x5
 2639 054c 03       		.byte	0x3
 2640 054d 00000000 		.4byte	sen1_on_line
 2641 0551 0B       		.uleb128 0xb
 2642 0552 E5010000 		.4byte	.LASF54
 2643 0556 01       		.byte	0x1
 2644 0557 3A       		.byte	0x3a
 2645 0558 AD000000 		.4byte	0xad
 2646 055c 05       		.uleb128 0x5
 2647 055d 03       		.byte	0x3
 2648 055e 01000000 		.4byte	sen2_on_line
 2649 0562 0B       		.uleb128 0xb
 2650 0563 11020000 		.4byte	.LASF55
 2651 0567 01       		.byte	0x1
 2652 0568 3A       		.byte	0x3a
 2653 0569 AD000000 		.4byte	0xad
 2654 056d 05       		.uleb128 0x5
 2655 056e 03       		.byte	0x3
 2656 056f 02000000 		.4byte	sen3_on_line
 2657 0573 0B       		.uleb128 0xb
 2658 0574 41020000 		.4byte	.LASF56
 2659 0578 01       		.byte	0x1
 2660 0579 3B       		.byte	0x3b
 2661 057a AD000000 		.4byte	0xad
 2662 057e 05       		.uleb128 0x5
 2663 057f 03       		.byte	0x3
 2664 0580 03000000 		.4byte	sen4_on_line
 2665 0584 0B       		.uleb128 0xb
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 59


 2666 0585 6A020000 		.4byte	.LASF57
 2667 0589 01       		.byte	0x1
 2668 058a 3B       		.byte	0x3b
 2669 058b AD000000 		.4byte	0xad
 2670 058f 05       		.uleb128 0x5
 2671 0590 03       		.byte	0x3
 2672 0591 04000000 		.4byte	sen5_on_line
 2673 0595 0B       		.uleb128 0xb
 2674 0596 9D020000 		.4byte	.LASF58
 2675 059a 01       		.byte	0x1
 2676 059b 3B       		.byte	0x3b
 2677 059c AD000000 		.4byte	0xad
 2678 05a0 05       		.uleb128 0x5
 2679 05a1 03       		.byte	0x3
 2680 05a2 05000000 		.4byte	sen6_on_line
 2681 05a6 0B       		.uleb128 0xb
 2682 05a7 86030000 		.4byte	.LASF59
 2683 05ab 01       		.byte	0x1
 2684 05ac 3E       		.byte	0x3e
 2685 05ad FC000000 		.4byte	0xfc
 2686 05b1 05       		.uleb128 0x5
 2687 05b2 03       		.byte	0x3
 2688 05b3 06000000 		.4byte	g_direction
 2689 05b7 0B       		.uleb128 0xb
 2690 05b8 F2010000 		.4byte	.LASF60
 2691 05bc 01       		.byte	0x1
 2692 05bd 3F       		.byte	0x3f
 2693 05be FC000000 		.4byte	0xfc
 2694 05c2 05       		.uleb128 0x5
 2695 05c3 03       		.byte	0x3
 2696 05c4 07000000 		.4byte	g_stop_now
 2697 05c8 0B       		.uleb128 0xb
 2698 05c9 A0030000 		.4byte	.LASF61
 2699 05cd 01       		.byte	0x1
 2700 05ce 40       		.byte	0x40
 2701 05cf D9050000 		.4byte	0x5d9
 2702 05d3 05       		.uleb128 0x5
 2703 05d4 03       		.byte	0x3
 2704 05d5 08000000 		.4byte	g_dist_mm
 2705 05d9 05       		.uleb128 0x5
 2706 05da C3000000 		.4byte	0xc3
 2707 05de 0B       		.uleb128 0xb
 2708 05df F9020000 		.4byte	.LASF62
 2709 05e3 01       		.byte	0x1
 2710 05e4 43       		.byte	0x43
 2711 05e5 B8000000 		.4byte	0xb8
 2712 05e9 05       		.uleb128 0x5
 2713 05ea 03       		.byte	0x3
 2714 05eb 0C000000 		.4byte	dir_delay_ticks
 2715 05ef 0B       		.uleb128 0xb
 2716 05f0 06000000 		.4byte	.LASF63
 2717 05f4 01       		.byte	0x1
 2718 05f5 44       		.byte	0x44
 2719 05f6 AD000000 		.4byte	0xad
 2720 05fa 05       		.uleb128 0x5
 2721 05fb 03       		.byte	0x3
 2722 05fc 0E000000 		.4byte	dir_latched_side
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 60


 2723 0600 0B       		.uleb128 0xb
 2724 0601 FD010000 		.4byte	.LASF64
 2725 0605 01       		.byte	0x1
 2726 0606 47       		.byte	0x47
 2727 0607 B8000000 		.4byte	0xb8
 2728 060b 05       		.uleb128 0x5
 2729 060c 03       		.byte	0x3
 2730 060d 10000000 		.4byte	turn_cooldown_ticks
 2731 0611 19       		.uleb128 0x19
 2732 0612 AA030000 		.4byte	.LASF71
 2733 0616 04       		.byte	0x4
 2734 0617 1207     		.2byte	0x712
 2735 0619 D9050000 		.4byte	0x5d9
 2736 061d 00       		.byte	0
 2737              		.section	.debug_abbrev,"",%progbits
 2738              	.Ldebug_abbrev0:
 2739 0000 01       		.uleb128 0x1
 2740 0001 11       		.uleb128 0x11
 2741 0002 01       		.byte	0x1
 2742 0003 25       		.uleb128 0x25
 2743 0004 0E       		.uleb128 0xe
 2744 0005 13       		.uleb128 0x13
 2745 0006 0B       		.uleb128 0xb
 2746 0007 03       		.uleb128 0x3
 2747 0008 0E       		.uleb128 0xe
 2748 0009 1B       		.uleb128 0x1b
 2749 000a 0E       		.uleb128 0xe
 2750 000b 55       		.uleb128 0x55
 2751 000c 17       		.uleb128 0x17
 2752 000d 11       		.uleb128 0x11
 2753 000e 01       		.uleb128 0x1
 2754 000f 10       		.uleb128 0x10
 2755 0010 17       		.uleb128 0x17
 2756 0011 00       		.byte	0
 2757 0012 00       		.byte	0
 2758 0013 02       		.uleb128 0x2
 2759 0014 16       		.uleb128 0x16
 2760 0015 00       		.byte	0
 2761 0016 03       		.uleb128 0x3
 2762 0017 0E       		.uleb128 0xe
 2763 0018 3A       		.uleb128 0x3a
 2764 0019 0B       		.uleb128 0xb
 2765 001a 3B       		.uleb128 0x3b
 2766 001b 0B       		.uleb128 0xb
 2767 001c 49       		.uleb128 0x49
 2768 001d 13       		.uleb128 0x13
 2769 001e 00       		.byte	0
 2770 001f 00       		.byte	0
 2771 0020 03       		.uleb128 0x3
 2772 0021 24       		.uleb128 0x24
 2773 0022 00       		.byte	0
 2774 0023 0B       		.uleb128 0xb
 2775 0024 0B       		.uleb128 0xb
 2776 0025 3E       		.uleb128 0x3e
 2777 0026 0B       		.uleb128 0xb
 2778 0027 03       		.uleb128 0x3
 2779 0028 0E       		.uleb128 0xe
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 61


 2780 0029 00       		.byte	0
 2781 002a 00       		.byte	0
 2782 002b 04       		.uleb128 0x4
 2783 002c 24       		.uleb128 0x24
 2784 002d 00       		.byte	0
 2785 002e 0B       		.uleb128 0xb
 2786 002f 0B       		.uleb128 0xb
 2787 0030 3E       		.uleb128 0x3e
 2788 0031 0B       		.uleb128 0xb
 2789 0032 03       		.uleb128 0x3
 2790 0033 08       		.uleb128 0x8
 2791 0034 00       		.byte	0
 2792 0035 00       		.byte	0
 2793 0036 05       		.uleb128 0x5
 2794 0037 35       		.uleb128 0x35
 2795 0038 00       		.byte	0
 2796 0039 49       		.uleb128 0x49
 2797 003a 13       		.uleb128 0x13
 2798 003b 00       		.byte	0
 2799 003c 00       		.byte	0
 2800 003d 06       		.uleb128 0x6
 2801 003e 13       		.uleb128 0x13
 2802 003f 01       		.byte	0x1
 2803 0040 0B       		.uleb128 0xb
 2804 0041 0B       		.uleb128 0xb
 2805 0042 3A       		.uleb128 0x3a
 2806 0043 0B       		.uleb128 0xb
 2807 0044 3B       		.uleb128 0x3b
 2808 0045 0B       		.uleb128 0xb
 2809 0046 01       		.uleb128 0x1
 2810 0047 13       		.uleb128 0x13
 2811 0048 00       		.byte	0
 2812 0049 00       		.byte	0
 2813 004a 07       		.uleb128 0x7
 2814 004b 0D       		.uleb128 0xd
 2815 004c 00       		.byte	0
 2816 004d 03       		.uleb128 0x3
 2817 004e 08       		.uleb128 0x8
 2818 004f 3A       		.uleb128 0x3a
 2819 0050 0B       		.uleb128 0xb
 2820 0051 3B       		.uleb128 0x3b
 2821 0052 0B       		.uleb128 0xb
 2822 0053 49       		.uleb128 0x49
 2823 0054 13       		.uleb128 0x13
 2824 0055 38       		.uleb128 0x38
 2825 0056 0B       		.uleb128 0xb
 2826 0057 00       		.byte	0
 2827 0058 00       		.byte	0
 2828 0059 08       		.uleb128 0x8
 2829 005a 0D       		.uleb128 0xd
 2830 005b 00       		.byte	0
 2831 005c 03       		.uleb128 0x3
 2832 005d 0E       		.uleb128 0xe
 2833 005e 3A       		.uleb128 0x3a
 2834 005f 0B       		.uleb128 0xb
 2835 0060 3B       		.uleb128 0x3b
 2836 0061 0B       		.uleb128 0xb
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 62


 2837 0062 49       		.uleb128 0x49
 2838 0063 13       		.uleb128 0x13
 2839 0064 38       		.uleb128 0x38
 2840 0065 0B       		.uleb128 0xb
 2841 0066 00       		.byte	0
 2842 0067 00       		.byte	0
 2843 0068 09       		.uleb128 0x9
 2844 0069 2E       		.uleb128 0x2e
 2845 006a 01       		.byte	0x1
 2846 006b 3F       		.uleb128 0x3f
 2847 006c 19       		.uleb128 0x19
 2848 006d 03       		.uleb128 0x3
 2849 006e 0E       		.uleb128 0xe
 2850 006f 3A       		.uleb128 0x3a
 2851 0070 0B       		.uleb128 0xb
 2852 0071 3B       		.uleb128 0x3b
 2853 0072 0B       		.uleb128 0xb
 2854 0073 27       		.uleb128 0x27
 2855 0074 19       		.uleb128 0x19
 2856 0075 11       		.uleb128 0x11
 2857 0076 01       		.uleb128 0x1
 2858 0077 12       		.uleb128 0x12
 2859 0078 06       		.uleb128 0x6
 2860 0079 40       		.uleb128 0x40
 2861 007a 18       		.uleb128 0x18
 2862 007b 9642     		.uleb128 0x2116
 2863 007d 19       		.uleb128 0x19
 2864 007e 01       		.uleb128 0x1
 2865 007f 13       		.uleb128 0x13
 2866 0080 00       		.byte	0
 2867 0081 00       		.byte	0
 2868 0082 0A       		.uleb128 0xa
 2869 0083 0B       		.uleb128 0xb
 2870 0084 01       		.byte	0x1
 2871 0085 11       		.uleb128 0x11
 2872 0086 01       		.uleb128 0x1
 2873 0087 12       		.uleb128 0x12
 2874 0088 06       		.uleb128 0x6
 2875 0089 00       		.byte	0
 2876 008a 00       		.byte	0
 2877 008b 0B       		.uleb128 0xb
 2878 008c 34       		.uleb128 0x34
 2879 008d 00       		.byte	0
 2880 008e 03       		.uleb128 0x3
 2881 008f 0E       		.uleb128 0xe
 2882 0090 3A       		.uleb128 0x3a
 2883 0091 0B       		.uleb128 0xb
 2884 0092 3B       		.uleb128 0x3b
 2885 0093 0B       		.uleb128 0xb
 2886 0094 49       		.uleb128 0x49
 2887 0095 13       		.uleb128 0x13
 2888 0096 02       		.uleb128 0x2
 2889 0097 18       		.uleb128 0x18
 2890 0098 00       		.byte	0
 2891 0099 00       		.byte	0
 2892 009a 0C       		.uleb128 0xc
 2893 009b 34       		.uleb128 0x34
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 63


 2894 009c 00       		.byte	0
 2895 009d 03       		.uleb128 0x3
 2896 009e 08       		.uleb128 0x8
 2897 009f 3A       		.uleb128 0x3a
 2898 00a0 0B       		.uleb128 0xb
 2899 00a1 3B       		.uleb128 0x3b
 2900 00a2 0B       		.uleb128 0xb
 2901 00a3 49       		.uleb128 0x49
 2902 00a4 13       		.uleb128 0x13
 2903 00a5 02       		.uleb128 0x2
 2904 00a6 18       		.uleb128 0x18
 2905 00a7 00       		.byte	0
 2906 00a8 00       		.byte	0
 2907 00a9 0D       		.uleb128 0xd
 2908 00aa 2E       		.uleb128 0x2e
 2909 00ab 01       		.byte	0x1
 2910 00ac 03       		.uleb128 0x3
 2911 00ad 0E       		.uleb128 0xe
 2912 00ae 3A       		.uleb128 0x3a
 2913 00af 0B       		.uleb128 0xb
 2914 00b0 3B       		.uleb128 0x3b
 2915 00b1 0B       		.uleb128 0xb
 2916 00b2 27       		.uleb128 0x27
 2917 00b3 19       		.uleb128 0x19
 2918 00b4 49       		.uleb128 0x49
 2919 00b5 13       		.uleb128 0x13
 2920 00b6 11       		.uleb128 0x11
 2921 00b7 01       		.uleb128 0x1
 2922 00b8 12       		.uleb128 0x12
 2923 00b9 06       		.uleb128 0x6
 2924 00ba 40       		.uleb128 0x40
 2925 00bb 18       		.uleb128 0x18
 2926 00bc 9642     		.uleb128 0x2116
 2927 00be 19       		.uleb128 0x19
 2928 00bf 01       		.uleb128 0x1
 2929 00c0 13       		.uleb128 0x13
 2930 00c1 00       		.byte	0
 2931 00c2 00       		.byte	0
 2932 00c3 0E       		.uleb128 0xe
 2933 00c4 05       		.uleb128 0x5
 2934 00c5 00       		.byte	0
 2935 00c6 03       		.uleb128 0x3
 2936 00c7 08       		.uleb128 0x8
 2937 00c8 3A       		.uleb128 0x3a
 2938 00c9 0B       		.uleb128 0xb
 2939 00ca 3B       		.uleb128 0x3b
 2940 00cb 0B       		.uleb128 0xb
 2941 00cc 49       		.uleb128 0x49
 2942 00cd 13       		.uleb128 0x13
 2943 00ce 02       		.uleb128 0x2
 2944 00cf 18       		.uleb128 0x18
 2945 00d0 00       		.byte	0
 2946 00d1 00       		.byte	0
 2947 00d2 0F       		.uleb128 0xf
 2948 00d3 2E       		.uleb128 0x2e
 2949 00d4 01       		.byte	0x1
 2950 00d5 03       		.uleb128 0x3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 64


 2951 00d6 0E       		.uleb128 0xe
 2952 00d7 3A       		.uleb128 0x3a
 2953 00d8 0B       		.uleb128 0xb
 2954 00d9 3B       		.uleb128 0x3b
 2955 00da 0B       		.uleb128 0xb
 2956 00db 27       		.uleb128 0x27
 2957 00dc 19       		.uleb128 0x19
 2958 00dd 11       		.uleb128 0x11
 2959 00de 01       		.uleb128 0x1
 2960 00df 12       		.uleb128 0x12
 2961 00e0 06       		.uleb128 0x6
 2962 00e1 40       		.uleb128 0x40
 2963 00e2 18       		.uleb128 0x18
 2964 00e3 9642     		.uleb128 0x2116
 2965 00e5 19       		.uleb128 0x19
 2966 00e6 01       		.uleb128 0x1
 2967 00e7 13       		.uleb128 0x13
 2968 00e8 00       		.byte	0
 2969 00e9 00       		.byte	0
 2970 00ea 10       		.uleb128 0x10
 2971 00eb 05       		.uleb128 0x5
 2972 00ec 00       		.byte	0
 2973 00ed 03       		.uleb128 0x3
 2974 00ee 0E       		.uleb128 0xe
 2975 00ef 3A       		.uleb128 0x3a
 2976 00f0 0B       		.uleb128 0xb
 2977 00f1 3B       		.uleb128 0x3b
 2978 00f2 0B       		.uleb128 0xb
 2979 00f3 49       		.uleb128 0x49
 2980 00f4 13       		.uleb128 0x13
 2981 00f5 02       		.uleb128 0x2
 2982 00f6 18       		.uleb128 0x18
 2983 00f7 00       		.byte	0
 2984 00f8 00       		.byte	0
 2985 00f9 11       		.uleb128 0x11
 2986 00fa 0F       		.uleb128 0xf
 2987 00fb 00       		.byte	0
 2988 00fc 0B       		.uleb128 0xb
 2989 00fd 0B       		.uleb128 0xb
 2990 00fe 49       		.uleb128 0x49
 2991 00ff 13       		.uleb128 0x13
 2992 0100 00       		.byte	0
 2993 0101 00       		.byte	0
 2994 0102 12       		.uleb128 0x12
 2995 0103 2E       		.uleb128 0x2e
 2996 0104 01       		.byte	0x1
 2997 0105 3F       		.uleb128 0x3f
 2998 0106 19       		.uleb128 0x19
 2999 0107 03       		.uleb128 0x3
 3000 0108 0E       		.uleb128 0xe
 3001 0109 3A       		.uleb128 0x3a
 3002 010a 0B       		.uleb128 0xb
 3003 010b 3B       		.uleb128 0x3b
 3004 010c 0B       		.uleb128 0xb
 3005 010d 27       		.uleb128 0x27
 3006 010e 19       		.uleb128 0x19
 3007 010f 49       		.uleb128 0x49
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 65


 3008 0110 13       		.uleb128 0x13
 3009 0111 11       		.uleb128 0x11
 3010 0112 01       		.uleb128 0x1
 3011 0113 12       		.uleb128 0x12
 3012 0114 06       		.uleb128 0x6
 3013 0115 40       		.uleb128 0x40
 3014 0116 18       		.uleb128 0x18
 3015 0117 9642     		.uleb128 0x2116
 3016 0119 19       		.uleb128 0x19
 3017 011a 01       		.uleb128 0x1
 3018 011b 13       		.uleb128 0x13
 3019 011c 00       		.byte	0
 3020 011d 00       		.byte	0
 3021 011e 13       		.uleb128 0x13
 3022 011f 34       		.uleb128 0x34
 3023 0120 00       		.byte	0
 3024 0121 03       		.uleb128 0x3
 3025 0122 0E       		.uleb128 0xe
 3026 0123 3A       		.uleb128 0x3a
 3027 0124 0B       		.uleb128 0xb
 3028 0125 3B       		.uleb128 0x3b
 3029 0126 05       		.uleb128 0x5
 3030 0127 49       		.uleb128 0x49
 3031 0128 13       		.uleb128 0x13
 3032 0129 02       		.uleb128 0x2
 3033 012a 18       		.uleb128 0x18
 3034 012b 00       		.byte	0
 3035 012c 00       		.byte	0
 3036 012d 14       		.uleb128 0x14
 3037 012e 34       		.uleb128 0x34
 3038 012f 00       		.byte	0
 3039 0130 03       		.uleb128 0x3
 3040 0131 08       		.uleb128 0x8
 3041 0132 3A       		.uleb128 0x3a
 3042 0133 0B       		.uleb128 0xb
 3043 0134 3B       		.uleb128 0x3b
 3044 0135 05       		.uleb128 0x5
 3045 0136 49       		.uleb128 0x49
 3046 0137 13       		.uleb128 0x13
 3047 0138 02       		.uleb128 0x2
 3048 0139 18       		.uleb128 0x18
 3049 013a 00       		.byte	0
 3050 013b 00       		.byte	0
 3051 013c 15       		.uleb128 0x15
 3052 013d 0B       		.uleb128 0xb
 3053 013e 01       		.byte	0x1
 3054 013f 11       		.uleb128 0x11
 3055 0140 01       		.uleb128 0x1
 3056 0141 12       		.uleb128 0x12
 3057 0142 06       		.uleb128 0x6
 3058 0143 01       		.uleb128 0x1
 3059 0144 13       		.uleb128 0x13
 3060 0145 00       		.byte	0
 3061 0146 00       		.byte	0
 3062 0147 16       		.uleb128 0x16
 3063 0148 01       		.uleb128 0x1
 3064 0149 01       		.byte	0x1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 66


 3065 014a 49       		.uleb128 0x49
 3066 014b 13       		.uleb128 0x13
 3067 014c 01       		.uleb128 0x1
 3068 014d 13       		.uleb128 0x13
 3069 014e 00       		.byte	0
 3070 014f 00       		.byte	0
 3071 0150 17       		.uleb128 0x17
 3072 0151 21       		.uleb128 0x21
 3073 0152 00       		.byte	0
 3074 0153 49       		.uleb128 0x49
 3075 0154 13       		.uleb128 0x13
 3076 0155 2F       		.uleb128 0x2f
 3077 0156 0B       		.uleb128 0xb
 3078 0157 00       		.byte	0
 3079 0158 00       		.byte	0
 3080 0159 18       		.uleb128 0x18
 3081 015a 26       		.uleb128 0x26
 3082 015b 00       		.byte	0
 3083 015c 49       		.uleb128 0x49
 3084 015d 13       		.uleb128 0x13
 3085 015e 00       		.byte	0
 3086 015f 00       		.byte	0
 3087 0160 19       		.uleb128 0x19
 3088 0161 34       		.uleb128 0x34
 3089 0162 00       		.byte	0
 3090 0163 03       		.uleb128 0x3
 3091 0164 0E       		.uleb128 0xe
 3092 0165 3A       		.uleb128 0x3a
 3093 0166 0B       		.uleb128 0xb
 3094 0167 3B       		.uleb128 0x3b
 3095 0168 05       		.uleb128 0x5
 3096 0169 49       		.uleb128 0x49
 3097 016a 13       		.uleb128 0x13
 3098 016b 3F       		.uleb128 0x3f
 3099 016c 19       		.uleb128 0x19
 3100 016d 3C       		.uleb128 0x3c
 3101 016e 19       		.uleb128 0x19
 3102 016f 00       		.byte	0
 3103 0170 00       		.byte	0
 3104 0171 00       		.byte	0
 3105              		.section	.debug_aranges,"",%progbits
 3106 0000 44000000 		.4byte	0x44
 3107 0004 0200     		.2byte	0x2
 3108 0006 00000000 		.4byte	.Ldebug_info0
 3109 000a 04       		.byte	0x4
 3110 000b 00       		.byte	0
 3111 000c 0000     		.2byte	0
 3112 000e 0000     		.2byte	0
 3113 0010 00000000 		.4byte	.LFB64
 3114 0014 14010000 		.4byte	.LFE64-.LFB64
 3115 0018 00000000 		.4byte	.LFB65
 3116 001c 44000000 		.4byte	.LFE65-.LFB65
 3117 0020 00000000 		.4byte	.LFB66
 3118 0024 48010000 		.4byte	.LFE66-.LFB66
 3119 0028 00000000 		.4byte	.LFB67
 3120 002c 3A000000 		.4byte	.LFE67-.LFB67
 3121 0030 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 67


 3122 0034 88020000 		.4byte	.LFE68-.LFB68
 3123 0038 00000000 		.4byte	.LFB69
 3124 003c 3C060000 		.4byte	.LFE69-.LFB69
 3125 0040 00000000 		.4byte	0
 3126 0044 00000000 		.4byte	0
 3127              		.section	.debug_ranges,"",%progbits
 3128              	.Ldebug_ranges0:
 3129 0000 00000000 		.4byte	.LFB64
 3130 0004 14010000 		.4byte	.LFE64
 3131 0008 00000000 		.4byte	.LFB65
 3132 000c 44000000 		.4byte	.LFE65
 3133 0010 00000000 		.4byte	.LFB66
 3134 0014 48010000 		.4byte	.LFE66
 3135 0018 00000000 		.4byte	.LFB67
 3136 001c 3A000000 		.4byte	.LFE67
 3137 0020 00000000 		.4byte	.LFB68
 3138 0024 88020000 		.4byte	.LFE68
 3139 0028 00000000 		.4byte	.LFB69
 3140 002c 3C060000 		.4byte	.LFE69
 3141 0030 00000000 		.4byte	0
 3142 0034 00000000 		.4byte	0
 3143              		.section	.debug_line,"",%progbits
 3144              	.Ldebug_line0:
 3145 0000 AA040000 		.section	.debug_str,"MS",%progbits,1
 3145      02003F01 
 3145      00000201 
 3145      FB0E0D00 
 3145      01010101 
 3146              	.LASF38:
 3147 0000 76616C69 		.ascii	"valid\000"
 3147      6400
 3148              	.LASF63:
 3149 0006 6469725F 		.ascii	"dir_latched_side\000"
 3149      6C617463 
 3149      6865645F 
 3149      73696465 
 3149      00
 3150              	.LASF48:
 3151 0017 73747261 		.ascii	"straight_complete\000"
 3151      69676874 
 3151      5F636F6D 
 3151      706C6574 
 3151      6500
 3152              	.LASF32:
 3153 0029 56345F70 		.ascii	"V4_pp\000"
 3153      7000
 3154              	.LASF46:
 3155 002f 696E6465 		.ascii	"indexMAX\000"
 3155      784D4158 
 3155      00
 3156              	.LASF14:
 3157 0038 696E7438 		.ascii	"int8_t\000"
 3157      5F7400
 3158              	.LASF4:
 3159 003f 73686F72 		.ascii	"short int\000"
 3159      7420696E 
 3159      7400
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 68


 3160              	.LASF49:
 3161 0049 7475726E 		.ascii	"turn_complete\000"
 3161      5F636F6D 
 3161      706C6574 
 3161      6500
 3162              	.LASF23:
 3163 0057 73697A65 		.ascii	"sizetype\000"
 3163      74797065 
 3163      00
 3164              	.LASF65:
 3165 0060 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3165      43313120 
 3165      352E342E 
 3165      31203230 
 3165      31363036 
 3166 0093 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3166      20726576 
 3166      6973696F 
 3166      6E203233 
 3166      37373135 
 3167 00c6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3167      66756E63 
 3167      74696F6E 
 3167      2D736563 
 3167      74696F6E 
 3168              	.LASF70:
 3169 00ee 6D61696E 		.ascii	"main\000"
 3169      00
 3170              	.LASF5:
 3171 00f3 5F5F7569 		.ascii	"__uint16_t\000"
 3171      6E743136 
 3171      5F7400
 3172              	.LASF18:
 3173 00fe 696E7436 		.ascii	"int64_t\000"
 3173      345F7400 
 3174              	.LASF15:
 3175 0106 75696E74 		.ascii	"uint8_t\000"
 3175      385F7400 
 3176              	.LASF27:
 3177 010e 72617732 		.ascii	"raw2\000"
 3177      00
 3178              	.LASF30:
 3179 0113 646D6D5F 		.ascii	"dmm_abs\000"
 3179      61627300 
 3180              	.LASF67:
 3181 011b 433A5C55 		.ascii	"C:\\Users\\yram171\\Downloads\\Compsys-301-CODE\\YA"
 3181      73657273 
 3181      5C797261 
 3181      6D313731 
 3181      5C446F77 
 3182 0149 53482043 		.ascii	"SH Code\\CS301_Class.cydsn\000"
 3182      6F64655C 
 3182      43533330 
 3182      315F436C 
 3182      6173732E 
 3183              	.LASF33:
 3184 0163 56355F70 		.ascii	"V5_pp\000"
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 69


 3184      7000
 3185              	.LASF19:
 3186 0169 666C6F61 		.ascii	"float\000"
 3186      7400
 3187              	.LASF11:
 3188 016f 6C6F6E67 		.ascii	"long long int\000"
 3188      206C6F6E 
 3188      6720696E 
 3188      7400
 3189              	.LASF21:
 3190 017d 63686172 		.ascii	"char\000"
 3190      00
 3191              	.LASF25:
 3192 0182 70695F74 		.ascii	"pi_t\000"
 3192      00
 3193              	.LASF8:
 3194 0187 6C6F6E67 		.ascii	"long int\000"
 3194      20696E74 
 3194      00
 3195              	.LASF10:
 3196 0190 5F5F696E 		.ascii	"__int64_t\000"
 3196      7436345F 
 3196      7400
 3197              	.LASF40:
 3198 019a 755F7261 		.ascii	"u_raw\000"
 3198      7700
 3199              	.LASF1:
 3200 01a0 5F5F7569 		.ascii	"__uint8_t\000"
 3200      6E74385F 
 3200      7400
 3201              	.LASF3:
 3202 01aa 756E7369 		.ascii	"unsigned char\000"
 3202      676E6564 
 3202      20636861 
 3202      7200
 3203              	.LASF53:
 3204 01b8 73656E31 		.ascii	"sen1_on_line\000"
 3204      5F6F6E5F 
 3204      6C696E65 
 3204      00
 3205              	.LASF51:
 3206 01c5 66727569 		.ascii	"fruit_complete\000"
 3206      745F636F 
 3206      6D706C65 
 3206      746500
 3207              	.LASF26:
 3208 01d4 72617731 		.ascii	"raw1\000"
 3208      00
 3209              	.LASF22:
 3210 01d9 6C6F6E67 		.ascii	"long double\000"
 3210      20646F75 
 3210      626C6500 
 3211              	.LASF54:
 3212 01e5 73656E32 		.ascii	"sen2_on_line\000"
 3212      5F6F6E5F 
 3212      6C696E65 
 3212      00
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 70


 3213              	.LASF60:
 3214 01f2 675F7374 		.ascii	"g_stop_now\000"
 3214      6F705F6E 
 3214      6F7700
 3215              	.LASF64:
 3216 01fd 7475726E 		.ascii	"turn_cooldown_ticks\000"
 3216      5F636F6F 
 3216      6C646F77 
 3216      6E5F7469 
 3216      636B7300 
 3217              	.LASF55:
 3218 0211 73656E33 		.ascii	"sen3_on_line\000"
 3218      5F6F6E5F 
 3218      6C696E65 
 3218      00
 3219              	.LASF2:
 3220 021e 7369676E 		.ascii	"signed char\000"
 3220      65642063 
 3220      68617200 
 3221              	.LASF12:
 3222 022a 6C6F6E67 		.ascii	"long long unsigned int\000"
 3222      206C6F6E 
 3222      6720756E 
 3222      7369676E 
 3222      65642069 
 3223              	.LASF56:
 3224 0241 73656E34 		.ascii	"sen4_on_line\000"
 3224      5F6F6E5F 
 3224      6C696E65 
 3224      00
 3225              	.LASF13:
 3226 024e 756E7369 		.ascii	"unsigned int\000"
 3226      676E6564 
 3226      20696E74 
 3226      00
 3227              	.LASF34:
 3228 025b 56365F70 		.ascii	"V6_pp\000"
 3228      7000
 3229              	.LASF16:
 3230 0261 75696E74 		.ascii	"uint16_t\000"
 3230      31365F74 
 3230      00
 3231              	.LASF57:
 3232 026a 73656E35 		.ascii	"sen5_on_line\000"
 3232      5F6F6E5F 
 3232      6C696E65 
 3232      00
 3233              	.LASF36:
 3234 0277 5F636C61 		.ascii	"_clampf\000"
 3234      6D706600 
 3235              	.LASF45:
 3236 027f 434D445F 		.ascii	"CMD_STATES\000"
 3236      53544154 
 3236      455300
 3237              	.LASF6:
 3238 028a 73686F72 		.ascii	"short unsigned int\000"
 3238      7420756E 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 71


 3238      7369676E 
 3238      65642069 
 3238      6E7400
 3239              	.LASF58:
 3240 029d 73656E36 		.ascii	"sen6_on_line\000"
 3240      5F6F6E5F 
 3240      6C696E65 
 3240      00
 3241              	.LASF0:
 3242 02aa 5F5F696E 		.ascii	"__int8_t\000"
 3242      74385F74 
 3242      00
 3243              	.LASF68:
 3244 02b3 6973725F 		.ascii	"isr_qd_Handler\000"
 3244      71645F48 
 3244      616E646C 
 3244      657200
 3245              	.LASF44:
 3246 02c2 63656E74 		.ascii	"center_duty_est\000"
 3246      65725F64 
 3246      7574795F 
 3246      65737400 
 3247              	.LASF17:
 3248 02d2 696E7433 		.ascii	"int32_t\000"
 3248      325F7400 
 3249              	.LASF37:
 3250 02da 70695F73 		.ascii	"pi_step\000"
 3250      74657000 
 3251              	.LASF52:
 3252 02e2 73746565 		.ascii	"steer\000"
 3252      7200
 3253              	.LASF43:
 3254 02e8 5F426F6F 		.ascii	"_Bool\000"
 3254      6C00
 3255              	.LASF31:
 3256 02ee 646D6D5F 		.ascii	"dmm_signed\000"
 3256      7369676E 
 3256      656400
 3257              	.LASF62:
 3258 02f9 6469725F 		.ascii	"dir_delay_ticks\000"
 3258      64656C61 
 3258      795F7469 
 3258      636B7300 
 3259              	.LASF39:
 3260 0309 695F6E65 		.ascii	"i_next\000"
 3260      787400
 3261              	.LASF66:
 3262 0310 6D61696E 		.ascii	"main.c\000"
 3262      2E6300
 3263              	.LASF9:
 3264 0317 6C6F6E67 		.ascii	"long unsigned int\000"
 3264      20756E73 
 3264      69676E65 
 3264      6420696E 
 3264      7400
 3265              	.LASF29:
 3266 0329 64617667 		.ascii	"davg_sign\000"
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cczJOzfa.s 			page 72


 3266      5F736967 
 3266      6E00
 3267              	.LASF69:
 3268 0333 6C696768 		.ascii	"light_sensors_update_and_maybe_request_turn\000"
 3268      745F7365 
 3268      6E736F72 
 3268      735F7570 
 3268      64617465 
 3269              	.LASF41:
 3270 035f 7361745F 		.ascii	"sat_hi\000"
 3270      686900
 3271              	.LASF24:
 3272 0366 745F6C6F 		.ascii	"t_loss\000"
 3272      737300
 3273              	.LASF7:
 3274 036d 5F5F696E 		.ascii	"__int32_t\000"
 3274      7433325F 
 3274      7400
 3275              	.LASF35:
 3276 0377 6E6F726D 		.ascii	"norm01_from_pp\000"
 3276      30315F66 
 3276      726F6D5F 
 3276      707000
 3277              	.LASF59:
 3278 0386 675F6469 		.ascii	"g_direction\000"
 3278      72656374 
 3278      696F6E00 
 3279              	.LASF42:
 3280 0392 7361745F 		.ascii	"sat_lo\000"
 3280      6C6F00
 3281              	.LASF20:
 3282 0399 646F7562 		.ascii	"double\000"
 3282      6C6500
 3283              	.LASF61:
 3284 03a0 675F6469 		.ascii	"g_dist_mm\000"
 3284      73745F6D 
 3284      6D00
 3285              	.LASF71:
 3286 03aa 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3286      52784275 
 3286      66666572 
 3286      00
 3287              	.LASF47:
 3288 03b7 74617267 		.ascii	"target_dist\000"
 3288      65745F64 
 3288      69737400 
 3289              	.LASF28:
 3290 03c3 64617667 		.ascii	"davg_abs\000"
 3290      5F616273 
 3290      00
 3291              	.LASF50:
 3292 03cc 75547572 		.ascii	"uTurn_complete\000"
 3292      6E5F636F 
 3292      6D706C65 
 3292      746500
 3293              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	sen1_on_line:
  21 0000 00       		.space	1
  22              	sen2_on_line:
  23 0001 00       		.space	1
  24              	sen3_on_line:
  25 0002 00       		.space	1
  26              	sen4_on_line:
  27 0003 00       		.space	1
  28              	sen5_on_line:
  29 0004 00       		.space	1
  30              	sen6_on_line:
  31 0005 00       		.space	1
  32              	g_direction:
  33 0006 00       		.space	1
  34              	g_stop_now:
  35 0007 00       		.space	1
  36              		.align	2
  37              	g_dist_mm:
  38 0008 00000000 		.space	4
  39              		.align	1
  40              	dir_delay_ticks:
  41 000c 0000     		.space	2
  42              	dir_latched_side:
  43 000e 00       		.space	1
  44 000f 00       		.align	1
  45              	turn_cooldown_ticks:
  46 0010 0000     		.space	2
  47              		.global	__aeabi_ldivmod
  48              		.section	.text.isr_qd_Handler,"ax",%progbits
  49              		.align	2
  50              		.global	isr_qd_Handler
  51              		.thumb
  52              		.thumb_func
  53              		.type	isr_qd_Handler, %function
  54              	isr_qd_Handler:
  55              	.LFB64:
  56              		.file 1 "main.c"
   1:main.c        **** /* ========================= main.c (with PI steering + turn-call delay) =========================
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 2


   2:main.c        ****  * - Keeps straight-line PI active during a short delay after g_direction flips (Option A)
   3:main.c        ****  * - Then calls Directions_Handle(&g_direction) to run the maneuver
   4:main.c        ****  * - Resets PI integrator after the turn completes
   5:main.c        ****  * ============================================================================================== *
   6:main.c        **** 
   7:main.c        **** #include <project.h>
   8:main.c        **** #include <stdint.h>
   9:main.c        **** #include <stdbool.h>
  10:main.c        **** 
  11:main.c        **** #include <sensors.h>     // Sensor_ComputePeakToPeak()
  12:main.c        **** #include "motor_s.h"     // set_motors_*, motor_enable
  13:main.c        **** #include "directions.h"  // Directions_* turning module
  14:main.c        **** 
  15:main.c        **** 
  16:main.c        **** /* ===== Loop pacing (kept) ===== */
  17:main.c        **** #define LOOP_DT_MS               8u
  18:main.c        **** #define DT_S   ( (float)LOOP_DT_MS / 1000.0f )
  19:main.c        **** 
  20:main.c        **** /* ===== Cruise speed / distance target (kept) ===== */
  21:main.c        **** #define VMAX_CONST_MM_S        1000
  22:main.c        **** #define SPEED_FRAC_PERCENT      20
  23:main.c        **** #define V_CRUISE_MM_S  ((int32_t)VMAX_CONST_MM_S * (int32_t)SPEED_FRAC_PERCENT / 100)
  24:main.c        **** #define TARGET_DIST_MM        999999  // HALF THE DISTANCE   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  25:main.c        **** 
  26:main.c        **** /* ===== Encoder â†’ mm conversion (kept) ===== */
  27:main.c        **** #define QD_SAMPLE_MS             5u
  28:main.c        **** #define CPR_OUTSHAFT           228u
  29:main.c        **** #define R_MM                    34
  30:main.c        **** #define PI_X1000              3142
  31:main.c        **** #define PERIM_MM_X1000   ((int32_t)(2 * PI_X1000 * R_MM))
  32:main.c        **** #define MM_PER_COUNT_X1000     ( PERIM_MM_X1000 / CPR_OUTSHAFT )
  33:main.c        **** #define CALIB_DIST_X1000     1000   // Changed to 1000 to avoid scaling
  34:main.c        **** #define APPLY_CALIB_DIST(x)  ( (int32_t)(((int64_t)(x) * CALIB_DIST_X1000 + 500)/1000) )
  35:main.c        **** 
  36:main.c        **** /* ===== S1/S2 relaxed detection (kept) ===== */
  37:main.c        **** #define S_MINC_COUNTS            10
  38:main.c        **** #define S_MAXC_COUNTS           100
  39:main.c        **** #define S_HYST_COUNTS           16u
  40:main.c        **** 
  41:main.c        **** /* ===== Turn request filtering (kept) ===== */
  42:main.c        **** #define TURN_DEBOUNCE_TICKS       5u
  43:main.c        **** #define CLEAR_ARM_TICKS           4u
  44:main.c        **** 
  45:main.c        **** #define DIR_CALL_DELAY_MS        (100)  /* wait ~200 ms before starting the maneuver */
  46:main.c        **** #define DIR_CALL_DELAY_TICKS     ((DIR_CALL_DELAY_MS + LOOP_DT_MS - 1) / LOOP_DT_MS)
  47:main.c        **** 
  48:main.c        **** 
  49:main.c        **** // Cooldown after turn to ignore intersection sensors V1 & V2
  50:main.c        **** #define TURN_COOLDOWN_MS (300)
  51:main.c        **** #define TURN_COOLDOWN_TICKS ((TURN_COOLDOWN_MS + LOOP_DT_MS - 1) / LOOP_DT_MS
  52:main.c        **** 
  53:main.c        **** 
  54:main.c        **** 
  55:main.c        **** /* ===== Local sensor flags (used for S1/S2 edge) ===== */
  56:main.c        **** static uint8_t sen1_on_line=0, sen2_on_line=0, sen3_on_line=0;
  57:main.c        **** static uint8_t sen4_on_line=0, sen5_on_line=0, sen6_on_line=0;
  58:main.c        **** 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 3


  59:main.c        **** /* ===== Global state (kept) ===== */
  60:main.c        **** static volatile uint8_t g_direction = 0;   /* 0=straight, 1=left, 2=right */
  61:main.c        **** static volatile uint8_t g_stop_now  = 0;
  62:main.c        **** static volatile int32_t g_dist_mm   = 0;
  63:main.c        **** 
  64:main.c        **** /* ===== Option A state ===== */
  65:main.c        **** static uint16_t dir_delay_ticks = 0;        /* countdown in loop ticks */
  66:main.c        **** static uint8_t  dir_latched_side = 0;       /* remembers 1 or 2 while waiting */
  67:main.c        **** 
  68:main.c        **** 
  69:main.c        **** static uint16_t turn_cooldown_ticks = 0;
  70:main.c        **** 
  71:main.c        **** 
  72:main.c        **** /* ------------------------------- 5 ms Timer ISR: accumulate distance (kept) ---------------------
  73:main.c        **** CY_ISR(isr_qd_Handler)
  74:main.c        **** {
  57              		.loc 1 74 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 48
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  62              		.cfi_def_cfa_offset 36
  63              		.cfi_offset 4, -36
  64              		.cfi_offset 5, -32
  65              		.cfi_offset 6, -28
  66              		.cfi_offset 7, -24
  67              		.cfi_offset 8, -20
  68              		.cfi_offset 9, -16
  69              		.cfi_offset 10, -12
  70              		.cfi_offset 11, -8
  71              		.cfi_offset 14, -4
  72 0004 8DB0     		sub	sp, sp, #52
  73              		.cfi_def_cfa_offset 88
  74 0006 00AF     		add	r7, sp, #0
  75              		.cfi_def_cfa_register 7
  75:main.c        ****     if (g_direction == 0u) {  // Only accumulate distance when moving straight
  76              		.loc 1 75 0
  77 0008 404B     		ldr	r3, .L7
  78 000a 1B78     		ldrb	r3, [r3]
  79 000c DBB2     		uxtb	r3, r3
  80 000e 002B     		cmp	r3, #0
  81 0010 74D1     		bne	.L2
  82              	.LBB2:
  76:main.c        ****         int32_t raw1 = QuadDec_M1_GetCounter();  QuadDec_M1_SetCounter(0);
  83              		.loc 1 76 0
  84 0012 FFF7FEFF 		bl	QuadDec_M1_GetCounter
  85 0016 0346     		mov	r3, r0
  86 0018 FB62     		str	r3, [r7, #44]
  87 001a 0020     		movs	r0, #0
  88 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  77:main.c        ****         int32_t raw2 = QuadDec_M2_GetCounter();  QuadDec_M2_SetCounter(0);
  89              		.loc 1 77 0
  90 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
  91 0024 0346     		mov	r3, r0
  92 0026 BB62     		str	r3, [r7, #40]
  93 0028 0020     		movs	r0, #0
  94 002a FFF7FEFF 		bl	QuadDec_M2_SetCounter
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 4


  78:main.c        **** 
  79:main.c        ****         int32_t d1 = raw1, d2 = raw2;
  95              		.loc 1 79 0
  96 002e FB6A     		ldr	r3, [r7, #44]
  97 0030 7B62     		str	r3, [r7, #36]
  98 0032 BB6A     		ldr	r3, [r7, #40]
  99 0034 3B62     		str	r3, [r7, #32]
  80:main.c        ****         int32_t a1 = (d1 >= 0) ? d1 : -d1;
 100              		.loc 1 80 0
 101 0036 7B6A     		ldr	r3, [r7, #36]
 102 0038 002B     		cmp	r3, #0
 103 003a B8BF     		it	lt
 104 003c 5B42     		rsblt	r3, r3, #0
 105 003e FB61     		str	r3, [r7, #28]
  81:main.c        ****         int32_t a2 = (d2 >= 0) ? d2 : -d2;
 106              		.loc 1 81 0
 107 0040 3B6A     		ldr	r3, [r7, #32]
 108 0042 002B     		cmp	r3, #0
 109 0044 B8BF     		it	lt
 110 0046 5B42     		rsblt	r3, r3, #0
 111 0048 BB61     		str	r3, [r7, #24]
  82:main.c        ****         int32_t davg_abs = (a1 + a2) / 2;
 112              		.loc 1 82 0
 113 004a FA69     		ldr	r2, [r7, #28]
 114 004c BB69     		ldr	r3, [r7, #24]
 115 004e 1344     		add	r3, r3, r2
 116 0050 DA0F     		lsrs	r2, r3, #31
 117 0052 1344     		add	r3, r3, r2
 118 0054 5B10     		asrs	r3, r3, #1
 119 0056 7B61     		str	r3, [r7, #20]
  83:main.c        ****         int32_t davg_sign = ((d1 + d2) >= 0) ? +1 : -1;
 120              		.loc 1 83 0
 121 0058 7A6A     		ldr	r2, [r7, #36]
 122 005a 3B6A     		ldr	r3, [r7, #32]
 123 005c 1344     		add	r3, r3, r2
 124 005e 002B     		cmp	r3, #0
 125 0060 01DB     		blt	.L3
 126              		.loc 1 83 0 is_stmt 0 discriminator 1
 127 0062 0123     		movs	r3, #1
 128 0064 01E0     		b	.L4
 129              	.L3:
 130              		.loc 1 83 0 discriminator 2
 131 0066 4FF0FF33 		mov	r3, #-1
 132              	.L4:
 133              		.loc 1 83 0 discriminator 4
 134 006a 3B61     		str	r3, [r7, #16]
  84:main.c        **** 
  85:main.c        ****         // Calculate the distance moved
  86:main.c        ****         int64_t num = (int64_t)(davg_abs) * MM_PER_COUNT_X1000;  // Calculate mm from encoder count
 135              		.loc 1 86 0 is_stmt 1 discriminator 4
 136 006c 7B69     		ldr	r3, [r7, #20]
 137 006e 1946     		mov	r1, r3
 138 0070 4FEAE172 		asr	r2, r1, #31
 139 0074 0B46     		mov	r3, r1
 140 0076 1446     		mov	r4, r2
 141 0078 DB18     		adds	r3, r3, r3
 142 007a 44EB0404 		adc	r4, r4, r4
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 5


 143 007e 5B18     		adds	r3, r3, r1
 144 0080 44EB0204 		adc	r4, r4, r2
 145 0084 4FEA840B 		lsl	fp, r4, #2
 146 0088 4BEA937B 		orr	fp, fp, r3, lsr #30
 147 008c 4FEA830A 		lsl	r10, r3, #2
 148 0090 5346     		mov	r3, r10
 149 0092 5C46     		mov	r4, fp
 150 0094 5B18     		adds	r3, r3, r1
 151 0096 44EB0204 		adc	r4, r4, r2
 152 009a E600     		lsls	r6, r4, #3
 153 009c 46EA5376 		orr	r6, r6, r3, lsr #29
 154 00a0 DD00     		lsls	r5, r3, #3
 155 00a2 5B19     		adds	r3, r3, r5
 156 00a4 44EB0604 		adc	r4, r4, r6
 157 00a8 4FEAC409 		lsl	r9, r4, #3
 158 00ac 49EA5379 		orr	r9, r9, r3, lsr #29
 159 00b0 4FEAC308 		lsl	r8, r3, #3
 160 00b4 4346     		mov	r3, r8
 161 00b6 4C46     		mov	r4, r9
 162 00b8 5B18     		adds	r3, r3, r1
 163 00ba 44EB0204 		adc	r4, r4, r2
 164 00be C7E90234 		strd	r3, [r7, #8]
  87:main.c        ****         int32_t dmm_abs = (int32_t)((num + 500) / 1000);          // Round to nearest mm
 165              		.loc 1 87 0 discriminator 4
 166 00c2 D7E90234 		ldrd	r3, [r7, #8]
 167 00c6 13F5FA70 		adds	r0, r3, #500
 168 00ca 44F10001 		adc	r1, r4, #0
 169 00ce 4FF47A72 		mov	r2, #1000
 170 00d2 4FF00003 		mov	r3, #0
 171 00d6 FFF7FEFF 		bl	__aeabi_ldivmod
 172 00da 0346     		mov	r3, r0
 173 00dc 0C46     		mov	r4, r1
 174 00de 7B60     		str	r3, [r7, #4]
  88:main.c        ****         int32_t dmm_signed = (davg_sign >= 0) ? +dmm_abs : -dmm_abs;
 175              		.loc 1 88 0 discriminator 4
 176 00e0 3B69     		ldr	r3, [r7, #16]
 177 00e2 002B     		cmp	r3, #0
 178 00e4 02DA     		bge	.L5
 179              		.loc 1 88 0 is_stmt 0 discriminator 1
 180 00e6 7B68     		ldr	r3, [r7, #4]
 181 00e8 5B42     		negs	r3, r3
 182 00ea 00E0     		b	.L6
 183              	.L5:
 184              		.loc 1 88 0 discriminator 2
 185 00ec 7B68     		ldr	r3, [r7, #4]
 186              	.L6:
 187              		.loc 1 88 0 discriminator 4
 188 00ee 3B60     		str	r3, [r7]
  89:main.c        **** 
  90:main.c        ****         // Update the global distance traveled
  91:main.c        ****         g_dist_mm += dmm_signed;
 189              		.loc 1 91 0 is_stmt 1 discriminator 4
 190 00f0 074B     		ldr	r3, .L7+4
 191 00f2 1A68     		ldr	r2, [r3]
 192 00f4 3B68     		ldr	r3, [r7]
 193 00f6 1344     		add	r3, r3, r2
 194 00f8 054A     		ldr	r2, .L7+4
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 6


 195 00fa 1360     		str	r3, [r2]
 196              	.L2:
 197              	.LBE2:
  92:main.c        **** 
  93:main.c        ****         // Optionally add small smoothing for distance (comment this out if you don't want smoothin
  94:main.c        ****         // static int32_t v_mm = 0;
  95:main.c        ****         // v_mm = v_mm + ((dmm_signed - v_mm) >> 2); // ~alpha=0.25
  96:main.c        ****         // g_dist_mm += v_mm;
  97:main.c        ****     }
  98:main.c        **** 
  99:main.c        ****     (void)Timer_QD_ReadStatusRegister();  // Clear the interrupt flag
 198              		.loc 1 99 0
 199 00fc FFF7FEFF 		bl	Timer_QD_ReadStatusRegister
 100:main.c        **** }
 200              		.loc 1 100 0
 201 0100 00BF     		nop
 202 0102 3437     		adds	r7, r7, #52
 203              		.cfi_def_cfa_offset 36
 204 0104 BD46     		mov	sp, r7
 205              		.cfi_def_cfa_register 13
 206              		@ sp needed
 207 0106 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 208              	.L8:
 209 010a 00BF     		.align	2
 210              	.L7:
 211 010c 06000000 		.word	g_direction
 212 0110 08000000 		.word	g_dist_mm
 213              		.cfi_endproc
 214              	.LFE64:
 215              		.size	isr_qd_Handler, .-isr_qd_Handler
 216              		.global	__aeabi_i2f
 217              		.global	__aeabi_fdiv
 218              		.section	.text.norm01_from_pp,"ax",%progbits
 219              		.align	2
 220              		.thumb
 221              		.thumb_func
 222              		.type	norm01_from_pp, %function
 223              	norm01_from_pp:
 224              	.LFB65:
 101:main.c        **** 
 102:main.c        **** /* Utility: normalize peak-to-peak to [0..1] */
 103:main.c        **** static inline float norm01_from_pp(uint16_t pp)
 104:main.c        **** {
 225              		.loc 1 104 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 8
 228              		@ frame_needed = 1, uses_anonymous_args = 0
 229 0000 80B5     		push	{r7, lr}
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 82B0     		sub	sp, sp, #8
 234              		.cfi_def_cfa_offset 16
 235 0004 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
 237 0006 0346     		mov	r3, r0
 238 0008 FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 7


 105:main.c        ****     if (pp <= S_MINC_COUNTS) return 0.0f;
 239              		.loc 1 105 0
 240 000a FB88     		ldrh	r3, [r7, #6]
 241 000c 0A2B     		cmp	r3, #10
 242 000e 02D8     		bhi	.L10
 243              		.loc 1 105 0 is_stmt 0 discriminator 1
 244 0010 4FF00003 		mov	r3, #0
 245 0014 10E0     		b	.L11
 246              	.L10:
 106:main.c        ****     if (pp >= S_MAXC_COUNTS) return 1.0f;
 247              		.loc 1 106 0 is_stmt 1
 248 0016 FB88     		ldrh	r3, [r7, #6]
 249 0018 632B     		cmp	r3, #99
 250 001a 02D9     		bls	.L12
 251              		.loc 1 106 0 is_stmt 0 discriminator 1
 252 001c 4FF07E53 		mov	r3, #1065353216
 253 0020 0AE0     		b	.L11
 254              	.L12:
 107:main.c        ****     return (float)(pp - S_MINC_COUNTS) / (float)(S_MAXC_COUNTS - S_MINC_COUNTS);
 255              		.loc 1 107 0 is_stmt 1
 256 0022 FB88     		ldrh	r3, [r7, #6]
 257 0024 0A3B     		subs	r3, r3, #10
 258 0026 1846     		mov	r0, r3
 259 0028 FFF7FEFF 		bl	__aeabi_i2f
 260 002c 0346     		mov	r3, r0
 261 002e 0449     		ldr	r1, .L13
 262 0030 1846     		mov	r0, r3
 263 0032 FFF7FEFF 		bl	__aeabi_fdiv
 264 0036 0346     		mov	r3, r0
 265              	.L11:
 108:main.c        **** }
 266              		.loc 1 108 0
 267 0038 1846     		mov	r0, r3
 268 003a 0837     		adds	r7, r7, #8
 269              		.cfi_def_cfa_offset 8
 270 003c BD46     		mov	sp, r7
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 003e 80BD     		pop	{r7, pc}
 274              	.L14:
 275              		.align	2
 276              	.L13:
 277 0040 0000B442 		.word	1119092736
 278              		.cfi_endproc
 279              	.LFE65:
 280              		.size	norm01_from_pp, .-norm01_from_pp
 281              		.section	.text.light_sensors_update_and_maybe_request_turn,"ax",%progbits
 282              		.align	2
 283              		.thumb
 284              		.thumb_func
 285              		.type	light_sensors_update_and_maybe_request_turn, %function
 286              	light_sensors_update_and_maybe_request_turn:
 287              	.LFB66:
 109:main.c        **** 
 110:main.c        **** /* Read sensors and (maybe) request a turn based on S1 / S2 (kept) */
 111:main.c        **** static void light_sensors_update_and_maybe_request_turn(uint16_t* V4_pp, uint16_t* V5_pp, uint16_t*
 112:main.c        **** {
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 8


 288              		.loc 1 112 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 32
 291              		@ frame_needed = 1, uses_anonymous_args = 0
 292 0000 80B5     		push	{r7, lr}
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 7, -8
 295              		.cfi_offset 14, -4
 296 0002 88B0     		sub	sp, sp, #32
 297              		.cfi_def_cfa_offset 40
 298 0004 00AF     		add	r7, sp, #0
 299              		.cfi_def_cfa_register 7
 300 0006 F860     		str	r0, [r7, #12]
 301 0008 B960     		str	r1, [r7, #8]
 302 000a 7A60     		str	r2, [r7, #4]
 113:main.c        ****     uint16_t V1 = Sensor_ComputePeakToPeak(0);
 303              		.loc 1 113 0
 304 000c 0020     		movs	r0, #0
 305 000e FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 306 0012 0346     		mov	r3, r0
 307 0014 FB83     		strh	r3, [r7, #30]	@ movhi
 114:main.c        ****     uint16_t V2 = Sensor_ComputePeakToPeak(1);
 308              		.loc 1 114 0
 309 0016 0120     		movs	r0, #1
 310 0018 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 311 001c 0346     		mov	r3, r0
 312 001e BB83     		strh	r3, [r7, #28]	@ movhi
 115:main.c        ****     uint16_t V3 = Sensor_ComputePeakToPeak(2);
 313              		.loc 1 115 0
 314 0020 0220     		movs	r0, #2
 315 0022 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 316 0026 0346     		mov	r3, r0
 317 0028 7B83     		strh	r3, [r7, #26]	@ movhi
 116:main.c        ****     uint16_t V4 = Sensor_ComputePeakToPeak(3);
 318              		.loc 1 116 0
 319 002a 0320     		movs	r0, #3
 320 002c FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 321 0030 0346     		mov	r3, r0
 322 0032 3B83     		strh	r3, [r7, #24]	@ movhi
 117:main.c        ****     uint16_t V5 = Sensor_ComputePeakToPeak(4);
 323              		.loc 1 117 0
 324 0034 0420     		movs	r0, #4
 325 0036 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 326 003a 0346     		mov	r3, r0
 327 003c FB82     		strh	r3, [r7, #22]	@ movhi
 118:main.c        ****     uint16_t V6 = Sensor_ComputePeakToPeak(5);
 328              		.loc 1 118 0
 329 003e 0520     		movs	r0, #5
 330 0040 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 331 0044 0346     		mov	r3, r0
 332 0046 BB82     		strh	r3, [r7, #20]	@ movhi
 119:main.c        **** 
 120:main.c        ****     if (V4_pp) *V4_pp = V4;
 333              		.loc 1 120 0
 334 0048 FB68     		ldr	r3, [r7, #12]
 335 004a 002B     		cmp	r3, #0
 336 004c 02D0     		beq	.L16
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 9


 337              		.loc 1 120 0 is_stmt 0 discriminator 1
 338 004e FB68     		ldr	r3, [r7, #12]
 339 0050 3A8B     		ldrh	r2, [r7, #24]	@ movhi
 340 0052 1A80     		strh	r2, [r3]	@ movhi
 341              	.L16:
 121:main.c        ****     if (V5_pp) *V5_pp = V5;
 342              		.loc 1 121 0 is_stmt 1
 343 0054 BB68     		ldr	r3, [r7, #8]
 344 0056 002B     		cmp	r3, #0
 345 0058 02D0     		beq	.L17
 346              		.loc 1 121 0 is_stmt 0 discriminator 1
 347 005a BB68     		ldr	r3, [r7, #8]
 348 005c FA8A     		ldrh	r2, [r7, #22]	@ movhi
 349 005e 1A80     		strh	r2, [r3]	@ movhi
 350              	.L17:
 122:main.c        ****     if (V6_pp) *V6_pp = V6;
 351              		.loc 1 122 0 is_stmt 1
 352 0060 7B68     		ldr	r3, [r7, #4]
 353 0062 002B     		cmp	r3, #0
 354 0064 02D0     		beq	.L18
 355              		.loc 1 122 0 is_stmt 0 discriminator 1
 356 0066 7B68     		ldr	r3, [r7, #4]
 357 0068 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 358 006a 1A80     		strh	r2, [r3]	@ movhi
 359              	.L18:
 123:main.c        ****     
 124:main.c        ****     sen1_on_line = (V1 > 10 && V1 < 100) ? 1u : 0u;
 360              		.loc 1 124 0 is_stmt 1
 361 006c FB8B     		ldrh	r3, [r7, #30]
 362 006e 0A2B     		cmp	r3, #10
 363 0070 04D9     		bls	.L19
 364              		.loc 1 124 0 is_stmt 0 discriminator 1
 365 0072 FB8B     		ldrh	r3, [r7, #30]
 366 0074 632B     		cmp	r3, #99
 367 0076 01D8     		bhi	.L19
 368              		.loc 1 124 0 discriminator 3
 369 0078 0122     		movs	r2, #1
 370 007a 00E0     		b	.L20
 371              	.L19:
 372              		.loc 1 124 0 discriminator 4
 373 007c 0022     		movs	r2, #0
 374              	.L20:
 375              		.loc 1 124 0 discriminator 6
 376 007e 2A4B     		ldr	r3, .L34
 377 0080 1A70     		strb	r2, [r3]
 125:main.c        ****     sen2_on_line = (V2 > 10 && V2 < 100) ? 1u : 0u;
 378              		.loc 1 125 0 is_stmt 1 discriminator 6
 379 0082 BB8B     		ldrh	r3, [r7, #28]
 380 0084 0A2B     		cmp	r3, #10
 381 0086 04D9     		bls	.L21
 382              		.loc 1 125 0 is_stmt 0 discriminator 1
 383 0088 BB8B     		ldrh	r3, [r7, #28]
 384 008a 632B     		cmp	r3, #99
 385 008c 01D8     		bhi	.L21
 386              		.loc 1 125 0 discriminator 3
 387 008e 0122     		movs	r2, #1
 388 0090 00E0     		b	.L22
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 10


 389              	.L21:
 390              		.loc 1 125 0 discriminator 4
 391 0092 0022     		movs	r2, #0
 392              	.L22:
 393              		.loc 1 125 0 discriminator 6
 394 0094 254B     		ldr	r3, .L34+4
 395 0096 1A70     		strb	r2, [r3]
 126:main.c        ****     sen3_on_line = (V3 > 10 && V3 < 100) ? 1u : 0u;
 396              		.loc 1 126 0 is_stmt 1 discriminator 6
 397 0098 7B8B     		ldrh	r3, [r7, #26]
 398 009a 0A2B     		cmp	r3, #10
 399 009c 04D9     		bls	.L23
 400              		.loc 1 126 0 is_stmt 0 discriminator 1
 401 009e 7B8B     		ldrh	r3, [r7, #26]
 402 00a0 632B     		cmp	r3, #99
 403 00a2 01D8     		bhi	.L23
 404              		.loc 1 126 0 discriminator 3
 405 00a4 0122     		movs	r2, #1
 406 00a6 00E0     		b	.L24
 407              	.L23:
 408              		.loc 1 126 0 discriminator 4
 409 00a8 0022     		movs	r2, #0
 410              	.L24:
 411              		.loc 1 126 0 discriminator 6
 412 00aa 214B     		ldr	r3, .L34+8
 413 00ac 1A70     		strb	r2, [r3]
 127:main.c        ****     sen4_on_line = (V4 > 10 && V4 < 100) ? 1u : 0u;
 414              		.loc 1 127 0 is_stmt 1 discriminator 6
 415 00ae 3B8B     		ldrh	r3, [r7, #24]
 416 00b0 0A2B     		cmp	r3, #10
 417 00b2 04D9     		bls	.L25
 418              		.loc 1 127 0 is_stmt 0 discriminator 1
 419 00b4 3B8B     		ldrh	r3, [r7, #24]
 420 00b6 632B     		cmp	r3, #99
 421 00b8 01D8     		bhi	.L25
 422              		.loc 1 127 0 discriminator 3
 423 00ba 0122     		movs	r2, #1
 424 00bc 00E0     		b	.L26
 425              	.L25:
 426              		.loc 1 127 0 discriminator 4
 427 00be 0022     		movs	r2, #0
 428              	.L26:
 429              		.loc 1 127 0 discriminator 6
 430 00c0 1C4B     		ldr	r3, .L34+12
 431 00c2 1A70     		strb	r2, [r3]
 128:main.c        ****     sen5_on_line = (V5 > 10 && V5 < 100) ? 1u : 0u;
 432              		.loc 1 128 0 is_stmt 1 discriminator 6
 433 00c4 FB8A     		ldrh	r3, [r7, #22]
 434 00c6 0A2B     		cmp	r3, #10
 435 00c8 04D9     		bls	.L27
 436              		.loc 1 128 0 is_stmt 0 discriminator 1
 437 00ca FB8A     		ldrh	r3, [r7, #22]
 438 00cc 632B     		cmp	r3, #99
 439 00ce 01D8     		bhi	.L27
 440              		.loc 1 128 0 discriminator 3
 441 00d0 0122     		movs	r2, #1
 442 00d2 00E0     		b	.L28
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 11


 443              	.L27:
 444              		.loc 1 128 0 discriminator 4
 445 00d4 0022     		movs	r2, #0
 446              	.L28:
 447              		.loc 1 128 0 discriminator 6
 448 00d6 184B     		ldr	r3, .L34+16
 449 00d8 1A70     		strb	r2, [r3]
 129:main.c        ****     sen6_on_line = (V6 > 10 && V6 < 100) ? 1u : 0u;
 450              		.loc 1 129 0 is_stmt 1 discriminator 6
 451 00da BB8A     		ldrh	r3, [r7, #20]
 452 00dc 0A2B     		cmp	r3, #10
 453 00de 04D9     		bls	.L29
 454              		.loc 1 129 0 is_stmt 0 discriminator 1
 455 00e0 BB8A     		ldrh	r3, [r7, #20]
 456 00e2 632B     		cmp	r3, #99
 457 00e4 01D8     		bhi	.L29
 458              		.loc 1 129 0 discriminator 3
 459 00e6 0122     		movs	r2, #1
 460 00e8 00E0     		b	.L30
 461              	.L29:
 462              		.loc 1 129 0 discriminator 4
 463 00ea 0022     		movs	r2, #0
 464              	.L30:
 465              		.loc 1 129 0 discriminator 6
 466 00ec 134B     		ldr	r3, .L34+20
 467 00ee 1A70     		strb	r2, [r3]
 130:main.c        **** 
 131:main.c        ****     if (g_direction == 0u && turn_cooldown_ticks == 0u){
 468              		.loc 1 131 0 is_stmt 1 discriminator 6
 469 00f0 134B     		ldr	r3, .L34+24
 470 00f2 1B78     		ldrb	r3, [r3]
 471 00f4 DBB2     		uxtb	r3, r3
 472 00f6 002B     		cmp	r3, #0
 473 00f8 12D1     		bne	.L33
 474              		.loc 1 131 0 is_stmt 0 discriminator 1
 475 00fa 124B     		ldr	r3, .L34+28
 476 00fc 1B88     		ldrh	r3, [r3]
 477 00fe 002B     		cmp	r3, #0
 478 0100 0ED1     		bne	.L33
 132:main.c        ****         if (sen1_on_line){
 479              		.loc 1 132 0 is_stmt 1
 480 0102 094B     		ldr	r3, .L34
 481 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 482 0106 002B     		cmp	r3, #0
 483 0108 03D0     		beq	.L32
 133:main.c        ****             g_direction = 1;  // LEFT turn
 484              		.loc 1 133 0
 485 010a 0D4B     		ldr	r3, .L34+24
 486 010c 0122     		movs	r2, #1
 487 010e 1A70     		strb	r2, [r3]
 134:main.c        ****         } else if (sen2_on_line){
 135:main.c        ****             g_direction = 2;  // RIGHT turn
 136:main.c        ****         }
 137:main.c        ****     }
 138:main.c        **** }
 488              		.loc 1 138 0
 489 0110 06E0     		b	.L33
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 12


 490              	.L32:
 134:main.c        ****         } else if (sen2_on_line){
 491              		.loc 1 134 0
 492 0112 064B     		ldr	r3, .L34+4
 493 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 494 0116 002B     		cmp	r3, #0
 495 0118 02D0     		beq	.L33
 135:main.c        ****         }
 496              		.loc 1 135 0
 497 011a 094B     		ldr	r3, .L34+24
 498 011c 0222     		movs	r2, #2
 499 011e 1A70     		strb	r2, [r3]
 500              	.L33:
 501              		.loc 1 138 0
 502 0120 00BF     		nop
 503 0122 2037     		adds	r7, r7, #32
 504              		.cfi_def_cfa_offset 8
 505 0124 BD46     		mov	sp, r7
 506              		.cfi_def_cfa_register 13
 507              		@ sp needed
 508 0126 80BD     		pop	{r7, pc}
 509              	.L35:
 510              		.align	2
 511              	.L34:
 512 0128 00000000 		.word	sen1_on_line
 513 012c 01000000 		.word	sen2_on_line
 514 0130 02000000 		.word	sen3_on_line
 515 0134 03000000 		.word	sen4_on_line
 516 0138 04000000 		.word	sen5_on_line
 517 013c 05000000 		.word	sen6_on_line
 518 0140 06000000 		.word	g_direction
 519 0144 10000000 		.word	turn_cooldown_ticks
 520              		.cfi_endproc
 521              	.LFE66:
 522              		.size	light_sensors_update_and_maybe_request_turn, .-light_sensors_update_and_maybe_request_turn
 523              		.global	__aeabi_fcmplt
 524              		.global	__aeabi_fcmpgt
 525              		.section	.text._clampf,"ax",%progbits
 526              		.align	2
 527              		.thumb
 528              		.thumb_func
 529              		.type	_clampf, %function
 530              	_clampf:
 531              	.LFB67:
 139:main.c        **** 
 140:main.c        **** /* ================= PI Controller (same as your current file) ================= */
 141:main.c        **** #define STEER_MAX        15
 142:main.c        **** #define KP               18.0f
 143:main.c        **** #define KI               2.0f
 144:main.c        **** #define INT_LIM          30.0f
 145:main.c        **** #define LOSS_TIMEOUT_T   0.25f
 146:main.c        **** 
 147:main.c        **** typedef struct { float i, u, t_loss; } pi_t;
 148:main.c        **** static inline float _clampf(float x, float lo, float hi){ return (x<lo?lo:(x>hi?hi:x)); }
 532              		.loc 1 148 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 13


 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 0000 80B5     		push	{r7, lr}
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 84B0     		sub	sp, sp, #16
 541              		.cfi_def_cfa_offset 24
 542 0004 00AF     		add	r7, sp, #0
 543              		.cfi_def_cfa_register 7
 544 0006 F860     		str	r0, [r7, #12]	@ float
 545 0008 B960     		str	r1, [r7, #8]	@ float
 546 000a 7A60     		str	r2, [r7, #4]	@ float
 547              		.loc 1 148 0
 548 000c B968     		ldr	r1, [r7, #8]	@ float
 549 000e F868     		ldr	r0, [r7, #12]	@ float
 550 0010 FFF7FEFF 		bl	__aeabi_fcmplt
 551 0014 0346     		mov	r3, r0
 552 0016 002B     		cmp	r3, #0
 553 0018 01D0     		beq	.L46
 554              		.loc 1 148 0 is_stmt 0 discriminator 1
 555 001a BB68     		ldr	r3, [r7, #8]	@ float
 556 001c 09E0     		b	.L43
 557              	.L46:
 558              		.loc 1 148 0 discriminator 2
 559 001e 7968     		ldr	r1, [r7, #4]	@ float
 560 0020 F868     		ldr	r0, [r7, #12]	@ float
 561 0022 FFF7FEFF 		bl	__aeabi_fcmpgt
 562 0026 0346     		mov	r3, r0
 563 0028 002B     		cmp	r3, #0
 564 002a 01D0     		beq	.L47
 565              		.loc 1 148 0 discriminator 4
 566 002c 7B68     		ldr	r3, [r7, #4]	@ float
 567 002e 00E0     		b	.L43
 568              	.L47:
 569              		.loc 1 148 0 discriminator 5
 570 0030 FB68     		ldr	r3, [r7, #12]	@ float
 571              	.L43:
 572              		.loc 1 148 0 discriminator 9
 573 0032 1846     		mov	r0, r3
 574 0034 1037     		adds	r7, r7, #16
 575              		.cfi_def_cfa_offset 8
 576 0036 BD46     		mov	sp, r7
 577              		.cfi_def_cfa_register 13
 578              		@ sp needed
 579 0038 80BD     		pop	{r7, pc}
 580              		.cfi_endproc
 581              	.LFE67:
 582              		.size	_clampf, .-_clampf
 583              		.global	__aeabi_fmul
 584              		.global	__aeabi_fadd
 585              		.global	__aeabi_fsub
 586              		.global	__aeabi_fcmpge
 587              		.global	__aeabi_f2iz
 588              		.global	__aeabi_fcmple
 589 003a 00BF     		.section	.text.pi_step,"ax",%progbits
 590              		.align	2
 591              		.thumb
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 14


 592              		.thumb_func
 593              		.type	pi_step, %function
 594              	pi_step:
 595              	.LFB68:
 149:main.c        **** 
 150:main.c        **** static int pi_step(pi_t* pi, uint16_t V4_pp, uint16_t V5_pp, uint16_t V6_pp)
 151:main.c        **** {
 596              		.loc 1 151 0 is_stmt 1
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 64
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600 0000 90B5     		push	{r4, r7, lr}
 601              		.cfi_def_cfa_offset 12
 602              		.cfi_offset 4, -12
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0002 91B0     		sub	sp, sp, #68
 606              		.cfi_def_cfa_offset 80
 607 0004 00AF     		add	r7, sp, #0
 608              		.cfi_def_cfa_register 7
 609 0006 F860     		str	r0, [r7, #12]
 610 0008 0846     		mov	r0, r1
 611 000a 1146     		mov	r1, r2
 612 000c 1A46     		mov	r2, r3
 613 000e 0346     		mov	r3, r0	@ movhi
 614 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 615 0012 0B46     		mov	r3, r1	@ movhi
 616 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 617 0016 1346     		mov	r3, r2	@ movhi
 618 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 152:main.c        ****     float c4 = norm01_from_pp(V4_pp)*1.5f;
 619              		.loc 1 152 0
 620 001a 7B89     		ldrh	r3, [r7, #10]
 621 001c 1846     		mov	r0, r3
 622 001e FFF7FEFF 		bl	norm01_from_pp
 623 0022 0346     		mov	r3, r0
 624 0024 4FF07F51 		mov	r1, #1069547520
 625 0028 1846     		mov	r0, r3
 626 002a FFF7FEFF 		bl	__aeabi_fmul
 627 002e 0346     		mov	r3, r0
 628 0030 BB63     		str	r3, [r7, #56]	@ float
 153:main.c        ****     float c5 = norm01_from_pp(V5_pp)*1.5f;
 629              		.loc 1 153 0
 630 0032 3B89     		ldrh	r3, [r7, #8]
 631 0034 1846     		mov	r0, r3
 632 0036 FFF7FEFF 		bl	norm01_from_pp
 633 003a 0346     		mov	r3, r0
 634 003c 4FF07F51 		mov	r1, #1069547520
 635 0040 1846     		mov	r0, r3
 636 0042 FFF7FEFF 		bl	__aeabi_fmul
 637 0046 0346     		mov	r3, r0
 638 0048 7B63     		str	r3, [r7, #52]	@ float
 154:main.c        ****     float c6 = norm01_from_pp(V6_pp)*1.5f;
 639              		.loc 1 154 0
 640 004a FB88     		ldrh	r3, [r7, #6]
 641 004c 1846     		mov	r0, r3
 642 004e FFF7FEFF 		bl	norm01_from_pp
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 15


 643 0052 0346     		mov	r3, r0
 644 0054 4FF07F51 		mov	r1, #1069547520
 645 0058 1846     		mov	r0, r3
 646 005a FFF7FEFF 		bl	__aeabi_fmul
 647 005e 0346     		mov	r3, r0
 648 0060 3B63     		str	r3, [r7, #48]	@ float
 155:main.c        ****     float sum = c4 + c5 + c6;
 649              		.loc 1 155 0
 650 0062 796B     		ldr	r1, [r7, #52]	@ float
 651 0064 B86B     		ldr	r0, [r7, #56]	@ float
 652 0066 FFF7FEFF 		bl	__aeabi_fadd
 653 006a 0346     		mov	r3, r0
 654 006c 396B     		ldr	r1, [r7, #48]	@ float
 655 006e 1846     		mov	r0, r3
 656 0070 FFF7FEFF 		bl	__aeabi_fadd
 657 0074 0346     		mov	r3, r0
 658 0076 FB62     		str	r3, [r7, #44]	@ float
 156:main.c        ****     bool valid = (sum > 0.08f);
 659              		.loc 1 156 0
 660 0078 0123     		movs	r3, #1
 661 007a 1C46     		mov	r4, r3
 662 007c 7849     		ldr	r1, .L68
 663 007e F86A     		ldr	r0, [r7, #44]	@ float
 664 0080 FFF7FEFF 		bl	__aeabi_fcmpgt
 665 0084 0346     		mov	r3, r0
 666 0086 002B     		cmp	r3, #0
 667 0088 01D1     		bne	.L49
 668 008a 0023     		movs	r3, #0
 669 008c 1C46     		mov	r4, r3
 670              	.L49:
 671 008e 87F82B40 		strb	r4, [r7, #43]
 157:main.c        **** 
 158:main.c        ****     float pos = 0.0f;
 672              		.loc 1 158 0
 673 0092 4FF00003 		mov	r3, #0
 674 0096 FB63     		str	r3, [r7, #60]	@ float
 159:main.c        ****     if (valid) pos = (-1.0f * c4 + 0.0f * c5 + 1.0f * c6) / sum;
 675              		.loc 1 159 0
 676 0098 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 677 009c 002B     		cmp	r3, #0
 678 009e 15D0     		beq	.L50
 679              		.loc 1 159 0 is_stmt 0 discriminator 1
 680 00a0 4FF00001 		mov	r1, #0
 681 00a4 786B     		ldr	r0, [r7, #52]	@ float
 682 00a6 FFF7FEFF 		bl	__aeabi_fmul
 683 00aa 0346     		mov	r3, r0
 684 00ac B96B     		ldr	r1, [r7, #56]	@ float
 685 00ae 1846     		mov	r0, r3
 686 00b0 FFF7FEFF 		bl	__aeabi_fsub
 687 00b4 0346     		mov	r3, r0
 688 00b6 396B     		ldr	r1, [r7, #48]	@ float
 689 00b8 1846     		mov	r0, r3
 690 00ba FFF7FEFF 		bl	__aeabi_fadd
 691 00be 0346     		mov	r3, r0
 692 00c0 F96A     		ldr	r1, [r7, #44]	@ float
 693 00c2 1846     		mov	r0, r3
 694 00c4 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 16


 695 00c8 0346     		mov	r3, r0
 696 00ca FB63     		str	r3, [r7, #60]	@ float
 697              	.L50:
 160:main.c        **** 
 161:main.c        ****     float e = pos;
 698              		.loc 1 161 0 is_stmt 1
 699 00cc FB6B     		ldr	r3, [r7, #60]	@ float
 700 00ce 7B62     		str	r3, [r7, #36]	@ float
 162:main.c        **** 
 163:main.c        ****     if (!valid) {
 701              		.loc 1 163 0
 702 00d0 97F82B30 		ldrb	r3, [r7, #43]
 703 00d4 83F00103 		eor	r3, r3, #1
 704 00d8 DBB2     		uxtb	r3, r3
 705 00da 002B     		cmp	r3, #0
 706 00dc 2AD0     		beq	.L51
 164:main.c        ****         pi->t_loss += DT_S;
 707              		.loc 1 164 0
 708 00de FB68     		ldr	r3, [r7, #12]
 709 00e0 9B68     		ldr	r3, [r3, #8]	@ float
 710 00e2 6049     		ldr	r1, .L68+4
 711 00e4 1846     		mov	r0, r3
 712 00e6 FFF7FEFF 		bl	__aeabi_fadd
 713 00ea 0346     		mov	r3, r0
 714 00ec 1A46     		mov	r2, r3
 715 00ee FB68     		ldr	r3, [r7, #12]
 716 00f0 9A60     		str	r2, [r3, #8]	@ float
 165:main.c        ****         if (pi->t_loss >= LOSS_TIMEOUT_T) pi->i *= 0.92f;
 717              		.loc 1 165 0
 718 00f2 FB68     		ldr	r3, [r7, #12]
 719 00f4 9B68     		ldr	r3, [r3, #8]	@ float
 720 00f6 4FF07A51 		mov	r1, #1048576000
 721 00fa 1846     		mov	r0, r3
 722 00fc FFF7FEFF 		bl	__aeabi_fcmpge
 723 0100 0346     		mov	r3, r0
 724 0102 002B     		cmp	r3, #0
 725 0104 09D0     		beq	.L52
 726              		.loc 1 165 0 is_stmt 0 discriminator 1
 727 0106 FB68     		ldr	r3, [r7, #12]
 728 0108 1B68     		ldr	r3, [r3]	@ float
 729 010a 5749     		ldr	r1, .L68+8
 730 010c 1846     		mov	r0, r3
 731 010e FFF7FEFF 		bl	__aeabi_fmul
 732 0112 0346     		mov	r3, r0
 733 0114 1A46     		mov	r2, r3
 734 0116 FB68     		ldr	r3, [r7, #12]
 735 0118 1A60     		str	r2, [r3]	@ float
 736              	.L52:
 166:main.c        ****         return (int)_clampf(pi->u, -(float)STEER_MAX, (float)STEER_MAX);
 737              		.loc 1 166 0 is_stmt 1
 738 011a FB68     		ldr	r3, [r7, #12]
 739 011c 5B68     		ldr	r3, [r3, #4]	@ float
 740 011e 534A     		ldr	r2, .L68+12
 741 0120 5349     		ldr	r1, .L68+16
 742 0122 1846     		mov	r0, r3
 743 0124 FFF7FEFF 		bl	_clampf
 744 0128 0346     		mov	r3, r0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 17


 745 012a 1846     		mov	r0, r3
 746 012c FFF7FEFF 		bl	__aeabi_f2iz
 747 0130 0346     		mov	r3, r0
 748 0132 91E0     		b	.L54
 749              	.L51:
 167:main.c        ****     }
 168:main.c        ****     pi->t_loss = 0.0f;
 750              		.loc 1 168 0
 751 0134 FB68     		ldr	r3, [r7, #12]
 752 0136 4FF00002 		mov	r2, #0
 753 013a 9A60     		str	r2, [r3, #8]	@ float
 169:main.c        **** 
 170:main.c        ****     float i_next = _clampf(pi->i + e * DT_S, -INT_LIM, +INT_LIM);
 754              		.loc 1 170 0
 755 013c FB68     		ldr	r3, [r7, #12]
 756 013e 1C68     		ldr	r4, [r3]	@ float
 757 0140 4849     		ldr	r1, .L68+4
 758 0142 786A     		ldr	r0, [r7, #36]	@ float
 759 0144 FFF7FEFF 		bl	__aeabi_fmul
 760 0148 0346     		mov	r3, r0
 761 014a 1946     		mov	r1, r3
 762 014c 2046     		mov	r0, r4
 763 014e FFF7FEFF 		bl	__aeabi_fadd
 764 0152 0346     		mov	r3, r0
 765 0154 474A     		ldr	r2, .L68+20
 766 0156 4849     		ldr	r1, .L68+24
 767 0158 1846     		mov	r0, r3
 768 015a FFF7FEFF 		bl	_clampf
 769 015e 3862     		str	r0, [r7, #32]	@ float
 171:main.c        ****     float u_raw  = KP * e + KI * i_next;
 770              		.loc 1 171 0
 771 0160 4649     		ldr	r1, .L68+28
 772 0162 786A     		ldr	r0, [r7, #36]	@ float
 773 0164 FFF7FEFF 		bl	__aeabi_fmul
 774 0168 0346     		mov	r3, r0
 775 016a 1C46     		mov	r4, r3
 776 016c 3B6A     		ldr	r3, [r7, #32]	@ float
 777 016e 1946     		mov	r1, r3
 778 0170 1846     		mov	r0, r3
 779 0172 FFF7FEFF 		bl	__aeabi_fadd
 780 0176 0346     		mov	r3, r0
 781 0178 1946     		mov	r1, r3
 782 017a 2046     		mov	r0, r4
 783 017c FFF7FEFF 		bl	__aeabi_fadd
 784 0180 0346     		mov	r3, r0
 785 0182 FB61     		str	r3, [r7, #28]	@ float
 172:main.c        ****     float u      = _clampf(u_raw, -(float)STEER_MAX, (float)STEER_MAX);
 786              		.loc 1 172 0
 787 0184 394A     		ldr	r2, .L68+12
 788 0186 3A49     		ldr	r1, .L68+16
 789 0188 F869     		ldr	r0, [r7, #28]	@ float
 790 018a FFF7FEFF 		bl	_clampf
 791 018e B861     		str	r0, [r7, #24]	@ float
 173:main.c        **** 
 174:main.c        ****     bool sat_hi = (u >=  (float)STEER_MAX - 1e-3f);
 792              		.loc 1 174 0
 793 0190 0123     		movs	r3, #1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 18


 794 0192 1C46     		mov	r4, r3
 795 0194 3A49     		ldr	r1, .L68+32
 796 0196 B869     		ldr	r0, [r7, #24]	@ float
 797 0198 FFF7FEFF 		bl	__aeabi_fcmpge
 798 019c 0346     		mov	r3, r0
 799 019e 002B     		cmp	r3, #0
 800 01a0 01D1     		bne	.L55
 801 01a2 0023     		movs	r3, #0
 802 01a4 1C46     		mov	r4, r3
 803              	.L55:
 804 01a6 FC75     		strb	r4, [r7, #23]
 175:main.c        ****     bool sat_lo = (u <= -(float)STEER_MAX + 1e-3f);
 805              		.loc 1 175 0
 806 01a8 0123     		movs	r3, #1
 807 01aa 1C46     		mov	r4, r3
 808 01ac 3549     		ldr	r1, .L68+36
 809 01ae B869     		ldr	r0, [r7, #24]	@ float
 810 01b0 FFF7FEFF 		bl	__aeabi_fcmple
 811 01b4 0346     		mov	r3, r0
 812 01b6 002B     		cmp	r3, #0
 813 01b8 01D1     		bne	.L56
 814 01ba 0023     		movs	r3, #0
 815 01bc 1C46     		mov	r4, r3
 816              	.L56:
 817 01be BC75     		strb	r4, [r7, #22]
 176:main.c        **** 
 177:main.c        ****     if ((sat_hi && (KI * i_next > KI * pi->i)) ||
 818              		.loc 1 177 0
 819 01c0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 820 01c2 002B     		cmp	r3, #0
 821 01c4 14D0     		beq	.L57
 822              		.loc 1 177 0 is_stmt 0 discriminator 1
 823 01c6 3B6A     		ldr	r3, [r7, #32]	@ float
 824 01c8 1946     		mov	r1, r3
 825 01ca 1846     		mov	r0, r3
 826 01cc FFF7FEFF 		bl	__aeabi_fadd
 827 01d0 0346     		mov	r3, r0
 828 01d2 1C46     		mov	r4, r3
 829 01d4 FB68     		ldr	r3, [r7, #12]
 830 01d6 1B68     		ldr	r3, [r3]	@ float
 831 01d8 1946     		mov	r1, r3
 832 01da 1846     		mov	r0, r3
 833 01dc FFF7FEFF 		bl	__aeabi_fadd
 834 01e0 0346     		mov	r3, r0
 835 01e2 1946     		mov	r1, r3
 836 01e4 2046     		mov	r0, r4
 837 01e6 FFF7FEFF 		bl	__aeabi_fcmpgt
 838 01ea 0346     		mov	r3, r0
 839 01ec 002B     		cmp	r3, #0
 840 01ee 1AD1     		bne	.L59
 841              	.L57:
 842              		.loc 1 177 0 discriminator 3
 843 01f0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 844 01f2 002B     		cmp	r3, #0
 845 01f4 14D0     		beq	.L60
 178:main.c        ****         (sat_lo && (KI * i_next < KI * pi->i))) {
 846              		.loc 1 178 0 is_stmt 1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 19


 847 01f6 3B6A     		ldr	r3, [r7, #32]	@ float
 848 01f8 1946     		mov	r1, r3
 849 01fa 1846     		mov	r0, r3
 850 01fc FFF7FEFF 		bl	__aeabi_fadd
 851 0200 0346     		mov	r3, r0
 852 0202 1C46     		mov	r4, r3
 853 0204 FB68     		ldr	r3, [r7, #12]
 854 0206 1B68     		ldr	r3, [r3]	@ float
 855 0208 1946     		mov	r1, r3
 856 020a 1846     		mov	r0, r3
 857 020c FFF7FEFF 		bl	__aeabi_fadd
 858 0210 0346     		mov	r3, r0
 859 0212 1946     		mov	r1, r3
 860 0214 2046     		mov	r0, r4
 861 0216 FFF7FEFF 		bl	__aeabi_fcmplt
 862 021a 0346     		mov	r3, r0
 863 021c 002B     		cmp	r3, #0
 864 021e 02D1     		bne	.L59
 865              	.L60:
 179:main.c        ****         /* donâ€™t integrate further into saturation */
 180:main.c        ****     } else {
 181:main.c        ****         pi->i = i_next;
 866              		.loc 1 181 0
 867 0220 FB68     		ldr	r3, [r7, #12]
 868 0222 3A6A     		ldr	r2, [r7, #32]	@ float
 869 0224 1A60     		str	r2, [r3]	@ float
 870              	.L59:
 182:main.c        ****     }
 183:main.c        **** 
 184:main.c        ****     pi->u = u;
 871              		.loc 1 184 0
 872 0226 FB68     		ldr	r3, [r7, #12]
 873 0228 BA69     		ldr	r2, [r7, #24]	@ float
 874 022a 5A60     		str	r2, [r3, #4]	@ float
 185:main.c        ****     return (int)(u + (u>=0?0.5f:-0.5f));
 875              		.loc 1 185 0
 876 022c 4FF00001 		mov	r1, #0
 877 0230 B869     		ldr	r0, [r7, #24]	@ float
 878 0232 FFF7FEFF 		bl	__aeabi_fcmpge
 879 0236 0346     		mov	r3, r0
 880 0238 002B     		cmp	r3, #0
 881 023a 02D0     		beq	.L67
 882              		.loc 1 185 0 is_stmt 0 discriminator 1
 883 023c 4FF07C53 		mov	r3, #1056964608
 884 0240 01E0     		b	.L64
 885              	.L67:
 886              		.loc 1 185 0 discriminator 2
 887 0242 4FF03F43 		mov	r3, #-1090519040
 888              	.L64:
 889              		.loc 1 185 0 discriminator 4
 890 0246 B969     		ldr	r1, [r7, #24]	@ float
 891 0248 1846     		mov	r0, r3
 892 024a FFF7FEFF 		bl	__aeabi_fadd
 893 024e 0346     		mov	r3, r0
 894 0250 1846     		mov	r0, r3
 895 0252 FFF7FEFF 		bl	__aeabi_f2iz
 896 0256 0346     		mov	r3, r0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 20


 897              	.L54:
 186:main.c        **** }
 898              		.loc 1 186 0 is_stmt 1
 899 0258 1846     		mov	r0, r3
 900 025a 4437     		adds	r7, r7, #68
 901              		.cfi_def_cfa_offset 12
 902 025c BD46     		mov	sp, r7
 903              		.cfi_def_cfa_register 13
 904              		@ sp needed
 905 025e 90BD     		pop	{r4, r7, pc}
 906              	.L69:
 907              		.align	2
 908              	.L68:
 909 0260 0AD7A33D 		.word	1034147594
 910 0264 6F12033C 		.word	1006834287
 911 0268 1F856B3F 		.word	1064011039
 912 026c 00007041 		.word	1097859072
 913 0270 000070C1 		.word	-1049624576
 914 0274 0000F041 		.word	1106247680
 915 0278 0000F0C1 		.word	-1041235968
 916 027c 00009041 		.word	1099956224
 917 0280 E7FB6F41 		.word	1097858023
 918 0284 E7FB6FC1 		.word	-1049625625
 919              		.cfi_endproc
 920              	.LFE68:
 921              		.size	pi_step, .-pi_step
 922              		.section	.text.main,"ax",%progbits
 923              		.align	2
 924              		.global	main
 925              		.thumb
 926              		.thumb_func
 927              		.type	main, %function
 928              	main:
 929              	.LFB69:
 187:main.c        **** 
 188:main.c        **** int main(void)
 189:main.c        **** {
 930              		.loc 1 189 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 56
 933              		@ frame_needed = 1, uses_anonymous_args = 0
 934 0000 80B5     		push	{r7, lr}
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 7, -8
 937              		.cfi_offset 14, -4
 938 0002 8EB0     		sub	sp, sp, #56
 939              		.cfi_def_cfa_offset 64
 940 0004 00AF     		add	r7, sp, #0
 941              		.cfi_def_cfa_register 7
 190:main.c        ****     motor_enable(1u, 1u);
 942              		.loc 1 190 0
 943 0006 0121     		movs	r1, #1
 944 0008 0120     		movs	r0, #1
 945 000a FFF7FEFF 		bl	motor_enable
 191:main.c        ****     CyGlobalIntEnable;
 946              		.loc 1 191 0
 947              		.syntax unified
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 21


 948              	@ 191 "main.c" 1
 949 000e 62B6     		CPSIE   i
 950              	@ 0 "" 2
 192:main.c        **** 
 193:main.c        ****     /* ADC for sensors */
 194:main.c        ****     ADC_Start();
 951              		.loc 1 194 0
 952              		.thumb
 953              		.syntax unified
 954 0010 FFF7FEFF 		bl	ADC_Start
 195:main.c        ****     CyDelay(10);
 955              		.loc 1 195 0
 956 0014 0A20     		movs	r0, #10
 957 0016 FFF7FEFF 		bl	CyDelay
 196:main.c        **** 
 197:main.c        ****     /* Encoders + 5 ms tick (distance only) */
 198:main.c        ****     Clock_QENC_Start();
 958              		.loc 1 198 0
 959 001a FFF7FEFF 		bl	Clock_QENC_Start
 199:main.c        ****     QuadDec_M1_Start(); QuadDec_M2_Start();
 960              		.loc 1 199 0
 961 001e FFF7FEFF 		bl	QuadDec_M1_Start
 962 0022 FFF7FEFF 		bl	QuadDec_M2_Start
 200:main.c        ****     QuadDec_M1_SetCounter(0); QuadDec_M2_SetCounter(0);
 963              		.loc 1 200 0
 964 0026 0020     		movs	r0, #0
 965 0028 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 966 002c 0020     		movs	r0, #0
 967 002e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 201:main.c        ****     Clock_QD_Start();
 968              		.loc 1 201 0
 969 0032 FFF7FEFF 		bl	Clock_QD_Start
 202:main.c        ****     Timer_QD_Start();  // 5 ms period in TopDesign
 970              		.loc 1 202 0
 971 0036 FFF7FEFF 		bl	Timer_QD_Start
 203:main.c        ****     isr_qd_StartEx(isr_qd_Handler);
 972              		.loc 1 203 0
 973 003a B348     		ldr	r0, .L116
 974 003c FFF7FEFF 		bl	isr_qd_StartEx
 204:main.c        **** 
 205:main.c        ****     /* PWM & motor driver */
 206:main.c        ****     Clock_PWM_Start();
 975              		.loc 1 206 0
 976 0040 FFF7FEFF 		bl	Clock_PWM_Start
 207:main.c        ****     PWM_1_Start(); PWM_2_Start();
 977              		.loc 1 207 0
 978 0044 FFF7FEFF 		bl	PWM_1_Start
 979 0048 FFF7FEFF 		bl	PWM_2_Start
 208:main.c        ****     PWM_1_WritePeriod(PWM_PERIOD);
 980              		.loc 1 208 0
 981 004c C820     		movs	r0, #200
 982 004e FFF7FEFF 		bl	PWM_1_WritePeriod
 209:main.c        ****     PWM_2_WritePeriod(PWM_PERIOD);
 983              		.loc 1 209 0
 984 0052 C820     		movs	r0, #200
 985 0054 FFF7FEFF 		bl	PWM_2_WritePeriod
 210:main.c        ****     set_motors_symmetric(0);
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 22


 986              		.loc 1 210 0
 987 0058 0020     		movs	r0, #0
 988 005a FFF7FEFF 		bl	set_motors_symmetric
 211:main.c        ****     motor_enable(0u, 0u);
 989              		.loc 1 211 0
 990 005e 0021     		movs	r1, #0
 991 0060 0020     		movs	r0, #0
 992 0062 FFF7FEFF 		bl	motor_enable
 212:main.c        **** 
 213:main.c        ****     /* Directions module */
 214:main.c        ****     Directions_Init();
 993              		.loc 1 214 0
 994 0066 FFF7FEFF 		bl	Directions_Init
 215:main.c        ****     g_direction = 0u;
 995              		.loc 1 215 0
 996 006a A84B     		ldr	r3, .L116+4
 997 006c 0022     		movs	r2, #0
 998 006e 1A70     		strb	r2, [r3]
 216:main.c        **** 
 217:main.c        ****     /* Feed-forward cruise duty (kept) */
 218:main.c        ****     int center_duty_est = (int)((V_CRUISE_MM_S * 100) / VMAX_CONST_MM_S);
 999              		.loc 1 218 0
 1000 0070 1423     		movs	r3, #20
 1001 0072 7B63     		str	r3, [r7, #52]
 219:main.c        ****     if (center_duty_est < 0) center_duty_est = 0;
 1002              		.loc 1 219 0
 1003 0074 7B6B     		ldr	r3, [r7, #52]
 1004 0076 002B     		cmp	r3, #0
 1005 0078 01DA     		bge	.L71
 1006              		.loc 1 219 0 is_stmt 0 discriminator 1
 1007 007a 0023     		movs	r3, #0
 1008 007c 7B63     		str	r3, [r7, #52]
 1009              	.L71:
 220:main.c        ****     if (center_duty_est > 100) center_duty_est = 100;
 1010              		.loc 1 220 0 is_stmt 1
 1011 007e 7B6B     		ldr	r3, [r7, #52]
 1012 0080 642B     		cmp	r3, #100
 1013 0082 01DD     		ble	.L72
 1014              		.loc 1 220 0 is_stmt 0 discriminator 1
 1015 0084 6423     		movs	r3, #100
 1016 0086 7B63     		str	r3, [r7, #52]
 1017              	.L72:
 221:main.c        **** 
 222:main.c        ****     /* PI state */
 223:main.c        ****     pi_t pi = { .i = 0.0f, .u = 0.0f, .t_loss = 0.0f };
 1018              		.loc 1 223 0 is_stmt 1
 1019 0088 4FF00003 		mov	r3, #0
 1020 008c FB60     		str	r3, [r7, #12]	@ float
 1021 008e 4FF00003 		mov	r3, #0
 1022 0092 3B61     		str	r3, [r7, #16]	@ float
 1023 0094 4FF00003 		mov	r3, #0
 1024 0098 7B61     		str	r3, [r7, #20]	@ float
 224:main.c        ****     
 225:main.c        ****     CyDelay(1000);  // So the motors don't jump
 1025              		.loc 1 225 0
 1026 009a 4FF47A70 		mov	r0, #1000
 1027 009e FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 23


 226:main.c        ****     set_motors_with_trim_and_steer(100,-10);
 1028              		.loc 1 226 0
 1029 00a2 6FF00901 		mvn	r1, #9
 1030 00a6 6420     		movs	r0, #100
 1031 00a8 FFF7FEFF 		bl	set_motors_with_trim_and_steer
 227:main.c        ****     CyDelay(40);
 1032              		.loc 1 227 0
 1033 00ac 2820     		movs	r0, #40
 1034 00ae FFF7FEFF 		bl	CyDelay
 228:main.c        ****     set_motors_symmetric(0); 
 1035              		.loc 1 228 0
 1036 00b2 0020     		movs	r0, #0
 1037 00b4 FFF7FEFF 		bl	set_motors_symmetric
 229:main.c        ****     
 230:main.c        ****     
 231:main.c        ****     // Pathfinding array
 232:main.c        ****     /* 
 233:main.c        ****      * STRAIGHT -> 0, TURN LEFT -> 1, TURN RIGHT -> 2, TURN U_TURN -> 3,
 234:main.c        ****      * REACH -> 5, END -> 6
 235:main.c        ****      */
 236:main.c        ****     /*const uint8_t CMD_STATES[] = {
 237:main.c        ****     0, 1, 0, 2, 0, 1, 0, 1, 0, 2, 0, 2, 0, 2, 0, 2, 0, 1, 0, 1, 0, 2, 0, 2, 0, 1, 0, 1, 0, 2, 0, 2,
 238:main.c        ****     0, 1, 0, 1, 0, 2, 0, 5, 3, 0, 2, 0, 2, 0, 1, 0, 1, 0, 1, 0, 2, 0, 1, 0, 1, 0, 2, 0, 2, 0, 2, 0,
 239:main.c        ****     1, 0, 2, 0, 2, 0, 1, 0, 1, 0, 5, 3, 0, 1, 0, 2, 0, 2, 0, 2, 0, 2, 0, 1, 0, 1, 0, 2, 0, 2, 0, 1,
 240:main.c        ****     0, 1, 0, 1, 0, 2, 0, 2, 0, 5, 3, 0, 0, 2, 0, 5, 3, 0, 2, 0, 1, 0, 1, 0, 2, 0, 2, 0, 1, 0, 1, 0,
 241:main.c        ****     1, 0, 2, 0, 2, 0, 1, 0, 1, 0, 1, 0, 6
 242:main.c        ****     }; */
 243:main.c        ****     
 244:main.c        ****     const uint8_t CMD_STATES[] = {1};
 1038              		.loc 1 244 0
 1039 00b8 0123     		movs	r3, #1
 1040 00ba 3B72     		strb	r3, [r7, #8]
 245:main.c        ****     
 246:main.c        ****     int8_t i = 0;  // Loop index
 1041              		.loc 1 246 0
 1042 00bc 0023     		movs	r3, #0
 1043 00be 87F83330 		strb	r3, [r7, #51]
 247:main.c        ****     int32_t target_dist = 0;
 1044              		.loc 1 247 0
 1045 00c2 0023     		movs	r3, #0
 1046 00c4 BB62     		str	r3, [r7, #40]
 248:main.c        ****     
 249:main.c        ****     int8_t straight_complete = 0;
 1047              		.loc 1 249 0
 1048 00c6 0023     		movs	r3, #0
 1049 00c8 87F83230 		strb	r3, [r7, #50]
 250:main.c        ****     int8_t turn_complete = 0;
 1050              		.loc 1 250 0
 1051 00cc 0023     		movs	r3, #0
 1052 00ce 87F83130 		strb	r3, [r7, #49]
 251:main.c        ****     int8_t uTurn_complete = 0;
 1053              		.loc 1 251 0
 1054 00d2 0023     		movs	r3, #0
 1055 00d4 87F83030 		strb	r3, [r7, #48]
 252:main.c        ****     int8_t fruit_complete = 0;
 1056              		.loc 1 252 0
 1057 00d8 0023     		movs	r3, #0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 24


 1058 00da 87F82F30 		strb	r3, [r7, #47]
 1059              	.L115:
 1060              	.LBB3:
 253:main.c        **** 
 254:main.c        ****     for(;;){
 255:main.c        **** 
 256:main.c        ****         /* Read sensors + maybe request turn */
 257:main.c        ****         uint16_t V4_pp=0, V5_pp=0, V6_pp=0;
 1061              		.loc 1 257 0
 1062 00de 0023     		movs	r3, #0
 1063 00e0 FB80     		strh	r3, [r7, #6]	@ movhi
 1064 00e2 0023     		movs	r3, #0
 1065 00e4 BB80     		strh	r3, [r7, #4]	@ movhi
 1066 00e6 0023     		movs	r3, #0
 1067 00e8 7B80     		strh	r3, [r7, #2]	@ movhi
 258:main.c        ****         light_sensors_update_and_maybe_request_turn(&V4_pp, &V5_pp, &V6_pp);
 1068              		.loc 1 258 0
 1069 00ea BA1C     		adds	r2, r7, #2
 1070 00ec 391D     		adds	r1, r7, #4
 1071 00ee BB1D     		adds	r3, r7, #6
 1072 00f0 1846     		mov	r0, r3
 1073 00f2 FFF7FEFF 		bl	light_sensors_update_and_maybe_request_turn
 259:main.c        ****         
 260:main.c        **** 
 261:main.c        **** //        /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 262:main.c        **** //        /* Arm once on the first detection (edge 0 -> 1/2) */
 263:main.c        **** //        if ((g_direction == 1u || g_direction == 2u) && dir_latched_side == 0){
 264:main.c        **** //            dir_latched_side = g_direction;          /* remember side */
 265:main.c        **** //            dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 266:main.c        **** //            //CyDelay(50);
 267:main.c        **** //        }
 268:main.c        **** //        /* If request cleared during delay, cancel gracefully */
 269:main.c        **** //        if (g_direction == 0u && dir_latched_side != 0){
 270:main.c        **** //            dir_latched_side = 0;
 271:main.c        **** //            dir_delay_ticks  = 0;
 272:main.c        **** //        }
 273:main.c        **** //
 274:main.c        **** //        if (g_direction == 1u || g_direction == 2u){
 275:main.c        **** //            if (dir_delay_ticks > 0){
 276:main.c        **** //                /* Still delaying: keep doing normal straight PI */
 277:main.c        **** //                dir_delay_ticks--;
 278:main.c        **** //            } else {
 279:main.c        **** //                /* Delay elapsed: perform the maneuver */
 280:main.c        **** //                Directions_Handle(&g_direction);
 281:main.c        **** //
 282:main.c        **** //                /* When turn completes, Directions sets g_direction back to 0 */
 283:main.c        **** //                if (g_direction == 0u){
 284:main.c        **** //                    pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 285:main.c        **** //                    dir_latched_side = 0;                        /* ready next time */
 286:main.c        **** //                    
 287:main.c        **** //                    
 288:main.c        **** //                    turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 289:main.c        **** //                }
 290:main.c        **** //                CyDelay(LOOP_DT_MS);
 291:main.c        **** //                continue;  /* skip the rest this tick */
 292:main.c        **** //            }
 293:main.c        **** //        }
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 25


 294:main.c        **** //        /* ---------------- end turn handling with delay ---------------- */
 295:main.c        **** //
 296:main.c        **** //        /* Straight run with PI steering */
 297:main.c        **** //        
 298:main.c        **** //        if(turn_cooldown_ticks > 0) {
 299:main.c        **** //            turn_cooldown_ticks--;
 300:main.c        **** //        }
 301:main.c        **** //        
 302:main.c        **** //        /*
 303:main.c        **** //        // Add bias when back right sensor is under line
 304:main.c        **** //        uint16_t V5 = Sensor_ComputePeakToPeak(4);
 305:main.c        **** //        sen5_on_line = (V5 > 10 && V5 < 100) ? 1u : 0u;
 306:main.c        **** //        if (sen5_on_line == 1) {
 307:main.c        **** //            Motors_SetPercent(0,25);
 308:main.c        **** //            //set_motors_with_trim_and_steer(50,50); 
 309:main.c        **** //            CyDelay(10);
 310:main.c        **** //        } */
 311:main.c        ****         
 312:main.c        ****         
 313:main.c        **** //        int steer = pi_step(&pi, V4_pp, V5_pp, V6_pp);
 314:main.c        **** //        set_motors_with_trim_and_steer(center_duty_est, steer);
 315:main.c        **** //        
 316:main.c        **** //        
 317:main.c        **** //        /* Distance stop */    // g_dist_mm = total distance traveled
 318:main.c        **** //        g_stop_now = (g_dist_mm >= TARGET_DIST_MM) ? 1u : 0u;
 319:main.c        **** //        if (g_stop_now) {
 320:main.c        **** //            set_motors_symmetric(0);
 321:main.c        **** //            motor_enable(1u, 1u);
 322:main.c        **** //            g_direction = 0u;
 323:main.c        **** //            continue;
 324:main.c        **** //        }
 325:main.c        ****         
 326:main.c        ****         
 327:main.c        ****         
 328:main.c        ****         
 329:main.c        ****         
 330:main.c        ****         
 331:main.c        ****         
 332:main.c        ****         // PATHFINDING ALGORITHM
 333:main.c        ****         
 334:main.c        ****         if (CMD_STATES[i] == 0) {
 1074              		.loc 1 334 0
 1075 00f6 97F93330 		ldrsb	r3, [r7, #51]
 1076 00fa 07F13802 		add	r2, r7, #56
 1077 00fe 1344     		add	r3, r3, r2
 1078 0100 13F8303C 		ldrb	r3, [r3, #-48]	@ zero_extendqisi2
 1079 0104 002B     		cmp	r3, #0
 1080 0106 38D1     		bne	.L73
 1081              	.LBB4:
 335:main.c        ****             // Go STRAIGHT
 336:main.c        ****             int steer = pi_step(&pi, V4_pp, V5_pp, V6_pp);
 1082              		.loc 1 336 0
 1083 0108 F988     		ldrh	r1, [r7, #6]
 1084 010a BA88     		ldrh	r2, [r7, #4]
 1085 010c 7B88     		ldrh	r3, [r7, #2]
 1086 010e 07F10C00 		add	r0, r7, #12
 1087 0112 FFF7FEFF 		bl	pi_step
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 26


 1088 0116 7862     		str	r0, [r7, #36]
 337:main.c        ****             set_motors_with_trim_and_steer(center_duty_est, steer);
 1089              		.loc 1 337 0
 1090 0118 796A     		ldr	r1, [r7, #36]
 1091 011a 786B     		ldr	r0, [r7, #52]
 1092 011c FFF7FEFF 		bl	set_motors_with_trim_and_steer
 338:main.c        ****             
 339:main.c        ****             uint16_t V1 = Sensor_ComputePeakToPeak(4);
 1093              		.loc 1 339 0
 1094 0120 0420     		movs	r0, #4
 1095 0122 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 1096 0126 0346     		mov	r3, r0
 1097 0128 7B84     		strh	r3, [r7, #34]	@ movhi
 340:main.c        ****             sen1_on_line = (V1 > 10 && V1 < 100) ? 1u : 0u;
 1098              		.loc 1 340 0
 1099 012a 7B8C     		ldrh	r3, [r7, #34]
 1100 012c 0A2B     		cmp	r3, #10
 1101 012e 04D9     		bls	.L74
 1102              		.loc 1 340 0 is_stmt 0 discriminator 1
 1103 0130 7B8C     		ldrh	r3, [r7, #34]
 1104 0132 632B     		cmp	r3, #99
 1105 0134 01D8     		bhi	.L74
 1106              		.loc 1 340 0 discriminator 3
 1107 0136 0122     		movs	r2, #1
 1108 0138 00E0     		b	.L75
 1109              	.L74:
 1110              		.loc 1 340 0 discriminator 4
 1111 013a 0022     		movs	r2, #0
 1112              	.L75:
 1113              		.loc 1 340 0 discriminator 6
 1114 013c 744B     		ldr	r3, .L116+8
 1115 013e 1A70     		strb	r2, [r3]
 341:main.c        ****             uint16_t V2 = Sensor_ComputePeakToPeak(4);
 1116              		.loc 1 341 0 is_stmt 1 discriminator 6
 1117 0140 0420     		movs	r0, #4
 1118 0142 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 1119 0146 0346     		mov	r3, r0
 1120 0148 3B84     		strh	r3, [r7, #32]	@ movhi
 342:main.c        ****             sen2_on_line = (V2 > 10 && V2 < 100) ? 1u : 0u;
 1121              		.loc 1 342 0 discriminator 6
 1122 014a 3B8C     		ldrh	r3, [r7, #32]
 1123 014c 0A2B     		cmp	r3, #10
 1124 014e 04D9     		bls	.L76
 1125              		.loc 1 342 0 is_stmt 0 discriminator 1
 1126 0150 3B8C     		ldrh	r3, [r7, #32]
 1127 0152 632B     		cmp	r3, #99
 1128 0154 01D8     		bhi	.L76
 1129              		.loc 1 342 0 discriminator 3
 1130 0156 0122     		movs	r2, #1
 1131 0158 00E0     		b	.L77
 1132              	.L76:
 1133              		.loc 1 342 0 discriminator 4
 1134 015a 0022     		movs	r2, #0
 1135              	.L77:
 1136              		.loc 1 342 0 discriminator 6
 1137 015c 6D4B     		ldr	r3, .L116+12
 1138 015e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 27


 343:main.c        ****             if (sen1_on_line == 1u || sen2_on_line == 1u) {
 1139              		.loc 1 343 0 is_stmt 1 discriminator 6
 1140 0160 6B4B     		ldr	r3, .L116+8
 1141 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1142 0164 012B     		cmp	r3, #1
 1143 0166 04D0     		beq	.L78
 1144              		.loc 1 343 0 is_stmt 0 discriminator 1
 1145 0168 6A4B     		ldr	r3, .L116+12
 1146 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1147 016c 012B     		cmp	r3, #1
 1148 016e 40F0A481 		bne	.L80
 1149              	.L78:
 344:main.c        ****                 straight_complete = 1;
 1150              		.loc 1 344 0 is_stmt 1
 1151 0172 0123     		movs	r3, #1
 1152 0174 87F83230 		strb	r3, [r7, #50]
 1153 0178 9FE1     		b	.L80
 1154              	.L73:
 1155              	.LBE4:
 345:main.c        ****             }
 346:main.c        ****             
 347:main.c        ****         } else if((CMD_STATES[i] == 1)) {
 1156              		.loc 1 347 0
 1157 017a 97F93330 		ldrsb	r3, [r7, #51]
 1158 017e 07F13802 		add	r2, r7, #56
 1159 0182 1344     		add	r3, r3, r2
 1160 0184 13F8303C 		ldrb	r3, [r3, #-48]	@ zero_extendqisi2
 1161 0188 012B     		cmp	r3, #1
 1162 018a 5BD1     		bne	.L81
 348:main.c        ****             // Go LEFT
 349:main.c        ****             g_direction = 1u;
 1163              		.loc 1 349 0
 1164 018c 5F4B     		ldr	r3, .L116+4
 1165 018e 0122     		movs	r2, #1
 1166 0190 1A70     		strb	r2, [r3]
 350:main.c        ****             /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 351:main.c        ****                 /* Arm once on the first detection (edge 0 -> 1/2) */
 352:main.c        ****                 if ((g_direction == 1u || g_direction == 2u) && dir_latched_side == 0){
 1167              		.loc 1 352 0
 1168 0192 5E4B     		ldr	r3, .L116+4
 1169 0194 1B78     		ldrb	r3, [r3]
 1170 0196 DBB2     		uxtb	r3, r3
 1171 0198 012B     		cmp	r3, #1
 1172 019a 04D0     		beq	.L82
 1173              		.loc 1 352 0 is_stmt 0 discriminator 2
 1174 019c 5B4B     		ldr	r3, .L116+4
 1175 019e 1B78     		ldrb	r3, [r3]
 1176 01a0 DBB2     		uxtb	r3, r3
 1177 01a2 022B     		cmp	r3, #2
 1178 01a4 0BD1     		bne	.L83
 1179              	.L82:
 1180              		.loc 1 352 0 discriminator 3
 1181 01a6 5C4B     		ldr	r3, .L116+16
 1182 01a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1183 01aa 002B     		cmp	r3, #0
 1184 01ac 07D1     		bne	.L83
 353:main.c        ****                     dir_latched_side = g_direction;          /* remember side */
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 28


 1185              		.loc 1 353 0 is_stmt 1
 1186 01ae 574B     		ldr	r3, .L116+4
 1187 01b0 1B78     		ldrb	r3, [r3]
 1188 01b2 DAB2     		uxtb	r2, r3
 1189 01b4 584B     		ldr	r3, .L116+16
 1190 01b6 1A70     		strb	r2, [r3]
 354:main.c        ****                     dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 1191              		.loc 1 354 0
 1192 01b8 584B     		ldr	r3, .L116+20
 1193 01ba 0D22     		movs	r2, #13
 1194 01bc 1A80     		strh	r2, [r3]	@ movhi
 1195              	.L83:
 355:main.c        ****                     //CyDelay(50);
 356:main.c        ****                 }
 357:main.c        ****                 /* If request cleared during delay, cancel gracefully */
 358:main.c        ****                 if (g_direction == 0u && dir_latched_side != 0){
 1196              		.loc 1 358 0
 1197 01be 534B     		ldr	r3, .L116+4
 1198 01c0 1B78     		ldrb	r3, [r3]
 1199 01c2 DBB2     		uxtb	r3, r3
 1200 01c4 002B     		cmp	r3, #0
 1201 01c6 09D1     		bne	.L84
 1202              		.loc 1 358 0 is_stmt 0 discriminator 1
 1203 01c8 534B     		ldr	r3, .L116+16
 1204 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1205 01cc 002B     		cmp	r3, #0
 1206 01ce 05D0     		beq	.L84
 359:main.c        ****                     dir_latched_side = 0;
 1207              		.loc 1 359 0 is_stmt 1
 1208 01d0 514B     		ldr	r3, .L116+16
 1209 01d2 0022     		movs	r2, #0
 1210 01d4 1A70     		strb	r2, [r3]
 360:main.c        ****                     dir_delay_ticks  = 0;
 1211              		.loc 1 360 0
 1212 01d6 514B     		ldr	r3, .L116+20
 1213 01d8 0022     		movs	r2, #0
 1214 01da 1A80     		strh	r2, [r3]	@ movhi
 1215              	.L84:
 361:main.c        ****                 }
 362:main.c        **** 
 363:main.c        ****                 if (g_direction == 1u || g_direction == 2u){
 1216              		.loc 1 363 0
 1217 01dc 4B4B     		ldr	r3, .L116+4
 1218 01de 1B78     		ldrb	r3, [r3]
 1219 01e0 DBB2     		uxtb	r3, r3
 1220 01e2 012B     		cmp	r3, #1
 1221 01e4 04D0     		beq	.L85
 1222              		.loc 1 363 0 is_stmt 0 discriminator 1
 1223 01e6 494B     		ldr	r3, .L116+4
 1224 01e8 1B78     		ldrb	r3, [r3]
 1225 01ea DBB2     		uxtb	r3, r3
 1226 01ec 022B     		cmp	r3, #2
 1227 01ee 25D1     		bne	.L86
 1228              	.L85:
 364:main.c        ****                     if (dir_delay_ticks > 0){
 1229              		.loc 1 364 0 is_stmt 1
 1230 01f0 4A4B     		ldr	r3, .L116+20
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 29


 1231 01f2 1B88     		ldrh	r3, [r3]
 1232 01f4 002B     		cmp	r3, #0
 1233 01f6 06D0     		beq	.L87
 365:main.c        ****                         /* Still delaying: keep doing normal straight PI */
 366:main.c        ****                         dir_delay_ticks--;
 1234              		.loc 1 366 0
 1235 01f8 484B     		ldr	r3, .L116+20
 1236 01fa 1B88     		ldrh	r3, [r3]
 1237 01fc 013B     		subs	r3, r3, #1
 1238 01fe 9AB2     		uxth	r2, r3
 1239 0200 464B     		ldr	r3, .L116+20
 1240 0202 1A80     		strh	r2, [r3]	@ movhi
 1241 0204 1AE0     		b	.L86
 1242              	.L87:
 367:main.c        ****                     } else {
 368:main.c        ****                         /* Delay elapsed: perform the maneuver */
 369:main.c        ****                         Directions_Handle(&g_direction);
 1243              		.loc 1 369 0
 1244 0206 4148     		ldr	r0, .L116+4
 1245 0208 FFF7FEFF 		bl	Directions_Handle
 370:main.c        **** 
 371:main.c        ****                         /* When turn completes, Directions sets g_direction back to 0 */
 372:main.c        ****                         if (g_direction == 0u){
 1246              		.loc 1 372 0
 1247 020c 3F4B     		ldr	r3, .L116+4
 1248 020e 1B78     		ldrb	r3, [r3]
 1249 0210 DBB2     		uxtb	r3, r3
 1250 0212 002B     		cmp	r3, #0
 1251 0214 0ED1     		bne	.L88
 373:main.c        ****                             pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 1252              		.loc 1 373 0
 1253 0216 4FF00003 		mov	r3, #0
 1254 021a FB60     		str	r3, [r7, #12]	@ float
 1255 021c 4FF00003 		mov	r3, #0
 1256 0220 3B61     		str	r3, [r7, #16]	@ float
 1257 0222 4FF00003 		mov	r3, #0
 1258 0226 7B61     		str	r3, [r7, #20]	@ float
 374:main.c        ****                             dir_latched_side = 0;                        /* ready next time */
 1259              		.loc 1 374 0
 1260 0228 3B4B     		ldr	r3, .L116+16
 1261 022a 0022     		movs	r2, #0
 1262 022c 1A70     		strb	r2, [r3]
 375:main.c        ****                             
 376:main.c        ****                             
 377:main.c        ****                             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1263              		.loc 1 377 0
 1264 022e 3C4B     		ldr	r3, .L116+24
 1265 0230 2622     		movs	r2, #38
 1266 0232 1A80     		strh	r2, [r3]	@ movhi
 1267              	.L88:
 378:main.c        ****                         }
 379:main.c        ****                         CyDelay(LOOP_DT_MS);
 1268              		.loc 1 379 0
 1269 0234 0820     		movs	r0, #8
 1270 0236 FFF7FEFF 		bl	CyDelay
 380:main.c        ****                         continue;  /* skip the rest this tick */
 1271              		.loc 1 380 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 30


 1272 023a 65E1     		b	.L114
 1273              	.L86:
 381:main.c        ****                     }
 382:main.c        ****                 }
 383:main.c        ****                 /* ---------------- end turn handling with delay ---------------- */
 384:main.c        ****                 turn_complete = 1;
 1274              		.loc 1 384 0
 1275 023c 0123     		movs	r3, #1
 1276 023e 87F83130 		strb	r3, [r7, #49]
 1277 0242 3AE1     		b	.L80
 1278              	.L81:
 385:main.c        ****             
 386:main.c        ****         } else if((CMD_STATES[i] == 2)) {
 1279              		.loc 1 386 0
 1280 0244 97F93330 		ldrsb	r3, [r7, #51]
 1281 0248 07F13802 		add	r2, r7, #56
 1282 024c 1344     		add	r3, r3, r2
 1283 024e 13F8303C 		ldrb	r3, [r3, #-48]	@ zero_extendqisi2
 1284 0252 022B     		cmp	r3, #2
 1285 0254 6AD1     		bne	.L90
 387:main.c        ****             // Go RIGHT
 388:main.c        ****             g_direction = 2u;
 1286              		.loc 1 388 0
 1287 0256 2D4B     		ldr	r3, .L116+4
 1288 0258 0222     		movs	r2, #2
 1289 025a 1A70     		strb	r2, [r3]
 389:main.c        ****             /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 390:main.c        ****                 /* Arm once on the first detection (edge 0 -> 1/2) */
 391:main.c        ****                 if ((g_direction == 1u || g_direction == 2u) && dir_latched_side == 0){
 1290              		.loc 1 391 0
 1291 025c 2B4B     		ldr	r3, .L116+4
 1292 025e 1B78     		ldrb	r3, [r3]
 1293 0260 DBB2     		uxtb	r3, r3
 1294 0262 012B     		cmp	r3, #1
 1295 0264 04D0     		beq	.L91
 1296              		.loc 1 391 0 is_stmt 0 discriminator 2
 1297 0266 294B     		ldr	r3, .L116+4
 1298 0268 1B78     		ldrb	r3, [r3]
 1299 026a DBB2     		uxtb	r3, r3
 1300 026c 022B     		cmp	r3, #2
 1301 026e 0BD1     		bne	.L92
 1302              	.L91:
 1303              		.loc 1 391 0 discriminator 3
 1304 0270 294B     		ldr	r3, .L116+16
 1305 0272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1306 0274 002B     		cmp	r3, #0
 1307 0276 07D1     		bne	.L92
 392:main.c        ****                     dir_latched_side = g_direction;          /* remember side */
 1308              		.loc 1 392 0 is_stmt 1
 1309 0278 244B     		ldr	r3, .L116+4
 1310 027a 1B78     		ldrb	r3, [r3]
 1311 027c DAB2     		uxtb	r2, r3
 1312 027e 264B     		ldr	r3, .L116+16
 1313 0280 1A70     		strb	r2, [r3]
 393:main.c        ****                     dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 1314              		.loc 1 393 0
 1315 0282 264B     		ldr	r3, .L116+20
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 31


 1316 0284 0D22     		movs	r2, #13
 1317 0286 1A80     		strh	r2, [r3]	@ movhi
 1318              	.L92:
 394:main.c        ****                     //CyDelay(50);
 395:main.c        ****                 }
 396:main.c        ****                 /* If request cleared during delay, cancel gracefully */
 397:main.c        ****                 if (g_direction == 0u && dir_latched_side != 0){
 1319              		.loc 1 397 0
 1320 0288 204B     		ldr	r3, .L116+4
 1321 028a 1B78     		ldrb	r3, [r3]
 1322 028c DBB2     		uxtb	r3, r3
 1323 028e 002B     		cmp	r3, #0
 1324 0290 09D1     		bne	.L93
 1325              		.loc 1 397 0 is_stmt 0 discriminator 1
 1326 0292 214B     		ldr	r3, .L116+16
 1327 0294 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1328 0296 002B     		cmp	r3, #0
 1329 0298 05D0     		beq	.L93
 398:main.c        ****                     dir_latched_side = 0;
 1330              		.loc 1 398 0 is_stmt 1
 1331 029a 1F4B     		ldr	r3, .L116+16
 1332 029c 0022     		movs	r2, #0
 1333 029e 1A70     		strb	r2, [r3]
 399:main.c        ****                     dir_delay_ticks  = 0;
 1334              		.loc 1 399 0
 1335 02a0 1E4B     		ldr	r3, .L116+20
 1336 02a2 0022     		movs	r2, #0
 1337 02a4 1A80     		strh	r2, [r3]	@ movhi
 1338              	.L93:
 400:main.c        ****                 }
 401:main.c        **** 
 402:main.c        ****                 if (g_direction == 1u || g_direction == 2u){
 1339              		.loc 1 402 0
 1340 02a6 194B     		ldr	r3, .L116+4
 1341 02a8 1B78     		ldrb	r3, [r3]
 1342 02aa DBB2     		uxtb	r3, r3
 1343 02ac 012B     		cmp	r3, #1
 1344 02ae 04D0     		beq	.L94
 1345              		.loc 1 402 0 is_stmt 0 discriminator 1
 1346 02b0 164B     		ldr	r3, .L116+4
 1347 02b2 1B78     		ldrb	r3, [r3]
 1348 02b4 DBB2     		uxtb	r3, r3
 1349 02b6 022B     		cmp	r3, #2
 1350 02b8 34D1     		bne	.L95
 1351              	.L94:
 403:main.c        ****                     if (dir_delay_ticks > 0){
 1352              		.loc 1 403 0 is_stmt 1
 1353 02ba 184B     		ldr	r3, .L116+20
 1354 02bc 1B88     		ldrh	r3, [r3]
 1355 02be 002B     		cmp	r3, #0
 1356 02c0 06D0     		beq	.L96
 404:main.c        ****                         /* Still delaying: keep doing normal straight PI */
 405:main.c        ****                         dir_delay_ticks--;
 1357              		.loc 1 405 0
 1358 02c2 164B     		ldr	r3, .L116+20
 1359 02c4 1B88     		ldrh	r3, [r3]
 1360 02c6 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 32


 1361 02c8 9AB2     		uxth	r2, r3
 1362 02ca 144B     		ldr	r3, .L116+20
 1363 02cc 1A80     		strh	r2, [r3]	@ movhi
 1364 02ce 29E0     		b	.L95
 1365              	.L96:
 406:main.c        ****                     } else {
 407:main.c        ****                         /* Delay elapsed: perform the maneuver */
 408:main.c        ****                         Directions_Handle(&g_direction);
 1366              		.loc 1 408 0
 1367 02d0 0E48     		ldr	r0, .L116+4
 1368 02d2 FFF7FEFF 		bl	Directions_Handle
 409:main.c        **** 
 410:main.c        ****                         /* When turn completes, Directions sets g_direction back to 0 */
 411:main.c        ****                         if (g_direction == 0u){
 1369              		.loc 1 411 0
 1370 02d6 0D4B     		ldr	r3, .L116+4
 1371 02d8 1B78     		ldrb	r3, [r3]
 1372 02da DBB2     		uxtb	r3, r3
 1373 02dc 002B     		cmp	r3, #0
 1374 02de 0ED1     		bne	.L97
 412:main.c        ****                             pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 1375              		.loc 1 412 0
 1376 02e0 4FF00003 		mov	r3, #0
 1377 02e4 FB60     		str	r3, [r7, #12]	@ float
 1378 02e6 4FF00003 		mov	r3, #0
 1379 02ea 3B61     		str	r3, [r7, #16]	@ float
 1380 02ec 4FF00003 		mov	r3, #0
 1381 02f0 7B61     		str	r3, [r7, #20]	@ float
 413:main.c        ****                             dir_latched_side = 0;                        /* ready next time */
 1382              		.loc 1 413 0
 1383 02f2 094B     		ldr	r3, .L116+16
 1384 02f4 0022     		movs	r2, #0
 1385 02f6 1A70     		strb	r2, [r3]
 414:main.c        ****                             
 415:main.c        ****                             
 416:main.c        ****                             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1386              		.loc 1 416 0
 1387 02f8 094B     		ldr	r3, .L116+24
 1388 02fa 2622     		movs	r2, #38
 1389 02fc 1A80     		strh	r2, [r3]	@ movhi
 1390              	.L97:
 417:main.c        ****                         }
 418:main.c        ****                         CyDelay(LOOP_DT_MS);
 1391              		.loc 1 418 0
 1392 02fe 0820     		movs	r0, #8
 1393 0300 FFF7FEFF 		bl	CyDelay
 419:main.c        ****                         continue;  /* skip the rest this tick */
 1394              		.loc 1 419 0
 1395 0304 00E1     		b	.L114
 1396              	.L117:
 1397 0306 00BF     		.align	2
 1398              	.L116:
 1399 0308 00000000 		.word	isr_qd_Handler
 1400 030c 06000000 		.word	g_direction
 1401 0310 00000000 		.word	sen1_on_line
 1402 0314 01000000 		.word	sen2_on_line
 1403 0318 0E000000 		.word	dir_latched_side
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 33


 1404 031c 0C000000 		.word	dir_delay_ticks
 1405 0320 10000000 		.word	turn_cooldown_ticks
 1406              	.L95:
 420:main.c        ****                     }
 421:main.c        ****                 }
 422:main.c        ****                 /* ---------------- end turn handling with delay ---------------- */
 423:main.c        ****                 turn_complete = 1;
 1407              		.loc 1 423 0
 1408 0324 0123     		movs	r3, #1
 1409 0326 87F83130 		strb	r3, [r7, #49]
 1410 032a C6E0     		b	.L80
 1411              	.L90:
 424:main.c        ****             
 425:main.c        ****         } else if((CMD_STATES[i] == 3)) {
 1412              		.loc 1 425 0
 1413 032c 97F93330 		ldrsb	r3, [r7, #51]
 1414 0330 07F13802 		add	r2, r7, #56
 1415 0334 1344     		add	r3, r3, r2
 1416 0336 13F8303C 		ldrb	r3, [r3, #-48]	@ zero_extendqisi2
 1417 033a 032B     		cmp	r3, #3
 1418 033c 5BD1     		bne	.L98
 426:main.c        ****             // Do U-TURN
 427:main.c        ****             g_direction = 3u;
 1419              		.loc 1 427 0
 1420 033e 734B     		ldr	r3, .L118
 1421 0340 0322     		movs	r2, #3
 1422 0342 1A70     		strb	r2, [r3]
 428:main.c        ****             /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 429:main.c        ****                 /* Arm once on the first detection (edge 0 -> 1/2) */
 430:main.c        ****                 if ((g_direction == 1u || g_direction == 2u) && dir_latched_side == 0){
 1423              		.loc 1 430 0
 1424 0344 714B     		ldr	r3, .L118
 1425 0346 1B78     		ldrb	r3, [r3]
 1426 0348 DBB2     		uxtb	r3, r3
 1427 034a 012B     		cmp	r3, #1
 1428 034c 04D0     		beq	.L99
 1429              		.loc 1 430 0 is_stmt 0 discriminator 2
 1430 034e 6F4B     		ldr	r3, .L118
 1431 0350 1B78     		ldrb	r3, [r3]
 1432 0352 DBB2     		uxtb	r3, r3
 1433 0354 022B     		cmp	r3, #2
 1434 0356 0BD1     		bne	.L100
 1435              	.L99:
 1436              		.loc 1 430 0 discriminator 3
 1437 0358 6D4B     		ldr	r3, .L118+4
 1438 035a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1439 035c 002B     		cmp	r3, #0
 1440 035e 07D1     		bne	.L100
 431:main.c        ****                     dir_latched_side = g_direction;          /* remember side */
 1441              		.loc 1 431 0 is_stmt 1
 1442 0360 6A4B     		ldr	r3, .L118
 1443 0362 1B78     		ldrb	r3, [r3]
 1444 0364 DAB2     		uxtb	r2, r3
 1445 0366 6A4B     		ldr	r3, .L118+4
 1446 0368 1A70     		strb	r2, [r3]
 432:main.c        ****                     dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 1447              		.loc 1 432 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 34


 1448 036a 6A4B     		ldr	r3, .L118+8
 1449 036c 0D22     		movs	r2, #13
 1450 036e 1A80     		strh	r2, [r3]	@ movhi
 1451              	.L100:
 433:main.c        ****                     //CyDelay(50);
 434:main.c        ****                 }
 435:main.c        ****                 /* If request cleared during delay, cancel gracefully */
 436:main.c        ****                 if (g_direction == 0u && dir_latched_side != 0){
 1452              		.loc 1 436 0
 1453 0370 664B     		ldr	r3, .L118
 1454 0372 1B78     		ldrb	r3, [r3]
 1455 0374 DBB2     		uxtb	r3, r3
 1456 0376 002B     		cmp	r3, #0
 1457 0378 09D1     		bne	.L101
 1458              		.loc 1 436 0 is_stmt 0 discriminator 1
 1459 037a 654B     		ldr	r3, .L118+4
 1460 037c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1461 037e 002B     		cmp	r3, #0
 1462 0380 05D0     		beq	.L101
 437:main.c        ****                     dir_latched_side = 0;
 1463              		.loc 1 437 0 is_stmt 1
 1464 0382 634B     		ldr	r3, .L118+4
 1465 0384 0022     		movs	r2, #0
 1466 0386 1A70     		strb	r2, [r3]
 438:main.c        ****                     dir_delay_ticks  = 0;
 1467              		.loc 1 438 0
 1468 0388 624B     		ldr	r3, .L118+8
 1469 038a 0022     		movs	r2, #0
 1470 038c 1A80     		strh	r2, [r3]	@ movhi
 1471              	.L101:
 439:main.c        ****                 }
 440:main.c        **** 
 441:main.c        ****                 if (g_direction == 1u || g_direction == 2u){
 1472              		.loc 1 441 0
 1473 038e 5F4B     		ldr	r3, .L118
 1474 0390 1B78     		ldrb	r3, [r3]
 1475 0392 DBB2     		uxtb	r3, r3
 1476 0394 012B     		cmp	r3, #1
 1477 0396 04D0     		beq	.L102
 1478              		.loc 1 441 0 is_stmt 0 discriminator 1
 1479 0398 5C4B     		ldr	r3, .L118
 1480 039a 1B78     		ldrb	r3, [r3]
 1481 039c DBB2     		uxtb	r3, r3
 1482 039e 022B     		cmp	r3, #2
 1483 03a0 25D1     		bne	.L103
 1484              	.L102:
 442:main.c        ****                     if (dir_delay_ticks > 0){
 1485              		.loc 1 442 0 is_stmt 1
 1486 03a2 5C4B     		ldr	r3, .L118+8
 1487 03a4 1B88     		ldrh	r3, [r3]
 1488 03a6 002B     		cmp	r3, #0
 1489 03a8 06D0     		beq	.L104
 443:main.c        ****                         /* Still delaying: keep doing normal straight PI */
 444:main.c        ****                         dir_delay_ticks--;
 1490              		.loc 1 444 0
 1491 03aa 5A4B     		ldr	r3, .L118+8
 1492 03ac 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 35


 1493 03ae 013B     		subs	r3, r3, #1
 1494 03b0 9AB2     		uxth	r2, r3
 1495 03b2 584B     		ldr	r3, .L118+8
 1496 03b4 1A80     		strh	r2, [r3]	@ movhi
 1497 03b6 1AE0     		b	.L103
 1498              	.L104:
 445:main.c        ****                     } else {
 446:main.c        ****                         /* Delay elapsed: perform the maneuver */
 447:main.c        ****                         Directions_Handle(&g_direction);
 1499              		.loc 1 447 0
 1500 03b8 5448     		ldr	r0, .L118
 1501 03ba FFF7FEFF 		bl	Directions_Handle
 448:main.c        **** 
 449:main.c        ****                         /* When turn completes, Directions sets g_direction back to 0 */
 450:main.c        ****                         if (g_direction == 0u){
 1502              		.loc 1 450 0
 1503 03be 534B     		ldr	r3, .L118
 1504 03c0 1B78     		ldrb	r3, [r3]
 1505 03c2 DBB2     		uxtb	r3, r3
 1506 03c4 002B     		cmp	r3, #0
 1507 03c6 0ED1     		bne	.L105
 451:main.c        ****                             pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 1508              		.loc 1 451 0
 1509 03c8 4FF00003 		mov	r3, #0
 1510 03cc FB60     		str	r3, [r7, #12]	@ float
 1511 03ce 4FF00003 		mov	r3, #0
 1512 03d2 3B61     		str	r3, [r7, #16]	@ float
 1513 03d4 4FF00003 		mov	r3, #0
 1514 03d8 7B61     		str	r3, [r7, #20]	@ float
 452:main.c        ****                             dir_latched_side = 0;                        /* ready next time */
 1515              		.loc 1 452 0
 1516 03da 4D4B     		ldr	r3, .L118+4
 1517 03dc 0022     		movs	r2, #0
 1518 03de 1A70     		strb	r2, [r3]
 453:main.c        ****                             
 454:main.c        ****                             
 455:main.c        ****                             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1519              		.loc 1 455 0
 1520 03e0 4D4B     		ldr	r3, .L118+12
 1521 03e2 2622     		movs	r2, #38
 1522 03e4 1A80     		strh	r2, [r3]	@ movhi
 1523              	.L105:
 456:main.c        ****                         }
 457:main.c        ****                         CyDelay(LOOP_DT_MS);
 1524              		.loc 1 457 0
 1525 03e6 0820     		movs	r0, #8
 1526 03e8 FFF7FEFF 		bl	CyDelay
 458:main.c        ****                         continue;  /* skip the rest this tick */
 1527              		.loc 1 458 0
 1528 03ec 8CE0     		b	.L114
 1529              	.L103:
 459:main.c        ****                     }
 460:main.c        ****                 }
 461:main.c        ****                 /* ---------------- end turn handling with delay ---------------- */
 462:main.c        ****                 uTurn_complete = 1;
 1530              		.loc 1 462 0
 1531 03ee 0123     		movs	r3, #1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 36


 1532 03f0 87F83030 		strb	r3, [r7, #48]
 1533 03f4 61E0     		b	.L80
 1534              	.L98:
 463:main.c        ****             
 464:main.c        ****         } else if((CMD_STATES[i] == 5)) {
 1535              		.loc 1 464 0
 1536 03f6 97F93330 		ldrsb	r3, [r7, #51]
 1537 03fa 07F13802 		add	r2, r7, #56
 1538 03fe 1344     		add	r3, r3, r2
 1539 0400 13F8303C 		ldrb	r3, [r3, #-48]	@ zero_extendqisi2
 1540 0404 052B     		cmp	r3, #5
 1541 0406 29D1     		bne	.L106
 1542              	.LBB5:
 465:main.c        ****             // REACH FOOD
 466:main.c        ****             int steer = pi_step(&pi, V4_pp, V5_pp, V6_pp);
 1543              		.loc 1 466 0
 1544 0408 F988     		ldrh	r1, [r7, #6]
 1545 040a BA88     		ldrh	r2, [r7, #4]
 1546 040c 7B88     		ldrh	r3, [r7, #2]
 1547 040e 07F10C00 		add	r0, r7, #12
 1548 0412 FFF7FEFF 		bl	pi_step
 1549 0416 F861     		str	r0, [r7, #28]
 467:main.c        ****             set_motors_with_trim_and_steer(center_duty_est, steer);
 1550              		.loc 1 467 0
 1551 0418 F969     		ldr	r1, [r7, #28]
 1552 041a 786B     		ldr	r0, [r7, #52]
 1553 041c FFF7FEFF 		bl	set_motors_with_trim_and_steer
 468:main.c        ****             target_dist = 500;  // in mm
 1554              		.loc 1 468 0
 1555 0420 4FF4FA73 		mov	r3, #500
 1556 0424 BB62     		str	r3, [r7, #40]
 469:main.c        ****             g_stop_now = (g_dist_mm >= target_dist) ? 1u : 0u;
 1557              		.loc 1 469 0
 1558 0426 3D4B     		ldr	r3, .L118+16
 1559 0428 1A68     		ldr	r2, [r3]
 1560 042a BB6A     		ldr	r3, [r7, #40]
 1561 042c 9A42     		cmp	r2, r3
 1562 042e 01DB     		blt	.L107
 1563              		.loc 1 469 0 is_stmt 0 discriminator 1
 1564 0430 0122     		movs	r2, #1
 1565 0432 00E0     		b	.L108
 1566              	.L107:
 1567              		.loc 1 469 0 discriminator 2
 1568 0434 0022     		movs	r2, #0
 1569              	.L108:
 1570              		.loc 1 469 0 discriminator 4
 1571 0436 3A4B     		ldr	r3, .L118+20
 1572 0438 1A70     		strb	r2, [r3]
 470:main.c        ****             if (g_stop_now) {
 1573              		.loc 1 470 0 is_stmt 1 discriminator 4
 1574 043a 394B     		ldr	r3, .L118+20
 1575 043c 1B78     		ldrb	r3, [r3]
 1576 043e DBB2     		uxtb	r3, r3
 1577 0440 002B     		cmp	r3, #0
 1578 0442 07D0     		beq	.L109
 471:main.c        ****                 set_motors_symmetric(0);
 1579              		.loc 1 471 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 37


 1580 0444 0020     		movs	r0, #0
 1581 0446 FFF7FEFF 		bl	set_motors_symmetric
 472:main.c        ****                 motor_enable(1u, 1u);
 1582              		.loc 1 472 0
 1583 044a 0121     		movs	r1, #1
 1584 044c 0120     		movs	r0, #1
 1585 044e FFF7FEFF 		bl	motor_enable
 473:main.c        ****                 continue;
 1586              		.loc 1 473 0
 1587 0452 59E0     		b	.L114
 1588              	.L109:
 474:main.c        ****             }
 475:main.c        ****             fruit_complete = 1;
 1589              		.loc 1 475 0
 1590 0454 0123     		movs	r3, #1
 1591 0456 87F82F30 		strb	r3, [r7, #47]
 1592              	.LBE5:
 1593 045a 2EE0     		b	.L80
 1594              	.L106:
 476:main.c        **** 
 477:main.c        ****         } else if((CMD_STATES[i] == 6)) {
 1595              		.loc 1 477 0
 1596 045c 97F93330 		ldrsb	r3, [r7, #51]
 1597 0460 07F13802 		add	r2, r7, #56
 1598 0464 1344     		add	r3, r3, r2
 1599 0466 13F8303C 		ldrb	r3, [r3, #-48]	@ zero_extendqisi2
 1600 046a 062B     		cmp	r3, #6
 1601 046c 25D1     		bne	.L80
 1602              	.LBB6:
 478:main.c        ****             // FINISH
 479:main.c        ****             int steer = pi_step(&pi, V4_pp, V5_pp, V6_pp);
 1603              		.loc 1 479 0
 1604 046e F988     		ldrh	r1, [r7, #6]
 1605 0470 BA88     		ldrh	r2, [r7, #4]
 1606 0472 7B88     		ldrh	r3, [r7, #2]
 1607 0474 07F10C00 		add	r0, r7, #12
 1608 0478 FFF7FEFF 		bl	pi_step
 1609 047c B861     		str	r0, [r7, #24]
 480:main.c        ****             set_motors_with_trim_and_steer(center_duty_est, steer);
 1610              		.loc 1 480 0
 1611 047e B969     		ldr	r1, [r7, #24]
 1612 0480 786B     		ldr	r0, [r7, #52]
 1613 0482 FFF7FEFF 		bl	set_motors_with_trim_and_steer
 481:main.c        ****             target_dist = 500;  // in mm
 1614              		.loc 1 481 0
 1615 0486 4FF4FA73 		mov	r3, #500
 1616 048a BB62     		str	r3, [r7, #40]
 482:main.c        ****             g_stop_now = (g_dist_mm >= target_dist) ? 1u : 0u;
 1617              		.loc 1 482 0
 1618 048c 234B     		ldr	r3, .L118+16
 1619 048e 1A68     		ldr	r2, [r3]
 1620 0490 BB6A     		ldr	r3, [r7, #40]
 1621 0492 9A42     		cmp	r2, r3
 1622 0494 01DB     		blt	.L110
 1623              		.loc 1 482 0 is_stmt 0 discriminator 1
 1624 0496 0122     		movs	r2, #1
 1625 0498 00E0     		b	.L111
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 38


 1626              	.L110:
 1627              		.loc 1 482 0 discriminator 2
 1628 049a 0022     		movs	r2, #0
 1629              	.L111:
 1630              		.loc 1 482 0 discriminator 4
 1631 049c 204B     		ldr	r3, .L118+20
 1632 049e 1A70     		strb	r2, [r3]
 483:main.c        ****             if (g_stop_now) {
 1633              		.loc 1 483 0 is_stmt 1 discriminator 4
 1634 04a0 1F4B     		ldr	r3, .L118+20
 1635 04a2 1B78     		ldrb	r3, [r3]
 1636 04a4 DBB2     		uxtb	r3, r3
 1637 04a6 002B     		cmp	r3, #0
 1638 04a8 07D0     		beq	.L80
 484:main.c        ****                 set_motors_symmetric(0);
 1639              		.loc 1 484 0
 1640 04aa 0020     		movs	r0, #0
 1641 04ac FFF7FEFF 		bl	set_motors_symmetric
 485:main.c        ****                 motor_enable(1u, 1u);
 1642              		.loc 1 485 0
 1643 04b0 0121     		movs	r1, #1
 1644 04b2 0120     		movs	r0, #1
 1645 04b4 FFF7FEFF 		bl	motor_enable
 486:main.c        ****                 continue;
 1646              		.loc 1 486 0
 1647 04b8 26E0     		b	.L114
 1648              	.L80:
 1649              	.LBE6:
 487:main.c        ****             }           
 488:main.c        ****         }
 489:main.c        ****         if (straight_complete == 1u || turn_complete == 1u || uTurn_complete == 1u || fruit_complet
 1650              		.loc 1 489 0
 1651 04ba 97F93230 		ldrsb	r3, [r7, #50]
 1652 04be 012B     		cmp	r3, #1
 1653 04c0 0BD0     		beq	.L112
 1654              		.loc 1 489 0 is_stmt 0 discriminator 1
 1655 04c2 97F93130 		ldrsb	r3, [r7, #49]
 1656 04c6 012B     		cmp	r3, #1
 1657 04c8 07D0     		beq	.L112
 1658              		.loc 1 489 0 discriminator 2
 1659 04ca 97F93030 		ldrsb	r3, [r7, #48]
 1660 04ce 012B     		cmp	r3, #1
 1661 04d0 03D0     		beq	.L112
 1662              		.loc 1 489 0 discriminator 3
 1663 04d2 97F92F30 		ldrsb	r3, [r7, #47]
 1664 04d6 012B     		cmp	r3, #1
 1665 04d8 13D1     		bne	.L113
 1666              	.L112:
 490:main.c        ****             
 491:main.c        ****             i += 1;
 1667              		.loc 1 491 0 is_stmt 1
 1668 04da 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 1669 04de 0133     		adds	r3, r3, #1
 1670 04e0 DBB2     		uxtb	r3, r3
 1671 04e2 87F83330 		strb	r3, [r7, #51]
 492:main.c        ****             
 493:main.c        ****             straight_complete = 0;
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 39


 1672              		.loc 1 493 0
 1673 04e6 0023     		movs	r3, #0
 1674 04e8 87F83230 		strb	r3, [r7, #50]
 494:main.c        ****             turn_complete = 0;
 1675              		.loc 1 494 0
 1676 04ec 0023     		movs	r3, #0
 1677 04ee 87F83130 		strb	r3, [r7, #49]
 495:main.c        ****             uTurn_complete = 0;
 1678              		.loc 1 495 0
 1679 04f2 0023     		movs	r3, #0
 1680 04f4 87F83030 		strb	r3, [r7, #48]
 496:main.c        ****             fruit_complete = 0;
 1681              		.loc 1 496 0
 1682 04f8 0023     		movs	r3, #0
 1683 04fa 87F82F30 		strb	r3, [r7, #47]
 497:main.c        ****             
 498:main.c        ****             target_dist = 0;
 1684              		.loc 1 498 0
 1685 04fe 0023     		movs	r3, #0
 1686 0500 BB62     		str	r3, [r7, #40]
 1687              	.L113:
 499:main.c        ****         }
 500:main.c        **** 
 501:main.c        ****         CyDelay(LOOP_DT_MS);
 1688              		.loc 1 501 0
 1689 0502 0820     		movs	r0, #8
 1690 0504 FFF7FEFF 		bl	CyDelay
 1691              	.L114:
 1692              	.LBE3:
 502:main.c        ****     }
 1693              		.loc 1 502 0 discriminator 1
 1694 0508 E9E5     		b	.L115
 1695              	.L119:
 1696 050a 00BF     		.align	2
 1697              	.L118:
 1698 050c 06000000 		.word	g_direction
 1699 0510 0E000000 		.word	dir_latched_side
 1700 0514 0C000000 		.word	dir_delay_ticks
 1701 0518 10000000 		.word	turn_cooldown_ticks
 1702 051c 08000000 		.word	g_dist_mm
 1703 0520 07000000 		.word	g_stop_now
 1704              		.cfi_endproc
 1705              	.LFE69:
 1706              		.size	main, .-main
 1707              		.text
 1708              	.Letext0:
 1709              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1710              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1711              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 1712              		.section	.debug_info,"",%progbits
 1713              	.Ldebug_info0:
 1714 0000 1D060000 		.4byte	0x61d
 1715 0004 0400     		.2byte	0x4
 1716 0006 00000000 		.4byte	.Ldebug_abbrev0
 1717 000a 04       		.byte	0x4
 1718 000b 01       		.uleb128 0x1
 1719 000c 5D000000 		.4byte	.LASF64
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 40


 1720 0010 0C       		.byte	0xc
 1721 0011 0E030000 		.4byte	.LASF65
 1722 0015 4F010000 		.4byte	.LASF66
 1723 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1724 001d 00000000 		.4byte	0
 1725 0021 00000000 		.4byte	.Ldebug_line0
 1726 0025 02       		.uleb128 0x2
 1727 0026 A8020000 		.4byte	.LASF0
 1728 002a 02       		.byte	0x2
 1729 002b 1B       		.byte	0x1b
 1730 002c 30000000 		.4byte	0x30
 1731 0030 03       		.uleb128 0x3
 1732 0031 01       		.byte	0x1
 1733 0032 06       		.byte	0x6
 1734 0033 1C020000 		.4byte	.LASF2
 1735 0037 02       		.uleb128 0x2
 1736 0038 9E010000 		.4byte	.LASF1
 1737 003c 02       		.byte	0x2
 1738 003d 1D       		.byte	0x1d
 1739 003e 42000000 		.4byte	0x42
 1740 0042 03       		.uleb128 0x3
 1741 0043 01       		.byte	0x1
 1742 0044 08       		.byte	0x8
 1743 0045 A8010000 		.4byte	.LASF3
 1744 0049 03       		.uleb128 0x3
 1745 004a 02       		.byte	0x2
 1746 004b 05       		.byte	0x5
 1747 004c 3C000000 		.4byte	.LASF4
 1748 0050 02       		.uleb128 0x2
 1749 0051 F0000000 		.4byte	.LASF5
 1750 0055 02       		.byte	0x2
 1751 0056 2B       		.byte	0x2b
 1752 0057 5B000000 		.4byte	0x5b
 1753 005b 03       		.uleb128 0x3
 1754 005c 02       		.byte	0x2
 1755 005d 07       		.byte	0x7
 1756 005e 88020000 		.4byte	.LASF6
 1757 0062 02       		.uleb128 0x2
 1758 0063 6B030000 		.4byte	.LASF7
 1759 0067 02       		.byte	0x2
 1760 0068 3F       		.byte	0x3f
 1761 0069 6D000000 		.4byte	0x6d
 1762 006d 03       		.uleb128 0x3
 1763 006e 04       		.byte	0x4
 1764 006f 05       		.byte	0x5
 1765 0070 3C010000 		.4byte	.LASF8
 1766 0074 03       		.uleb128 0x3
 1767 0075 04       		.byte	0x4
 1768 0076 07       		.byte	0x7
 1769 0077 15030000 		.4byte	.LASF9
 1770 007b 02       		.uleb128 0x2
 1771 007c 45010000 		.4byte	.LASF10
 1772 0080 02       		.byte	0x2
 1773 0081 59       		.byte	0x59
 1774 0082 86000000 		.4byte	0x86
 1775 0086 03       		.uleb128 0x3
 1776 0087 08       		.byte	0x8
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 41


 1777 0088 05       		.byte	0x5
 1778 0089 24010000 		.4byte	.LASF11
 1779 008d 03       		.uleb128 0x3
 1780 008e 08       		.byte	0x8
 1781 008f 07       		.byte	0x7
 1782 0090 28020000 		.4byte	.LASF12
 1783 0094 04       		.uleb128 0x4
 1784 0095 04       		.byte	0x4
 1785 0096 05       		.byte	0x5
 1786 0097 696E7400 		.ascii	"int\000"
 1787 009b 03       		.uleb128 0x3
 1788 009c 04       		.byte	0x4
 1789 009d 07       		.byte	0x7
 1790 009e 4C020000 		.4byte	.LASF13
 1791 00a2 02       		.uleb128 0x2
 1792 00a3 35000000 		.4byte	.LASF14
 1793 00a7 03       		.byte	0x3
 1794 00a8 14       		.byte	0x14
 1795 00a9 25000000 		.4byte	0x25
 1796 00ad 02       		.uleb128 0x2
 1797 00ae 03010000 		.4byte	.LASF15
 1798 00b2 03       		.byte	0x3
 1799 00b3 18       		.byte	0x18
 1800 00b4 37000000 		.4byte	0x37
 1801 00b8 02       		.uleb128 0x2
 1802 00b9 5F020000 		.4byte	.LASF16
 1803 00bd 03       		.byte	0x3
 1804 00be 24       		.byte	0x24
 1805 00bf 50000000 		.4byte	0x50
 1806 00c3 02       		.uleb128 0x2
 1807 00c4 D0020000 		.4byte	.LASF17
 1808 00c8 03       		.byte	0x3
 1809 00c9 2C       		.byte	0x2c
 1810 00ca 62000000 		.4byte	0x62
 1811 00ce 02       		.uleb128 0x2
 1812 00cf FB000000 		.4byte	.LASF18
 1813 00d3 03       		.byte	0x3
 1814 00d4 38       		.byte	0x38
 1815 00d5 7B000000 		.4byte	0x7b
 1816 00d9 03       		.uleb128 0x3
 1817 00da 04       		.byte	0x4
 1818 00db 04       		.byte	0x4
 1819 00dc 1E010000 		.4byte	.LASF19
 1820 00e0 03       		.uleb128 0x3
 1821 00e1 08       		.byte	0x8
 1822 00e2 04       		.byte	0x4
 1823 00e3 97030000 		.4byte	.LASF20
 1824 00e7 03       		.uleb128 0x3
 1825 00e8 01       		.byte	0x1
 1826 00e9 08       		.byte	0x8
 1827 00ea 32010000 		.4byte	.LASF21
 1828 00ee 03       		.uleb128 0x3
 1829 00ef 08       		.byte	0x8
 1830 00f0 04       		.byte	0x4
 1831 00f1 D7010000 		.4byte	.LASF22
 1832 00f5 03       		.uleb128 0x3
 1833 00f6 04       		.byte	0x4
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 42


 1834 00f7 07       		.byte	0x7
 1835 00f8 54000000 		.4byte	.LASF23
 1836 00fc 05       		.uleb128 0x5
 1837 00fd AD000000 		.4byte	0xad
 1838 0101 06       		.uleb128 0x6
 1839 0102 0C       		.byte	0xc
 1840 0103 01       		.byte	0x1
 1841 0104 93       		.byte	0x93
 1842 0105 2A010000 		.4byte	0x12a
 1843 0109 07       		.uleb128 0x7
 1844 010a 6900     		.ascii	"i\000"
 1845 010c 01       		.byte	0x1
 1846 010d 93       		.byte	0x93
 1847 010e D9000000 		.4byte	0xd9
 1848 0112 00       		.byte	0
 1849 0113 07       		.uleb128 0x7
 1850 0114 7500     		.ascii	"u\000"
 1851 0116 01       		.byte	0x1
 1852 0117 93       		.byte	0x93
 1853 0118 D9000000 		.4byte	0xd9
 1854 011c 04       		.byte	0x4
 1855 011d 08       		.uleb128 0x8
 1856 011e 64030000 		.4byte	.LASF24
 1857 0122 01       		.byte	0x1
 1858 0123 93       		.byte	0x93
 1859 0124 D9000000 		.4byte	0xd9
 1860 0128 08       		.byte	0x8
 1861 0129 00       		.byte	0
 1862 012a 02       		.uleb128 0x2
 1863 012b 37010000 		.4byte	.LASF25
 1864 012f 01       		.byte	0x1
 1865 0130 93       		.byte	0x93
 1866 0131 01010000 		.4byte	0x101
 1867 0135 09       		.uleb128 0x9
 1868 0136 B1020000 		.4byte	.LASF67
 1869 013a 01       		.byte	0x1
 1870 013b 49       		.byte	0x49
 1871 013c 00000000 		.4byte	.LFB64
 1872 0140 14010000 		.4byte	.LFE64-.LFB64
 1873 0144 01       		.uleb128 0x1
 1874 0145 9C       		.byte	0x9c
 1875 0146 F0010000 		.4byte	0x1f0
 1876 014a 0A       		.uleb128 0xa
 1877 014b 12000000 		.4byte	.LBB2
 1878 014f EA000000 		.4byte	.LBE2-.LBB2
 1879 0153 0B       		.uleb128 0xb
 1880 0154 D2010000 		.4byte	.LASF26
 1881 0158 01       		.byte	0x1
 1882 0159 4C       		.byte	0x4c
 1883 015a C3000000 		.4byte	0xc3
 1884 015e 02       		.uleb128 0x2
 1885 015f 91       		.byte	0x91
 1886 0160 54       		.sleb128 -44
 1887 0161 0B       		.uleb128 0xb
 1888 0162 0B010000 		.4byte	.LASF27
 1889 0166 01       		.byte	0x1
 1890 0167 4D       		.byte	0x4d
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 43


 1891 0168 C3000000 		.4byte	0xc3
 1892 016c 02       		.uleb128 0x2
 1893 016d 91       		.byte	0x91
 1894 016e 50       		.sleb128 -48
 1895 016f 0C       		.uleb128 0xc
 1896 0170 643100   		.ascii	"d1\000"
 1897 0173 01       		.byte	0x1
 1898 0174 4F       		.byte	0x4f
 1899 0175 C3000000 		.4byte	0xc3
 1900 0179 02       		.uleb128 0x2
 1901 017a 91       		.byte	0x91
 1902 017b 4C       		.sleb128 -52
 1903 017c 0C       		.uleb128 0xc
 1904 017d 643200   		.ascii	"d2\000"
 1905 0180 01       		.byte	0x1
 1906 0181 4F       		.byte	0x4f
 1907 0182 C3000000 		.4byte	0xc3
 1908 0186 02       		.uleb128 0x2
 1909 0187 91       		.byte	0x91
 1910 0188 48       		.sleb128 -56
 1911 0189 0C       		.uleb128 0xc
 1912 018a 613100   		.ascii	"a1\000"
 1913 018d 01       		.byte	0x1
 1914 018e 50       		.byte	0x50
 1915 018f C3000000 		.4byte	0xc3
 1916 0193 02       		.uleb128 0x2
 1917 0194 91       		.byte	0x91
 1918 0195 44       		.sleb128 -60
 1919 0196 0C       		.uleb128 0xc
 1920 0197 613200   		.ascii	"a2\000"
 1921 019a 01       		.byte	0x1
 1922 019b 51       		.byte	0x51
 1923 019c C3000000 		.4byte	0xc3
 1924 01a0 02       		.uleb128 0x2
 1925 01a1 91       		.byte	0x91
 1926 01a2 40       		.sleb128 -64
 1927 01a3 0B       		.uleb128 0xb
 1928 01a4 C1030000 		.4byte	.LASF28
 1929 01a8 01       		.byte	0x1
 1930 01a9 52       		.byte	0x52
 1931 01aa C3000000 		.4byte	0xc3
 1932 01ae 03       		.uleb128 0x3
 1933 01af 91       		.byte	0x91
 1934 01b0 BC7F     		.sleb128 -68
 1935 01b2 0B       		.uleb128 0xb
 1936 01b3 27030000 		.4byte	.LASF29
 1937 01b7 01       		.byte	0x1
 1938 01b8 53       		.byte	0x53
 1939 01b9 C3000000 		.4byte	0xc3
 1940 01bd 03       		.uleb128 0x3
 1941 01be 91       		.byte	0x91
 1942 01bf B87F     		.sleb128 -72
 1943 01c1 0C       		.uleb128 0xc
 1944 01c2 6E756D00 		.ascii	"num\000"
 1945 01c6 01       		.byte	0x1
 1946 01c7 56       		.byte	0x56
 1947 01c8 CE000000 		.4byte	0xce
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 44


 1948 01cc 03       		.uleb128 0x3
 1949 01cd 91       		.byte	0x91
 1950 01ce B07F     		.sleb128 -80
 1951 01d0 0B       		.uleb128 0xb
 1952 01d1 10010000 		.4byte	.LASF30
 1953 01d5 01       		.byte	0x1
 1954 01d6 57       		.byte	0x57
 1955 01d7 C3000000 		.4byte	0xc3
 1956 01db 03       		.uleb128 0x3
 1957 01dc 91       		.byte	0x91
 1958 01dd AC7F     		.sleb128 -84
 1959 01df 0B       		.uleb128 0xb
 1960 01e0 EC020000 		.4byte	.LASF31
 1961 01e4 01       		.byte	0x1
 1962 01e5 58       		.byte	0x58
 1963 01e6 C3000000 		.4byte	0xc3
 1964 01ea 03       		.uleb128 0x3
 1965 01eb 91       		.byte	0x91
 1966 01ec A87F     		.sleb128 -88
 1967 01ee 00       		.byte	0
 1968 01ef 00       		.byte	0
 1969 01f0 0D       		.uleb128 0xd
 1970 01f1 75030000 		.4byte	.LASF35
 1971 01f5 01       		.byte	0x1
 1972 01f6 67       		.byte	0x67
 1973 01f7 D9000000 		.4byte	0xd9
 1974 01fb 00000000 		.4byte	.LFB65
 1975 01ff 44000000 		.4byte	.LFE65-.LFB65
 1976 0203 01       		.uleb128 0x1
 1977 0204 9C       		.byte	0x9c
 1978 0205 17020000 		.4byte	0x217
 1979 0209 0E       		.uleb128 0xe
 1980 020a 707000   		.ascii	"pp\000"
 1981 020d 01       		.byte	0x1
 1982 020e 67       		.byte	0x67
 1983 020f B8000000 		.4byte	0xb8
 1984 0213 02       		.uleb128 0x2
 1985 0214 91       		.byte	0x91
 1986 0215 76       		.sleb128 -10
 1987 0216 00       		.byte	0
 1988 0217 0F       		.uleb128 0xf
 1989 0218 31030000 		.4byte	.LASF68
 1990 021c 01       		.byte	0x1
 1991 021d 6F       		.byte	0x6f
 1992 021e 00000000 		.4byte	.LFB66
 1993 0222 48010000 		.4byte	.LFE66-.LFB66
 1994 0226 01       		.uleb128 0x1
 1995 0227 9C       		.byte	0x9c
 1996 0228 A5020000 		.4byte	0x2a5
 1997 022c 10       		.uleb128 0x10
 1998 022d 2F000000 		.4byte	.LASF32
 1999 0231 01       		.byte	0x1
 2000 0232 6F       		.byte	0x6f
 2001 0233 A5020000 		.4byte	0x2a5
 2002 0237 02       		.uleb128 0x2
 2003 0238 91       		.byte	0x91
 2004 0239 64       		.sleb128 -28
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 45


 2005 023a 10       		.uleb128 0x10
 2006 023b 18010000 		.4byte	.LASF33
 2007 023f 01       		.byte	0x1
 2008 0240 6F       		.byte	0x6f
 2009 0241 A5020000 		.4byte	0x2a5
 2010 0245 02       		.uleb128 0x2
 2011 0246 91       		.byte	0x91
 2012 0247 60       		.sleb128 -32
 2013 0248 10       		.uleb128 0x10
 2014 0249 59020000 		.4byte	.LASF34
 2015 024d 01       		.byte	0x1
 2016 024e 6F       		.byte	0x6f
 2017 024f A5020000 		.4byte	0x2a5
 2018 0253 02       		.uleb128 0x2
 2019 0254 91       		.byte	0x91
 2020 0255 5C       		.sleb128 -36
 2021 0256 0C       		.uleb128 0xc
 2022 0257 563100   		.ascii	"V1\000"
 2023 025a 01       		.byte	0x1
 2024 025b 71       		.byte	0x71
 2025 025c B8000000 		.4byte	0xb8
 2026 0260 02       		.uleb128 0x2
 2027 0261 91       		.byte	0x91
 2028 0262 76       		.sleb128 -10
 2029 0263 0C       		.uleb128 0xc
 2030 0264 563200   		.ascii	"V2\000"
 2031 0267 01       		.byte	0x1
 2032 0268 72       		.byte	0x72
 2033 0269 B8000000 		.4byte	0xb8
 2034 026d 02       		.uleb128 0x2
 2035 026e 91       		.byte	0x91
 2036 026f 74       		.sleb128 -12
 2037 0270 0C       		.uleb128 0xc
 2038 0271 563300   		.ascii	"V3\000"
 2039 0274 01       		.byte	0x1
 2040 0275 73       		.byte	0x73
 2041 0276 B8000000 		.4byte	0xb8
 2042 027a 02       		.uleb128 0x2
 2043 027b 91       		.byte	0x91
 2044 027c 72       		.sleb128 -14
 2045 027d 0C       		.uleb128 0xc
 2046 027e 563400   		.ascii	"V4\000"
 2047 0281 01       		.byte	0x1
 2048 0282 74       		.byte	0x74
 2049 0283 B8000000 		.4byte	0xb8
 2050 0287 02       		.uleb128 0x2
 2051 0288 91       		.byte	0x91
 2052 0289 70       		.sleb128 -16
 2053 028a 0C       		.uleb128 0xc
 2054 028b 563500   		.ascii	"V5\000"
 2055 028e 01       		.byte	0x1
 2056 028f 75       		.byte	0x75
 2057 0290 B8000000 		.4byte	0xb8
 2058 0294 02       		.uleb128 0x2
 2059 0295 91       		.byte	0x91
 2060 0296 6E       		.sleb128 -18
 2061 0297 0C       		.uleb128 0xc
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 46


 2062 0298 563600   		.ascii	"V6\000"
 2063 029b 01       		.byte	0x1
 2064 029c 76       		.byte	0x76
 2065 029d B8000000 		.4byte	0xb8
 2066 02a1 02       		.uleb128 0x2
 2067 02a2 91       		.byte	0x91
 2068 02a3 6C       		.sleb128 -20
 2069 02a4 00       		.byte	0
 2070 02a5 11       		.uleb128 0x11
 2071 02a6 04       		.byte	0x4
 2072 02a7 B8000000 		.4byte	0xb8
 2073 02ab 0D       		.uleb128 0xd
 2074 02ac 75020000 		.4byte	.LASF36
 2075 02b0 01       		.byte	0x1
 2076 02b1 94       		.byte	0x94
 2077 02b2 D9000000 		.4byte	0xd9
 2078 02b6 00000000 		.4byte	.LFB67
 2079 02ba 3A000000 		.4byte	.LFE67-.LFB67
 2080 02be 01       		.uleb128 0x1
 2081 02bf 9C       		.byte	0x9c
 2082 02c0 EB020000 		.4byte	0x2eb
 2083 02c4 0E       		.uleb128 0xe
 2084 02c5 7800     		.ascii	"x\000"
 2085 02c7 01       		.byte	0x1
 2086 02c8 94       		.byte	0x94
 2087 02c9 D9000000 		.4byte	0xd9
 2088 02cd 02       		.uleb128 0x2
 2089 02ce 91       		.byte	0x91
 2090 02cf 74       		.sleb128 -12
 2091 02d0 0E       		.uleb128 0xe
 2092 02d1 6C6F00   		.ascii	"lo\000"
 2093 02d4 01       		.byte	0x1
 2094 02d5 94       		.byte	0x94
 2095 02d6 D9000000 		.4byte	0xd9
 2096 02da 02       		.uleb128 0x2
 2097 02db 91       		.byte	0x91
 2098 02dc 70       		.sleb128 -16
 2099 02dd 0E       		.uleb128 0xe
 2100 02de 686900   		.ascii	"hi\000"
 2101 02e1 01       		.byte	0x1
 2102 02e2 94       		.byte	0x94
 2103 02e3 D9000000 		.4byte	0xd9
 2104 02e7 02       		.uleb128 0x2
 2105 02e8 91       		.byte	0x91
 2106 02e9 6C       		.sleb128 -20
 2107 02ea 00       		.byte	0
 2108 02eb 0D       		.uleb128 0xd
 2109 02ec D8020000 		.4byte	.LASF37
 2110 02f0 01       		.byte	0x1
 2111 02f1 96       		.byte	0x96
 2112 02f2 94000000 		.4byte	0x94
 2113 02f6 00000000 		.4byte	.LFB68
 2114 02fa 88020000 		.4byte	.LFE68-.LFB68
 2115 02fe 01       		.uleb128 0x1
 2116 02ff 9C       		.byte	0x9c
 2117 0300 E1030000 		.4byte	0x3e1
 2118 0304 0E       		.uleb128 0xe
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 47


 2119 0305 706900   		.ascii	"pi\000"
 2120 0308 01       		.byte	0x1
 2121 0309 96       		.byte	0x96
 2122 030a E1030000 		.4byte	0x3e1
 2123 030e 03       		.uleb128 0x3
 2124 030f 91       		.byte	0x91
 2125 0310 BC7F     		.sleb128 -68
 2126 0312 10       		.uleb128 0x10
 2127 0313 2F000000 		.4byte	.LASF32
 2128 0317 01       		.byte	0x1
 2129 0318 96       		.byte	0x96
 2130 0319 B8000000 		.4byte	0xb8
 2131 031d 03       		.uleb128 0x3
 2132 031e 91       		.byte	0x91
 2133 031f BA7F     		.sleb128 -70
 2134 0321 10       		.uleb128 0x10
 2135 0322 18010000 		.4byte	.LASF33
 2136 0326 01       		.byte	0x1
 2137 0327 96       		.byte	0x96
 2138 0328 B8000000 		.4byte	0xb8
 2139 032c 03       		.uleb128 0x3
 2140 032d 91       		.byte	0x91
 2141 032e B87F     		.sleb128 -72
 2142 0330 10       		.uleb128 0x10
 2143 0331 59020000 		.4byte	.LASF34
 2144 0335 01       		.byte	0x1
 2145 0336 96       		.byte	0x96
 2146 0337 B8000000 		.4byte	0xb8
 2147 033b 03       		.uleb128 0x3
 2148 033c 91       		.byte	0x91
 2149 033d B67F     		.sleb128 -74
 2150 033f 0C       		.uleb128 0xc
 2151 0340 633400   		.ascii	"c4\000"
 2152 0343 01       		.byte	0x1
 2153 0344 98       		.byte	0x98
 2154 0345 D9000000 		.4byte	0xd9
 2155 0349 02       		.uleb128 0x2
 2156 034a 91       		.byte	0x91
 2157 034b 68       		.sleb128 -24
 2158 034c 0C       		.uleb128 0xc
 2159 034d 633500   		.ascii	"c5\000"
 2160 0350 01       		.byte	0x1
 2161 0351 99       		.byte	0x99
 2162 0352 D9000000 		.4byte	0xd9
 2163 0356 02       		.uleb128 0x2
 2164 0357 91       		.byte	0x91
 2165 0358 64       		.sleb128 -28
 2166 0359 0C       		.uleb128 0xc
 2167 035a 633600   		.ascii	"c6\000"
 2168 035d 01       		.byte	0x1
 2169 035e 9A       		.byte	0x9a
 2170 035f D9000000 		.4byte	0xd9
 2171 0363 02       		.uleb128 0x2
 2172 0364 91       		.byte	0x91
 2173 0365 60       		.sleb128 -32
 2174 0366 0C       		.uleb128 0xc
 2175 0367 73756D00 		.ascii	"sum\000"
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 48


 2176 036b 01       		.byte	0x1
 2177 036c 9B       		.byte	0x9b
 2178 036d D9000000 		.4byte	0xd9
 2179 0371 02       		.uleb128 0x2
 2180 0372 91       		.byte	0x91
 2181 0373 5C       		.sleb128 -36
 2182 0374 0B       		.uleb128 0xb
 2183 0375 00000000 		.4byte	.LASF38
 2184 0379 01       		.byte	0x1
 2185 037a 9C       		.byte	0x9c
 2186 037b E7030000 		.4byte	0x3e7
 2187 037f 02       		.uleb128 0x2
 2188 0380 91       		.byte	0x91
 2189 0381 5B       		.sleb128 -37
 2190 0382 0C       		.uleb128 0xc
 2191 0383 706F7300 		.ascii	"pos\000"
 2192 0387 01       		.byte	0x1
 2193 0388 9E       		.byte	0x9e
 2194 0389 D9000000 		.4byte	0xd9
 2195 038d 02       		.uleb128 0x2
 2196 038e 91       		.byte	0x91
 2197 038f 6C       		.sleb128 -20
 2198 0390 0C       		.uleb128 0xc
 2199 0391 6500     		.ascii	"e\000"
 2200 0393 01       		.byte	0x1
 2201 0394 A1       		.byte	0xa1
 2202 0395 D9000000 		.4byte	0xd9
 2203 0399 02       		.uleb128 0x2
 2204 039a 91       		.byte	0x91
 2205 039b 54       		.sleb128 -44
 2206 039c 0B       		.uleb128 0xb
 2207 039d 07030000 		.4byte	.LASF39
 2208 03a1 01       		.byte	0x1
 2209 03a2 AA       		.byte	0xaa
 2210 03a3 D9000000 		.4byte	0xd9
 2211 03a7 02       		.uleb128 0x2
 2212 03a8 91       		.byte	0x91
 2213 03a9 50       		.sleb128 -48
 2214 03aa 0B       		.uleb128 0xb
 2215 03ab 06000000 		.4byte	.LASF40
 2216 03af 01       		.byte	0x1
 2217 03b0 AB       		.byte	0xab
 2218 03b1 D9000000 		.4byte	0xd9
 2219 03b5 02       		.uleb128 0x2
 2220 03b6 91       		.byte	0x91
 2221 03b7 4C       		.sleb128 -52
 2222 03b8 0C       		.uleb128 0xc
 2223 03b9 7500     		.ascii	"u\000"
 2224 03bb 01       		.byte	0x1
 2225 03bc AC       		.byte	0xac
 2226 03bd D9000000 		.4byte	0xd9
 2227 03c1 02       		.uleb128 0x2
 2228 03c2 91       		.byte	0x91
 2229 03c3 48       		.sleb128 -56
 2230 03c4 0B       		.uleb128 0xb
 2231 03c5 5D030000 		.4byte	.LASF41
 2232 03c9 01       		.byte	0x1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 49


 2233 03ca AE       		.byte	0xae
 2234 03cb E7030000 		.4byte	0x3e7
 2235 03cf 02       		.uleb128 0x2
 2236 03d0 91       		.byte	0x91
 2237 03d1 47       		.sleb128 -57
 2238 03d2 0B       		.uleb128 0xb
 2239 03d3 90030000 		.4byte	.LASF42
 2240 03d7 01       		.byte	0x1
 2241 03d8 AF       		.byte	0xaf
 2242 03d9 E7030000 		.4byte	0x3e7
 2243 03dd 02       		.uleb128 0x2
 2244 03de 91       		.byte	0x91
 2245 03df 46       		.sleb128 -58
 2246 03e0 00       		.byte	0
 2247 03e1 11       		.uleb128 0x11
 2248 03e2 04       		.byte	0x4
 2249 03e3 2A010000 		.4byte	0x12a
 2250 03e7 03       		.uleb128 0x3
 2251 03e8 01       		.byte	0x1
 2252 03e9 02       		.byte	0x2
 2253 03ea E6020000 		.4byte	.LASF43
 2254 03ee 12       		.uleb128 0x12
 2255 03ef EB000000 		.4byte	.LASF69
 2256 03f3 01       		.byte	0x1
 2257 03f4 BC       		.byte	0xbc
 2258 03f5 94000000 		.4byte	0x94
 2259 03f9 00000000 		.4byte	.LFB69
 2260 03fd 24050000 		.4byte	.LFE69-.LFB69
 2261 0401 01       		.uleb128 0x1
 2262 0402 9C       		.byte	0x9c
 2263 0403 29050000 		.4byte	0x529
 2264 0407 0B       		.uleb128 0xb
 2265 0408 C0020000 		.4byte	.LASF44
 2266 040c 01       		.byte	0x1
 2267 040d DA       		.byte	0xda
 2268 040e 94000000 		.4byte	0x94
 2269 0412 02       		.uleb128 0x2
 2270 0413 91       		.byte	0x91
 2271 0414 74       		.sleb128 -12
 2272 0415 0C       		.uleb128 0xc
 2273 0416 706900   		.ascii	"pi\000"
 2274 0419 01       		.byte	0x1
 2275 041a DF       		.byte	0xdf
 2276 041b 2A010000 		.4byte	0x12a
 2277 041f 02       		.uleb128 0x2
 2278 0420 91       		.byte	0x91
 2279 0421 4C       		.sleb128 -52
 2280 0422 0B       		.uleb128 0xb
 2281 0423 7D020000 		.4byte	.LASF45
 2282 0427 01       		.byte	0x1
 2283 0428 F4       		.byte	0xf4
 2284 0429 3E050000 		.4byte	0x53e
 2285 042d 02       		.uleb128 0x2
 2286 042e 91       		.byte	0x91
 2287 042f 48       		.sleb128 -56
 2288 0430 0C       		.uleb128 0xc
 2289 0431 6900     		.ascii	"i\000"
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 50


 2290 0433 01       		.byte	0x1
 2291 0434 F6       		.byte	0xf6
 2292 0435 A2000000 		.4byte	0xa2
 2293 0439 02       		.uleb128 0x2
 2294 043a 91       		.byte	0x91
 2295 043b 73       		.sleb128 -13
 2296 043c 0B       		.uleb128 0xb
 2297 043d B5030000 		.4byte	.LASF46
 2298 0441 01       		.byte	0x1
 2299 0442 F7       		.byte	0xf7
 2300 0443 C3000000 		.4byte	0xc3
 2301 0447 02       		.uleb128 0x2
 2302 0448 91       		.byte	0x91
 2303 0449 68       		.sleb128 -24
 2304 044a 0B       		.uleb128 0xb
 2305 044b 1D000000 		.4byte	.LASF47
 2306 044f 01       		.byte	0x1
 2307 0450 F9       		.byte	0xf9
 2308 0451 A2000000 		.4byte	0xa2
 2309 0455 02       		.uleb128 0x2
 2310 0456 91       		.byte	0x91
 2311 0457 72       		.sleb128 -14
 2312 0458 0B       		.uleb128 0xb
 2313 0459 46000000 		.4byte	.LASF48
 2314 045d 01       		.byte	0x1
 2315 045e FA       		.byte	0xfa
 2316 045f A2000000 		.4byte	0xa2
 2317 0463 02       		.uleb128 0x2
 2318 0464 91       		.byte	0x91
 2319 0465 71       		.sleb128 -15
 2320 0466 0B       		.uleb128 0xb
 2321 0467 CA030000 		.4byte	.LASF49
 2322 046b 01       		.byte	0x1
 2323 046c FB       		.byte	0xfb
 2324 046d A2000000 		.4byte	0xa2
 2325 0471 02       		.uleb128 0x2
 2326 0472 91       		.byte	0x91
 2327 0473 70       		.sleb128 -16
 2328 0474 0B       		.uleb128 0xb
 2329 0475 C3010000 		.4byte	.LASF50
 2330 0479 01       		.byte	0x1
 2331 047a FC       		.byte	0xfc
 2332 047b A2000000 		.4byte	0xa2
 2333 047f 02       		.uleb128 0x2
 2334 0480 91       		.byte	0x91
 2335 0481 6F       		.sleb128 -17
 2336 0482 0A       		.uleb128 0xa
 2337 0483 DE000000 		.4byte	.LBB3
 2338 0487 2A040000 		.4byte	.LBE3-.LBB3
 2339 048b 13       		.uleb128 0x13
 2340 048c 2F000000 		.4byte	.LASF32
 2341 0490 01       		.byte	0x1
 2342 0491 0101     		.2byte	0x101
 2343 0493 B8000000 		.4byte	0xb8
 2344 0497 02       		.uleb128 0x2
 2345 0498 91       		.byte	0x91
 2346 0499 46       		.sleb128 -58
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 51


 2347 049a 13       		.uleb128 0x13
 2348 049b 18010000 		.4byte	.LASF33
 2349 049f 01       		.byte	0x1
 2350 04a0 0101     		.2byte	0x101
 2351 04a2 B8000000 		.4byte	0xb8
 2352 04a6 02       		.uleb128 0x2
 2353 04a7 91       		.byte	0x91
 2354 04a8 44       		.sleb128 -60
 2355 04a9 13       		.uleb128 0x13
 2356 04aa 59020000 		.4byte	.LASF34
 2357 04ae 01       		.byte	0x1
 2358 04af 0101     		.2byte	0x101
 2359 04b1 B8000000 		.4byte	0xb8
 2360 04b5 02       		.uleb128 0x2
 2361 04b6 91       		.byte	0x91
 2362 04b7 42       		.sleb128 -62
 2363 04b8 14       		.uleb128 0x14
 2364 04b9 08010000 		.4byte	.LBB4
 2365 04bd 72000000 		.4byte	.LBE4-.LBB4
 2366 04c1 F1040000 		.4byte	0x4f1
 2367 04c5 13       		.uleb128 0x13
 2368 04c6 E0020000 		.4byte	.LASF51
 2369 04ca 01       		.byte	0x1
 2370 04cb 5001     		.2byte	0x150
 2371 04cd 94000000 		.4byte	0x94
 2372 04d1 02       		.uleb128 0x2
 2373 04d2 91       		.byte	0x91
 2374 04d3 64       		.sleb128 -28
 2375 04d4 15       		.uleb128 0x15
 2376 04d5 563100   		.ascii	"V1\000"
 2377 04d8 01       		.byte	0x1
 2378 04d9 5301     		.2byte	0x153
 2379 04db B8000000 		.4byte	0xb8
 2380 04df 02       		.uleb128 0x2
 2381 04e0 91       		.byte	0x91
 2382 04e1 62       		.sleb128 -30
 2383 04e2 15       		.uleb128 0x15
 2384 04e3 563200   		.ascii	"V2\000"
 2385 04e6 01       		.byte	0x1
 2386 04e7 5501     		.2byte	0x155
 2387 04e9 B8000000 		.4byte	0xb8
 2388 04ed 02       		.uleb128 0x2
 2389 04ee 91       		.byte	0x91
 2390 04ef 60       		.sleb128 -32
 2391 04f0 00       		.byte	0
 2392 04f1 14       		.uleb128 0x14
 2393 04f2 08040000 		.4byte	.LBB5
 2394 04f6 52000000 		.4byte	.LBE5-.LBB5
 2395 04fa 0E050000 		.4byte	0x50e
 2396 04fe 13       		.uleb128 0x13
 2397 04ff E0020000 		.4byte	.LASF51
 2398 0503 01       		.byte	0x1
 2399 0504 D201     		.2byte	0x1d2
 2400 0506 94000000 		.4byte	0x94
 2401 050a 02       		.uleb128 0x2
 2402 050b 91       		.byte	0x91
 2403 050c 5C       		.sleb128 -36
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 52


 2404 050d 00       		.byte	0
 2405 050e 0A       		.uleb128 0xa
 2406 050f 6E040000 		.4byte	.LBB6
 2407 0513 4C000000 		.4byte	.LBE6-.LBB6
 2408 0517 13       		.uleb128 0x13
 2409 0518 E0020000 		.4byte	.LASF51
 2410 051c 01       		.byte	0x1
 2411 051d DF01     		.2byte	0x1df
 2412 051f 94000000 		.4byte	0x94
 2413 0523 02       		.uleb128 0x2
 2414 0524 91       		.byte	0x91
 2415 0525 58       		.sleb128 -40
 2416 0526 00       		.byte	0
 2417 0527 00       		.byte	0
 2418 0528 00       		.byte	0
 2419 0529 16       		.uleb128 0x16
 2420 052a 39050000 		.4byte	0x539
 2421 052e 39050000 		.4byte	0x539
 2422 0532 17       		.uleb128 0x17
 2423 0533 F5000000 		.4byte	0xf5
 2424 0537 00       		.byte	0
 2425 0538 00       		.byte	0
 2426 0539 18       		.uleb128 0x18
 2427 053a AD000000 		.4byte	0xad
 2428 053e 18       		.uleb128 0x18
 2429 053f 29050000 		.4byte	0x529
 2430 0543 0B       		.uleb128 0xb
 2431 0544 B6010000 		.4byte	.LASF52
 2432 0548 01       		.byte	0x1
 2433 0549 38       		.byte	0x38
 2434 054a AD000000 		.4byte	0xad
 2435 054e 05       		.uleb128 0x5
 2436 054f 03       		.byte	0x3
 2437 0550 00000000 		.4byte	sen1_on_line
 2438 0554 0B       		.uleb128 0xb
 2439 0555 E3010000 		.4byte	.LASF53
 2440 0559 01       		.byte	0x1
 2441 055a 38       		.byte	0x38
 2442 055b AD000000 		.4byte	0xad
 2443 055f 05       		.uleb128 0x5
 2444 0560 03       		.byte	0x3
 2445 0561 01000000 		.4byte	sen2_on_line
 2446 0565 0B       		.uleb128 0xb
 2447 0566 0F020000 		.4byte	.LASF54
 2448 056a 01       		.byte	0x1
 2449 056b 38       		.byte	0x38
 2450 056c AD000000 		.4byte	0xad
 2451 0570 05       		.uleb128 0x5
 2452 0571 03       		.byte	0x3
 2453 0572 02000000 		.4byte	sen3_on_line
 2454 0576 0B       		.uleb128 0xb
 2455 0577 3F020000 		.4byte	.LASF55
 2456 057b 01       		.byte	0x1
 2457 057c 39       		.byte	0x39
 2458 057d AD000000 		.4byte	0xad
 2459 0581 05       		.uleb128 0x5
 2460 0582 03       		.byte	0x3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 53


 2461 0583 03000000 		.4byte	sen4_on_line
 2462 0587 0B       		.uleb128 0xb
 2463 0588 68020000 		.4byte	.LASF56
 2464 058c 01       		.byte	0x1
 2465 058d 39       		.byte	0x39
 2466 058e AD000000 		.4byte	0xad
 2467 0592 05       		.uleb128 0x5
 2468 0593 03       		.byte	0x3
 2469 0594 04000000 		.4byte	sen5_on_line
 2470 0598 0B       		.uleb128 0xb
 2471 0599 9B020000 		.4byte	.LASF57
 2472 059d 01       		.byte	0x1
 2473 059e 39       		.byte	0x39
 2474 059f AD000000 		.4byte	0xad
 2475 05a3 05       		.uleb128 0x5
 2476 05a4 03       		.byte	0x3
 2477 05a5 05000000 		.4byte	sen6_on_line
 2478 05a9 0B       		.uleb128 0xb
 2479 05aa 84030000 		.4byte	.LASF58
 2480 05ae 01       		.byte	0x1
 2481 05af 3C       		.byte	0x3c
 2482 05b0 FC000000 		.4byte	0xfc
 2483 05b4 05       		.uleb128 0x5
 2484 05b5 03       		.byte	0x3
 2485 05b6 06000000 		.4byte	g_direction
 2486 05ba 0B       		.uleb128 0xb
 2487 05bb F0010000 		.4byte	.LASF59
 2488 05bf 01       		.byte	0x1
 2489 05c0 3D       		.byte	0x3d
 2490 05c1 FC000000 		.4byte	0xfc
 2491 05c5 05       		.uleb128 0x5
 2492 05c6 03       		.byte	0x3
 2493 05c7 07000000 		.4byte	g_stop_now
 2494 05cb 0B       		.uleb128 0xb
 2495 05cc 9E030000 		.4byte	.LASF60
 2496 05d0 01       		.byte	0x1
 2497 05d1 3E       		.byte	0x3e
 2498 05d2 DC050000 		.4byte	0x5dc
 2499 05d6 05       		.uleb128 0x5
 2500 05d7 03       		.byte	0x3
 2501 05d8 08000000 		.4byte	g_dist_mm
 2502 05dc 05       		.uleb128 0x5
 2503 05dd C3000000 		.4byte	0xc3
 2504 05e1 0B       		.uleb128 0xb
 2505 05e2 F7020000 		.4byte	.LASF61
 2506 05e6 01       		.byte	0x1
 2507 05e7 41       		.byte	0x41
 2508 05e8 B8000000 		.4byte	0xb8
 2509 05ec 05       		.uleb128 0x5
 2510 05ed 03       		.byte	0x3
 2511 05ee 0C000000 		.4byte	dir_delay_ticks
 2512 05f2 0B       		.uleb128 0xb
 2513 05f3 0C000000 		.4byte	.LASF62
 2514 05f7 01       		.byte	0x1
 2515 05f8 42       		.byte	0x42
 2516 05f9 AD000000 		.4byte	0xad
 2517 05fd 05       		.uleb128 0x5
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 54


 2518 05fe 03       		.byte	0x3
 2519 05ff 0E000000 		.4byte	dir_latched_side
 2520 0603 0B       		.uleb128 0xb
 2521 0604 FB010000 		.4byte	.LASF63
 2522 0608 01       		.byte	0x1
 2523 0609 45       		.byte	0x45
 2524 060a B8000000 		.4byte	0xb8
 2525 060e 05       		.uleb128 0x5
 2526 060f 03       		.byte	0x3
 2527 0610 10000000 		.4byte	turn_cooldown_ticks
 2528 0614 19       		.uleb128 0x19
 2529 0615 A8030000 		.4byte	.LASF70
 2530 0619 04       		.byte	0x4
 2531 061a 1207     		.2byte	0x712
 2532 061c DC050000 		.4byte	0x5dc
 2533 0620 00       		.byte	0
 2534              		.section	.debug_abbrev,"",%progbits
 2535              	.Ldebug_abbrev0:
 2536 0000 01       		.uleb128 0x1
 2537 0001 11       		.uleb128 0x11
 2538 0002 01       		.byte	0x1
 2539 0003 25       		.uleb128 0x25
 2540 0004 0E       		.uleb128 0xe
 2541 0005 13       		.uleb128 0x13
 2542 0006 0B       		.uleb128 0xb
 2543 0007 03       		.uleb128 0x3
 2544 0008 0E       		.uleb128 0xe
 2545 0009 1B       		.uleb128 0x1b
 2546 000a 0E       		.uleb128 0xe
 2547 000b 55       		.uleb128 0x55
 2548 000c 17       		.uleb128 0x17
 2549 000d 11       		.uleb128 0x11
 2550 000e 01       		.uleb128 0x1
 2551 000f 10       		.uleb128 0x10
 2552 0010 17       		.uleb128 0x17
 2553 0011 00       		.byte	0
 2554 0012 00       		.byte	0
 2555 0013 02       		.uleb128 0x2
 2556 0014 16       		.uleb128 0x16
 2557 0015 00       		.byte	0
 2558 0016 03       		.uleb128 0x3
 2559 0017 0E       		.uleb128 0xe
 2560 0018 3A       		.uleb128 0x3a
 2561 0019 0B       		.uleb128 0xb
 2562 001a 3B       		.uleb128 0x3b
 2563 001b 0B       		.uleb128 0xb
 2564 001c 49       		.uleb128 0x49
 2565 001d 13       		.uleb128 0x13
 2566 001e 00       		.byte	0
 2567 001f 00       		.byte	0
 2568 0020 03       		.uleb128 0x3
 2569 0021 24       		.uleb128 0x24
 2570 0022 00       		.byte	0
 2571 0023 0B       		.uleb128 0xb
 2572 0024 0B       		.uleb128 0xb
 2573 0025 3E       		.uleb128 0x3e
 2574 0026 0B       		.uleb128 0xb
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 55


 2575 0027 03       		.uleb128 0x3
 2576 0028 0E       		.uleb128 0xe
 2577 0029 00       		.byte	0
 2578 002a 00       		.byte	0
 2579 002b 04       		.uleb128 0x4
 2580 002c 24       		.uleb128 0x24
 2581 002d 00       		.byte	0
 2582 002e 0B       		.uleb128 0xb
 2583 002f 0B       		.uleb128 0xb
 2584 0030 3E       		.uleb128 0x3e
 2585 0031 0B       		.uleb128 0xb
 2586 0032 03       		.uleb128 0x3
 2587 0033 08       		.uleb128 0x8
 2588 0034 00       		.byte	0
 2589 0035 00       		.byte	0
 2590 0036 05       		.uleb128 0x5
 2591 0037 35       		.uleb128 0x35
 2592 0038 00       		.byte	0
 2593 0039 49       		.uleb128 0x49
 2594 003a 13       		.uleb128 0x13
 2595 003b 00       		.byte	0
 2596 003c 00       		.byte	0
 2597 003d 06       		.uleb128 0x6
 2598 003e 13       		.uleb128 0x13
 2599 003f 01       		.byte	0x1
 2600 0040 0B       		.uleb128 0xb
 2601 0041 0B       		.uleb128 0xb
 2602 0042 3A       		.uleb128 0x3a
 2603 0043 0B       		.uleb128 0xb
 2604 0044 3B       		.uleb128 0x3b
 2605 0045 0B       		.uleb128 0xb
 2606 0046 01       		.uleb128 0x1
 2607 0047 13       		.uleb128 0x13
 2608 0048 00       		.byte	0
 2609 0049 00       		.byte	0
 2610 004a 07       		.uleb128 0x7
 2611 004b 0D       		.uleb128 0xd
 2612 004c 00       		.byte	0
 2613 004d 03       		.uleb128 0x3
 2614 004e 08       		.uleb128 0x8
 2615 004f 3A       		.uleb128 0x3a
 2616 0050 0B       		.uleb128 0xb
 2617 0051 3B       		.uleb128 0x3b
 2618 0052 0B       		.uleb128 0xb
 2619 0053 49       		.uleb128 0x49
 2620 0054 13       		.uleb128 0x13
 2621 0055 38       		.uleb128 0x38
 2622 0056 0B       		.uleb128 0xb
 2623 0057 00       		.byte	0
 2624 0058 00       		.byte	0
 2625 0059 08       		.uleb128 0x8
 2626 005a 0D       		.uleb128 0xd
 2627 005b 00       		.byte	0
 2628 005c 03       		.uleb128 0x3
 2629 005d 0E       		.uleb128 0xe
 2630 005e 3A       		.uleb128 0x3a
 2631 005f 0B       		.uleb128 0xb
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 56


 2632 0060 3B       		.uleb128 0x3b
 2633 0061 0B       		.uleb128 0xb
 2634 0062 49       		.uleb128 0x49
 2635 0063 13       		.uleb128 0x13
 2636 0064 38       		.uleb128 0x38
 2637 0065 0B       		.uleb128 0xb
 2638 0066 00       		.byte	0
 2639 0067 00       		.byte	0
 2640 0068 09       		.uleb128 0x9
 2641 0069 2E       		.uleb128 0x2e
 2642 006a 01       		.byte	0x1
 2643 006b 3F       		.uleb128 0x3f
 2644 006c 19       		.uleb128 0x19
 2645 006d 03       		.uleb128 0x3
 2646 006e 0E       		.uleb128 0xe
 2647 006f 3A       		.uleb128 0x3a
 2648 0070 0B       		.uleb128 0xb
 2649 0071 3B       		.uleb128 0x3b
 2650 0072 0B       		.uleb128 0xb
 2651 0073 27       		.uleb128 0x27
 2652 0074 19       		.uleb128 0x19
 2653 0075 11       		.uleb128 0x11
 2654 0076 01       		.uleb128 0x1
 2655 0077 12       		.uleb128 0x12
 2656 0078 06       		.uleb128 0x6
 2657 0079 40       		.uleb128 0x40
 2658 007a 18       		.uleb128 0x18
 2659 007b 9642     		.uleb128 0x2116
 2660 007d 19       		.uleb128 0x19
 2661 007e 01       		.uleb128 0x1
 2662 007f 13       		.uleb128 0x13
 2663 0080 00       		.byte	0
 2664 0081 00       		.byte	0
 2665 0082 0A       		.uleb128 0xa
 2666 0083 0B       		.uleb128 0xb
 2667 0084 01       		.byte	0x1
 2668 0085 11       		.uleb128 0x11
 2669 0086 01       		.uleb128 0x1
 2670 0087 12       		.uleb128 0x12
 2671 0088 06       		.uleb128 0x6
 2672 0089 00       		.byte	0
 2673 008a 00       		.byte	0
 2674 008b 0B       		.uleb128 0xb
 2675 008c 34       		.uleb128 0x34
 2676 008d 00       		.byte	0
 2677 008e 03       		.uleb128 0x3
 2678 008f 0E       		.uleb128 0xe
 2679 0090 3A       		.uleb128 0x3a
 2680 0091 0B       		.uleb128 0xb
 2681 0092 3B       		.uleb128 0x3b
 2682 0093 0B       		.uleb128 0xb
 2683 0094 49       		.uleb128 0x49
 2684 0095 13       		.uleb128 0x13
 2685 0096 02       		.uleb128 0x2
 2686 0097 18       		.uleb128 0x18
 2687 0098 00       		.byte	0
 2688 0099 00       		.byte	0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 57


 2689 009a 0C       		.uleb128 0xc
 2690 009b 34       		.uleb128 0x34
 2691 009c 00       		.byte	0
 2692 009d 03       		.uleb128 0x3
 2693 009e 08       		.uleb128 0x8
 2694 009f 3A       		.uleb128 0x3a
 2695 00a0 0B       		.uleb128 0xb
 2696 00a1 3B       		.uleb128 0x3b
 2697 00a2 0B       		.uleb128 0xb
 2698 00a3 49       		.uleb128 0x49
 2699 00a4 13       		.uleb128 0x13
 2700 00a5 02       		.uleb128 0x2
 2701 00a6 18       		.uleb128 0x18
 2702 00a7 00       		.byte	0
 2703 00a8 00       		.byte	0
 2704 00a9 0D       		.uleb128 0xd
 2705 00aa 2E       		.uleb128 0x2e
 2706 00ab 01       		.byte	0x1
 2707 00ac 03       		.uleb128 0x3
 2708 00ad 0E       		.uleb128 0xe
 2709 00ae 3A       		.uleb128 0x3a
 2710 00af 0B       		.uleb128 0xb
 2711 00b0 3B       		.uleb128 0x3b
 2712 00b1 0B       		.uleb128 0xb
 2713 00b2 27       		.uleb128 0x27
 2714 00b3 19       		.uleb128 0x19
 2715 00b4 49       		.uleb128 0x49
 2716 00b5 13       		.uleb128 0x13
 2717 00b6 11       		.uleb128 0x11
 2718 00b7 01       		.uleb128 0x1
 2719 00b8 12       		.uleb128 0x12
 2720 00b9 06       		.uleb128 0x6
 2721 00ba 40       		.uleb128 0x40
 2722 00bb 18       		.uleb128 0x18
 2723 00bc 9642     		.uleb128 0x2116
 2724 00be 19       		.uleb128 0x19
 2725 00bf 01       		.uleb128 0x1
 2726 00c0 13       		.uleb128 0x13
 2727 00c1 00       		.byte	0
 2728 00c2 00       		.byte	0
 2729 00c3 0E       		.uleb128 0xe
 2730 00c4 05       		.uleb128 0x5
 2731 00c5 00       		.byte	0
 2732 00c6 03       		.uleb128 0x3
 2733 00c7 08       		.uleb128 0x8
 2734 00c8 3A       		.uleb128 0x3a
 2735 00c9 0B       		.uleb128 0xb
 2736 00ca 3B       		.uleb128 0x3b
 2737 00cb 0B       		.uleb128 0xb
 2738 00cc 49       		.uleb128 0x49
 2739 00cd 13       		.uleb128 0x13
 2740 00ce 02       		.uleb128 0x2
 2741 00cf 18       		.uleb128 0x18
 2742 00d0 00       		.byte	0
 2743 00d1 00       		.byte	0
 2744 00d2 0F       		.uleb128 0xf
 2745 00d3 2E       		.uleb128 0x2e
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 58


 2746 00d4 01       		.byte	0x1
 2747 00d5 03       		.uleb128 0x3
 2748 00d6 0E       		.uleb128 0xe
 2749 00d7 3A       		.uleb128 0x3a
 2750 00d8 0B       		.uleb128 0xb
 2751 00d9 3B       		.uleb128 0x3b
 2752 00da 0B       		.uleb128 0xb
 2753 00db 27       		.uleb128 0x27
 2754 00dc 19       		.uleb128 0x19
 2755 00dd 11       		.uleb128 0x11
 2756 00de 01       		.uleb128 0x1
 2757 00df 12       		.uleb128 0x12
 2758 00e0 06       		.uleb128 0x6
 2759 00e1 40       		.uleb128 0x40
 2760 00e2 18       		.uleb128 0x18
 2761 00e3 9642     		.uleb128 0x2116
 2762 00e5 19       		.uleb128 0x19
 2763 00e6 01       		.uleb128 0x1
 2764 00e7 13       		.uleb128 0x13
 2765 00e8 00       		.byte	0
 2766 00e9 00       		.byte	0
 2767 00ea 10       		.uleb128 0x10
 2768 00eb 05       		.uleb128 0x5
 2769 00ec 00       		.byte	0
 2770 00ed 03       		.uleb128 0x3
 2771 00ee 0E       		.uleb128 0xe
 2772 00ef 3A       		.uleb128 0x3a
 2773 00f0 0B       		.uleb128 0xb
 2774 00f1 3B       		.uleb128 0x3b
 2775 00f2 0B       		.uleb128 0xb
 2776 00f3 49       		.uleb128 0x49
 2777 00f4 13       		.uleb128 0x13
 2778 00f5 02       		.uleb128 0x2
 2779 00f6 18       		.uleb128 0x18
 2780 00f7 00       		.byte	0
 2781 00f8 00       		.byte	0
 2782 00f9 11       		.uleb128 0x11
 2783 00fa 0F       		.uleb128 0xf
 2784 00fb 00       		.byte	0
 2785 00fc 0B       		.uleb128 0xb
 2786 00fd 0B       		.uleb128 0xb
 2787 00fe 49       		.uleb128 0x49
 2788 00ff 13       		.uleb128 0x13
 2789 0100 00       		.byte	0
 2790 0101 00       		.byte	0
 2791 0102 12       		.uleb128 0x12
 2792 0103 2E       		.uleb128 0x2e
 2793 0104 01       		.byte	0x1
 2794 0105 3F       		.uleb128 0x3f
 2795 0106 19       		.uleb128 0x19
 2796 0107 03       		.uleb128 0x3
 2797 0108 0E       		.uleb128 0xe
 2798 0109 3A       		.uleb128 0x3a
 2799 010a 0B       		.uleb128 0xb
 2800 010b 3B       		.uleb128 0x3b
 2801 010c 0B       		.uleb128 0xb
 2802 010d 27       		.uleb128 0x27
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 59


 2803 010e 19       		.uleb128 0x19
 2804 010f 49       		.uleb128 0x49
 2805 0110 13       		.uleb128 0x13
 2806 0111 11       		.uleb128 0x11
 2807 0112 01       		.uleb128 0x1
 2808 0113 12       		.uleb128 0x12
 2809 0114 06       		.uleb128 0x6
 2810 0115 40       		.uleb128 0x40
 2811 0116 18       		.uleb128 0x18
 2812 0117 9642     		.uleb128 0x2116
 2813 0119 19       		.uleb128 0x19
 2814 011a 01       		.uleb128 0x1
 2815 011b 13       		.uleb128 0x13
 2816 011c 00       		.byte	0
 2817 011d 00       		.byte	0
 2818 011e 13       		.uleb128 0x13
 2819 011f 34       		.uleb128 0x34
 2820 0120 00       		.byte	0
 2821 0121 03       		.uleb128 0x3
 2822 0122 0E       		.uleb128 0xe
 2823 0123 3A       		.uleb128 0x3a
 2824 0124 0B       		.uleb128 0xb
 2825 0125 3B       		.uleb128 0x3b
 2826 0126 05       		.uleb128 0x5
 2827 0127 49       		.uleb128 0x49
 2828 0128 13       		.uleb128 0x13
 2829 0129 02       		.uleb128 0x2
 2830 012a 18       		.uleb128 0x18
 2831 012b 00       		.byte	0
 2832 012c 00       		.byte	0
 2833 012d 14       		.uleb128 0x14
 2834 012e 0B       		.uleb128 0xb
 2835 012f 01       		.byte	0x1
 2836 0130 11       		.uleb128 0x11
 2837 0131 01       		.uleb128 0x1
 2838 0132 12       		.uleb128 0x12
 2839 0133 06       		.uleb128 0x6
 2840 0134 01       		.uleb128 0x1
 2841 0135 13       		.uleb128 0x13
 2842 0136 00       		.byte	0
 2843 0137 00       		.byte	0
 2844 0138 15       		.uleb128 0x15
 2845 0139 34       		.uleb128 0x34
 2846 013a 00       		.byte	0
 2847 013b 03       		.uleb128 0x3
 2848 013c 08       		.uleb128 0x8
 2849 013d 3A       		.uleb128 0x3a
 2850 013e 0B       		.uleb128 0xb
 2851 013f 3B       		.uleb128 0x3b
 2852 0140 05       		.uleb128 0x5
 2853 0141 49       		.uleb128 0x49
 2854 0142 13       		.uleb128 0x13
 2855 0143 02       		.uleb128 0x2
 2856 0144 18       		.uleb128 0x18
 2857 0145 00       		.byte	0
 2858 0146 00       		.byte	0
 2859 0147 16       		.uleb128 0x16
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 60


 2860 0148 01       		.uleb128 0x1
 2861 0149 01       		.byte	0x1
 2862 014a 49       		.uleb128 0x49
 2863 014b 13       		.uleb128 0x13
 2864 014c 01       		.uleb128 0x1
 2865 014d 13       		.uleb128 0x13
 2866 014e 00       		.byte	0
 2867 014f 00       		.byte	0
 2868 0150 17       		.uleb128 0x17
 2869 0151 21       		.uleb128 0x21
 2870 0152 00       		.byte	0
 2871 0153 49       		.uleb128 0x49
 2872 0154 13       		.uleb128 0x13
 2873 0155 2F       		.uleb128 0x2f
 2874 0156 0B       		.uleb128 0xb
 2875 0157 00       		.byte	0
 2876 0158 00       		.byte	0
 2877 0159 18       		.uleb128 0x18
 2878 015a 26       		.uleb128 0x26
 2879 015b 00       		.byte	0
 2880 015c 49       		.uleb128 0x49
 2881 015d 13       		.uleb128 0x13
 2882 015e 00       		.byte	0
 2883 015f 00       		.byte	0
 2884 0160 19       		.uleb128 0x19
 2885 0161 34       		.uleb128 0x34
 2886 0162 00       		.byte	0
 2887 0163 03       		.uleb128 0x3
 2888 0164 0E       		.uleb128 0xe
 2889 0165 3A       		.uleb128 0x3a
 2890 0166 0B       		.uleb128 0xb
 2891 0167 3B       		.uleb128 0x3b
 2892 0168 05       		.uleb128 0x5
 2893 0169 49       		.uleb128 0x49
 2894 016a 13       		.uleb128 0x13
 2895 016b 3F       		.uleb128 0x3f
 2896 016c 19       		.uleb128 0x19
 2897 016d 3C       		.uleb128 0x3c
 2898 016e 19       		.uleb128 0x19
 2899 016f 00       		.byte	0
 2900 0170 00       		.byte	0
 2901 0171 00       		.byte	0
 2902              		.section	.debug_aranges,"",%progbits
 2903 0000 44000000 		.4byte	0x44
 2904 0004 0200     		.2byte	0x2
 2905 0006 00000000 		.4byte	.Ldebug_info0
 2906 000a 04       		.byte	0x4
 2907 000b 00       		.byte	0
 2908 000c 0000     		.2byte	0
 2909 000e 0000     		.2byte	0
 2910 0010 00000000 		.4byte	.LFB64
 2911 0014 14010000 		.4byte	.LFE64-.LFB64
 2912 0018 00000000 		.4byte	.LFB65
 2913 001c 44000000 		.4byte	.LFE65-.LFB65
 2914 0020 00000000 		.4byte	.LFB66
 2915 0024 48010000 		.4byte	.LFE66-.LFB66
 2916 0028 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 61


 2917 002c 3A000000 		.4byte	.LFE67-.LFB67
 2918 0030 00000000 		.4byte	.LFB68
 2919 0034 88020000 		.4byte	.LFE68-.LFB68
 2920 0038 00000000 		.4byte	.LFB69
 2921 003c 24050000 		.4byte	.LFE69-.LFB69
 2922 0040 00000000 		.4byte	0
 2923 0044 00000000 		.4byte	0
 2924              		.section	.debug_ranges,"",%progbits
 2925              	.Ldebug_ranges0:
 2926 0000 00000000 		.4byte	.LFB64
 2927 0004 14010000 		.4byte	.LFE64
 2928 0008 00000000 		.4byte	.LFB65
 2929 000c 44000000 		.4byte	.LFE65
 2930 0010 00000000 		.4byte	.LFB66
 2931 0014 48010000 		.4byte	.LFE66
 2932 0018 00000000 		.4byte	.LFB67
 2933 001c 3A000000 		.4byte	.LFE67
 2934 0020 00000000 		.4byte	.LFB68
 2935 0024 88020000 		.4byte	.LFE68
 2936 0028 00000000 		.4byte	.LFB69
 2937 002c 24050000 		.4byte	.LFE69
 2938 0030 00000000 		.4byte	0
 2939 0034 00000000 		.4byte	0
 2940              		.section	.debug_line,"",%progbits
 2941              	.Ldebug_line0:
 2942 0000 8A040000 		.section	.debug_str,"MS",%progbits,1
 2942      02003F01 
 2942      00000201 
 2942      FB0E0D00 
 2942      01010101 
 2943              	.LASF38:
 2944 0000 76616C69 		.ascii	"valid\000"
 2944      6400
 2945              	.LASF40:
 2946 0006 755F7261 		.ascii	"u_raw\000"
 2946      7700
 2947              	.LASF62:
 2948 000c 6469725F 		.ascii	"dir_latched_side\000"
 2948      6C617463 
 2948      6865645F 
 2948      73696465 
 2948      00
 2949              	.LASF47:
 2950 001d 73747261 		.ascii	"straight_complete\000"
 2950      69676874 
 2950      5F636F6D 
 2950      706C6574 
 2950      6500
 2951              	.LASF32:
 2952 002f 56345F70 		.ascii	"V4_pp\000"
 2952      7000
 2953              	.LASF14:
 2954 0035 696E7438 		.ascii	"int8_t\000"
 2954      5F7400
 2955              	.LASF4:
 2956 003c 73686F72 		.ascii	"short int\000"
 2956      7420696E 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 62


 2956      7400
 2957              	.LASF48:
 2958 0046 7475726E 		.ascii	"turn_complete\000"
 2958      5F636F6D 
 2958      706C6574 
 2958      6500
 2959              	.LASF23:
 2960 0054 73697A65 		.ascii	"sizetype\000"
 2960      74797065 
 2960      00
 2961              	.LASF64:
 2962 005d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2962      43313120 
 2962      352E342E 
 2962      31203230 
 2962      31363036 
 2963 0090 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2963      20726576 
 2963      6973696F 
 2963      6E203233 
 2963      37373135 
 2964 00c3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2964      66756E63 
 2964      74696F6E 
 2964      2D736563 
 2964      74696F6E 
 2965              	.LASF69:
 2966 00eb 6D61696E 		.ascii	"main\000"
 2966      00
 2967              	.LASF5:
 2968 00f0 5F5F7569 		.ascii	"__uint16_t\000"
 2968      6E743136 
 2968      5F7400
 2969              	.LASF18:
 2970 00fb 696E7436 		.ascii	"int64_t\000"
 2970      345F7400 
 2971              	.LASF15:
 2972 0103 75696E74 		.ascii	"uint8_t\000"
 2972      385F7400 
 2973              	.LASF27:
 2974 010b 72617732 		.ascii	"raw2\000"
 2974      00
 2975              	.LASF30:
 2976 0110 646D6D5F 		.ascii	"dmm_abs\000"
 2976      61627300 
 2977              	.LASF33:
 2978 0118 56355F70 		.ascii	"V5_pp\000"
 2978      7000
 2979              	.LASF19:
 2980 011e 666C6F61 		.ascii	"float\000"
 2980      7400
 2981              	.LASF11:
 2982 0124 6C6F6E67 		.ascii	"long long int\000"
 2982      206C6F6E 
 2982      6720696E 
 2982      7400
 2983              	.LASF21:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 63


 2984 0132 63686172 		.ascii	"char\000"
 2984      00
 2985              	.LASF25:
 2986 0137 70695F74 		.ascii	"pi_t\000"
 2986      00
 2987              	.LASF8:
 2988 013c 6C6F6E67 		.ascii	"long int\000"
 2988      20696E74 
 2988      00
 2989              	.LASF10:
 2990 0145 5F5F696E 		.ascii	"__int64_t\000"
 2990      7436345F 
 2990      7400
 2991              	.LASF66:
 2992 014f 433A5C55 		.ascii	"C:\\Users\\yram171\\Downloads\\latest\\Compsys-301-"
 2992      73657273 
 2992      5C797261 
 2992      6D313731 
 2992      5C446F77 
 2993 017d 434F4445 		.ascii	"CODE\\YASH Code\\CS301_Class.cydsn\000"
 2993      5C594153 
 2993      4820436F 
 2993      64655C43 
 2993      53333031 
 2994              	.LASF1:
 2995 019e 5F5F7569 		.ascii	"__uint8_t\000"
 2995      6E74385F 
 2995      7400
 2996              	.LASF3:
 2997 01a8 756E7369 		.ascii	"unsigned char\000"
 2997      676E6564 
 2997      20636861 
 2997      7200
 2998              	.LASF52:
 2999 01b6 73656E31 		.ascii	"sen1_on_line\000"
 2999      5F6F6E5F 
 2999      6C696E65 
 2999      00
 3000              	.LASF50:
 3001 01c3 66727569 		.ascii	"fruit_complete\000"
 3001      745F636F 
 3001      6D706C65 
 3001      746500
 3002              	.LASF26:
 3003 01d2 72617731 		.ascii	"raw1\000"
 3003      00
 3004              	.LASF22:
 3005 01d7 6C6F6E67 		.ascii	"long double\000"
 3005      20646F75 
 3005      626C6500 
 3006              	.LASF53:
 3007 01e3 73656E32 		.ascii	"sen2_on_line\000"
 3007      5F6F6E5F 
 3007      6C696E65 
 3007      00
 3008              	.LASF59:
 3009 01f0 675F7374 		.ascii	"g_stop_now\000"
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 64


 3009      6F705F6E 
 3009      6F7700
 3010              	.LASF63:
 3011 01fb 7475726E 		.ascii	"turn_cooldown_ticks\000"
 3011      5F636F6F 
 3011      6C646F77 
 3011      6E5F7469 
 3011      636B7300 
 3012              	.LASF54:
 3013 020f 73656E33 		.ascii	"sen3_on_line\000"
 3013      5F6F6E5F 
 3013      6C696E65 
 3013      00
 3014              	.LASF2:
 3015 021c 7369676E 		.ascii	"signed char\000"
 3015      65642063 
 3015      68617200 
 3016              	.LASF12:
 3017 0228 6C6F6E67 		.ascii	"long long unsigned int\000"
 3017      206C6F6E 
 3017      6720756E 
 3017      7369676E 
 3017      65642069 
 3018              	.LASF55:
 3019 023f 73656E34 		.ascii	"sen4_on_line\000"
 3019      5F6F6E5F 
 3019      6C696E65 
 3019      00
 3020              	.LASF13:
 3021 024c 756E7369 		.ascii	"unsigned int\000"
 3021      676E6564 
 3021      20696E74 
 3021      00
 3022              	.LASF34:
 3023 0259 56365F70 		.ascii	"V6_pp\000"
 3023      7000
 3024              	.LASF16:
 3025 025f 75696E74 		.ascii	"uint16_t\000"
 3025      31365F74 
 3025      00
 3026              	.LASF56:
 3027 0268 73656E35 		.ascii	"sen5_on_line\000"
 3027      5F6F6E5F 
 3027      6C696E65 
 3027      00
 3028              	.LASF36:
 3029 0275 5F636C61 		.ascii	"_clampf\000"
 3029      6D706600 
 3030              	.LASF45:
 3031 027d 434D445F 		.ascii	"CMD_STATES\000"
 3031      53544154 
 3031      455300
 3032              	.LASF6:
 3033 0288 73686F72 		.ascii	"short unsigned int\000"
 3033      7420756E 
 3033      7369676E 
 3033      65642069 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 65


 3033      6E7400
 3034              	.LASF57:
 3035 029b 73656E36 		.ascii	"sen6_on_line\000"
 3035      5F6F6E5F 
 3035      6C696E65 
 3035      00
 3036              	.LASF0:
 3037 02a8 5F5F696E 		.ascii	"__int8_t\000"
 3037      74385F74 
 3037      00
 3038              	.LASF67:
 3039 02b1 6973725F 		.ascii	"isr_qd_Handler\000"
 3039      71645F48 
 3039      616E646C 
 3039      657200
 3040              	.LASF44:
 3041 02c0 63656E74 		.ascii	"center_duty_est\000"
 3041      65725F64 
 3041      7574795F 
 3041      65737400 
 3042              	.LASF17:
 3043 02d0 696E7433 		.ascii	"int32_t\000"
 3043      325F7400 
 3044              	.LASF37:
 3045 02d8 70695F73 		.ascii	"pi_step\000"
 3045      74657000 
 3046              	.LASF51:
 3047 02e0 73746565 		.ascii	"steer\000"
 3047      7200
 3048              	.LASF43:
 3049 02e6 5F426F6F 		.ascii	"_Bool\000"
 3049      6C00
 3050              	.LASF31:
 3051 02ec 646D6D5F 		.ascii	"dmm_signed\000"
 3051      7369676E 
 3051      656400
 3052              	.LASF61:
 3053 02f7 6469725F 		.ascii	"dir_delay_ticks\000"
 3053      64656C61 
 3053      795F7469 
 3053      636B7300 
 3054              	.LASF39:
 3055 0307 695F6E65 		.ascii	"i_next\000"
 3055      787400
 3056              	.LASF65:
 3057 030e 6D61696E 		.ascii	"main.c\000"
 3057      2E6300
 3058              	.LASF9:
 3059 0315 6C6F6E67 		.ascii	"long unsigned int\000"
 3059      20756E73 
 3059      69676E65 
 3059      6420696E 
 3059      7400
 3060              	.LASF29:
 3061 0327 64617667 		.ascii	"davg_sign\000"
 3061      5F736967 
 3061      6E00
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccySRM71.s 			page 66


 3062              	.LASF68:
 3063 0331 6C696768 		.ascii	"light_sensors_update_and_maybe_request_turn\000"
 3063      745F7365 
 3063      6E736F72 
 3063      735F7570 
 3063      64617465 
 3064              	.LASF41:
 3065 035d 7361745F 		.ascii	"sat_hi\000"
 3065      686900
 3066              	.LASF24:
 3067 0364 745F6C6F 		.ascii	"t_loss\000"
 3067      737300
 3068              	.LASF7:
 3069 036b 5F5F696E 		.ascii	"__int32_t\000"
 3069      7433325F 
 3069      7400
 3070              	.LASF35:
 3071 0375 6E6F726D 		.ascii	"norm01_from_pp\000"
 3071      30315F66 
 3071      726F6D5F 
 3071      707000
 3072              	.LASF58:
 3073 0384 675F6469 		.ascii	"g_direction\000"
 3073      72656374 
 3073      696F6E00 
 3074              	.LASF42:
 3075 0390 7361745F 		.ascii	"sat_lo\000"
 3075      6C6F00
 3076              	.LASF20:
 3077 0397 646F7562 		.ascii	"double\000"
 3077      6C6500
 3078              	.LASF60:
 3079 039e 675F6469 		.ascii	"g_dist_mm\000"
 3079      73745F6D 
 3079      6D00
 3080              	.LASF70:
 3081 03a8 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3081      52784275 
 3081      66666572 
 3081      00
 3082              	.LASF46:
 3083 03b5 74617267 		.ascii	"target_dist\000"
 3083      65745F64 
 3083      69737400 
 3084              	.LASF28:
 3085 03c1 64617667 		.ascii	"davg_abs\000"
 3085      5F616273 
 3085      00
 3086              	.LASF49:
 3087 03ca 75547572 		.ascii	"uTurn_complete\000"
 3087      6E5F636F 
 3087      6D706C65 
 3087      746500
 3088              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

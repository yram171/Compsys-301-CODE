ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	sen1_on_line:
  21 0000 00       		.space	1
  22              	sen2_on_line:
  23 0001 00       		.space	1
  24              	sen3_on_line:
  25 0002 00       		.space	1
  26              	sen4_on_line:
  27 0003 00       		.space	1
  28              	sen5_on_line:
  29 0004 00       		.space	1
  30              	sen6_on_line:
  31 0005 00       		.space	1
  32              	g_direction:
  33 0006 00       		.space	1
  34              	g_stop_now:
  35 0007 00       		.space	1
  36              		.align	2
  37              	g_dist_mm:
  38 0008 00000000 		.space	4
  39              		.align	1
  40              	dir_delay_ticks:
  41 000c 0000     		.space	2
  42              	dir_latched_side:
  43 000e 00       		.space	1
  44 000f 00       		.align	1
  45              	turn_cooldown_ticks:
  46 0010 0000     		.space	2
  47              		.global	__aeabi_ldivmod
  48              		.section	.text.isr_qd_Handler,"ax",%progbits
  49              		.align	2
  50              		.global	isr_qd_Handler
  51              		.thumb
  52              		.thumb_func
  53              		.type	isr_qd_Handler, %function
  54              	isr_qd_Handler:
  55              	.LFB64:
  56              		.file 1 "main.c"
   1:main.c        **** /* ========================= main.c (with PI steering + turn-call delay) =========================
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 2


   2:main.c        ****  * - Keeps straight-line PI active during a short delay after g_direction flips (Option A)
   3:main.c        ****  * - Then calls Directions_Handle(&g_direction) to run the maneuver
   4:main.c        ****  * - Resets PI integrator after the turn completes
   5:main.c        ****  * ============================================================================================== *
   6:main.c        **** 
   7:main.c        **** #include <project.h>
   8:main.c        **** #include <stdint.h>
   9:main.c        **** #include <stdbool.h>
  10:main.c        **** 
  11:main.c        **** #include <sensors.h>     // Sensor_ComputePeakToPeak()
  12:main.c        **** #include "motor_s.h"     // set_motors_*, motor_enable
  13:main.c        **** #include "directions.h"  // Directions_* turning module
  14:main.c        **** 
  15:main.c        **** /* ===== Loop pacing (kept) ===== */
  16:main.c        **** #define LOOP_DT_MS               8u
  17:main.c        **** #define DT_S   ( (float)LOOP_DT_MS / 1000.0f )
  18:main.c        **** 
  19:main.c        **** /* ===== Cruise speed / distance target (kept) ===== */
  20:main.c        **** #define VMAX_CONST_MM_S        1000
  21:main.c        **** #define SPEED_FRAC_PERCENT      25
  22:main.c        **** #define V_CRUISE_MM_S  ((int32_t)VMAX_CONST_MM_S * (int32_t)SPEED_FRAC_PERCENT / 100)
  23:main.c        **** #define TARGET_DIST_MM        20000
  24:main.c        **** 
  25:main.c        **** /* ===== Encoder â†’ mm conversion (kept) ===== */
  26:main.c        **** #define QD_SAMPLE_MS             5u
  27:main.c        **** #define CPR_OUTSHAFT           228u
  28:main.c        **** #define R_MM                    34
  29:main.c        **** #define PI_X1000              3142
  30:main.c        **** #define PERIM_MM_X1000   ((int32_t)(2 * PI_X1000 * R_MM))
  31:main.c        **** #define MM_PER_COUNT_X1000     ( PERIM_MM_X1000 / CPR_OUTSHAFT )
  32:main.c        **** #define CALIB_DIST_X1000     1500
  33:main.c        **** #define APPLY_CALIB_DIST(x)  ( (int32_t)(((int64_t)(x) * CALIB_DIST_X1000 + 500)/1000) )
  34:main.c        **** 
  35:main.c        **** /* ===== S1/S2 relaxed detection (kept) ===== */
  36:main.c        **** #define S_MINC_COUNTS            10
  37:main.c        **** #define S_MAXC_COUNTS           100
  38:main.c        **** #define S_HYST_COUNTS           16u
  39:main.c        **** 
  40:main.c        **** /* ===== Turn request filtering (kept) ===== */
  41:main.c        **** #define TURN_DEBOUNCE_TICKS       5u
  42:main.c        **** #define CLEAR_ARM_TICKS           4u
  43:main.c        **** 
  44:main.c        **** #define DIR_CALL_DELAY_MS        (100)  /* wait ~200 ms before starting the maneuver */
  45:main.c        **** #define DIR_CALL_DELAY_TICKS     ((DIR_CALL_DELAY_MS + LOOP_DT_MS - 1) / LOOP_DT_MS)
  46:main.c        **** 
  47:main.c        **** 
  48:main.c        **** // Cooldown after turn to ignore intersection sensors V1 & V2
  49:main.c        **** #define TURN_COOLDOWN_MS (400)
  50:main.c        **** #define TURN_COOLDOWN_TICKS ((TURN_COOLDOWN_MS + LOOP_DT_MS - 1) / LOOP_DT_MS
  51:main.c        **** 
  52:main.c        **** 
  53:main.c        **** 
  54:main.c        **** /* ===== Local sensor flags (used for S1/S2 edge) ===== */
  55:main.c        **** static uint8_t sen1_on_line=0, sen2_on_line=0, sen3_on_line=0;
  56:main.c        **** static uint8_t sen4_on_line=0, sen5_on_line=0, sen6_on_line=0;
  57:main.c        **** 
  58:main.c        **** /* ===== Global state (kept) ===== */
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 3


  59:main.c        **** static volatile uint8_t g_direction = 0;   /* 0=straight, 1=left, 2=right */
  60:main.c        **** static volatile uint8_t g_stop_now  = 0;
  61:main.c        **** static volatile int32_t g_dist_mm   = 0;
  62:main.c        **** 
  63:main.c        **** /* ===== Option A state ===== */
  64:main.c        **** static uint16_t dir_delay_ticks = 0;        /* countdown in loop ticks */
  65:main.c        **** static uint8_t  dir_latched_side = 0;       /* remembers 1 or 2 while waiting */
  66:main.c        **** 
  67:main.c        **** 
  68:main.c        **** static uint16_t turn_cooldown_ticks = 0;
  69:main.c        **** 
  70:main.c        **** 
  71:main.c        **** /* ------------------------------- 5 ms Timer ISR: accumulate distance (kept) ---------------------
  72:main.c        **** CY_ISR(isr_qd_Handler)
  73:main.c        **** {
  57              		.loc 1 73 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 72
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  62              		.cfi_def_cfa_offset 36
  63              		.cfi_offset 4, -36
  64              		.cfi_offset 5, -32
  65              		.cfi_offset 6, -28
  66              		.cfi_offset 7, -24
  67              		.cfi_offset 8, -20
  68              		.cfi_offset 9, -16
  69              		.cfi_offset 10, -12
  70              		.cfi_offset 11, -8
  71              		.cfi_offset 14, -4
  72 0004 93B0     		sub	sp, sp, #76
  73              		.cfi_def_cfa_offset 112
  74 0006 00AF     		add	r7, sp, #0
  75              		.cfi_def_cfa_register 7
  74:main.c        ****     int32_t raw1 = QuadDec_M1_GetCounter();  QuadDec_M1_SetCounter(0);
  76              		.loc 1 74 0
  77 0008 FFF7FEFF 		bl	QuadDec_M1_GetCounter
  78 000c 0346     		mov	r3, r0
  79 000e 7B64     		str	r3, [r7, #68]
  80 0010 0020     		movs	r0, #0
  81 0012 FFF7FEFF 		bl	QuadDec_M1_SetCounter
  75:main.c        ****     int32_t raw2 = QuadDec_M2_GetCounter();  QuadDec_M2_SetCounter(0);
  82              		.loc 1 75 0
  83 0016 FFF7FEFF 		bl	QuadDec_M2_GetCounter
  84 001a 0346     		mov	r3, r0
  85 001c 3B64     		str	r3, [r7, #64]
  86 001e 0020     		movs	r0, #0
  87 0020 FFF7FEFF 		bl	QuadDec_M2_SetCounter
  76:main.c        **** 
  77:main.c        ****     int32_t d1 = raw1, d2 = raw2;
  88              		.loc 1 77 0
  89 0024 7B6C     		ldr	r3, [r7, #68]
  90 0026 FB63     		str	r3, [r7, #60]
  91 0028 3B6C     		ldr	r3, [r7, #64]
  92 002a BB63     		str	r3, [r7, #56]
  78:main.c        ****     int32_t a1 = (d1 >= 0) ? d1 : -d1;
  93              		.loc 1 78 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 4


  94 002c FB6B     		ldr	r3, [r7, #60]
  95 002e 002B     		cmp	r3, #0
  96 0030 B8BF     		it	lt
  97 0032 5B42     		rsblt	r3, r3, #0
  98 0034 7B63     		str	r3, [r7, #52]
  79:main.c        ****     int32_t a2 = (d2 >= 0) ? d2 : -d2;
  99              		.loc 1 79 0
 100 0036 BB6B     		ldr	r3, [r7, #56]
 101 0038 002B     		cmp	r3, #0
 102 003a B8BF     		it	lt
 103 003c 5B42     		rsblt	r3, r3, #0
 104 003e 3B63     		str	r3, [r7, #48]
  80:main.c        ****     int32_t davg_abs  = (a1 + a2) / 2;
 105              		.loc 1 80 0
 106 0040 7A6B     		ldr	r2, [r7, #52]
 107 0042 3B6B     		ldr	r3, [r7, #48]
 108 0044 1344     		add	r3, r3, r2
 109 0046 DA0F     		lsrs	r2, r3, #31
 110 0048 1344     		add	r3, r3, r2
 111 004a 5B10     		asrs	r3, r3, #1
 112 004c FB62     		str	r3, [r7, #44]
  81:main.c        ****     int32_t davg_sign = ((d1 + d2) >= 0) ? +1 : -1;
 113              		.loc 1 81 0
 114 004e FA6B     		ldr	r2, [r7, #60]
 115 0050 BB6B     		ldr	r3, [r7, #56]
 116 0052 1344     		add	r3, r3, r2
 117 0054 002B     		cmp	r3, #0
 118 0056 01DB     		blt	.L2
 119              		.loc 1 81 0 is_stmt 0 discriminator 1
 120 0058 0123     		movs	r3, #1
 121 005a 01E0     		b	.L3
 122              	.L2:
 123              		.loc 1 81 0 discriminator 2
 124 005c 4FF0FF33 		mov	r3, #-1
 125              	.L3:
 126              		.loc 1 81 0 discriminator 4
 127 0060 BB62     		str	r3, [r7, #40]
  82:main.c        **** 
  83:main.c        ****     int64_t num_abs = (int64_t)davg_abs * MM_PER_COUNT_X1000;
 128              		.loc 1 83 0 is_stmt 1 discriminator 4
 129 0062 FB6A     		ldr	r3, [r7, #44]
 130 0064 1946     		mov	r1, r3
 131 0066 4FEAE172 		asr	r2, r1, #31
 132 006a 0B46     		mov	r3, r1
 133 006c 1446     		mov	r4, r2
 134 006e DB18     		adds	r3, r3, r3
 135 0070 44EB0404 		adc	r4, r4, r4
 136 0074 5B18     		adds	r3, r3, r1
 137 0076 44EB0204 		adc	r4, r4, r2
 138 007a 4FEA8409 		lsl	r9, r4, #2
 139 007e 49EA9379 		orr	r9, r9, r3, lsr #30
 140 0082 4FEA8308 		lsl	r8, r3, #2
 141 0086 4346     		mov	r3, r8
 142 0088 4C46     		mov	r4, r9
 143 008a 5B18     		adds	r3, r3, r1
 144 008c 44EB0204 		adc	r4, r4, r2
 145 0090 4FEAC40B 		lsl	fp, r4, #3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 5


 146 0094 4BEA537B 		orr	fp, fp, r3, lsr #29
 147 0098 4FEAC30A 		lsl	r10, r3, #3
 148 009c 13EB0A03 		adds	r3, r3, r10
 149 00a0 44EB0B04 		adc	r4, r4, fp
 150 00a4 E000     		lsls	r0, r4, #3
 151 00a6 7861     		str	r0, [r7, #20]
 152 00a8 7869     		ldr	r0, [r7, #20]
 153 00aa 40EA5370 		orr	r0, r0, r3, lsr #29
 154 00ae 7861     		str	r0, [r7, #20]
 155 00b0 DB00     		lsls	r3, r3, #3
 156 00b2 3B61     		str	r3, [r7, #16]
 157 00b4 D7E90434 		ldrd	r3, [r7, #16]
 158 00b8 5B18     		adds	r3, r3, r1
 159 00ba 44EB0204 		adc	r4, r4, r2
 160 00be C7E90834 		strd	r3, [r7, #32]
  84:main.c        ****     int32_t dmm_abs = (int32_t)((num_abs + 500) / 1000);
 161              		.loc 1 84 0 discriminator 4
 162 00c2 D7E90834 		ldrd	r3, [r7, #32]
 163 00c6 13F5FA70 		adds	r0, r3, #500
 164 00ca 44F10001 		adc	r1, r4, #0
 165 00ce 4FF47A72 		mov	r2, #1000
 166 00d2 4FF00003 		mov	r3, #0
 167 00d6 FFF7FEFF 		bl	__aeabi_ldivmod
 168 00da 0346     		mov	r3, r0
 169 00dc 0C46     		mov	r4, r1
 170 00de FB61     		str	r3, [r7, #28]
  85:main.c        ****     int32_t dmm_signed = APPLY_CALIB_DIST(dmm_abs) * davg_sign;
 171              		.loc 1 85 0 discriminator 4
 172 00e0 FB69     		ldr	r3, [r7, #28]
 173 00e2 1946     		mov	r1, r3
 174 00e4 4FEAE172 		asr	r2, r1, #31
 175 00e8 0B46     		mov	r3, r1
 176 00ea 1446     		mov	r4, r2
 177 00ec DB18     		adds	r3, r3, r3
 178 00ee 44EB0404 		adc	r4, r4, r4
 179 00f2 5B18     		adds	r3, r3, r1
 180 00f4 44EB0204 		adc	r4, r4, r2
 181 00f8 E000     		lsls	r0, r4, #3
 182 00fa F860     		str	r0, [r7, #12]
 183 00fc F868     		ldr	r0, [r7, #12]
 184 00fe 40EA5370 		orr	r0, r0, r3, lsr #29
 185 0102 F860     		str	r0, [r7, #12]
 186 0104 DB00     		lsls	r3, r3, #3
 187 0106 BB60     		str	r3, [r7, #8]
 188 0108 D7E90234 		ldrd	r3, [r7, #8]
 189 010c 5B18     		adds	r3, r3, r1
 190 010e 44EB0204 		adc	r4, r4, r2
 191 0112 2601     		lsls	r6, r4, #4
 192 0114 46EA1376 		orr	r6, r6, r3, lsr #28
 193 0118 1D01     		lsls	r5, r3, #4
 194 011a ED1A     		subs	r5, r5, r3
 195 011c 66EB0406 		sbc	r6, r6, r4
 196 0120 B300     		lsls	r3, r6, #2
 197 0122 7B60     		str	r3, [r7, #4]
 198 0124 7B68     		ldr	r3, [r7, #4]
 199 0126 43EA9573 		orr	r3, r3, r5, lsr #30
 200 012a 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 6


 201 012c AB00     		lsls	r3, r5, #2
 202 012e 3B60     		str	r3, [r7]
 203 0130 D7E90056 		ldrd	r5, [r7]
 204 0134 2B46     		mov	r3, r5
 205 0136 3446     		mov	r4, r6
 206 0138 13F5FA70 		adds	r0, r3, #500
 207 013c 44F10001 		adc	r1, r4, #0
 208 0140 4FF47A72 		mov	r2, #1000
 209 0144 4FF00003 		mov	r3, #0
 210 0148 FFF7FEFF 		bl	__aeabi_ldivmod
 211 014c 0346     		mov	r3, r0
 212 014e 0C46     		mov	r4, r1
 213 0150 1A46     		mov	r2, r3
 214 0152 BB6A     		ldr	r3, [r7, #40]
 215 0154 03FB02F3 		mul	r3, r3, r2
 216 0158 BB61     		str	r3, [r7, #24]
  86:main.c        **** 
  87:main.c        ****     g_dist_mm += dmm_signed;
 217              		.loc 1 87 0 discriminator 4
 218 015a 064B     		ldr	r3, .L4
 219 015c 1A68     		ldr	r2, [r3]
 220 015e BB69     		ldr	r3, [r7, #24]
 221 0160 1344     		add	r3, r3, r2
 222 0162 044A     		ldr	r2, .L4
 223 0164 1360     		str	r3, [r2]
  88:main.c        ****     (void)Timer_QD_ReadStatusRegister();     // clear TC
 224              		.loc 1 88 0 discriminator 4
 225 0166 FFF7FEFF 		bl	Timer_QD_ReadStatusRegister
  89:main.c        **** }
 226              		.loc 1 89 0 discriminator 4
 227 016a 00BF     		nop
 228 016c 4C37     		adds	r7, r7, #76
 229              		.cfi_def_cfa_offset 36
 230 016e BD46     		mov	sp, r7
 231              		.cfi_def_cfa_register 13
 232              		@ sp needed
 233 0170 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 234              	.L5:
 235              		.align	2
 236              	.L4:
 237 0174 08000000 		.word	g_dist_mm
 238              		.cfi_endproc
 239              	.LFE64:
 240              		.size	isr_qd_Handler, .-isr_qd_Handler
 241              		.global	__aeabi_i2f
 242              		.global	__aeabi_fdiv
 243              		.section	.text.norm01_from_pp,"ax",%progbits
 244              		.align	2
 245              		.thumb
 246              		.thumb_func
 247              		.type	norm01_from_pp, %function
 248              	norm01_from_pp:
 249              	.LFB65:
  90:main.c        **** 
  91:main.c        **** /* Utility: normalize peak-to-peak to [0..1] */
  92:main.c        **** static inline float norm01_from_pp(uint16_t pp)
  93:main.c        **** {
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 7


 250              		.loc 1 93 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 8
 253              		@ frame_needed = 1, uses_anonymous_args = 0
 254 0000 80B5     		push	{r7, lr}
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 7, -8
 257              		.cfi_offset 14, -4
 258 0002 82B0     		sub	sp, sp, #8
 259              		.cfi_def_cfa_offset 16
 260 0004 00AF     		add	r7, sp, #0
 261              		.cfi_def_cfa_register 7
 262 0006 0346     		mov	r3, r0
 263 0008 FB80     		strh	r3, [r7, #6]	@ movhi
  94:main.c        ****     if (pp <= S_MINC_COUNTS) return 0.0f;
 264              		.loc 1 94 0
 265 000a FB88     		ldrh	r3, [r7, #6]
 266 000c 0A2B     		cmp	r3, #10
 267 000e 02D8     		bhi	.L7
 268              		.loc 1 94 0 is_stmt 0 discriminator 1
 269 0010 4FF00003 		mov	r3, #0
 270 0014 10E0     		b	.L8
 271              	.L7:
  95:main.c        ****     if (pp >= S_MAXC_COUNTS) return 1.0f;
 272              		.loc 1 95 0 is_stmt 1
 273 0016 FB88     		ldrh	r3, [r7, #6]
 274 0018 632B     		cmp	r3, #99
 275 001a 02D9     		bls	.L9
 276              		.loc 1 95 0 is_stmt 0 discriminator 1
 277 001c 4FF07E53 		mov	r3, #1065353216
 278 0020 0AE0     		b	.L8
 279              	.L9:
  96:main.c        ****     return (float)(pp - S_MINC_COUNTS) / (float)(S_MAXC_COUNTS - S_MINC_COUNTS);
 280              		.loc 1 96 0 is_stmt 1
 281 0022 FB88     		ldrh	r3, [r7, #6]
 282 0024 0A3B     		subs	r3, r3, #10
 283 0026 1846     		mov	r0, r3
 284 0028 FFF7FEFF 		bl	__aeabi_i2f
 285 002c 0346     		mov	r3, r0
 286 002e 0449     		ldr	r1, .L10
 287 0030 1846     		mov	r0, r3
 288 0032 FFF7FEFF 		bl	__aeabi_fdiv
 289 0036 0346     		mov	r3, r0
 290              	.L8:
  97:main.c        **** }
 291              		.loc 1 97 0
 292 0038 1846     		mov	r0, r3
 293 003a 0837     		adds	r7, r7, #8
 294              		.cfi_def_cfa_offset 8
 295 003c BD46     		mov	sp, r7
 296              		.cfi_def_cfa_register 13
 297              		@ sp needed
 298 003e 80BD     		pop	{r7, pc}
 299              	.L11:
 300              		.align	2
 301              	.L10:
 302 0040 0000B442 		.word	1119092736
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 8


 303              		.cfi_endproc
 304              	.LFE65:
 305              		.size	norm01_from_pp, .-norm01_from_pp
 306              		.section	.text.light_sensors_update_and_maybe_request_turn,"ax",%progbits
 307              		.align	2
 308              		.thumb
 309              		.thumb_func
 310              		.type	light_sensors_update_and_maybe_request_turn, %function
 311              	light_sensors_update_and_maybe_request_turn:
 312              	.LFB66:
  98:main.c        **** 
  99:main.c        **** /* Read sensors and (maybe) request a turn based on S1 / S2 (kept) */
 100:main.c        **** static void light_sensors_update_and_maybe_request_turn(uint16_t* V4_pp, uint16_t* V5_pp, uint16_t*
 101:main.c        **** {
 313              		.loc 1 101 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 32
 316              		@ frame_needed = 1, uses_anonymous_args = 0
 317 0000 80B5     		push	{r7, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 7, -8
 320              		.cfi_offset 14, -4
 321 0002 88B0     		sub	sp, sp, #32
 322              		.cfi_def_cfa_offset 40
 323 0004 00AF     		add	r7, sp, #0
 324              		.cfi_def_cfa_register 7
 325 0006 F860     		str	r0, [r7, #12]
 326 0008 B960     		str	r1, [r7, #8]
 327 000a 7A60     		str	r2, [r7, #4]
 102:main.c        ****     uint16_t V1 = Sensor_ComputePeakToPeak(0);
 328              		.loc 1 102 0
 329 000c 0020     		movs	r0, #0
 330 000e FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 331 0012 0346     		mov	r3, r0
 332 0014 FB83     		strh	r3, [r7, #30]	@ movhi
 103:main.c        ****     uint16_t V2 = Sensor_ComputePeakToPeak(1);
 333              		.loc 1 103 0
 334 0016 0120     		movs	r0, #1
 335 0018 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 336 001c 0346     		mov	r3, r0
 337 001e BB83     		strh	r3, [r7, #28]	@ movhi
 104:main.c        ****     uint16_t V3 = Sensor_ComputePeakToPeak(2);
 338              		.loc 1 104 0
 339 0020 0220     		movs	r0, #2
 340 0022 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 341 0026 0346     		mov	r3, r0
 342 0028 7B83     		strh	r3, [r7, #26]	@ movhi
 105:main.c        ****     uint16_t V4 = Sensor_ComputePeakToPeak(3);
 343              		.loc 1 105 0
 344 002a 0320     		movs	r0, #3
 345 002c FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 346 0030 0346     		mov	r3, r0
 347 0032 3B83     		strh	r3, [r7, #24]	@ movhi
 106:main.c        ****     uint16_t V5 = Sensor_ComputePeakToPeak(4);
 348              		.loc 1 106 0
 349 0034 0420     		movs	r0, #4
 350 0036 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 9


 351 003a 0346     		mov	r3, r0
 352 003c FB82     		strh	r3, [r7, #22]	@ movhi
 107:main.c        ****     uint16_t V6 = Sensor_ComputePeakToPeak(5);
 353              		.loc 1 107 0
 354 003e 0520     		movs	r0, #5
 355 0040 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 356 0044 0346     		mov	r3, r0
 357 0046 BB82     		strh	r3, [r7, #20]	@ movhi
 108:main.c        **** 
 109:main.c        ****     if (V4_pp) *V4_pp = V4;
 358              		.loc 1 109 0
 359 0048 FB68     		ldr	r3, [r7, #12]
 360 004a 002B     		cmp	r3, #0
 361 004c 02D0     		beq	.L13
 362              		.loc 1 109 0 is_stmt 0 discriminator 1
 363 004e FB68     		ldr	r3, [r7, #12]
 364 0050 3A8B     		ldrh	r2, [r7, #24]	@ movhi
 365 0052 1A80     		strh	r2, [r3]	@ movhi
 366              	.L13:
 110:main.c        ****     if (V5_pp) *V5_pp = V5;
 367              		.loc 1 110 0 is_stmt 1
 368 0054 BB68     		ldr	r3, [r7, #8]
 369 0056 002B     		cmp	r3, #0
 370 0058 02D0     		beq	.L14
 371              		.loc 1 110 0 is_stmt 0 discriminator 1
 372 005a BB68     		ldr	r3, [r7, #8]
 373 005c FA8A     		ldrh	r2, [r7, #22]	@ movhi
 374 005e 1A80     		strh	r2, [r3]	@ movhi
 375              	.L14:
 111:main.c        ****     if (V6_pp) *V6_pp = V6;
 376              		.loc 1 111 0 is_stmt 1
 377 0060 7B68     		ldr	r3, [r7, #4]
 378 0062 002B     		cmp	r3, #0
 379 0064 02D0     		beq	.L15
 380              		.loc 1 111 0 is_stmt 0 discriminator 1
 381 0066 7B68     		ldr	r3, [r7, #4]
 382 0068 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 383 006a 1A80     		strh	r2, [r3]	@ movhi
 384              	.L15:
 112:main.c        ****     
 113:main.c        ****     sen1_on_line = (V1 > 10 && V1 < 100) ? 1u : 0u;
 385              		.loc 1 113 0 is_stmt 1
 386 006c FB8B     		ldrh	r3, [r7, #30]
 387 006e 0A2B     		cmp	r3, #10
 388 0070 04D9     		bls	.L16
 389              		.loc 1 113 0 is_stmt 0 discriminator 1
 390 0072 FB8B     		ldrh	r3, [r7, #30]
 391 0074 632B     		cmp	r3, #99
 392 0076 01D8     		bhi	.L16
 393              		.loc 1 113 0 discriminator 3
 394 0078 0122     		movs	r2, #1
 395 007a 00E0     		b	.L17
 396              	.L16:
 397              		.loc 1 113 0 discriminator 4
 398 007c 0022     		movs	r2, #0
 399              	.L17:
 400              		.loc 1 113 0 discriminator 6
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 10


 401 007e 2A4B     		ldr	r3, .L31
 402 0080 1A70     		strb	r2, [r3]
 114:main.c        ****     sen2_on_line = (V2 > 10 && V2 < 100) ? 1u : 0u;
 403              		.loc 1 114 0 is_stmt 1 discriminator 6
 404 0082 BB8B     		ldrh	r3, [r7, #28]
 405 0084 0A2B     		cmp	r3, #10
 406 0086 04D9     		bls	.L18
 407              		.loc 1 114 0 is_stmt 0 discriminator 1
 408 0088 BB8B     		ldrh	r3, [r7, #28]
 409 008a 632B     		cmp	r3, #99
 410 008c 01D8     		bhi	.L18
 411              		.loc 1 114 0 discriminator 3
 412 008e 0122     		movs	r2, #1
 413 0090 00E0     		b	.L19
 414              	.L18:
 415              		.loc 1 114 0 discriminator 4
 416 0092 0022     		movs	r2, #0
 417              	.L19:
 418              		.loc 1 114 0 discriminator 6
 419 0094 254B     		ldr	r3, .L31+4
 420 0096 1A70     		strb	r2, [r3]
 115:main.c        ****     sen3_on_line = (V3 > 10 && V3 < 100) ? 1u : 0u;
 421              		.loc 1 115 0 is_stmt 1 discriminator 6
 422 0098 7B8B     		ldrh	r3, [r7, #26]
 423 009a 0A2B     		cmp	r3, #10
 424 009c 04D9     		bls	.L20
 425              		.loc 1 115 0 is_stmt 0 discriminator 1
 426 009e 7B8B     		ldrh	r3, [r7, #26]
 427 00a0 632B     		cmp	r3, #99
 428 00a2 01D8     		bhi	.L20
 429              		.loc 1 115 0 discriminator 3
 430 00a4 0122     		movs	r2, #1
 431 00a6 00E0     		b	.L21
 432              	.L20:
 433              		.loc 1 115 0 discriminator 4
 434 00a8 0022     		movs	r2, #0
 435              	.L21:
 436              		.loc 1 115 0 discriminator 6
 437 00aa 214B     		ldr	r3, .L31+8
 438 00ac 1A70     		strb	r2, [r3]
 116:main.c        ****     sen4_on_line = (V4 > 10 && V4 < 100) ? 1u : 0u;
 439              		.loc 1 116 0 is_stmt 1 discriminator 6
 440 00ae 3B8B     		ldrh	r3, [r7, #24]
 441 00b0 0A2B     		cmp	r3, #10
 442 00b2 04D9     		bls	.L22
 443              		.loc 1 116 0 is_stmt 0 discriminator 1
 444 00b4 3B8B     		ldrh	r3, [r7, #24]
 445 00b6 632B     		cmp	r3, #99
 446 00b8 01D8     		bhi	.L22
 447              		.loc 1 116 0 discriminator 3
 448 00ba 0122     		movs	r2, #1
 449 00bc 00E0     		b	.L23
 450              	.L22:
 451              		.loc 1 116 0 discriminator 4
 452 00be 0022     		movs	r2, #0
 453              	.L23:
 454              		.loc 1 116 0 discriminator 6
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 11


 455 00c0 1C4B     		ldr	r3, .L31+12
 456 00c2 1A70     		strb	r2, [r3]
 117:main.c        ****     sen5_on_line = (V5 > 10 && V5 < 100) ? 1u : 0u;
 457              		.loc 1 117 0 is_stmt 1 discriminator 6
 458 00c4 FB8A     		ldrh	r3, [r7, #22]
 459 00c6 0A2B     		cmp	r3, #10
 460 00c8 04D9     		bls	.L24
 461              		.loc 1 117 0 is_stmt 0 discriminator 1
 462 00ca FB8A     		ldrh	r3, [r7, #22]
 463 00cc 632B     		cmp	r3, #99
 464 00ce 01D8     		bhi	.L24
 465              		.loc 1 117 0 discriminator 3
 466 00d0 0122     		movs	r2, #1
 467 00d2 00E0     		b	.L25
 468              	.L24:
 469              		.loc 1 117 0 discriminator 4
 470 00d4 0022     		movs	r2, #0
 471              	.L25:
 472              		.loc 1 117 0 discriminator 6
 473 00d6 184B     		ldr	r3, .L31+16
 474 00d8 1A70     		strb	r2, [r3]
 118:main.c        ****     sen6_on_line = (V6 > 10 && V6 < 100) ? 1u : 0u;
 475              		.loc 1 118 0 is_stmt 1 discriminator 6
 476 00da BB8A     		ldrh	r3, [r7, #20]
 477 00dc 0A2B     		cmp	r3, #10
 478 00de 04D9     		bls	.L26
 479              		.loc 1 118 0 is_stmt 0 discriminator 1
 480 00e0 BB8A     		ldrh	r3, [r7, #20]
 481 00e2 632B     		cmp	r3, #99
 482 00e4 01D8     		bhi	.L26
 483              		.loc 1 118 0 discriminator 3
 484 00e6 0122     		movs	r2, #1
 485 00e8 00E0     		b	.L27
 486              	.L26:
 487              		.loc 1 118 0 discriminator 4
 488 00ea 0022     		movs	r2, #0
 489              	.L27:
 490              		.loc 1 118 0 discriminator 6
 491 00ec 134B     		ldr	r3, .L31+20
 492 00ee 1A70     		strb	r2, [r3]
 119:main.c        **** 
 120:main.c        ****     if (g_direction == 0u && turn_cooldown_ticks == 0u){
 493              		.loc 1 120 0 is_stmt 1 discriminator 6
 494 00f0 134B     		ldr	r3, .L31+24
 495 00f2 1B78     		ldrb	r3, [r3]
 496 00f4 DBB2     		uxtb	r3, r3
 497 00f6 002B     		cmp	r3, #0
 498 00f8 12D1     		bne	.L30
 499              		.loc 1 120 0 is_stmt 0 discriminator 1
 500 00fa 124B     		ldr	r3, .L31+28
 501 00fc 1B88     		ldrh	r3, [r3]
 502 00fe 002B     		cmp	r3, #0
 503 0100 0ED1     		bne	.L30
 121:main.c        ****         if (sen1_on_line){
 504              		.loc 1 121 0 is_stmt 1
 505 0102 094B     		ldr	r3, .L31
 506 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 12


 507 0106 002B     		cmp	r3, #0
 508 0108 03D0     		beq	.L29
 122:main.c        ****             g_direction = 1;  // LEFT turn
 509              		.loc 1 122 0
 510 010a 0D4B     		ldr	r3, .L31+24
 511 010c 0122     		movs	r2, #1
 512 010e 1A70     		strb	r2, [r3]
 123:main.c        ****         } else if (sen2_on_line){
 124:main.c        ****             g_direction = 2;  // RIGHT turn
 125:main.c        ****         }
 126:main.c        ****     }
 127:main.c        **** }
 513              		.loc 1 127 0
 514 0110 06E0     		b	.L30
 515              	.L29:
 123:main.c        ****         } else if (sen2_on_line){
 516              		.loc 1 123 0
 517 0112 064B     		ldr	r3, .L31+4
 518 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 519 0116 002B     		cmp	r3, #0
 520 0118 02D0     		beq	.L30
 124:main.c        ****         }
 521              		.loc 1 124 0
 522 011a 094B     		ldr	r3, .L31+24
 523 011c 0222     		movs	r2, #2
 524 011e 1A70     		strb	r2, [r3]
 525              	.L30:
 526              		.loc 1 127 0
 527 0120 00BF     		nop
 528 0122 2037     		adds	r7, r7, #32
 529              		.cfi_def_cfa_offset 8
 530 0124 BD46     		mov	sp, r7
 531              		.cfi_def_cfa_register 13
 532              		@ sp needed
 533 0126 80BD     		pop	{r7, pc}
 534              	.L32:
 535              		.align	2
 536              	.L31:
 537 0128 00000000 		.word	sen1_on_line
 538 012c 01000000 		.word	sen2_on_line
 539 0130 02000000 		.word	sen3_on_line
 540 0134 03000000 		.word	sen4_on_line
 541 0138 04000000 		.word	sen5_on_line
 542 013c 05000000 		.word	sen6_on_line
 543 0140 06000000 		.word	g_direction
 544 0144 10000000 		.word	turn_cooldown_ticks
 545              		.cfi_endproc
 546              	.LFE66:
 547              		.size	light_sensors_update_and_maybe_request_turn, .-light_sensors_update_and_maybe_request_turn
 548              		.global	__aeabi_fcmplt
 549              		.global	__aeabi_fcmpgt
 550              		.section	.text._clampf,"ax",%progbits
 551              		.align	2
 552              		.thumb
 553              		.thumb_func
 554              		.type	_clampf, %function
 555              	_clampf:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 13


 556              	.LFB67:
 128:main.c        **** 
 129:main.c        **** /* ================= PI Controller (same as your current file) ================= */
 130:main.c        **** #define STEER_MAX        18
 131:main.c        **** #define KP               14.0f
 132:main.c        **** #define KI               3.0f
 133:main.c        **** #define INT_LIM          30.0f
 134:main.c        **** #define LOSS_TIMEOUT_T   0.25f
 135:main.c        **** 
 136:main.c        **** typedef struct { float i, u, t_loss; } pi_t;
 137:main.c        **** static inline float _clampf(float x, float lo, float hi){ return (x<lo?lo:(x>hi?hi:x)); }
 557              		.loc 1 137 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 16
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561 0000 80B5     		push	{r7, lr}
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 7, -8
 564              		.cfi_offset 14, -4
 565 0002 84B0     		sub	sp, sp, #16
 566              		.cfi_def_cfa_offset 24
 567 0004 00AF     		add	r7, sp, #0
 568              		.cfi_def_cfa_register 7
 569 0006 F860     		str	r0, [r7, #12]	@ float
 570 0008 B960     		str	r1, [r7, #8]	@ float
 571 000a 7A60     		str	r2, [r7, #4]	@ float
 572              		.loc 1 137 0
 573 000c B968     		ldr	r1, [r7, #8]	@ float
 574 000e F868     		ldr	r0, [r7, #12]	@ float
 575 0010 FFF7FEFF 		bl	__aeabi_fcmplt
 576 0014 0346     		mov	r3, r0
 577 0016 002B     		cmp	r3, #0
 578 0018 01D0     		beq	.L43
 579              		.loc 1 137 0 is_stmt 0 discriminator 1
 580 001a BB68     		ldr	r3, [r7, #8]	@ float
 581 001c 09E0     		b	.L40
 582              	.L43:
 583              		.loc 1 137 0 discriminator 2
 584 001e 7968     		ldr	r1, [r7, #4]	@ float
 585 0020 F868     		ldr	r0, [r7, #12]	@ float
 586 0022 FFF7FEFF 		bl	__aeabi_fcmpgt
 587 0026 0346     		mov	r3, r0
 588 0028 002B     		cmp	r3, #0
 589 002a 01D0     		beq	.L44
 590              		.loc 1 137 0 discriminator 4
 591 002c 7B68     		ldr	r3, [r7, #4]	@ float
 592 002e 00E0     		b	.L40
 593              	.L44:
 594              		.loc 1 137 0 discriminator 5
 595 0030 FB68     		ldr	r3, [r7, #12]	@ float
 596              	.L40:
 597              		.loc 1 137 0 discriminator 9
 598 0032 1846     		mov	r0, r3
 599 0034 1037     		adds	r7, r7, #16
 600              		.cfi_def_cfa_offset 8
 601 0036 BD46     		mov	sp, r7
 602              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 14


 603              		@ sp needed
 604 0038 80BD     		pop	{r7, pc}
 605              		.cfi_endproc
 606              	.LFE67:
 607              		.size	_clampf, .-_clampf
 608              		.global	__aeabi_fadd
 609              		.global	__aeabi_fmul
 610              		.global	__aeabi_fsub
 611              		.global	__aeabi_fcmpge
 612              		.global	__aeabi_f2iz
 613              		.global	__aeabi_fcmple
 614 003a 00BF     		.section	.text.pi_step,"ax",%progbits
 615              		.align	2
 616              		.thumb
 617              		.thumb_func
 618              		.type	pi_step, %function
 619              	pi_step:
 620              	.LFB68:
 138:main.c        **** 
 139:main.c        **** static int pi_step(pi_t* pi, uint16_t V4_pp, uint16_t V5_pp, uint16_t V6_pp)
 140:main.c        **** {
 621              		.loc 1 140 0 is_stmt 1
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 64
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625 0000 90B5     		push	{r4, r7, lr}
 626              		.cfi_def_cfa_offset 12
 627              		.cfi_offset 4, -12
 628              		.cfi_offset 7, -8
 629              		.cfi_offset 14, -4
 630 0002 91B0     		sub	sp, sp, #68
 631              		.cfi_def_cfa_offset 80
 632 0004 00AF     		add	r7, sp, #0
 633              		.cfi_def_cfa_register 7
 634 0006 F860     		str	r0, [r7, #12]
 635 0008 0846     		mov	r0, r1
 636 000a 1146     		mov	r1, r2
 637 000c 1A46     		mov	r2, r3
 638 000e 0346     		mov	r3, r0	@ movhi
 639 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 640 0012 0B46     		mov	r3, r1	@ movhi
 641 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 642 0016 1346     		mov	r3, r2	@ movhi
 643 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 141:main.c        ****     float c4 = norm01_from_pp(V4_pp);
 644              		.loc 1 141 0
 645 001a 7B89     		ldrh	r3, [r7, #10]
 646 001c 1846     		mov	r0, r3
 647 001e FFF7FEFF 		bl	norm01_from_pp
 648 0022 B863     		str	r0, [r7, #56]	@ float
 142:main.c        ****     float c5 = norm01_from_pp(V5_pp);
 649              		.loc 1 142 0
 650 0024 3B89     		ldrh	r3, [r7, #8]
 651 0026 1846     		mov	r0, r3
 652 0028 FFF7FEFF 		bl	norm01_from_pp
 653 002c 7863     		str	r0, [r7, #52]	@ float
 143:main.c        ****     float c6 = norm01_from_pp(V6_pp);
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 15


 654              		.loc 1 143 0
 655 002e FB88     		ldrh	r3, [r7, #6]
 656 0030 1846     		mov	r0, r3
 657 0032 FFF7FEFF 		bl	norm01_from_pp
 658 0036 3863     		str	r0, [r7, #48]	@ float
 144:main.c        ****     float sum = c4 + c5 + c6;
 659              		.loc 1 144 0
 660 0038 796B     		ldr	r1, [r7, #52]	@ float
 661 003a B86B     		ldr	r0, [r7, #56]	@ float
 662 003c FFF7FEFF 		bl	__aeabi_fadd
 663 0040 0346     		mov	r3, r0
 664 0042 396B     		ldr	r1, [r7, #48]	@ float
 665 0044 1846     		mov	r0, r3
 666 0046 FFF7FEFF 		bl	__aeabi_fadd
 667 004a 0346     		mov	r3, r0
 668 004c FB62     		str	r3, [r7, #44]	@ float
 145:main.c        ****     bool valid = (sum > 0.08f);
 669              		.loc 1 145 0
 670 004e 0123     		movs	r3, #1
 671 0050 1C46     		mov	r4, r3
 672 0052 7749     		ldr	r1, .L65
 673 0054 F86A     		ldr	r0, [r7, #44]	@ float
 674 0056 FFF7FEFF 		bl	__aeabi_fcmpgt
 675 005a 0346     		mov	r3, r0
 676 005c 002B     		cmp	r3, #0
 677 005e 01D1     		bne	.L46
 678 0060 0023     		movs	r3, #0
 679 0062 1C46     		mov	r4, r3
 680              	.L46:
 681 0064 87F82B40 		strb	r4, [r7, #43]
 146:main.c        **** 
 147:main.c        ****     float pos = 0.0f;
 682              		.loc 1 147 0
 683 0068 4FF00003 		mov	r3, #0
 684 006c FB63     		str	r3, [r7, #60]	@ float
 148:main.c        ****     if (valid) pos = (-1.0f * c4 + 0.0f * c5 + 1.0f * c6) / sum;
 685              		.loc 1 148 0
 686 006e 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 687 0072 002B     		cmp	r3, #0
 688 0074 15D0     		beq	.L47
 689              		.loc 1 148 0 is_stmt 0 discriminator 1
 690 0076 4FF00001 		mov	r1, #0
 691 007a 786B     		ldr	r0, [r7, #52]	@ float
 692 007c FFF7FEFF 		bl	__aeabi_fmul
 693 0080 0346     		mov	r3, r0
 694 0082 B96B     		ldr	r1, [r7, #56]	@ float
 695 0084 1846     		mov	r0, r3
 696 0086 FFF7FEFF 		bl	__aeabi_fsub
 697 008a 0346     		mov	r3, r0
 698 008c 396B     		ldr	r1, [r7, #48]	@ float
 699 008e 1846     		mov	r0, r3
 700 0090 FFF7FEFF 		bl	__aeabi_fadd
 701 0094 0346     		mov	r3, r0
 702 0096 F96A     		ldr	r1, [r7, #44]	@ float
 703 0098 1846     		mov	r0, r3
 704 009a FFF7FEFF 		bl	__aeabi_fdiv
 705 009e 0346     		mov	r3, r0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 16


 706 00a0 FB63     		str	r3, [r7, #60]	@ float
 707              	.L47:
 149:main.c        **** 
 150:main.c        ****     float e = pos;
 708              		.loc 1 150 0 is_stmt 1
 709 00a2 FB6B     		ldr	r3, [r7, #60]	@ float
 710 00a4 7B62     		str	r3, [r7, #36]	@ float
 151:main.c        **** 
 152:main.c        ****     if (!valid) {
 711              		.loc 1 152 0
 712 00a6 97F82B30 		ldrb	r3, [r7, #43]
 713 00aa 83F00103 		eor	r3, r3, #1
 714 00ae DBB2     		uxtb	r3, r3
 715 00b0 002B     		cmp	r3, #0
 716 00b2 2AD0     		beq	.L48
 153:main.c        ****         pi->t_loss += DT_S;
 717              		.loc 1 153 0
 718 00b4 FB68     		ldr	r3, [r7, #12]
 719 00b6 9B68     		ldr	r3, [r3, #8]	@ float
 720 00b8 5E49     		ldr	r1, .L65+4
 721 00ba 1846     		mov	r0, r3
 722 00bc FFF7FEFF 		bl	__aeabi_fadd
 723 00c0 0346     		mov	r3, r0
 724 00c2 1A46     		mov	r2, r3
 725 00c4 FB68     		ldr	r3, [r7, #12]
 726 00c6 9A60     		str	r2, [r3, #8]	@ float
 154:main.c        ****         if (pi->t_loss >= LOSS_TIMEOUT_T) pi->i *= 0.92f;
 727              		.loc 1 154 0
 728 00c8 FB68     		ldr	r3, [r7, #12]
 729 00ca 9B68     		ldr	r3, [r3, #8]	@ float
 730 00cc 4FF07A51 		mov	r1, #1048576000
 731 00d0 1846     		mov	r0, r3
 732 00d2 FFF7FEFF 		bl	__aeabi_fcmpge
 733 00d6 0346     		mov	r3, r0
 734 00d8 002B     		cmp	r3, #0
 735 00da 09D0     		beq	.L49
 736              		.loc 1 154 0 is_stmt 0 discriminator 1
 737 00dc FB68     		ldr	r3, [r7, #12]
 738 00de 1B68     		ldr	r3, [r3]	@ float
 739 00e0 5549     		ldr	r1, .L65+8
 740 00e2 1846     		mov	r0, r3
 741 00e4 FFF7FEFF 		bl	__aeabi_fmul
 742 00e8 0346     		mov	r3, r0
 743 00ea 1A46     		mov	r2, r3
 744 00ec FB68     		ldr	r3, [r7, #12]
 745 00ee 1A60     		str	r2, [r3]	@ float
 746              	.L49:
 155:main.c        ****         return (int)_clampf(pi->u, -(float)STEER_MAX, (float)STEER_MAX);
 747              		.loc 1 155 0 is_stmt 1
 748 00f0 FB68     		ldr	r3, [r7, #12]
 749 00f2 5B68     		ldr	r3, [r3, #4]	@ float
 750 00f4 514A     		ldr	r2, .L65+12
 751 00f6 5249     		ldr	r1, .L65+16
 752 00f8 1846     		mov	r0, r3
 753 00fa FFF7FEFF 		bl	_clampf
 754 00fe 0346     		mov	r3, r0
 755 0100 1846     		mov	r0, r3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 17


 756 0102 FFF7FEFF 		bl	__aeabi_f2iz
 757 0106 0346     		mov	r3, r0
 758 0108 8EE0     		b	.L51
 759              	.L48:
 156:main.c        ****     }
 157:main.c        ****     pi->t_loss = 0.0f;
 760              		.loc 1 157 0
 761 010a FB68     		ldr	r3, [r7, #12]
 762 010c 4FF00002 		mov	r2, #0
 763 0110 9A60     		str	r2, [r3, #8]	@ float
 158:main.c        **** 
 159:main.c        ****     float i_next = _clampf(pi->i + e * DT_S, -INT_LIM, +INT_LIM);
 764              		.loc 1 159 0
 765 0112 FB68     		ldr	r3, [r7, #12]
 766 0114 1C68     		ldr	r4, [r3]	@ float
 767 0116 4749     		ldr	r1, .L65+4
 768 0118 786A     		ldr	r0, [r7, #36]	@ float
 769 011a FFF7FEFF 		bl	__aeabi_fmul
 770 011e 0346     		mov	r3, r0
 771 0120 1946     		mov	r1, r3
 772 0122 2046     		mov	r0, r4
 773 0124 FFF7FEFF 		bl	__aeabi_fadd
 774 0128 0346     		mov	r3, r0
 775 012a 464A     		ldr	r2, .L65+20
 776 012c 4649     		ldr	r1, .L65+24
 777 012e 1846     		mov	r0, r3
 778 0130 FFF7FEFF 		bl	_clampf
 779 0134 3862     		str	r0, [r7, #32]	@ float
 160:main.c        ****     float u_raw  = KP * e + KI * i_next;
 780              		.loc 1 160 0
 781 0136 4549     		ldr	r1, .L65+28
 782 0138 786A     		ldr	r0, [r7, #36]	@ float
 783 013a FFF7FEFF 		bl	__aeabi_fmul
 784 013e 0346     		mov	r3, r0
 785 0140 1C46     		mov	r4, r3
 786 0142 4349     		ldr	r1, .L65+32
 787 0144 386A     		ldr	r0, [r7, #32]	@ float
 788 0146 FFF7FEFF 		bl	__aeabi_fmul
 789 014a 0346     		mov	r3, r0
 790 014c 1946     		mov	r1, r3
 791 014e 2046     		mov	r0, r4
 792 0150 FFF7FEFF 		bl	__aeabi_fadd
 793 0154 0346     		mov	r3, r0
 794 0156 FB61     		str	r3, [r7, #28]	@ float
 161:main.c        ****     float u      = _clampf(u_raw, -(float)STEER_MAX, (float)STEER_MAX);
 795              		.loc 1 161 0
 796 0158 384A     		ldr	r2, .L65+12
 797 015a 3949     		ldr	r1, .L65+16
 798 015c F869     		ldr	r0, [r7, #28]	@ float
 799 015e FFF7FEFF 		bl	_clampf
 800 0162 B861     		str	r0, [r7, #24]	@ float
 162:main.c        **** 
 163:main.c        ****     bool sat_hi = (u >=  (float)STEER_MAX - 1e-3f);
 801              		.loc 1 163 0
 802 0164 0123     		movs	r3, #1
 803 0166 1C46     		mov	r4, r3
 804 0168 3A49     		ldr	r1, .L65+36
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 18


 805 016a B869     		ldr	r0, [r7, #24]	@ float
 806 016c FFF7FEFF 		bl	__aeabi_fcmpge
 807 0170 0346     		mov	r3, r0
 808 0172 002B     		cmp	r3, #0
 809 0174 01D1     		bne	.L52
 810 0176 0023     		movs	r3, #0
 811 0178 1C46     		mov	r4, r3
 812              	.L52:
 813 017a FC75     		strb	r4, [r7, #23]
 164:main.c        ****     bool sat_lo = (u <= -(float)STEER_MAX + 1e-3f);
 814              		.loc 1 164 0
 815 017c 0123     		movs	r3, #1
 816 017e 1C46     		mov	r4, r3
 817 0180 3549     		ldr	r1, .L65+40
 818 0182 B869     		ldr	r0, [r7, #24]	@ float
 819 0184 FFF7FEFF 		bl	__aeabi_fcmple
 820 0188 0346     		mov	r3, r0
 821 018a 002B     		cmp	r3, #0
 822 018c 01D1     		bne	.L53
 823 018e 0023     		movs	r3, #0
 824 0190 1C46     		mov	r4, r3
 825              	.L53:
 826 0192 BC75     		strb	r4, [r7, #22]
 165:main.c        **** 
 166:main.c        ****     if ((sat_hi && (KI * i_next > KI * pi->i)) ||
 827              		.loc 1 166 0
 828 0194 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 829 0196 002B     		cmp	r3, #0
 830 0198 13D0     		beq	.L54
 831              		.loc 1 166 0 is_stmt 0 discriminator 1
 832 019a 2D49     		ldr	r1, .L65+32
 833 019c 386A     		ldr	r0, [r7, #32]	@ float
 834 019e FFF7FEFF 		bl	__aeabi_fmul
 835 01a2 0346     		mov	r3, r0
 836 01a4 1C46     		mov	r4, r3
 837 01a6 FB68     		ldr	r3, [r7, #12]
 838 01a8 1B68     		ldr	r3, [r3]	@ float
 839 01aa 2949     		ldr	r1, .L65+32
 840 01ac 1846     		mov	r0, r3
 841 01ae FFF7FEFF 		bl	__aeabi_fmul
 842 01b2 0346     		mov	r3, r0
 843 01b4 1946     		mov	r1, r3
 844 01b6 2046     		mov	r0, r4
 845 01b8 FFF7FEFF 		bl	__aeabi_fcmpgt
 846 01bc 0346     		mov	r3, r0
 847 01be 002B     		cmp	r3, #0
 848 01c0 19D1     		bne	.L56
 849              	.L54:
 850              		.loc 1 166 0 discriminator 3
 851 01c2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 852 01c4 002B     		cmp	r3, #0
 853 01c6 13D0     		beq	.L57
 167:main.c        ****         (sat_lo && (KI * i_next < KI * pi->i))) {
 854              		.loc 1 167 0 is_stmt 1
 855 01c8 2149     		ldr	r1, .L65+32
 856 01ca 386A     		ldr	r0, [r7, #32]	@ float
 857 01cc FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 19


 858 01d0 0346     		mov	r3, r0
 859 01d2 1C46     		mov	r4, r3
 860 01d4 FB68     		ldr	r3, [r7, #12]
 861 01d6 1B68     		ldr	r3, [r3]	@ float
 862 01d8 1D49     		ldr	r1, .L65+32
 863 01da 1846     		mov	r0, r3
 864 01dc FFF7FEFF 		bl	__aeabi_fmul
 865 01e0 0346     		mov	r3, r0
 866 01e2 1946     		mov	r1, r3
 867 01e4 2046     		mov	r0, r4
 868 01e6 FFF7FEFF 		bl	__aeabi_fcmplt
 869 01ea 0346     		mov	r3, r0
 870 01ec 002B     		cmp	r3, #0
 871 01ee 02D1     		bne	.L56
 872              	.L57:
 168:main.c        ****         /* donâ€™t integrate further into saturation */
 169:main.c        ****     } else {
 170:main.c        ****         pi->i = i_next;
 873              		.loc 1 170 0
 874 01f0 FB68     		ldr	r3, [r7, #12]
 875 01f2 3A6A     		ldr	r2, [r7, #32]	@ float
 876 01f4 1A60     		str	r2, [r3]	@ float
 877              	.L56:
 171:main.c        ****     }
 172:main.c        **** 
 173:main.c        ****     pi->u = u;
 878              		.loc 1 173 0
 879 01f6 FB68     		ldr	r3, [r7, #12]
 880 01f8 BA69     		ldr	r2, [r7, #24]	@ float
 881 01fa 5A60     		str	r2, [r3, #4]	@ float
 174:main.c        ****     return (int)(u + (u>=0?0.5f:-0.5f));
 882              		.loc 1 174 0
 883 01fc 4FF00001 		mov	r1, #0
 884 0200 B869     		ldr	r0, [r7, #24]	@ float
 885 0202 FFF7FEFF 		bl	__aeabi_fcmpge
 886 0206 0346     		mov	r3, r0
 887 0208 002B     		cmp	r3, #0
 888 020a 02D0     		beq	.L64
 889              		.loc 1 174 0 is_stmt 0 discriminator 1
 890 020c 4FF07C53 		mov	r3, #1056964608
 891 0210 01E0     		b	.L61
 892              	.L64:
 893              		.loc 1 174 0 discriminator 2
 894 0212 4FF03F43 		mov	r3, #-1090519040
 895              	.L61:
 896              		.loc 1 174 0 discriminator 4
 897 0216 B969     		ldr	r1, [r7, #24]	@ float
 898 0218 1846     		mov	r0, r3
 899 021a FFF7FEFF 		bl	__aeabi_fadd
 900 021e 0346     		mov	r3, r0
 901 0220 1846     		mov	r0, r3
 902 0222 FFF7FEFF 		bl	__aeabi_f2iz
 903 0226 0346     		mov	r3, r0
 904              	.L51:
 175:main.c        **** }
 905              		.loc 1 175 0 is_stmt 1
 906 0228 1846     		mov	r0, r3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 20


 907 022a 4437     		adds	r7, r7, #68
 908              		.cfi_def_cfa_offset 12
 909 022c BD46     		mov	sp, r7
 910              		.cfi_def_cfa_register 13
 911              		@ sp needed
 912 022e 90BD     		pop	{r4, r7, pc}
 913              	.L66:
 914              		.align	2
 915              	.L65:
 916 0230 0AD7A33D 		.word	1034147594
 917 0234 6F12033C 		.word	1006834287
 918 0238 1F856B3F 		.word	1064011039
 919 023c 00009041 		.word	1099956224
 920 0240 000090C1 		.word	-1047527424
 921 0244 0000F041 		.word	1106247680
 922 0248 0000F0C1 		.word	-1041235968
 923 024c 00006041 		.word	1096810496
 924 0250 00004040 		.word	1077936128
 925 0254 F4FD8F41 		.word	1099955700
 926 0258 F4FD8FC1 		.word	-1047527948
 927              		.cfi_endproc
 928              	.LFE68:
 929              		.size	pi_step, .-pi_step
 930              		.section	.text.main,"ax",%progbits
 931              		.align	2
 932              		.global	main
 933              		.thumb
 934              		.thumb_func
 935              		.type	main, %function
 936              	main:
 937              	.LFB69:
 176:main.c        **** 
 177:main.c        **** int main(void)
 178:main.c        **** {
 938              		.loc 1 178 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 32
 941              		@ frame_needed = 1, uses_anonymous_args = 0
 942 0000 80B5     		push	{r7, lr}
 943              		.cfi_def_cfa_offset 8
 944              		.cfi_offset 7, -8
 945              		.cfi_offset 14, -4
 946 0002 88B0     		sub	sp, sp, #32
 947              		.cfi_def_cfa_offset 40
 948 0004 00AF     		add	r7, sp, #0
 949              		.cfi_def_cfa_register 7
 179:main.c        ****     motor_enable(1u, 1u);
 950              		.loc 1 179 0
 951 0006 0121     		movs	r1, #1
 952 0008 0120     		movs	r0, #1
 953 000a FFF7FEFF 		bl	motor_enable
 180:main.c        ****     CyGlobalIntEnable;
 954              		.loc 1 180 0
 955              		.syntax unified
 956              	@ 180 "main.c" 1
 957 000e 62B6     		CPSIE   i
 958              	@ 0 "" 2
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 21


 181:main.c        **** 
 182:main.c        ****     /* ADC for sensors */
 183:main.c        ****     ADC_Start();
 959              		.loc 1 183 0
 960              		.thumb
 961              		.syntax unified
 962 0010 FFF7FEFF 		bl	ADC_Start
 184:main.c        ****     CyDelay(10);
 963              		.loc 1 184 0
 964 0014 0A20     		movs	r0, #10
 965 0016 FFF7FEFF 		bl	CyDelay
 185:main.c        **** 
 186:main.c        ****     /* Encoders + 5 ms tick (distance only) */
 187:main.c        ****     Clock_QENC_Start();
 966              		.loc 1 187 0
 967 001a FFF7FEFF 		bl	Clock_QENC_Start
 188:main.c        ****     QuadDec_M1_Start(); QuadDec_M2_Start();
 968              		.loc 1 188 0
 969 001e FFF7FEFF 		bl	QuadDec_M1_Start
 970 0022 FFF7FEFF 		bl	QuadDec_M2_Start
 189:main.c        ****     QuadDec_M1_SetCounter(0); QuadDec_M2_SetCounter(0);
 971              		.loc 1 189 0
 972 0026 0020     		movs	r0, #0
 973 0028 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 974 002c 0020     		movs	r0, #0
 975 002e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 190:main.c        ****     Clock_QD_Start();
 976              		.loc 1 190 0
 977 0032 FFF7FEFF 		bl	Clock_QD_Start
 191:main.c        ****     Timer_QD_Start();                  // 5 ms period in TopDesign
 978              		.loc 1 191 0
 979 0036 FFF7FEFF 		bl	Timer_QD_Start
 192:main.c        ****     isr_qd_StartEx(isr_qd_Handler);
 980              		.loc 1 192 0
 981 003a 6D48     		ldr	r0, .L84
 982 003c FFF7FEFF 		bl	isr_qd_StartEx
 193:main.c        **** 
 194:main.c        ****     /* PWM & motor driver */
 195:main.c        ****     Clock_PWM_Start();
 983              		.loc 1 195 0
 984 0040 FFF7FEFF 		bl	Clock_PWM_Start
 196:main.c        ****     PWM_1_Start(); PWM_2_Start();
 985              		.loc 1 196 0
 986 0044 FFF7FEFF 		bl	PWM_1_Start
 987 0048 FFF7FEFF 		bl	PWM_2_Start
 197:main.c        ****     PWM_1_WritePeriod(PWM_PERIOD);
 988              		.loc 1 197 0
 989 004c C820     		movs	r0, #200
 990 004e FFF7FEFF 		bl	PWM_1_WritePeriod
 198:main.c        ****     PWM_2_WritePeriod(PWM_PERIOD);
 991              		.loc 1 198 0
 992 0052 C820     		movs	r0, #200
 993 0054 FFF7FEFF 		bl	PWM_2_WritePeriod
 199:main.c        ****     set_motors_symmetric(0);
 994              		.loc 1 199 0
 995 0058 0020     		movs	r0, #0
 996 005a FFF7FEFF 		bl	set_motors_symmetric
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 22


 200:main.c        ****     motor_enable(0u, 0u);
 997              		.loc 1 200 0
 998 005e 0021     		movs	r1, #0
 999 0060 0020     		movs	r0, #0
 1000 0062 FFF7FEFF 		bl	motor_enable
 201:main.c        **** 
 202:main.c        ****     /* Directions module */
 203:main.c        ****     Directions_Init();
 1001              		.loc 1 203 0
 1002 0066 FFF7FEFF 		bl	Directions_Init
 204:main.c        ****     g_direction = 0u;
 1003              		.loc 1 204 0
 1004 006a 624B     		ldr	r3, .L84+4
 1005 006c 0022     		movs	r2, #0
 1006 006e 1A70     		strb	r2, [r3]
 205:main.c        **** 
 206:main.c        ****     /* Feed-forward cruise duty (kept) */
 207:main.c        ****     int center_duty_est = (int)((V_CRUISE_MM_S * 100) / VMAX_CONST_MM_S);
 1007              		.loc 1 207 0
 1008 0070 1923     		movs	r3, #25
 1009 0072 FB61     		str	r3, [r7, #28]
 208:main.c        ****     if (center_duty_est < 0) center_duty_est = 0;
 1010              		.loc 1 208 0
 1011 0074 FB69     		ldr	r3, [r7, #28]
 1012 0076 002B     		cmp	r3, #0
 1013 0078 01DA     		bge	.L68
 1014              		.loc 1 208 0 is_stmt 0 discriminator 1
 1015 007a 0023     		movs	r3, #0
 1016 007c FB61     		str	r3, [r7, #28]
 1017              	.L68:
 209:main.c        ****     if (center_duty_est > 100) center_duty_est = 100;
 1018              		.loc 1 209 0 is_stmt 1
 1019 007e FB69     		ldr	r3, [r7, #28]
 1020 0080 642B     		cmp	r3, #100
 1021 0082 01DD     		ble	.L69
 1022              		.loc 1 209 0 is_stmt 0 discriminator 1
 1023 0084 6423     		movs	r3, #100
 1024 0086 FB61     		str	r3, [r7, #28]
 1025              	.L69:
 210:main.c        **** 
 211:main.c        ****     /* PI state */
 212:main.c        ****     pi_t pi = { .i = 0.0f, .u = 0.0f, .t_loss = 0.0f };
 1026              		.loc 1 212 0 is_stmt 1
 1027 0088 4FF00003 		mov	r3, #0
 1028 008c FB60     		str	r3, [r7, #12]	@ float
 1029 008e 4FF00003 		mov	r3, #0
 1030 0092 3B61     		str	r3, [r7, #16]	@ float
 1031 0094 4FF00003 		mov	r3, #0
 1032 0098 7B61     		str	r3, [r7, #20]	@ float
 213:main.c        ****     
 214:main.c        ****     CyDelay(1000);  // So the motors don't jump
 1033              		.loc 1 214 0
 1034 009a 4FF47A70 		mov	r0, #1000
 1035 009e FFF7FEFF 		bl	CyDelay
 215:main.c        ****     set_motors_with_trim_and_steer(100,-10);
 1036              		.loc 1 215 0
 1037 00a2 6FF00901 		mvn	r1, #9
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 23


 1038 00a6 6420     		movs	r0, #100
 1039 00a8 FFF7FEFF 		bl	set_motors_with_trim_and_steer
 216:main.c        ****     CyDelay(40);
 1040              		.loc 1 216 0
 1041 00ac 2820     		movs	r0, #40
 1042 00ae FFF7FEFF 		bl	CyDelay
 217:main.c        ****     set_motors_symmetric(0); 
 1043              		.loc 1 217 0
 1044 00b2 0020     		movs	r0, #0
 1045 00b4 FFF7FEFF 		bl	set_motors_symmetric
 1046              	.L83:
 1047              	.LBB2:
 218:main.c        **** 
 219:main.c        ****     for(;;){
 220:main.c        ****         /* Distance stop */
 221:main.c        ****         g_stop_now = (g_dist_mm >= TARGET_DIST_MM) ? 1u : 0u;
 1048              		.loc 1 221 0
 1049 00b8 4F4B     		ldr	r3, .L84+8
 1050 00ba 1B68     		ldr	r3, [r3]
 1051 00bc 44F61F62 		movw	r2, #19999
 1052 00c0 9342     		cmp	r3, r2
 1053 00c2 01DD     		ble	.L70
 1054              		.loc 1 221 0 is_stmt 0 discriminator 1
 1055 00c4 0122     		movs	r2, #1
 1056 00c6 00E0     		b	.L71
 1057              	.L70:
 1058              		.loc 1 221 0 discriminator 2
 1059 00c8 0022     		movs	r2, #0
 1060              	.L71:
 1061              		.loc 1 221 0 discriminator 4
 1062 00ca 4C4B     		ldr	r3, .L84+12
 1063 00cc 1A70     		strb	r2, [r3]
 222:main.c        ****         if (g_stop_now) {
 1064              		.loc 1 222 0 is_stmt 1 discriminator 4
 1065 00ce 4B4B     		ldr	r3, .L84+12
 1066 00d0 1B78     		ldrb	r3, [r3]
 1067 00d2 DBB2     		uxtb	r3, r3
 1068 00d4 002B     		cmp	r3, #0
 1069 00d6 0DD0     		beq	.L72
 223:main.c        ****             set_motors_symmetric(0);
 1070              		.loc 1 223 0
 1071 00d8 0020     		movs	r0, #0
 1072 00da FFF7FEFF 		bl	set_motors_symmetric
 224:main.c        ****             motor_enable(1u, 1u);
 1073              		.loc 1 224 0
 1074 00de 0121     		movs	r1, #1
 1075 00e0 0120     		movs	r0, #1
 1076 00e2 FFF7FEFF 		bl	motor_enable
 225:main.c        ****             g_direction = 0u;
 1077              		.loc 1 225 0
 1078 00e6 434B     		ldr	r3, .L84+4
 1079 00e8 0022     		movs	r2, #0
 1080 00ea 1A70     		strb	r2, [r3]
 226:main.c        ****             CyDelay(LOOP_DT_MS);
 1081              		.loc 1 226 0
 1082 00ec 0820     		movs	r0, #8
 1083 00ee FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 24


 227:main.c        ****             continue;
 1084              		.loc 1 227 0
 1085 00f2 7BE0     		b	.L82
 1086              	.L72:
 228:main.c        ****         }
 229:main.c        **** 
 230:main.c        ****         /* Read sensors + maybe request turn */
 231:main.c        ****         uint16_t V4_pp=0, V5_pp=0, V6_pp=0;
 1087              		.loc 1 231 0
 1088 00f4 0023     		movs	r3, #0
 1089 00f6 7B81     		strh	r3, [r7, #10]	@ movhi
 1090 00f8 0023     		movs	r3, #0
 1091 00fa 3B81     		strh	r3, [r7, #8]	@ movhi
 1092 00fc 0023     		movs	r3, #0
 1093 00fe FB80     		strh	r3, [r7, #6]	@ movhi
 232:main.c        ****         light_sensors_update_and_maybe_request_turn(&V4_pp, &V5_pp, &V6_pp);
 1094              		.loc 1 232 0
 1095 0100 BA1D     		adds	r2, r7, #6
 1096 0102 07F10801 		add	r1, r7, #8
 1097 0106 07F10A03 		add	r3, r7, #10
 1098 010a 1846     		mov	r0, r3
 1099 010c FFF7FEFF 		bl	light_sensors_update_and_maybe_request_turn
 233:main.c        **** 
 234:main.c        ****         /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 235:main.c        ****         /* Arm once on the first detection (edge 0 -> 1/2) */
 236:main.c        ****         if ((g_direction == 1u || g_direction == 2u) && dir_latched_side == 0){
 1100              		.loc 1 236 0
 1101 0110 384B     		ldr	r3, .L84+4
 1102 0112 1B78     		ldrb	r3, [r3]
 1103 0114 DBB2     		uxtb	r3, r3
 1104 0116 012B     		cmp	r3, #1
 1105 0118 04D0     		beq	.L74
 1106              		.loc 1 236 0 is_stmt 0 discriminator 2
 1107 011a 364B     		ldr	r3, .L84+4
 1108 011c 1B78     		ldrb	r3, [r3]
 1109 011e DBB2     		uxtb	r3, r3
 1110 0120 022B     		cmp	r3, #2
 1111 0122 0BD1     		bne	.L75
 1112              	.L74:
 1113              		.loc 1 236 0 discriminator 3
 1114 0124 364B     		ldr	r3, .L84+16
 1115 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1116 0128 002B     		cmp	r3, #0
 1117 012a 07D1     		bne	.L75
 237:main.c        ****             dir_latched_side = g_direction;          /* remember side */
 1118              		.loc 1 237 0 is_stmt 1
 1119 012c 314B     		ldr	r3, .L84+4
 1120 012e 1B78     		ldrb	r3, [r3]
 1121 0130 DAB2     		uxtb	r2, r3
 1122 0132 334B     		ldr	r3, .L84+16
 1123 0134 1A70     		strb	r2, [r3]
 238:main.c        ****             dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 1124              		.loc 1 238 0
 1125 0136 334B     		ldr	r3, .L84+20
 1126 0138 0D22     		movs	r2, #13
 1127 013a 1A80     		strh	r2, [r3]	@ movhi
 1128              	.L75:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 25


 239:main.c        ****         }
 240:main.c        ****         /* If request cleared during delay, cancel gracefully */
 241:main.c        ****         if (g_direction == 0u && dir_latched_side != 0){
 1129              		.loc 1 241 0
 1130 013c 2D4B     		ldr	r3, .L84+4
 1131 013e 1B78     		ldrb	r3, [r3]
 1132 0140 DBB2     		uxtb	r3, r3
 1133 0142 002B     		cmp	r3, #0
 1134 0144 09D1     		bne	.L76
 1135              		.loc 1 241 0 is_stmt 0 discriminator 1
 1136 0146 2E4B     		ldr	r3, .L84+16
 1137 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1138 014a 002B     		cmp	r3, #0
 1139 014c 05D0     		beq	.L76
 242:main.c        ****             dir_latched_side = 0;
 1140              		.loc 1 242 0 is_stmt 1
 1141 014e 2C4B     		ldr	r3, .L84+16
 1142 0150 0022     		movs	r2, #0
 1143 0152 1A70     		strb	r2, [r3]
 243:main.c        ****             dir_delay_ticks  = 0;
 1144              		.loc 1 243 0
 1145 0154 2B4B     		ldr	r3, .L84+20
 1146 0156 0022     		movs	r2, #0
 1147 0158 1A80     		strh	r2, [r3]	@ movhi
 1148              	.L76:
 244:main.c        ****         }
 245:main.c        **** 
 246:main.c        ****         if (g_direction == 1u || g_direction == 2u){
 1149              		.loc 1 246 0
 1150 015a 264B     		ldr	r3, .L84+4
 1151 015c 1B78     		ldrb	r3, [r3]
 1152 015e DBB2     		uxtb	r3, r3
 1153 0160 012B     		cmp	r3, #1
 1154 0162 04D0     		beq	.L77
 1155              		.loc 1 246 0 is_stmt 0 discriminator 1
 1156 0164 234B     		ldr	r3, .L84+4
 1157 0166 1B78     		ldrb	r3, [r3]
 1158 0168 DBB2     		uxtb	r3, r3
 1159 016a 022B     		cmp	r3, #2
 1160 016c 25D1     		bne	.L78
 1161              	.L77:
 247:main.c        ****             if (dir_delay_ticks > 0){
 1162              		.loc 1 247 0 is_stmt 1
 1163 016e 254B     		ldr	r3, .L84+20
 1164 0170 1B88     		ldrh	r3, [r3]
 1165 0172 002B     		cmp	r3, #0
 1166 0174 06D0     		beq	.L79
 248:main.c        ****                 /* Still delaying: keep doing normal straight PI */
 249:main.c        ****                 dir_delay_ticks--;
 1167              		.loc 1 249 0
 1168 0176 234B     		ldr	r3, .L84+20
 1169 0178 1B88     		ldrh	r3, [r3]
 1170 017a 013B     		subs	r3, r3, #1
 1171 017c 9AB2     		uxth	r2, r3
 1172 017e 214B     		ldr	r3, .L84+20
 1173 0180 1A80     		strh	r2, [r3]	@ movhi
 1174 0182 1AE0     		b	.L78
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 26


 1175              	.L79:
 250:main.c        ****             } else {
 251:main.c        ****                 /* Delay elapsed: perform the maneuver */
 252:main.c        ****                 Directions_Handle(&g_direction);
 1176              		.loc 1 252 0
 1177 0184 1B48     		ldr	r0, .L84+4
 1178 0186 FFF7FEFF 		bl	Directions_Handle
 253:main.c        **** 
 254:main.c        ****                 /* When turn completes, Directions sets g_direction back to 0 */
 255:main.c        ****                 if (g_direction == 0u){
 1179              		.loc 1 255 0
 1180 018a 1A4B     		ldr	r3, .L84+4
 1181 018c 1B78     		ldrb	r3, [r3]
 1182 018e DBB2     		uxtb	r3, r3
 1183 0190 002B     		cmp	r3, #0
 1184 0192 0ED1     		bne	.L80
 256:main.c        ****                     pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 1185              		.loc 1 256 0
 1186 0194 4FF00003 		mov	r3, #0
 1187 0198 FB60     		str	r3, [r7, #12]	@ float
 1188 019a 4FF00003 		mov	r3, #0
 1189 019e 3B61     		str	r3, [r7, #16]	@ float
 1190 01a0 4FF00003 		mov	r3, #0
 1191 01a4 7B61     		str	r3, [r7, #20]	@ float
 257:main.c        ****                     dir_latched_side = 0;                        /* ready next time */
 1192              		.loc 1 257 0
 1193 01a6 164B     		ldr	r3, .L84+16
 1194 01a8 0022     		movs	r2, #0
 1195 01aa 1A70     		strb	r2, [r3]
 258:main.c        ****                     
 259:main.c        ****                     
 260:main.c        ****                     turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1196              		.loc 1 260 0
 1197 01ac 164B     		ldr	r3, .L84+24
 1198 01ae 3222     		movs	r2, #50
 1199 01b0 1A80     		strh	r2, [r3]	@ movhi
 1200              	.L80:
 261:main.c        ****                 }
 262:main.c        ****                 CyDelay(LOOP_DT_MS);
 1201              		.loc 1 262 0
 1202 01b2 0820     		movs	r0, #8
 1203 01b4 FFF7FEFF 		bl	CyDelay
 263:main.c        ****                 continue;  /* skip the rest this tick */
 1204              		.loc 1 263 0
 1205 01b8 18E0     		b	.L82
 1206              	.L78:
 264:main.c        ****             }
 265:main.c        ****         }
 266:main.c        ****         /* ---------------- end turn handling with delay ---------------- */
 267:main.c        **** 
 268:main.c        ****         /* Straight run with PI steering */
 269:main.c        ****         
 270:main.c        ****         if(turn_cooldown_ticks > 0) {
 1207              		.loc 1 270 0
 1208 01ba 134B     		ldr	r3, .L84+24
 1209 01bc 1B88     		ldrh	r3, [r3]
 1210 01be 002B     		cmp	r3, #0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 27


 1211 01c0 05D0     		beq	.L81
 271:main.c        ****             turn_cooldown_ticks--;
 1212              		.loc 1 271 0
 1213 01c2 114B     		ldr	r3, .L84+24
 1214 01c4 1B88     		ldrh	r3, [r3]
 1215 01c6 013B     		subs	r3, r3, #1
 1216 01c8 9AB2     		uxth	r2, r3
 1217 01ca 0F4B     		ldr	r3, .L84+24
 1218 01cc 1A80     		strh	r2, [r3]	@ movhi
 1219              	.L81:
 272:main.c        ****         }
 273:main.c        ****         
 274:main.c        ****         
 275:main.c        ****         int steer = pi_step(&pi, V4_pp, V5_pp, V6_pp);
 1220              		.loc 1 275 0
 1221 01ce 7989     		ldrh	r1, [r7, #10]
 1222 01d0 3A89     		ldrh	r2, [r7, #8]
 1223 01d2 FB88     		ldrh	r3, [r7, #6]
 1224 01d4 07F10C00 		add	r0, r7, #12
 1225 01d8 FFF7FEFF 		bl	pi_step
 1226 01dc B861     		str	r0, [r7, #24]
 276:main.c        ****         set_motors_with_trim_and_steer(center_duty_est, steer);
 1227              		.loc 1 276 0
 1228 01de B969     		ldr	r1, [r7, #24]
 1229 01e0 F869     		ldr	r0, [r7, #28]
 1230 01e2 FFF7FEFF 		bl	set_motors_with_trim_and_steer
 277:main.c        **** 
 278:main.c        ****         CyDelay(LOOP_DT_MS);
 1231              		.loc 1 278 0
 1232 01e6 0820     		movs	r0, #8
 1233 01e8 FFF7FEFF 		bl	CyDelay
 1234              	.L82:
 1235              	.LBE2:
 279:main.c        ****     }
 1236              		.loc 1 279 0 discriminator 1
 1237 01ec 64E7     		b	.L83
 1238              	.L85:
 1239 01ee 00BF     		.align	2
 1240              	.L84:
 1241 01f0 00000000 		.word	isr_qd_Handler
 1242 01f4 06000000 		.word	g_direction
 1243 01f8 08000000 		.word	g_dist_mm
 1244 01fc 07000000 		.word	g_stop_now
 1245 0200 0E000000 		.word	dir_latched_side
 1246 0204 0C000000 		.word	dir_delay_ticks
 1247 0208 10000000 		.word	turn_cooldown_ticks
 1248              		.cfi_endproc
 1249              	.LFE69:
 1250              		.size	main, .-main
 1251              		.text
 1252              	.Letext0:
 1253              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1254              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1255              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 1256              		.section	.debug_info,"",%progbits
 1257              	.Ldebug_info0:
 1258 0000 20050000 		.4byte	0x520
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 28


 1259 0004 0400     		.2byte	0x4
 1260 0006 00000000 		.4byte	.Ldebug_abbrev0
 1261 000a 04       		.byte	0x4
 1262 000b 01       		.uleb128 0x1
 1263 000c 30000000 		.4byte	.LASF57
 1264 0010 0C       		.byte	0xc
 1265 0011 C5020000 		.4byte	.LASF58
 1266 0015 EB000000 		.4byte	.LASF59
 1267 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1268 001d 00000000 		.4byte	0
 1269 0021 00000000 		.4byte	.Ldebug_line0
 1270 0025 02       		.uleb128 0x2
 1271 0026 01       		.byte	0x1
 1272 0027 06       		.byte	0x6
 1273 0028 DF010000 		.4byte	.LASF0
 1274 002c 03       		.uleb128 0x3
 1275 002d 70010000 		.4byte	.LASF3
 1276 0031 02       		.byte	0x2
 1277 0032 1D       		.byte	0x1d
 1278 0033 37000000 		.4byte	0x37
 1279 0037 02       		.uleb128 0x2
 1280 0038 01       		.byte	0x1
 1281 0039 08       		.byte	0x8
 1282 003a 87010000 		.4byte	.LASF1
 1283 003e 02       		.uleb128 0x2
 1284 003f 02       		.byte	0x2
 1285 0040 05       		.byte	0x5
 1286 0041 1D000000 		.4byte	.LASF2
 1287 0045 03       		.uleb128 0x3
 1288 0046 C3000000 		.4byte	.LASF4
 1289 004a 02       		.byte	0x2
 1290 004b 2B       		.byte	0x2b
 1291 004c 50000000 		.4byte	0x50
 1292 0050 02       		.uleb128 0x2
 1293 0051 02       		.byte	0x2
 1294 0052 07       		.byte	0x7
 1295 0053 40020000 		.4byte	.LASF5
 1296 0057 03       		.uleb128 0x3
 1297 0058 22030000 		.4byte	.LASF6
 1298 005c 02       		.byte	0x2
 1299 005d 3F       		.byte	0x3f
 1300 005e 62000000 		.4byte	0x62
 1301 0062 02       		.uleb128 0x2
 1302 0063 04       		.byte	0x4
 1303 0064 05       		.byte	0x5
 1304 0065 57010000 		.4byte	.LASF7
 1305 0069 02       		.uleb128 0x2
 1306 006a 04       		.byte	0x4
 1307 006b 07       		.byte	0x7
 1308 006c CC020000 		.4byte	.LASF8
 1309 0070 03       		.uleb128 0x3
 1310 0071 60010000 		.4byte	.LASF9
 1311 0075 02       		.byte	0x2
 1312 0076 59       		.byte	0x59
 1313 0077 7B000000 		.4byte	0x7b
 1314 007b 02       		.uleb128 0x2
 1315 007c 08       		.byte	0x8
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 29


 1316 007d 05       		.byte	0x5
 1317 007e 3F010000 		.4byte	.LASF10
 1318 0082 02       		.uleb128 0x2
 1319 0083 08       		.byte	0x8
 1320 0084 07       		.byte	0x7
 1321 0085 EB010000 		.4byte	.LASF11
 1322 0089 04       		.uleb128 0x4
 1323 008a 04       		.byte	0x4
 1324 008b 05       		.byte	0x5
 1325 008c 696E7400 		.ascii	"int\000"
 1326 0090 02       		.uleb128 0x2
 1327 0091 04       		.byte	0x4
 1328 0092 07       		.byte	0x7
 1329 0093 0F020000 		.4byte	.LASF12
 1330 0097 03       		.uleb128 0x3
 1331 0098 D6000000 		.4byte	.LASF13
 1332 009c 03       		.byte	0x3
 1333 009d 18       		.byte	0x18
 1334 009e 2C000000 		.4byte	0x2c
 1335 00a2 03       		.uleb128 0x3
 1336 00a3 22020000 		.4byte	.LASF14
 1337 00a7 03       		.byte	0x3
 1338 00a8 24       		.byte	0x24
 1339 00a9 45000000 		.4byte	0x45
 1340 00ad 03       		.uleb128 0x3
 1341 00ae 78020000 		.4byte	.LASF15
 1342 00b2 03       		.byte	0x3
 1343 00b3 2C       		.byte	0x2c
 1344 00b4 57000000 		.4byte	0x57
 1345 00b8 03       		.uleb128 0x3
 1346 00b9 CE000000 		.4byte	.LASF16
 1347 00bd 03       		.byte	0x3
 1348 00be 38       		.byte	0x38
 1349 00bf 70000000 		.4byte	0x70
 1350 00c3 02       		.uleb128 0x2
 1351 00c4 04       		.byte	0x4
 1352 00c5 04       		.byte	0x4
 1353 00c6 39010000 		.4byte	.LASF17
 1354 00ca 02       		.uleb128 0x2
 1355 00cb 08       		.byte	0x8
 1356 00cc 04       		.byte	0x4
 1357 00cd 4E030000 		.4byte	.LASF18
 1358 00d1 02       		.uleb128 0x2
 1359 00d2 01       		.byte	0x1
 1360 00d3 08       		.byte	0x8
 1361 00d4 4D010000 		.4byte	.LASF19
 1362 00d8 02       		.uleb128 0x2
 1363 00d9 08       		.byte	0x8
 1364 00da 04       		.byte	0x4
 1365 00db 9A010000 		.4byte	.LASF20
 1366 00df 02       		.uleb128 0x2
 1367 00e0 04       		.byte	0x4
 1368 00e1 07       		.byte	0x7
 1369 00e2 27000000 		.4byte	.LASF21
 1370 00e6 05       		.uleb128 0x5
 1371 00e7 97000000 		.4byte	0x97
 1372 00eb 06       		.uleb128 0x6
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 30


 1373 00ec 0C       		.byte	0xc
 1374 00ed 01       		.byte	0x1
 1375 00ee 88       		.byte	0x88
 1376 00ef 14010000 		.4byte	0x114
 1377 00f3 07       		.uleb128 0x7
 1378 00f4 6900     		.ascii	"i\000"
 1379 00f6 01       		.byte	0x1
 1380 00f7 88       		.byte	0x88
 1381 00f8 C3000000 		.4byte	0xc3
 1382 00fc 00       		.byte	0
 1383 00fd 07       		.uleb128 0x7
 1384 00fe 7500     		.ascii	"u\000"
 1385 0100 01       		.byte	0x1
 1386 0101 88       		.byte	0x88
 1387 0102 C3000000 		.4byte	0xc3
 1388 0106 04       		.byte	0x4
 1389 0107 08       		.uleb128 0x8
 1390 0108 1B030000 		.4byte	.LASF22
 1391 010c 01       		.byte	0x1
 1392 010d 88       		.byte	0x88
 1393 010e C3000000 		.4byte	0xc3
 1394 0112 08       		.byte	0x8
 1395 0113 00       		.byte	0
 1396 0114 03       		.uleb128 0x3
 1397 0115 52010000 		.4byte	.LASF23
 1398 0119 01       		.byte	0x1
 1399 011a 88       		.byte	0x88
 1400 011b EB000000 		.4byte	0xeb
 1401 011f 09       		.uleb128 0x9
 1402 0120 94020000 		.4byte	.LASF60
 1403 0124 01       		.byte	0x1
 1404 0125 48       		.byte	0x48
 1405 0126 00000000 		.4byte	.LFB64
 1406 012a 78010000 		.4byte	.LFE64-.LFB64
 1407 012e 01       		.uleb128 0x1
 1408 012f 9C       		.byte	0x9c
 1409 0130 D0010000 		.4byte	0x1d0
 1410 0134 0A       		.uleb128 0xa
 1411 0135 95010000 		.4byte	.LASF24
 1412 0139 01       		.byte	0x1
 1413 013a 4A       		.byte	0x4a
 1414 013b AD000000 		.4byte	0xad
 1415 013f 02       		.uleb128 0x2
 1416 0140 91       		.byte	0x91
 1417 0141 54       		.sleb128 -44
 1418 0142 0A       		.uleb128 0xa
 1419 0143 DE000000 		.4byte	.LASF25
 1420 0147 01       		.byte	0x1
 1421 0148 4B       		.byte	0x4b
 1422 0149 AD000000 		.4byte	0xad
 1423 014d 02       		.uleb128 0x2
 1424 014e 91       		.byte	0x91
 1425 014f 50       		.sleb128 -48
 1426 0150 0B       		.uleb128 0xb
 1427 0151 643100   		.ascii	"d1\000"
 1428 0154 01       		.byte	0x1
 1429 0155 4D       		.byte	0x4d
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 31


 1430 0156 AD000000 		.4byte	0xad
 1431 015a 02       		.uleb128 0x2
 1432 015b 91       		.byte	0x91
 1433 015c 4C       		.sleb128 -52
 1434 015d 0B       		.uleb128 0xb
 1435 015e 643200   		.ascii	"d2\000"
 1436 0161 01       		.byte	0x1
 1437 0162 4D       		.byte	0x4d
 1438 0163 AD000000 		.4byte	0xad
 1439 0167 02       		.uleb128 0x2
 1440 0168 91       		.byte	0x91
 1441 0169 48       		.sleb128 -56
 1442 016a 0B       		.uleb128 0xb
 1443 016b 613100   		.ascii	"a1\000"
 1444 016e 01       		.byte	0x1
 1445 016f 4E       		.byte	0x4e
 1446 0170 AD000000 		.4byte	0xad
 1447 0174 02       		.uleb128 0x2
 1448 0175 91       		.byte	0x91
 1449 0176 44       		.sleb128 -60
 1450 0177 0B       		.uleb128 0xb
 1451 0178 613200   		.ascii	"a2\000"
 1452 017b 01       		.byte	0x1
 1453 017c 4F       		.byte	0x4f
 1454 017d AD000000 		.4byte	0xad
 1455 0181 02       		.uleb128 0x2
 1456 0182 91       		.byte	0x91
 1457 0183 40       		.sleb128 -64
 1458 0184 0A       		.uleb128 0xa
 1459 0185 6C030000 		.4byte	.LASF26
 1460 0189 01       		.byte	0x1
 1461 018a 50       		.byte	0x50
 1462 018b AD000000 		.4byte	0xad
 1463 018f 03       		.uleb128 0x3
 1464 0190 91       		.byte	0x91
 1465 0191 BC7F     		.sleb128 -68
 1466 0193 0A       		.uleb128 0xa
 1467 0194 DE020000 		.4byte	.LASF27
 1468 0198 01       		.byte	0x1
 1469 0199 51       		.byte	0x51
 1470 019a AD000000 		.4byte	0xad
 1471 019e 03       		.uleb128 0x3
 1472 019f 91       		.byte	0x91
 1473 01a0 B87F     		.sleb128 -72
 1474 01a2 0A       		.uleb128 0xa
 1475 01a3 60020000 		.4byte	.LASF28
 1476 01a7 01       		.byte	0x1
 1477 01a8 53       		.byte	0x53
 1478 01a9 B8000000 		.4byte	0xb8
 1479 01ad 03       		.uleb128 0x3
 1480 01ae 91       		.byte	0x91
 1481 01af B07F     		.sleb128 -80
 1482 01b1 0A       		.uleb128 0xa
 1483 01b2 E3000000 		.4byte	.LASF29
 1484 01b6 01       		.byte	0x1
 1485 01b7 54       		.byte	0x54
 1486 01b8 AD000000 		.4byte	0xad
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 32


 1487 01bc 03       		.uleb128 0x3
 1488 01bd 91       		.byte	0x91
 1489 01be AC7F     		.sleb128 -84
 1490 01c0 0A       		.uleb128 0xa
 1491 01c1 A3020000 		.4byte	.LASF30
 1492 01c5 01       		.byte	0x1
 1493 01c6 55       		.byte	0x55
 1494 01c7 AD000000 		.4byte	0xad
 1495 01cb 03       		.uleb128 0x3
 1496 01cc 91       		.byte	0x91
 1497 01cd A87F     		.sleb128 -88
 1498 01cf 00       		.byte	0
 1499 01d0 0C       		.uleb128 0xc
 1500 01d1 2C030000 		.4byte	.LASF34
 1501 01d5 01       		.byte	0x1
 1502 01d6 5C       		.byte	0x5c
 1503 01d7 C3000000 		.4byte	0xc3
 1504 01db 00000000 		.4byte	.LFB65
 1505 01df 44000000 		.4byte	.LFE65-.LFB65
 1506 01e3 01       		.uleb128 0x1
 1507 01e4 9C       		.byte	0x9c
 1508 01e5 F7010000 		.4byte	0x1f7
 1509 01e9 0D       		.uleb128 0xd
 1510 01ea 707000   		.ascii	"pp\000"
 1511 01ed 01       		.byte	0x1
 1512 01ee 5C       		.byte	0x5c
 1513 01ef A2000000 		.4byte	0xa2
 1514 01f3 02       		.uleb128 0x2
 1515 01f4 91       		.byte	0x91
 1516 01f5 76       		.sleb128 -10
 1517 01f6 00       		.byte	0
 1518 01f7 0E       		.uleb128 0xe
 1519 01f8 E8020000 		.4byte	.LASF61
 1520 01fc 01       		.byte	0x1
 1521 01fd 64       		.byte	0x64
 1522 01fe 00000000 		.4byte	.LFB66
 1523 0202 48010000 		.4byte	.LFE66-.LFB66
 1524 0206 01       		.uleb128 0x1
 1525 0207 9C       		.byte	0x9c
 1526 0208 85020000 		.4byte	0x285
 1527 020c 0F       		.uleb128 0xf
 1528 020d 17000000 		.4byte	.LASF31
 1529 0211 01       		.byte	0x1
 1530 0212 64       		.byte	0x64
 1531 0213 85020000 		.4byte	0x285
 1532 0217 02       		.uleb128 0x2
 1533 0218 91       		.byte	0x91
 1534 0219 64       		.sleb128 -28
 1535 021a 0F       		.uleb128 0xf
 1536 021b 33010000 		.4byte	.LASF32
 1537 021f 01       		.byte	0x1
 1538 0220 64       		.byte	0x64
 1539 0221 85020000 		.4byte	0x285
 1540 0225 02       		.uleb128 0x2
 1541 0226 91       		.byte	0x91
 1542 0227 60       		.sleb128 -32
 1543 0228 0F       		.uleb128 0xf
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 33


 1544 0229 1C020000 		.4byte	.LASF33
 1545 022d 01       		.byte	0x1
 1546 022e 64       		.byte	0x64
 1547 022f 85020000 		.4byte	0x285
 1548 0233 02       		.uleb128 0x2
 1549 0234 91       		.byte	0x91
 1550 0235 5C       		.sleb128 -36
 1551 0236 0B       		.uleb128 0xb
 1552 0237 563100   		.ascii	"V1\000"
 1553 023a 01       		.byte	0x1
 1554 023b 66       		.byte	0x66
 1555 023c A2000000 		.4byte	0xa2
 1556 0240 02       		.uleb128 0x2
 1557 0241 91       		.byte	0x91
 1558 0242 76       		.sleb128 -10
 1559 0243 0B       		.uleb128 0xb
 1560 0244 563200   		.ascii	"V2\000"
 1561 0247 01       		.byte	0x1
 1562 0248 67       		.byte	0x67
 1563 0249 A2000000 		.4byte	0xa2
 1564 024d 02       		.uleb128 0x2
 1565 024e 91       		.byte	0x91
 1566 024f 74       		.sleb128 -12
 1567 0250 0B       		.uleb128 0xb
 1568 0251 563300   		.ascii	"V3\000"
 1569 0254 01       		.byte	0x1
 1570 0255 68       		.byte	0x68
 1571 0256 A2000000 		.4byte	0xa2
 1572 025a 02       		.uleb128 0x2
 1573 025b 91       		.byte	0x91
 1574 025c 72       		.sleb128 -14
 1575 025d 0B       		.uleb128 0xb
 1576 025e 563400   		.ascii	"V4\000"
 1577 0261 01       		.byte	0x1
 1578 0262 69       		.byte	0x69
 1579 0263 A2000000 		.4byte	0xa2
 1580 0267 02       		.uleb128 0x2
 1581 0268 91       		.byte	0x91
 1582 0269 70       		.sleb128 -16
 1583 026a 0B       		.uleb128 0xb
 1584 026b 563500   		.ascii	"V5\000"
 1585 026e 01       		.byte	0x1
 1586 026f 6A       		.byte	0x6a
 1587 0270 A2000000 		.4byte	0xa2
 1588 0274 02       		.uleb128 0x2
 1589 0275 91       		.byte	0x91
 1590 0276 6E       		.sleb128 -18
 1591 0277 0B       		.uleb128 0xb
 1592 0278 563600   		.ascii	"V6\000"
 1593 027b 01       		.byte	0x1
 1594 027c 6B       		.byte	0x6b
 1595 027d A2000000 		.4byte	0xa2
 1596 0281 02       		.uleb128 0x2
 1597 0282 91       		.byte	0x91
 1598 0283 6C       		.sleb128 -20
 1599 0284 00       		.byte	0
 1600 0285 10       		.uleb128 0x10
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 34


 1601 0286 04       		.byte	0x4
 1602 0287 A2000000 		.4byte	0xa2
 1603 028b 0C       		.uleb128 0xc
 1604 028c 38020000 		.4byte	.LASF35
 1605 0290 01       		.byte	0x1
 1606 0291 89       		.byte	0x89
 1607 0292 C3000000 		.4byte	0xc3
 1608 0296 00000000 		.4byte	.LFB67
 1609 029a 3A000000 		.4byte	.LFE67-.LFB67
 1610 029e 01       		.uleb128 0x1
 1611 029f 9C       		.byte	0x9c
 1612 02a0 CB020000 		.4byte	0x2cb
 1613 02a4 0D       		.uleb128 0xd
 1614 02a5 7800     		.ascii	"x\000"
 1615 02a7 01       		.byte	0x1
 1616 02a8 89       		.byte	0x89
 1617 02a9 C3000000 		.4byte	0xc3
 1618 02ad 02       		.uleb128 0x2
 1619 02ae 91       		.byte	0x91
 1620 02af 74       		.sleb128 -12
 1621 02b0 0D       		.uleb128 0xd
 1622 02b1 6C6F00   		.ascii	"lo\000"
 1623 02b4 01       		.byte	0x1
 1624 02b5 89       		.byte	0x89
 1625 02b6 C3000000 		.4byte	0xc3
 1626 02ba 02       		.uleb128 0x2
 1627 02bb 91       		.byte	0x91
 1628 02bc 70       		.sleb128 -16
 1629 02bd 0D       		.uleb128 0xd
 1630 02be 686900   		.ascii	"hi\000"
 1631 02c1 01       		.byte	0x1
 1632 02c2 89       		.byte	0x89
 1633 02c3 C3000000 		.4byte	0xc3
 1634 02c7 02       		.uleb128 0x2
 1635 02c8 91       		.byte	0x91
 1636 02c9 6C       		.sleb128 -20
 1637 02ca 00       		.byte	0
 1638 02cb 0C       		.uleb128 0xc
 1639 02cc 80020000 		.4byte	.LASF36
 1640 02d0 01       		.byte	0x1
 1641 02d1 8B       		.byte	0x8b
 1642 02d2 89000000 		.4byte	0x89
 1643 02d6 00000000 		.4byte	.LFB68
 1644 02da 5C020000 		.4byte	.LFE68-.LFB68
 1645 02de 01       		.uleb128 0x1
 1646 02df 9C       		.byte	0x9c
 1647 02e0 C1030000 		.4byte	0x3c1
 1648 02e4 0D       		.uleb128 0xd
 1649 02e5 706900   		.ascii	"pi\000"
 1650 02e8 01       		.byte	0x1
 1651 02e9 8B       		.byte	0x8b
 1652 02ea C1030000 		.4byte	0x3c1
 1653 02ee 03       		.uleb128 0x3
 1654 02ef 91       		.byte	0x91
 1655 02f0 BC7F     		.sleb128 -68
 1656 02f2 0F       		.uleb128 0xf
 1657 02f3 17000000 		.4byte	.LASF31
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 35


 1658 02f7 01       		.byte	0x1
 1659 02f8 8B       		.byte	0x8b
 1660 02f9 A2000000 		.4byte	0xa2
 1661 02fd 03       		.uleb128 0x3
 1662 02fe 91       		.byte	0x91
 1663 02ff BA7F     		.sleb128 -70
 1664 0301 0F       		.uleb128 0xf
 1665 0302 33010000 		.4byte	.LASF32
 1666 0306 01       		.byte	0x1
 1667 0307 8B       		.byte	0x8b
 1668 0308 A2000000 		.4byte	0xa2
 1669 030c 03       		.uleb128 0x3
 1670 030d 91       		.byte	0x91
 1671 030e B87F     		.sleb128 -72
 1672 0310 0F       		.uleb128 0xf
 1673 0311 1C020000 		.4byte	.LASF33
 1674 0315 01       		.byte	0x1
 1675 0316 8B       		.byte	0x8b
 1676 0317 A2000000 		.4byte	0xa2
 1677 031b 03       		.uleb128 0x3
 1678 031c 91       		.byte	0x91
 1679 031d B67F     		.sleb128 -74
 1680 031f 0B       		.uleb128 0xb
 1681 0320 633400   		.ascii	"c4\000"
 1682 0323 01       		.byte	0x1
 1683 0324 8D       		.byte	0x8d
 1684 0325 C3000000 		.4byte	0xc3
 1685 0329 02       		.uleb128 0x2
 1686 032a 91       		.byte	0x91
 1687 032b 68       		.sleb128 -24
 1688 032c 0B       		.uleb128 0xb
 1689 032d 633500   		.ascii	"c5\000"
 1690 0330 01       		.byte	0x1
 1691 0331 8E       		.byte	0x8e
 1692 0332 C3000000 		.4byte	0xc3
 1693 0336 02       		.uleb128 0x2
 1694 0337 91       		.byte	0x91
 1695 0338 64       		.sleb128 -28
 1696 0339 0B       		.uleb128 0xb
 1697 033a 633600   		.ascii	"c6\000"
 1698 033d 01       		.byte	0x1
 1699 033e 8F       		.byte	0x8f
 1700 033f C3000000 		.4byte	0xc3
 1701 0343 02       		.uleb128 0x2
 1702 0344 91       		.byte	0x91
 1703 0345 60       		.sleb128 -32
 1704 0346 0B       		.uleb128 0xb
 1705 0347 73756D00 		.ascii	"sum\000"
 1706 034b 01       		.byte	0x1
 1707 034c 90       		.byte	0x90
 1708 034d C3000000 		.4byte	0xc3
 1709 0351 02       		.uleb128 0x2
 1710 0352 91       		.byte	0x91
 1711 0353 5C       		.sleb128 -36
 1712 0354 0A       		.uleb128 0xa
 1713 0355 00000000 		.4byte	.LASF37
 1714 0359 01       		.byte	0x1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 36


 1715 035a 91       		.byte	0x91
 1716 035b C7030000 		.4byte	0x3c7
 1717 035f 02       		.uleb128 0x2
 1718 0360 91       		.byte	0x91
 1719 0361 5B       		.sleb128 -37
 1720 0362 0B       		.uleb128 0xb
 1721 0363 706F7300 		.ascii	"pos\000"
 1722 0367 01       		.byte	0x1
 1723 0368 93       		.byte	0x93
 1724 0369 C3000000 		.4byte	0xc3
 1725 036d 02       		.uleb128 0x2
 1726 036e 91       		.byte	0x91
 1727 036f 6C       		.sleb128 -20
 1728 0370 0B       		.uleb128 0xb
 1729 0371 6500     		.ascii	"e\000"
 1730 0373 01       		.byte	0x1
 1731 0374 96       		.byte	0x96
 1732 0375 C3000000 		.4byte	0xc3
 1733 0379 02       		.uleb128 0x2
 1734 037a 91       		.byte	0x91
 1735 037b 54       		.sleb128 -44
 1736 037c 0A       		.uleb128 0xa
 1737 037d BE020000 		.4byte	.LASF38
 1738 0381 01       		.byte	0x1
 1739 0382 9F       		.byte	0x9f
 1740 0383 C3000000 		.4byte	0xc3
 1741 0387 02       		.uleb128 0x2
 1742 0388 91       		.byte	0x91
 1743 0389 50       		.sleb128 -48
 1744 038a 0A       		.uleb128 0xa
 1745 038b 6A010000 		.4byte	.LASF39
 1746 038f 01       		.byte	0x1
 1747 0390 A0       		.byte	0xa0
 1748 0391 C3000000 		.4byte	0xc3
 1749 0395 02       		.uleb128 0x2
 1750 0396 91       		.byte	0x91
 1751 0397 4C       		.sleb128 -52
 1752 0398 0B       		.uleb128 0xb
 1753 0399 7500     		.ascii	"u\000"
 1754 039b 01       		.byte	0x1
 1755 039c A1       		.byte	0xa1
 1756 039d C3000000 		.4byte	0xc3
 1757 03a1 02       		.uleb128 0x2
 1758 03a2 91       		.byte	0x91
 1759 03a3 48       		.sleb128 -56
 1760 03a4 0A       		.uleb128 0xa
 1761 03a5 14030000 		.4byte	.LASF40
 1762 03a9 01       		.byte	0x1
 1763 03aa A3       		.byte	0xa3
 1764 03ab C7030000 		.4byte	0x3c7
 1765 03af 02       		.uleb128 0x2
 1766 03b0 91       		.byte	0x91
 1767 03b1 47       		.sleb128 -57
 1768 03b2 0A       		.uleb128 0xa
 1769 03b3 47030000 		.4byte	.LASF41
 1770 03b7 01       		.byte	0x1
 1771 03b8 A4       		.byte	0xa4
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 37


 1772 03b9 C7030000 		.4byte	0x3c7
 1773 03bd 02       		.uleb128 0x2
 1774 03be 91       		.byte	0x91
 1775 03bf 46       		.sleb128 -58
 1776 03c0 00       		.byte	0
 1777 03c1 10       		.uleb128 0x10
 1778 03c2 04       		.byte	0x4
 1779 03c3 14010000 		.4byte	0x114
 1780 03c7 02       		.uleb128 0x2
 1781 03c8 01       		.byte	0x1
 1782 03c9 02       		.byte	0x2
 1783 03ca 8E020000 		.4byte	.LASF42
 1784 03ce 11       		.uleb128 0x11
 1785 03cf BE000000 		.4byte	.LASF62
 1786 03d3 01       		.byte	0x1
 1787 03d4 B1       		.byte	0xb1
 1788 03d5 89000000 		.4byte	0x89
 1789 03d9 00000000 		.4byte	.LFB69
 1790 03dd 0C020000 		.4byte	.LFE69-.LFB69
 1791 03e1 01       		.uleb128 0x1
 1792 03e2 9C       		.byte	0x9c
 1793 03e3 46040000 		.4byte	0x446
 1794 03e7 0A       		.uleb128 0xa
 1795 03e8 68020000 		.4byte	.LASF43
 1796 03ec 01       		.byte	0x1
 1797 03ed CF       		.byte	0xcf
 1798 03ee 89000000 		.4byte	0x89
 1799 03f2 02       		.uleb128 0x2
 1800 03f3 91       		.byte	0x91
 1801 03f4 74       		.sleb128 -12
 1802 03f5 0B       		.uleb128 0xb
 1803 03f6 706900   		.ascii	"pi\000"
 1804 03f9 01       		.byte	0x1
 1805 03fa D4       		.byte	0xd4
 1806 03fb 14010000 		.4byte	0x114
 1807 03ff 02       		.uleb128 0x2
 1808 0400 91       		.byte	0x91
 1809 0401 64       		.sleb128 -28
 1810 0402 12       		.uleb128 0x12
 1811 0403 B8000000 		.4byte	.LBB2
 1812 0407 34010000 		.4byte	.LBE2-.LBB2
 1813 040b 0A       		.uleb128 0xa
 1814 040c 17000000 		.4byte	.LASF31
 1815 0410 01       		.byte	0x1
 1816 0411 E7       		.byte	0xe7
 1817 0412 A2000000 		.4byte	0xa2
 1818 0416 02       		.uleb128 0x2
 1819 0417 91       		.byte	0x91
 1820 0418 62       		.sleb128 -30
 1821 0419 0A       		.uleb128 0xa
 1822 041a 33010000 		.4byte	.LASF32
 1823 041e 01       		.byte	0x1
 1824 041f E7       		.byte	0xe7
 1825 0420 A2000000 		.4byte	0xa2
 1826 0424 02       		.uleb128 0x2
 1827 0425 91       		.byte	0x91
 1828 0426 60       		.sleb128 -32
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 38


 1829 0427 0A       		.uleb128 0xa
 1830 0428 1C020000 		.4byte	.LASF33
 1831 042c 01       		.byte	0x1
 1832 042d E7       		.byte	0xe7
 1833 042e A2000000 		.4byte	0xa2
 1834 0432 02       		.uleb128 0x2
 1835 0433 91       		.byte	0x91
 1836 0434 5E       		.sleb128 -34
 1837 0435 13       		.uleb128 0x13
 1838 0436 88020000 		.4byte	.LASF44
 1839 043a 01       		.byte	0x1
 1840 043b 1301     		.2byte	0x113
 1841 043d 89000000 		.4byte	0x89
 1842 0441 02       		.uleb128 0x2
 1843 0442 91       		.byte	0x91
 1844 0443 70       		.sleb128 -16
 1845 0444 00       		.byte	0
 1846 0445 00       		.byte	0
 1847 0446 0A       		.uleb128 0xa
 1848 0447 7A010000 		.4byte	.LASF45
 1849 044b 01       		.byte	0x1
 1850 044c 37       		.byte	0x37
 1851 044d 97000000 		.4byte	0x97
 1852 0451 05       		.uleb128 0x5
 1853 0452 03       		.byte	0x3
 1854 0453 00000000 		.4byte	sen1_on_line
 1855 0457 0A       		.uleb128 0xa
 1856 0458 A6010000 		.4byte	.LASF46
 1857 045c 01       		.byte	0x1
 1858 045d 37       		.byte	0x37
 1859 045e 97000000 		.4byte	0x97
 1860 0462 05       		.uleb128 0x5
 1861 0463 03       		.byte	0x3
 1862 0464 01000000 		.4byte	sen2_on_line
 1863 0468 0A       		.uleb128 0xa
 1864 0469 D2010000 		.4byte	.LASF47
 1865 046d 01       		.byte	0x1
 1866 046e 37       		.byte	0x37
 1867 046f 97000000 		.4byte	0x97
 1868 0473 05       		.uleb128 0x5
 1869 0474 03       		.byte	0x3
 1870 0475 02000000 		.4byte	sen3_on_line
 1871 0479 0A       		.uleb128 0xa
 1872 047a 02020000 		.4byte	.LASF48
 1873 047e 01       		.byte	0x1
 1874 047f 38       		.byte	0x38
 1875 0480 97000000 		.4byte	0x97
 1876 0484 05       		.uleb128 0x5
 1877 0485 03       		.byte	0x3
 1878 0486 03000000 		.4byte	sen4_on_line
 1879 048a 0A       		.uleb128 0xa
 1880 048b 2B020000 		.4byte	.LASF49
 1881 048f 01       		.byte	0x1
 1882 0490 38       		.byte	0x38
 1883 0491 97000000 		.4byte	0x97
 1884 0495 05       		.uleb128 0x5
 1885 0496 03       		.byte	0x3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 39


 1886 0497 04000000 		.4byte	sen5_on_line
 1887 049b 0A       		.uleb128 0xa
 1888 049c 53020000 		.4byte	.LASF50
 1889 04a0 01       		.byte	0x1
 1890 04a1 38       		.byte	0x38
 1891 04a2 97000000 		.4byte	0x97
 1892 04a6 05       		.uleb128 0x5
 1893 04a7 03       		.byte	0x3
 1894 04a8 05000000 		.4byte	sen6_on_line
 1895 04ac 0A       		.uleb128 0xa
 1896 04ad 3B030000 		.4byte	.LASF51
 1897 04b1 01       		.byte	0x1
 1898 04b2 3B       		.byte	0x3b
 1899 04b3 E6000000 		.4byte	0xe6
 1900 04b7 05       		.uleb128 0x5
 1901 04b8 03       		.byte	0x3
 1902 04b9 06000000 		.4byte	g_direction
 1903 04bd 0A       		.uleb128 0xa
 1904 04be B3010000 		.4byte	.LASF52
 1905 04c2 01       		.byte	0x1
 1906 04c3 3C       		.byte	0x3c
 1907 04c4 E6000000 		.4byte	0xe6
 1908 04c8 05       		.uleb128 0x5
 1909 04c9 03       		.byte	0x3
 1910 04ca 07000000 		.4byte	g_stop_now
 1911 04ce 0A       		.uleb128 0xa
 1912 04cf 55030000 		.4byte	.LASF53
 1913 04d3 01       		.byte	0x1
 1914 04d4 3D       		.byte	0x3d
 1915 04d5 DF040000 		.4byte	0x4df
 1916 04d9 05       		.uleb128 0x5
 1917 04da 03       		.byte	0x3
 1918 04db 08000000 		.4byte	g_dist_mm
 1919 04df 05       		.uleb128 0x5
 1920 04e0 AD000000 		.4byte	0xad
 1921 04e4 0A       		.uleb128 0xa
 1922 04e5 AE020000 		.4byte	.LASF54
 1923 04e9 01       		.byte	0x1
 1924 04ea 40       		.byte	0x40
 1925 04eb A2000000 		.4byte	0xa2
 1926 04ef 05       		.uleb128 0x5
 1927 04f0 03       		.byte	0x3
 1928 04f1 0C000000 		.4byte	dir_delay_ticks
 1929 04f5 0A       		.uleb128 0xa
 1930 04f6 06000000 		.4byte	.LASF55
 1931 04fa 01       		.byte	0x1
 1932 04fb 41       		.byte	0x41
 1933 04fc 97000000 		.4byte	0x97
 1934 0500 05       		.uleb128 0x5
 1935 0501 03       		.byte	0x3
 1936 0502 0E000000 		.4byte	dir_latched_side
 1937 0506 0A       		.uleb128 0xa
 1938 0507 BE010000 		.4byte	.LASF56
 1939 050b 01       		.byte	0x1
 1940 050c 44       		.byte	0x44
 1941 050d A2000000 		.4byte	0xa2
 1942 0511 05       		.uleb128 0x5
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 40


 1943 0512 03       		.byte	0x3
 1944 0513 10000000 		.4byte	turn_cooldown_ticks
 1945 0517 14       		.uleb128 0x14
 1946 0518 5F030000 		.4byte	.LASF63
 1947 051c 04       		.byte	0x4
 1948 051d 1207     		.2byte	0x712
 1949 051f DF040000 		.4byte	0x4df
 1950 0523 00       		.byte	0
 1951              		.section	.debug_abbrev,"",%progbits
 1952              	.Ldebug_abbrev0:
 1953 0000 01       		.uleb128 0x1
 1954 0001 11       		.uleb128 0x11
 1955 0002 01       		.byte	0x1
 1956 0003 25       		.uleb128 0x25
 1957 0004 0E       		.uleb128 0xe
 1958 0005 13       		.uleb128 0x13
 1959 0006 0B       		.uleb128 0xb
 1960 0007 03       		.uleb128 0x3
 1961 0008 0E       		.uleb128 0xe
 1962 0009 1B       		.uleb128 0x1b
 1963 000a 0E       		.uleb128 0xe
 1964 000b 55       		.uleb128 0x55
 1965 000c 17       		.uleb128 0x17
 1966 000d 11       		.uleb128 0x11
 1967 000e 01       		.uleb128 0x1
 1968 000f 10       		.uleb128 0x10
 1969 0010 17       		.uleb128 0x17
 1970 0011 00       		.byte	0
 1971 0012 00       		.byte	0
 1972 0013 02       		.uleb128 0x2
 1973 0014 24       		.uleb128 0x24
 1974 0015 00       		.byte	0
 1975 0016 0B       		.uleb128 0xb
 1976 0017 0B       		.uleb128 0xb
 1977 0018 3E       		.uleb128 0x3e
 1978 0019 0B       		.uleb128 0xb
 1979 001a 03       		.uleb128 0x3
 1980 001b 0E       		.uleb128 0xe
 1981 001c 00       		.byte	0
 1982 001d 00       		.byte	0
 1983 001e 03       		.uleb128 0x3
 1984 001f 16       		.uleb128 0x16
 1985 0020 00       		.byte	0
 1986 0021 03       		.uleb128 0x3
 1987 0022 0E       		.uleb128 0xe
 1988 0023 3A       		.uleb128 0x3a
 1989 0024 0B       		.uleb128 0xb
 1990 0025 3B       		.uleb128 0x3b
 1991 0026 0B       		.uleb128 0xb
 1992 0027 49       		.uleb128 0x49
 1993 0028 13       		.uleb128 0x13
 1994 0029 00       		.byte	0
 1995 002a 00       		.byte	0
 1996 002b 04       		.uleb128 0x4
 1997 002c 24       		.uleb128 0x24
 1998 002d 00       		.byte	0
 1999 002e 0B       		.uleb128 0xb
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 41


 2000 002f 0B       		.uleb128 0xb
 2001 0030 3E       		.uleb128 0x3e
 2002 0031 0B       		.uleb128 0xb
 2003 0032 03       		.uleb128 0x3
 2004 0033 08       		.uleb128 0x8
 2005 0034 00       		.byte	0
 2006 0035 00       		.byte	0
 2007 0036 05       		.uleb128 0x5
 2008 0037 35       		.uleb128 0x35
 2009 0038 00       		.byte	0
 2010 0039 49       		.uleb128 0x49
 2011 003a 13       		.uleb128 0x13
 2012 003b 00       		.byte	0
 2013 003c 00       		.byte	0
 2014 003d 06       		.uleb128 0x6
 2015 003e 13       		.uleb128 0x13
 2016 003f 01       		.byte	0x1
 2017 0040 0B       		.uleb128 0xb
 2018 0041 0B       		.uleb128 0xb
 2019 0042 3A       		.uleb128 0x3a
 2020 0043 0B       		.uleb128 0xb
 2021 0044 3B       		.uleb128 0x3b
 2022 0045 0B       		.uleb128 0xb
 2023 0046 01       		.uleb128 0x1
 2024 0047 13       		.uleb128 0x13
 2025 0048 00       		.byte	0
 2026 0049 00       		.byte	0
 2027 004a 07       		.uleb128 0x7
 2028 004b 0D       		.uleb128 0xd
 2029 004c 00       		.byte	0
 2030 004d 03       		.uleb128 0x3
 2031 004e 08       		.uleb128 0x8
 2032 004f 3A       		.uleb128 0x3a
 2033 0050 0B       		.uleb128 0xb
 2034 0051 3B       		.uleb128 0x3b
 2035 0052 0B       		.uleb128 0xb
 2036 0053 49       		.uleb128 0x49
 2037 0054 13       		.uleb128 0x13
 2038 0055 38       		.uleb128 0x38
 2039 0056 0B       		.uleb128 0xb
 2040 0057 00       		.byte	0
 2041 0058 00       		.byte	0
 2042 0059 08       		.uleb128 0x8
 2043 005a 0D       		.uleb128 0xd
 2044 005b 00       		.byte	0
 2045 005c 03       		.uleb128 0x3
 2046 005d 0E       		.uleb128 0xe
 2047 005e 3A       		.uleb128 0x3a
 2048 005f 0B       		.uleb128 0xb
 2049 0060 3B       		.uleb128 0x3b
 2050 0061 0B       		.uleb128 0xb
 2051 0062 49       		.uleb128 0x49
 2052 0063 13       		.uleb128 0x13
 2053 0064 38       		.uleb128 0x38
 2054 0065 0B       		.uleb128 0xb
 2055 0066 00       		.byte	0
 2056 0067 00       		.byte	0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 42


 2057 0068 09       		.uleb128 0x9
 2058 0069 2E       		.uleb128 0x2e
 2059 006a 01       		.byte	0x1
 2060 006b 3F       		.uleb128 0x3f
 2061 006c 19       		.uleb128 0x19
 2062 006d 03       		.uleb128 0x3
 2063 006e 0E       		.uleb128 0xe
 2064 006f 3A       		.uleb128 0x3a
 2065 0070 0B       		.uleb128 0xb
 2066 0071 3B       		.uleb128 0x3b
 2067 0072 0B       		.uleb128 0xb
 2068 0073 27       		.uleb128 0x27
 2069 0074 19       		.uleb128 0x19
 2070 0075 11       		.uleb128 0x11
 2071 0076 01       		.uleb128 0x1
 2072 0077 12       		.uleb128 0x12
 2073 0078 06       		.uleb128 0x6
 2074 0079 40       		.uleb128 0x40
 2075 007a 18       		.uleb128 0x18
 2076 007b 9642     		.uleb128 0x2116
 2077 007d 19       		.uleb128 0x19
 2078 007e 01       		.uleb128 0x1
 2079 007f 13       		.uleb128 0x13
 2080 0080 00       		.byte	0
 2081 0081 00       		.byte	0
 2082 0082 0A       		.uleb128 0xa
 2083 0083 34       		.uleb128 0x34
 2084 0084 00       		.byte	0
 2085 0085 03       		.uleb128 0x3
 2086 0086 0E       		.uleb128 0xe
 2087 0087 3A       		.uleb128 0x3a
 2088 0088 0B       		.uleb128 0xb
 2089 0089 3B       		.uleb128 0x3b
 2090 008a 0B       		.uleb128 0xb
 2091 008b 49       		.uleb128 0x49
 2092 008c 13       		.uleb128 0x13
 2093 008d 02       		.uleb128 0x2
 2094 008e 18       		.uleb128 0x18
 2095 008f 00       		.byte	0
 2096 0090 00       		.byte	0
 2097 0091 0B       		.uleb128 0xb
 2098 0092 34       		.uleb128 0x34
 2099 0093 00       		.byte	0
 2100 0094 03       		.uleb128 0x3
 2101 0095 08       		.uleb128 0x8
 2102 0096 3A       		.uleb128 0x3a
 2103 0097 0B       		.uleb128 0xb
 2104 0098 3B       		.uleb128 0x3b
 2105 0099 0B       		.uleb128 0xb
 2106 009a 49       		.uleb128 0x49
 2107 009b 13       		.uleb128 0x13
 2108 009c 02       		.uleb128 0x2
 2109 009d 18       		.uleb128 0x18
 2110 009e 00       		.byte	0
 2111 009f 00       		.byte	0
 2112 00a0 0C       		.uleb128 0xc
 2113 00a1 2E       		.uleb128 0x2e
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 43


 2114 00a2 01       		.byte	0x1
 2115 00a3 03       		.uleb128 0x3
 2116 00a4 0E       		.uleb128 0xe
 2117 00a5 3A       		.uleb128 0x3a
 2118 00a6 0B       		.uleb128 0xb
 2119 00a7 3B       		.uleb128 0x3b
 2120 00a8 0B       		.uleb128 0xb
 2121 00a9 27       		.uleb128 0x27
 2122 00aa 19       		.uleb128 0x19
 2123 00ab 49       		.uleb128 0x49
 2124 00ac 13       		.uleb128 0x13
 2125 00ad 11       		.uleb128 0x11
 2126 00ae 01       		.uleb128 0x1
 2127 00af 12       		.uleb128 0x12
 2128 00b0 06       		.uleb128 0x6
 2129 00b1 40       		.uleb128 0x40
 2130 00b2 18       		.uleb128 0x18
 2131 00b3 9642     		.uleb128 0x2116
 2132 00b5 19       		.uleb128 0x19
 2133 00b6 01       		.uleb128 0x1
 2134 00b7 13       		.uleb128 0x13
 2135 00b8 00       		.byte	0
 2136 00b9 00       		.byte	0
 2137 00ba 0D       		.uleb128 0xd
 2138 00bb 05       		.uleb128 0x5
 2139 00bc 00       		.byte	0
 2140 00bd 03       		.uleb128 0x3
 2141 00be 08       		.uleb128 0x8
 2142 00bf 3A       		.uleb128 0x3a
 2143 00c0 0B       		.uleb128 0xb
 2144 00c1 3B       		.uleb128 0x3b
 2145 00c2 0B       		.uleb128 0xb
 2146 00c3 49       		.uleb128 0x49
 2147 00c4 13       		.uleb128 0x13
 2148 00c5 02       		.uleb128 0x2
 2149 00c6 18       		.uleb128 0x18
 2150 00c7 00       		.byte	0
 2151 00c8 00       		.byte	0
 2152 00c9 0E       		.uleb128 0xe
 2153 00ca 2E       		.uleb128 0x2e
 2154 00cb 01       		.byte	0x1
 2155 00cc 03       		.uleb128 0x3
 2156 00cd 0E       		.uleb128 0xe
 2157 00ce 3A       		.uleb128 0x3a
 2158 00cf 0B       		.uleb128 0xb
 2159 00d0 3B       		.uleb128 0x3b
 2160 00d1 0B       		.uleb128 0xb
 2161 00d2 27       		.uleb128 0x27
 2162 00d3 19       		.uleb128 0x19
 2163 00d4 11       		.uleb128 0x11
 2164 00d5 01       		.uleb128 0x1
 2165 00d6 12       		.uleb128 0x12
 2166 00d7 06       		.uleb128 0x6
 2167 00d8 40       		.uleb128 0x40
 2168 00d9 18       		.uleb128 0x18
 2169 00da 9642     		.uleb128 0x2116
 2170 00dc 19       		.uleb128 0x19
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 44


 2171 00dd 01       		.uleb128 0x1
 2172 00de 13       		.uleb128 0x13
 2173 00df 00       		.byte	0
 2174 00e0 00       		.byte	0
 2175 00e1 0F       		.uleb128 0xf
 2176 00e2 05       		.uleb128 0x5
 2177 00e3 00       		.byte	0
 2178 00e4 03       		.uleb128 0x3
 2179 00e5 0E       		.uleb128 0xe
 2180 00e6 3A       		.uleb128 0x3a
 2181 00e7 0B       		.uleb128 0xb
 2182 00e8 3B       		.uleb128 0x3b
 2183 00e9 0B       		.uleb128 0xb
 2184 00ea 49       		.uleb128 0x49
 2185 00eb 13       		.uleb128 0x13
 2186 00ec 02       		.uleb128 0x2
 2187 00ed 18       		.uleb128 0x18
 2188 00ee 00       		.byte	0
 2189 00ef 00       		.byte	0
 2190 00f0 10       		.uleb128 0x10
 2191 00f1 0F       		.uleb128 0xf
 2192 00f2 00       		.byte	0
 2193 00f3 0B       		.uleb128 0xb
 2194 00f4 0B       		.uleb128 0xb
 2195 00f5 49       		.uleb128 0x49
 2196 00f6 13       		.uleb128 0x13
 2197 00f7 00       		.byte	0
 2198 00f8 00       		.byte	0
 2199 00f9 11       		.uleb128 0x11
 2200 00fa 2E       		.uleb128 0x2e
 2201 00fb 01       		.byte	0x1
 2202 00fc 3F       		.uleb128 0x3f
 2203 00fd 19       		.uleb128 0x19
 2204 00fe 03       		.uleb128 0x3
 2205 00ff 0E       		.uleb128 0xe
 2206 0100 3A       		.uleb128 0x3a
 2207 0101 0B       		.uleb128 0xb
 2208 0102 3B       		.uleb128 0x3b
 2209 0103 0B       		.uleb128 0xb
 2210 0104 27       		.uleb128 0x27
 2211 0105 19       		.uleb128 0x19
 2212 0106 49       		.uleb128 0x49
 2213 0107 13       		.uleb128 0x13
 2214 0108 11       		.uleb128 0x11
 2215 0109 01       		.uleb128 0x1
 2216 010a 12       		.uleb128 0x12
 2217 010b 06       		.uleb128 0x6
 2218 010c 40       		.uleb128 0x40
 2219 010d 18       		.uleb128 0x18
 2220 010e 9642     		.uleb128 0x2116
 2221 0110 19       		.uleb128 0x19
 2222 0111 01       		.uleb128 0x1
 2223 0112 13       		.uleb128 0x13
 2224 0113 00       		.byte	0
 2225 0114 00       		.byte	0
 2226 0115 12       		.uleb128 0x12
 2227 0116 0B       		.uleb128 0xb
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 45


 2228 0117 01       		.byte	0x1
 2229 0118 11       		.uleb128 0x11
 2230 0119 01       		.uleb128 0x1
 2231 011a 12       		.uleb128 0x12
 2232 011b 06       		.uleb128 0x6
 2233 011c 00       		.byte	0
 2234 011d 00       		.byte	0
 2235 011e 13       		.uleb128 0x13
 2236 011f 34       		.uleb128 0x34
 2237 0120 00       		.byte	0
 2238 0121 03       		.uleb128 0x3
 2239 0122 0E       		.uleb128 0xe
 2240 0123 3A       		.uleb128 0x3a
 2241 0124 0B       		.uleb128 0xb
 2242 0125 3B       		.uleb128 0x3b
 2243 0126 05       		.uleb128 0x5
 2244 0127 49       		.uleb128 0x49
 2245 0128 13       		.uleb128 0x13
 2246 0129 02       		.uleb128 0x2
 2247 012a 18       		.uleb128 0x18
 2248 012b 00       		.byte	0
 2249 012c 00       		.byte	0
 2250 012d 14       		.uleb128 0x14
 2251 012e 34       		.uleb128 0x34
 2252 012f 00       		.byte	0
 2253 0130 03       		.uleb128 0x3
 2254 0131 0E       		.uleb128 0xe
 2255 0132 3A       		.uleb128 0x3a
 2256 0133 0B       		.uleb128 0xb
 2257 0134 3B       		.uleb128 0x3b
 2258 0135 05       		.uleb128 0x5
 2259 0136 49       		.uleb128 0x49
 2260 0137 13       		.uleb128 0x13
 2261 0138 3F       		.uleb128 0x3f
 2262 0139 19       		.uleb128 0x19
 2263 013a 3C       		.uleb128 0x3c
 2264 013b 19       		.uleb128 0x19
 2265 013c 00       		.byte	0
 2266 013d 00       		.byte	0
 2267 013e 00       		.byte	0
 2268              		.section	.debug_aranges,"",%progbits
 2269 0000 44000000 		.4byte	0x44
 2270 0004 0200     		.2byte	0x2
 2271 0006 00000000 		.4byte	.Ldebug_info0
 2272 000a 04       		.byte	0x4
 2273 000b 00       		.byte	0
 2274 000c 0000     		.2byte	0
 2275 000e 0000     		.2byte	0
 2276 0010 00000000 		.4byte	.LFB64
 2277 0014 78010000 		.4byte	.LFE64-.LFB64
 2278 0018 00000000 		.4byte	.LFB65
 2279 001c 44000000 		.4byte	.LFE65-.LFB65
 2280 0020 00000000 		.4byte	.LFB66
 2281 0024 48010000 		.4byte	.LFE66-.LFB66
 2282 0028 00000000 		.4byte	.LFB67
 2283 002c 3A000000 		.4byte	.LFE67-.LFB67
 2284 0030 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 46


 2285 0034 5C020000 		.4byte	.LFE68-.LFB68
 2286 0038 00000000 		.4byte	.LFB69
 2287 003c 0C020000 		.4byte	.LFE69-.LFB69
 2288 0040 00000000 		.4byte	0
 2289 0044 00000000 		.4byte	0
 2290              		.section	.debug_ranges,"",%progbits
 2291              	.Ldebug_ranges0:
 2292 0000 00000000 		.4byte	.LFB64
 2293 0004 78010000 		.4byte	.LFE64
 2294 0008 00000000 		.4byte	.LFB65
 2295 000c 44000000 		.4byte	.LFE65
 2296 0010 00000000 		.4byte	.LFB66
 2297 0014 48010000 		.4byte	.LFE66
 2298 0018 00000000 		.4byte	.LFB67
 2299 001c 3A000000 		.4byte	.LFE67
 2300 0020 00000000 		.4byte	.LFB68
 2301 0024 5C020000 		.4byte	.LFE68
 2302 0028 00000000 		.4byte	.LFB69
 2303 002c 0C020000 		.4byte	.LFE69
 2304 0030 00000000 		.4byte	0
 2305 0034 00000000 		.4byte	0
 2306              		.section	.debug_line,"",%progbits
 2307              	.Ldebug_line0:
 2308 0000 9C030000 		.section	.debug_str,"MS",%progbits,1
 2308      02003F01 
 2308      00000201 
 2308      FB0E0D00 
 2308      01010101 
 2309              	.LASF37:
 2310 0000 76616C69 		.ascii	"valid\000"
 2310      6400
 2311              	.LASF55:
 2312 0006 6469725F 		.ascii	"dir_latched_side\000"
 2312      6C617463 
 2312      6865645F 
 2312      73696465 
 2312      00
 2313              	.LASF31:
 2314 0017 56345F70 		.ascii	"V4_pp\000"
 2314      7000
 2315              	.LASF2:
 2316 001d 73686F72 		.ascii	"short int\000"
 2316      7420696E 
 2316      7400
 2317              	.LASF21:
 2318 0027 73697A65 		.ascii	"sizetype\000"
 2318      74797065 
 2318      00
 2319              	.LASF57:
 2320 0030 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2320      43313120 
 2320      352E342E 
 2320      31203230 
 2320      31363036 
 2321 0063 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2321      20726576 
 2321      6973696F 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 47


 2321      6E203233 
 2321      37373135 
 2322 0096 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2322      66756E63 
 2322      74696F6E 
 2322      2D736563 
 2322      74696F6E 
 2323              	.LASF62:
 2324 00be 6D61696E 		.ascii	"main\000"
 2324      00
 2325              	.LASF4:
 2326 00c3 5F5F7569 		.ascii	"__uint16_t\000"
 2326      6E743136 
 2326      5F7400
 2327              	.LASF16:
 2328 00ce 696E7436 		.ascii	"int64_t\000"
 2328      345F7400 
 2329              	.LASF13:
 2330 00d6 75696E74 		.ascii	"uint8_t\000"
 2330      385F7400 
 2331              	.LASF25:
 2332 00de 72617732 		.ascii	"raw2\000"
 2332      00
 2333              	.LASF29:
 2334 00e3 646D6D5F 		.ascii	"dmm_abs\000"
 2334      61627300 
 2335              	.LASF59:
 2336 00eb 433A5C55 		.ascii	"C:\\Users\\yram171\\Downloads\\Compsys-301-CODE\\YA"
 2336      73657273 
 2336      5C797261 
 2336      6D313731 
 2336      5C446F77 
 2337 0119 53482043 		.ascii	"SH Code\\CS301_Class.cydsn\000"
 2337      6F64655C 
 2337      43533330 
 2337      315F436C 
 2337      6173732E 
 2338              	.LASF32:
 2339 0133 56355F70 		.ascii	"V5_pp\000"
 2339      7000
 2340              	.LASF17:
 2341 0139 666C6F61 		.ascii	"float\000"
 2341      7400
 2342              	.LASF10:
 2343 013f 6C6F6E67 		.ascii	"long long int\000"
 2343      206C6F6E 
 2343      6720696E 
 2343      7400
 2344              	.LASF19:
 2345 014d 63686172 		.ascii	"char\000"
 2345      00
 2346              	.LASF23:
 2347 0152 70695F74 		.ascii	"pi_t\000"
 2347      00
 2348              	.LASF7:
 2349 0157 6C6F6E67 		.ascii	"long int\000"
 2349      20696E74 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 48


 2349      00
 2350              	.LASF9:
 2351 0160 5F5F696E 		.ascii	"__int64_t\000"
 2351      7436345F 
 2351      7400
 2352              	.LASF39:
 2353 016a 755F7261 		.ascii	"u_raw\000"
 2353      7700
 2354              	.LASF3:
 2355 0170 5F5F7569 		.ascii	"__uint8_t\000"
 2355      6E74385F 
 2355      7400
 2356              	.LASF45:
 2357 017a 73656E31 		.ascii	"sen1_on_line\000"
 2357      5F6F6E5F 
 2357      6C696E65 
 2357      00
 2358              	.LASF1:
 2359 0187 756E7369 		.ascii	"unsigned char\000"
 2359      676E6564 
 2359      20636861 
 2359      7200
 2360              	.LASF24:
 2361 0195 72617731 		.ascii	"raw1\000"
 2361      00
 2362              	.LASF20:
 2363 019a 6C6F6E67 		.ascii	"long double\000"
 2363      20646F75 
 2363      626C6500 
 2364              	.LASF46:
 2365 01a6 73656E32 		.ascii	"sen2_on_line\000"
 2365      5F6F6E5F 
 2365      6C696E65 
 2365      00
 2366              	.LASF52:
 2367 01b3 675F7374 		.ascii	"g_stop_now\000"
 2367      6F705F6E 
 2367      6F7700
 2368              	.LASF56:
 2369 01be 7475726E 		.ascii	"turn_cooldown_ticks\000"
 2369      5F636F6F 
 2369      6C646F77 
 2369      6E5F7469 
 2369      636B7300 
 2370              	.LASF47:
 2371 01d2 73656E33 		.ascii	"sen3_on_line\000"
 2371      5F6F6E5F 
 2371      6C696E65 
 2371      00
 2372              	.LASF0:
 2373 01df 7369676E 		.ascii	"signed char\000"
 2373      65642063 
 2373      68617200 
 2374              	.LASF11:
 2375 01eb 6C6F6E67 		.ascii	"long long unsigned int\000"
 2375      206C6F6E 
 2375      6720756E 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 49


 2375      7369676E 
 2375      65642069 
 2376              	.LASF48:
 2377 0202 73656E34 		.ascii	"sen4_on_line\000"
 2377      5F6F6E5F 
 2377      6C696E65 
 2377      00
 2378              	.LASF12:
 2379 020f 756E7369 		.ascii	"unsigned int\000"
 2379      676E6564 
 2379      20696E74 
 2379      00
 2380              	.LASF33:
 2381 021c 56365F70 		.ascii	"V6_pp\000"
 2381      7000
 2382              	.LASF14:
 2383 0222 75696E74 		.ascii	"uint16_t\000"
 2383      31365F74 
 2383      00
 2384              	.LASF49:
 2385 022b 73656E35 		.ascii	"sen5_on_line\000"
 2385      5F6F6E5F 
 2385      6C696E65 
 2385      00
 2386              	.LASF35:
 2387 0238 5F636C61 		.ascii	"_clampf\000"
 2387      6D706600 
 2388              	.LASF5:
 2389 0240 73686F72 		.ascii	"short unsigned int\000"
 2389      7420756E 
 2389      7369676E 
 2389      65642069 
 2389      6E7400
 2390              	.LASF50:
 2391 0253 73656E36 		.ascii	"sen6_on_line\000"
 2391      5F6F6E5F 
 2391      6C696E65 
 2391      00
 2392              	.LASF28:
 2393 0260 6E756D5F 		.ascii	"num_abs\000"
 2393      61627300 
 2394              	.LASF43:
 2395 0268 63656E74 		.ascii	"center_duty_est\000"
 2395      65725F64 
 2395      7574795F 
 2395      65737400 
 2396              	.LASF15:
 2397 0278 696E7433 		.ascii	"int32_t\000"
 2397      325F7400 
 2398              	.LASF36:
 2399 0280 70695F73 		.ascii	"pi_step\000"
 2399      74657000 
 2400              	.LASF44:
 2401 0288 73746565 		.ascii	"steer\000"
 2401      7200
 2402              	.LASF42:
 2403 028e 5F426F6F 		.ascii	"_Bool\000"
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 50


 2403      6C00
 2404              	.LASF60:
 2405 0294 6973725F 		.ascii	"isr_qd_Handler\000"
 2405      71645F48 
 2405      616E646C 
 2405      657200
 2406              	.LASF30:
 2407 02a3 646D6D5F 		.ascii	"dmm_signed\000"
 2407      7369676E 
 2407      656400
 2408              	.LASF54:
 2409 02ae 6469725F 		.ascii	"dir_delay_ticks\000"
 2409      64656C61 
 2409      795F7469 
 2409      636B7300 
 2410              	.LASF38:
 2411 02be 695F6E65 		.ascii	"i_next\000"
 2411      787400
 2412              	.LASF58:
 2413 02c5 6D61696E 		.ascii	"main.c\000"
 2413      2E6300
 2414              	.LASF8:
 2415 02cc 6C6F6E67 		.ascii	"long unsigned int\000"
 2415      20756E73 
 2415      69676E65 
 2415      6420696E 
 2415      7400
 2416              	.LASF27:
 2417 02de 64617667 		.ascii	"davg_sign\000"
 2417      5F736967 
 2417      6E00
 2418              	.LASF61:
 2419 02e8 6C696768 		.ascii	"light_sensors_update_and_maybe_request_turn\000"
 2419      745F7365 
 2419      6E736F72 
 2419      735F7570 
 2419      64617465 
 2420              	.LASF40:
 2421 0314 7361745F 		.ascii	"sat_hi\000"
 2421      686900
 2422              	.LASF22:
 2423 031b 745F6C6F 		.ascii	"t_loss\000"
 2423      737300
 2424              	.LASF6:
 2425 0322 5F5F696E 		.ascii	"__int32_t\000"
 2425      7433325F 
 2425      7400
 2426              	.LASF34:
 2427 032c 6E6F726D 		.ascii	"norm01_from_pp\000"
 2427      30315F66 
 2427      726F6D5F 
 2427      707000
 2428              	.LASF51:
 2429 033b 675F6469 		.ascii	"g_direction\000"
 2429      72656374 
 2429      696F6E00 
 2430              	.LASF41:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cclMOlFA.s 			page 51


 2431 0347 7361745F 		.ascii	"sat_lo\000"
 2431      6C6F00
 2432              	.LASF18:
 2433 034e 646F7562 		.ascii	"double\000"
 2433      6C6500
 2434              	.LASF53:
 2435 0355 675F6469 		.ascii	"g_dist_mm\000"
 2435      73745F6D 
 2435      6D00
 2436              	.LASF63:
 2437 035f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2437      52784275 
 2437      66666572 
 2437      00
 2438              	.LASF26:
 2439 036c 64617667 		.ascii	"davg_abs\000"
 2439      5F616273 
 2439      00
 2440              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	sen1_on_line:
  21 0000 00       		.space	1
  22              	sen2_on_line:
  23 0001 00       		.space	1
  24              	sen3_on_line:
  25 0002 00       		.space	1
  26              	sen4_on_line:
  27 0003 00       		.space	1
  28              	sen5_on_line:
  29 0004 00       		.space	1
  30              	sen6_on_line:
  31 0005 00       		.space	1
  32              	g_direction:
  33 0006 00       		.space	1
  34              	g_stop_now:
  35 0007 00       		.space	1
  36              		.align	2
  37              	g_dist_mm:
  38 0008 00000000 		.space	4
  39              		.align	1
  40              	dir_delay_ticks:
  41 000c 0000     		.space	2
  42              	dir_latched_side:
  43 000e 00       		.space	1
  44 000f 00       		.align	1
  45              	turn_cooldown_ticks:
  46 0010 0000     		.space	2
  47              	s12_prev:
  48 0012 00       		.space	1
  49              		.global	__aeabi_ldivmod
  50              		.section	.text.isr_qd_Handler,"ax",%progbits
  51              		.align	2
  52              		.global	isr_qd_Handler
  53              		.thumb
  54              		.thumb_func
  55              		.type	isr_qd_Handler, %function
  56              	isr_qd_Handler:
  57              	.LFB64:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 2


  58              		.file 1 "main.c"
   1:main.c        **** /* ========================= main.c (with PI steering + turn-call delay) =========================
   2:main.c        ****  * - Keeps straight-line PI active during a short delay after g_direction flips (Option A)
   3:main.c        ****  * - Then calls Directions_Handle(&g_direction) to run the maneuver
   4:main.c        ****  * - Resets PI integrator after the turn completes
   5:main.c        ****  * ============================================================================================== *
   6:main.c        **** 
   7:main.c        **** #include <project.h>
   8:main.c        **** #include <stdint.h>
   9:main.c        **** #include <stdbool.h>
  10:main.c        **** 
  11:main.c        **** #include <sensors.h>     // Sensor_ComputePeakToPeak()
  12:main.c        **** #include "motor_s.h"     // set_motors_*, motor_enable
  13:main.c        **** #include "directions.h"  // Directions_* turning module
  14:main.c        **** 
  15:main.c        **** 
  16:main.c        **** /* ===== Loop pacing (kept) ===== */
  17:main.c        **** #define LOOP_DT_MS               8u
  18:main.c        **** #define DT_S   ( (float)LOOP_DT_MS / 1000.0f )
  19:main.c        **** 
  20:main.c        **** /* ===== Cruise speed / distance target (kept) ===== */
  21:main.c        **** #define VMAX_CONST_MM_S        1000
  22:main.c        **** #define SPEED_FRAC_PERCENT      20
  23:main.c        **** #define V_CRUISE_MM_S  ((int32_t)VMAX_CONST_MM_S * (int32_t)SPEED_FRAC_PERCENT / 100)
  24:main.c        **** #define TARGET_DIST_MM        150  // HALF THE DISTANCE   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  25:main.c        **** 
  26:main.c        **** /* ===== Encoder â†’ mm conversion (kept) ===== */
  27:main.c        **** #define QD_SAMPLE_MS             5u
  28:main.c        **** #define CPR_OUTSHAFT           228u
  29:main.c        **** #define R_MM                    34
  30:main.c        **** #define PI_X1000              3142
  31:main.c        **** #define PERIM_MM_X1000   ((int32_t)(2 * PI_X1000 * R_MM))
  32:main.c        **** #define MM_PER_COUNT_X1000     ( PERIM_MM_X1000 / CPR_OUTSHAFT )
  33:main.c        **** #define CALIB_DIST_X1000     1000   // Changed to 1000 to avoid scaling
  34:main.c        **** #define APPLY_CALIB_DIST(x)  ( (int32_t)(((int64_t)(x) * CALIB_DIST_X1000 + 500)/1000) )
  35:main.c        **** 
  36:main.c        **** /* ===== S1/S2 relaxed detection (kept) ===== */
  37:main.c        **** #define S_MINC_COUNTS            10
  38:main.c        **** #define S_MAXC_COUNTS           100
  39:main.c        **** #define S_HYST_COUNTS           16u
  40:main.c        **** 
  41:main.c        **** /* ===== Turn request filtering (kept) ===== */
  42:main.c        **** #define TURN_DEBOUNCE_TICKS       5u
  43:main.c        **** #define CLEAR_ARM_TICKS           4u
  44:main.c        **** 
  45:main.c        **** #define DIR_CALL_DELAY_MS        (100)  /* wait ~200 ms before starting the maneuver */
  46:main.c        **** #define DIR_CALL_DELAY_TICKS     ((DIR_CALL_DELAY_MS + LOOP_DT_MS - 1) / LOOP_DT_MS)
  47:main.c        **** 
  48:main.c        **** 
  49:main.c        **** // Cooldown after turn to ignore intersection sensors V1 & V2
  50:main.c        ****  #define TURN_COOLDOWN_MS (400)
  51:main.c        **** //static volatile uint16_t TURN_COOLDOWN_MS;
  52:main.c        **** 
  53:main.c        **** #define TURN_COOLDOWN_TICKS ((TURN_COOLDOWN_MS + LOOP_DT_MS - 1) / LOOP_DT_MS
  54:main.c        **** 
  55:main.c        **** 
  56:main.c        **** 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 3


  57:main.c        **** /* ===== Local sensor flags (used for S1/S2 edge) ===== */
  58:main.c        **** static uint8_t sen1_on_line=0, sen2_on_line=0, sen3_on_line=0;
  59:main.c        **** static uint8_t sen4_on_line=0, sen5_on_line=0, sen6_on_line=0;
  60:main.c        **** 
  61:main.c        **** /* ===== Global state (kept) ===== */
  62:main.c        **** static volatile uint8_t g_direction = 0;   /* 0=straight, 1=left, 2=right */
  63:main.c        **** static volatile uint8_t g_stop_now  = 0;
  64:main.c        **** static volatile int32_t g_dist_mm   = 0;
  65:main.c        **** 
  66:main.c        **** /* ===== Option A state ===== */
  67:main.c        **** static uint16_t dir_delay_ticks = 0;        /* countdown in loop ticks */
  68:main.c        **** static uint8_t  dir_latched_side = 0;       /* remembers 1 or 2 while waiting */
  69:main.c        **** 
  70:main.c        **** 
  71:main.c        **** static uint16_t turn_cooldown_ticks = 0;
  72:main.c        **** static uint8_t s12_prev = 0;
  73:main.c        **** 
  74:main.c        **** 
  75:main.c        **** /* ------------------------------- 5 ms Timer ISR: accumulate distance (kept) ---------------------
  76:main.c        **** CY_ISR(isr_qd_Handler)
  77:main.c        **** {
  59              		.loc 1 77 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 48
  62              		@ frame_needed = 1, uses_anonymous_args = 0
  63 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  64              		.cfi_def_cfa_offset 36
  65              		.cfi_offset 4, -36
  66              		.cfi_offset 5, -32
  67              		.cfi_offset 6, -28
  68              		.cfi_offset 7, -24
  69              		.cfi_offset 8, -20
  70              		.cfi_offset 9, -16
  71              		.cfi_offset 10, -12
  72              		.cfi_offset 11, -8
  73              		.cfi_offset 14, -4
  74 0004 8DB0     		sub	sp, sp, #52
  75              		.cfi_def_cfa_offset 88
  76 0006 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
  78:main.c        ****     if (g_direction == 0u) {  // Only accumulate distance when moving straight
  78              		.loc 1 78 0
  79 0008 404B     		ldr	r3, .L7
  80 000a 1B78     		ldrb	r3, [r3]
  81 000c DBB2     		uxtb	r3, r3
  82 000e 002B     		cmp	r3, #0
  83 0010 74D1     		bne	.L2
  84              	.LBB2:
  79:main.c        ****         int32_t raw1 = QuadDec_M1_GetCounter();  QuadDec_M1_SetCounter(0);
  85              		.loc 1 79 0
  86 0012 FFF7FEFF 		bl	QuadDec_M1_GetCounter
  87 0016 0346     		mov	r3, r0
  88 0018 FB62     		str	r3, [r7, #44]
  89 001a 0020     		movs	r0, #0
  90 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  80:main.c        ****         int32_t raw2 = QuadDec_M2_GetCounter();  QuadDec_M2_SetCounter(0);
  91              		.loc 1 80 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 4


  92 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
  93 0024 0346     		mov	r3, r0
  94 0026 BB62     		str	r3, [r7, #40]
  95 0028 0020     		movs	r0, #0
  96 002a FFF7FEFF 		bl	QuadDec_M2_SetCounter
  81:main.c        **** 
  82:main.c        ****         int32_t d1 = raw1, d2 = raw2;
  97              		.loc 1 82 0
  98 002e FB6A     		ldr	r3, [r7, #44]
  99 0030 7B62     		str	r3, [r7, #36]
 100 0032 BB6A     		ldr	r3, [r7, #40]
 101 0034 3B62     		str	r3, [r7, #32]
  83:main.c        ****         int32_t a1 = (d1 >= 0) ? d1 : -d1;
 102              		.loc 1 83 0
 103 0036 7B6A     		ldr	r3, [r7, #36]
 104 0038 002B     		cmp	r3, #0
 105 003a B8BF     		it	lt
 106 003c 5B42     		rsblt	r3, r3, #0
 107 003e FB61     		str	r3, [r7, #28]
  84:main.c        ****         int32_t a2 = (d2 >= 0) ? d2 : -d2;
 108              		.loc 1 84 0
 109 0040 3B6A     		ldr	r3, [r7, #32]
 110 0042 002B     		cmp	r3, #0
 111 0044 B8BF     		it	lt
 112 0046 5B42     		rsblt	r3, r3, #0
 113 0048 BB61     		str	r3, [r7, #24]
  85:main.c        ****         int32_t davg_abs = (a1 + a2) / 2;
 114              		.loc 1 85 0
 115 004a FA69     		ldr	r2, [r7, #28]
 116 004c BB69     		ldr	r3, [r7, #24]
 117 004e 1344     		add	r3, r3, r2
 118 0050 DA0F     		lsrs	r2, r3, #31
 119 0052 1344     		add	r3, r3, r2
 120 0054 5B10     		asrs	r3, r3, #1
 121 0056 7B61     		str	r3, [r7, #20]
  86:main.c        ****         int32_t davg_sign = ((d1 + d2) >= 0) ? +1 : -1;
 122              		.loc 1 86 0
 123 0058 7A6A     		ldr	r2, [r7, #36]
 124 005a 3B6A     		ldr	r3, [r7, #32]
 125 005c 1344     		add	r3, r3, r2
 126 005e 002B     		cmp	r3, #0
 127 0060 01DB     		blt	.L3
 128              		.loc 1 86 0 is_stmt 0 discriminator 1
 129 0062 0123     		movs	r3, #1
 130 0064 01E0     		b	.L4
 131              	.L3:
 132              		.loc 1 86 0 discriminator 2
 133 0066 4FF0FF33 		mov	r3, #-1
 134              	.L4:
 135              		.loc 1 86 0 discriminator 4
 136 006a 3B61     		str	r3, [r7, #16]
  87:main.c        **** 
  88:main.c        ****         // Calculate the distance moved
  89:main.c        ****         int64_t num = (int64_t)(davg_abs) * MM_PER_COUNT_X1000;  // Calculate mm from encoder count
 137              		.loc 1 89 0 is_stmt 1 discriminator 4
 138 006c 7B69     		ldr	r3, [r7, #20]
 139 006e 1946     		mov	r1, r3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 5


 140 0070 4FEAE172 		asr	r2, r1, #31
 141 0074 0B46     		mov	r3, r1
 142 0076 1446     		mov	r4, r2
 143 0078 DB18     		adds	r3, r3, r3
 144 007a 44EB0404 		adc	r4, r4, r4
 145 007e 5B18     		adds	r3, r3, r1
 146 0080 44EB0204 		adc	r4, r4, r2
 147 0084 4FEA840B 		lsl	fp, r4, #2
 148 0088 4BEA937B 		orr	fp, fp, r3, lsr #30
 149 008c 4FEA830A 		lsl	r10, r3, #2
 150 0090 5346     		mov	r3, r10
 151 0092 5C46     		mov	r4, fp
 152 0094 5B18     		adds	r3, r3, r1
 153 0096 44EB0204 		adc	r4, r4, r2
 154 009a E600     		lsls	r6, r4, #3
 155 009c 46EA5376 		orr	r6, r6, r3, lsr #29
 156 00a0 DD00     		lsls	r5, r3, #3
 157 00a2 5B19     		adds	r3, r3, r5
 158 00a4 44EB0604 		adc	r4, r4, r6
 159 00a8 4FEAC409 		lsl	r9, r4, #3
 160 00ac 49EA5379 		orr	r9, r9, r3, lsr #29
 161 00b0 4FEAC308 		lsl	r8, r3, #3
 162 00b4 4346     		mov	r3, r8
 163 00b6 4C46     		mov	r4, r9
 164 00b8 5B18     		adds	r3, r3, r1
 165 00ba 44EB0204 		adc	r4, r4, r2
 166 00be C7E90234 		strd	r3, [r7, #8]
  90:main.c        ****         int32_t dmm_abs = (int32_t)((num + 500) / 1000);          // Round to nearest mm
 167              		.loc 1 90 0 discriminator 4
 168 00c2 D7E90234 		ldrd	r3, [r7, #8]
 169 00c6 13F5FA70 		adds	r0, r3, #500
 170 00ca 44F10001 		adc	r1, r4, #0
 171 00ce 4FF47A72 		mov	r2, #1000
 172 00d2 4FF00003 		mov	r3, #0
 173 00d6 FFF7FEFF 		bl	__aeabi_ldivmod
 174 00da 0346     		mov	r3, r0
 175 00dc 0C46     		mov	r4, r1
 176 00de 7B60     		str	r3, [r7, #4]
  91:main.c        ****         int32_t dmm_signed = (davg_sign >= 0) ? +dmm_abs : -dmm_abs;
 177              		.loc 1 91 0 discriminator 4
 178 00e0 3B69     		ldr	r3, [r7, #16]
 179 00e2 002B     		cmp	r3, #0
 180 00e4 02DA     		bge	.L5
 181              		.loc 1 91 0 is_stmt 0 discriminator 1
 182 00e6 7B68     		ldr	r3, [r7, #4]
 183 00e8 5B42     		negs	r3, r3
 184 00ea 00E0     		b	.L6
 185              	.L5:
 186              		.loc 1 91 0 discriminator 2
 187 00ec 7B68     		ldr	r3, [r7, #4]
 188              	.L6:
 189              		.loc 1 91 0 discriminator 4
 190 00ee 3B60     		str	r3, [r7]
  92:main.c        **** 
  93:main.c        ****         // Update the global distance traveled
  94:main.c        ****         g_dist_mm += dmm_signed;
 191              		.loc 1 94 0 is_stmt 1 discriminator 4
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 6


 192 00f0 074B     		ldr	r3, .L7+4
 193 00f2 1A68     		ldr	r2, [r3]
 194 00f4 3B68     		ldr	r3, [r7]
 195 00f6 1344     		add	r3, r3, r2
 196 00f8 054A     		ldr	r2, .L7+4
 197 00fa 1360     		str	r3, [r2]
 198              	.L2:
 199              	.LBE2:
  95:main.c        **** 
  96:main.c        ****         // Optionally add small smoothing for distance (comment this out if you don't want smoothin
  97:main.c        ****         // static int32_t v_mm = 0;
  98:main.c        ****         // v_mm = v_mm + ((dmm_signed - v_mm) >> 2); // ~alpha=0.25
  99:main.c        ****         // g_dist_mm += v_mm;
 100:main.c        ****     }
 101:main.c        **** 
 102:main.c        ****     (void)Timer_QD_ReadStatusRegister();  // Clear the interrupt flag
 200              		.loc 1 102 0
 201 00fc FFF7FEFF 		bl	Timer_QD_ReadStatusRegister
 103:main.c        **** }
 202              		.loc 1 103 0
 203 0100 00BF     		nop
 204 0102 3437     		adds	r7, r7, #52
 205              		.cfi_def_cfa_offset 36
 206 0104 BD46     		mov	sp, r7
 207              		.cfi_def_cfa_register 13
 208              		@ sp needed
 209 0106 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 210              	.L8:
 211 010a 00BF     		.align	2
 212              	.L7:
 213 010c 06000000 		.word	g_direction
 214 0110 08000000 		.word	g_dist_mm
 215              		.cfi_endproc
 216              	.LFE64:
 217              		.size	isr_qd_Handler, .-isr_qd_Handler
 218              		.global	__aeabi_i2f
 219              		.global	__aeabi_fdiv
 220              		.section	.text.norm01_from_pp,"ax",%progbits
 221              		.align	2
 222              		.thumb
 223              		.thumb_func
 224              		.type	norm01_from_pp, %function
 225              	norm01_from_pp:
 226              	.LFB65:
 104:main.c        **** 
 105:main.c        **** /* Utility: normalize peak-to-peak to [0..1] */
 106:main.c        **** static inline float norm01_from_pp(uint16_t pp)
 107:main.c        **** {
 227              		.loc 1 107 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 8
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231 0000 80B5     		push	{r7, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 7


 236              		.cfi_def_cfa_offset 16
 237 0004 00AF     		add	r7, sp, #0
 238              		.cfi_def_cfa_register 7
 239 0006 0346     		mov	r3, r0
 240 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 108:main.c        ****     if (pp <= S_MINC_COUNTS) return 0.0f;
 241              		.loc 1 108 0
 242 000a FB88     		ldrh	r3, [r7, #6]
 243 000c 0A2B     		cmp	r3, #10
 244 000e 02D8     		bhi	.L10
 245              		.loc 1 108 0 is_stmt 0 discriminator 1
 246 0010 4FF00003 		mov	r3, #0
 247 0014 10E0     		b	.L11
 248              	.L10:
 109:main.c        ****     if (pp >= S_MAXC_COUNTS) return 1.0f;
 249              		.loc 1 109 0 is_stmt 1
 250 0016 FB88     		ldrh	r3, [r7, #6]
 251 0018 632B     		cmp	r3, #99
 252 001a 02D9     		bls	.L12
 253              		.loc 1 109 0 is_stmt 0 discriminator 1
 254 001c 4FF07E53 		mov	r3, #1065353216
 255 0020 0AE0     		b	.L11
 256              	.L12:
 110:main.c        ****     return (float)(pp - S_MINC_COUNTS) / (float)(S_MAXC_COUNTS - S_MINC_COUNTS);
 257              		.loc 1 110 0 is_stmt 1
 258 0022 FB88     		ldrh	r3, [r7, #6]
 259 0024 0A3B     		subs	r3, r3, #10
 260 0026 1846     		mov	r0, r3
 261 0028 FFF7FEFF 		bl	__aeabi_i2f
 262 002c 0346     		mov	r3, r0
 263 002e 0449     		ldr	r1, .L13
 264 0030 1846     		mov	r0, r3
 265 0032 FFF7FEFF 		bl	__aeabi_fdiv
 266 0036 0346     		mov	r3, r0
 267              	.L11:
 111:main.c        **** }
 268              		.loc 1 111 0
 269 0038 1846     		mov	r0, r3
 270 003a 0837     		adds	r7, r7, #8
 271              		.cfi_def_cfa_offset 8
 272 003c BD46     		mov	sp, r7
 273              		.cfi_def_cfa_register 13
 274              		@ sp needed
 275 003e 80BD     		pop	{r7, pc}
 276              	.L14:
 277              		.align	2
 278              	.L13:
 279 0040 0000B442 		.word	1119092736
 280              		.cfi_endproc
 281              	.LFE65:
 282              		.size	norm01_from_pp, .-norm01_from_pp
 283              		.section	.text.light_sensors_update_and_maybe_request_turn,"ax",%progbits
 284              		.align	2
 285              		.thumb
 286              		.thumb_func
 287              		.type	light_sensors_update_and_maybe_request_turn, %function
 288              	light_sensors_update_and_maybe_request_turn:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 8


 289              	.LFB66:
 112:main.c        **** 
 113:main.c        **** /* Read sensors and (maybe) request a turn based on S1 / S2 (kept) */
 114:main.c        **** static void light_sensors_update_and_maybe_request_turn(uint16_t* V4_pp, uint16_t* V5_pp, uint16_t*
 115:main.c        **** {
 290              		.loc 1 115 0
 291              		.cfi_startproc
 292              		@ args = 0, pretend = 0, frame = 32
 293              		@ frame_needed = 1, uses_anonymous_args = 0
 294 0000 80B5     		push	{r7, lr}
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 7, -8
 297              		.cfi_offset 14, -4
 298 0002 88B0     		sub	sp, sp, #32
 299              		.cfi_def_cfa_offset 40
 300 0004 00AF     		add	r7, sp, #0
 301              		.cfi_def_cfa_register 7
 302 0006 F860     		str	r0, [r7, #12]
 303 0008 B960     		str	r1, [r7, #8]
 304 000a 7A60     		str	r2, [r7, #4]
 116:main.c        ****     uint16_t V1 = Sensor_ComputePeakToPeak(0);
 305              		.loc 1 116 0
 306 000c 0020     		movs	r0, #0
 307 000e FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 308 0012 0346     		mov	r3, r0
 309 0014 FB83     		strh	r3, [r7, #30]	@ movhi
 117:main.c        ****     uint16_t V2 = Sensor_ComputePeakToPeak(1);
 310              		.loc 1 117 0
 311 0016 0120     		movs	r0, #1
 312 0018 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 313 001c 0346     		mov	r3, r0
 314 001e BB83     		strh	r3, [r7, #28]	@ movhi
 118:main.c        ****     uint16_t V3 = Sensor_ComputePeakToPeak(2);
 315              		.loc 1 118 0
 316 0020 0220     		movs	r0, #2
 317 0022 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 318 0026 0346     		mov	r3, r0
 319 0028 7B83     		strh	r3, [r7, #26]	@ movhi
 119:main.c        ****     uint16_t V4 = Sensor_ComputePeakToPeak(3);
 320              		.loc 1 119 0
 321 002a 0320     		movs	r0, #3
 322 002c FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 323 0030 0346     		mov	r3, r0
 324 0032 3B83     		strh	r3, [r7, #24]	@ movhi
 120:main.c        ****     uint16_t V5 = Sensor_ComputePeakToPeak(4);
 325              		.loc 1 120 0
 326 0034 0420     		movs	r0, #4
 327 0036 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 328 003a 0346     		mov	r3, r0
 329 003c FB82     		strh	r3, [r7, #22]	@ movhi
 121:main.c        ****     uint16_t V6 = Sensor_ComputePeakToPeak(5);
 330              		.loc 1 121 0
 331 003e 0520     		movs	r0, #5
 332 0040 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 333 0044 0346     		mov	r3, r0
 334 0046 BB82     		strh	r3, [r7, #20]	@ movhi
 122:main.c        **** 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 9


 123:main.c        ****     if (V4_pp) *V4_pp = V4;
 335              		.loc 1 123 0
 336 0048 FB68     		ldr	r3, [r7, #12]
 337 004a 002B     		cmp	r3, #0
 338 004c 02D0     		beq	.L16
 339              		.loc 1 123 0 is_stmt 0 discriminator 1
 340 004e FB68     		ldr	r3, [r7, #12]
 341 0050 3A8B     		ldrh	r2, [r7, #24]	@ movhi
 342 0052 1A80     		strh	r2, [r3]	@ movhi
 343              	.L16:
 124:main.c        ****     if (V5_pp) *V5_pp = V5;
 344              		.loc 1 124 0 is_stmt 1
 345 0054 BB68     		ldr	r3, [r7, #8]
 346 0056 002B     		cmp	r3, #0
 347 0058 02D0     		beq	.L17
 348              		.loc 1 124 0 is_stmt 0 discriminator 1
 349 005a BB68     		ldr	r3, [r7, #8]
 350 005c FA8A     		ldrh	r2, [r7, #22]	@ movhi
 351 005e 1A80     		strh	r2, [r3]	@ movhi
 352              	.L17:
 125:main.c        ****     if (V6_pp) *V6_pp = V6;
 353              		.loc 1 125 0 is_stmt 1
 354 0060 7B68     		ldr	r3, [r7, #4]
 355 0062 002B     		cmp	r3, #0
 356 0064 02D0     		beq	.L18
 357              		.loc 1 125 0 is_stmt 0 discriminator 1
 358 0066 7B68     		ldr	r3, [r7, #4]
 359 0068 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 360 006a 1A80     		strh	r2, [r3]	@ movhi
 361              	.L18:
 126:main.c        ****     
 127:main.c        ****     sen1_on_line = (V1 > 10 && V1 < 100) ? 1u : 0u;
 362              		.loc 1 127 0 is_stmt 1
 363 006c FB8B     		ldrh	r3, [r7, #30]
 364 006e 0A2B     		cmp	r3, #10
 365 0070 04D9     		bls	.L19
 366              		.loc 1 127 0 is_stmt 0 discriminator 1
 367 0072 FB8B     		ldrh	r3, [r7, #30]
 368 0074 632B     		cmp	r3, #99
 369 0076 01D8     		bhi	.L19
 370              		.loc 1 127 0 discriminator 3
 371 0078 0122     		movs	r2, #1
 372 007a 00E0     		b	.L20
 373              	.L19:
 374              		.loc 1 127 0 discriminator 4
 375 007c 0022     		movs	r2, #0
 376              	.L20:
 377              		.loc 1 127 0 discriminator 6
 378 007e 2A4B     		ldr	r3, .L34
 379 0080 1A70     		strb	r2, [r3]
 128:main.c        ****     sen2_on_line = (V2 > 10 && V2 < 100) ? 1u : 0u;
 380              		.loc 1 128 0 is_stmt 1 discriminator 6
 381 0082 BB8B     		ldrh	r3, [r7, #28]
 382 0084 0A2B     		cmp	r3, #10
 383 0086 04D9     		bls	.L21
 384              		.loc 1 128 0 is_stmt 0 discriminator 1
 385 0088 BB8B     		ldrh	r3, [r7, #28]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 10


 386 008a 632B     		cmp	r3, #99
 387 008c 01D8     		bhi	.L21
 388              		.loc 1 128 0 discriminator 3
 389 008e 0122     		movs	r2, #1
 390 0090 00E0     		b	.L22
 391              	.L21:
 392              		.loc 1 128 0 discriminator 4
 393 0092 0022     		movs	r2, #0
 394              	.L22:
 395              		.loc 1 128 0 discriminator 6
 396 0094 254B     		ldr	r3, .L34+4
 397 0096 1A70     		strb	r2, [r3]
 129:main.c        ****     sen3_on_line = (V3 > 10 && V3 < 100) ? 1u : 0u;
 398              		.loc 1 129 0 is_stmt 1 discriminator 6
 399 0098 7B8B     		ldrh	r3, [r7, #26]
 400 009a 0A2B     		cmp	r3, #10
 401 009c 04D9     		bls	.L23
 402              		.loc 1 129 0 is_stmt 0 discriminator 1
 403 009e 7B8B     		ldrh	r3, [r7, #26]
 404 00a0 632B     		cmp	r3, #99
 405 00a2 01D8     		bhi	.L23
 406              		.loc 1 129 0 discriminator 3
 407 00a4 0122     		movs	r2, #1
 408 00a6 00E0     		b	.L24
 409              	.L23:
 410              		.loc 1 129 0 discriminator 4
 411 00a8 0022     		movs	r2, #0
 412              	.L24:
 413              		.loc 1 129 0 discriminator 6
 414 00aa 214B     		ldr	r3, .L34+8
 415 00ac 1A70     		strb	r2, [r3]
 130:main.c        ****     sen4_on_line = (V4 > 10 && V4 < 100) ? 1u : 0u;
 416              		.loc 1 130 0 is_stmt 1 discriminator 6
 417 00ae 3B8B     		ldrh	r3, [r7, #24]
 418 00b0 0A2B     		cmp	r3, #10
 419 00b2 04D9     		bls	.L25
 420              		.loc 1 130 0 is_stmt 0 discriminator 1
 421 00b4 3B8B     		ldrh	r3, [r7, #24]
 422 00b6 632B     		cmp	r3, #99
 423 00b8 01D8     		bhi	.L25
 424              		.loc 1 130 0 discriminator 3
 425 00ba 0122     		movs	r2, #1
 426 00bc 00E0     		b	.L26
 427              	.L25:
 428              		.loc 1 130 0 discriminator 4
 429 00be 0022     		movs	r2, #0
 430              	.L26:
 431              		.loc 1 130 0 discriminator 6
 432 00c0 1C4B     		ldr	r3, .L34+12
 433 00c2 1A70     		strb	r2, [r3]
 131:main.c        ****     sen5_on_line = (V5 > 10 && V5 < 100) ? 1u : 0u;
 434              		.loc 1 131 0 is_stmt 1 discriminator 6
 435 00c4 FB8A     		ldrh	r3, [r7, #22]
 436 00c6 0A2B     		cmp	r3, #10
 437 00c8 04D9     		bls	.L27
 438              		.loc 1 131 0 is_stmt 0 discriminator 1
 439 00ca FB8A     		ldrh	r3, [r7, #22]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 11


 440 00cc 632B     		cmp	r3, #99
 441 00ce 01D8     		bhi	.L27
 442              		.loc 1 131 0 discriminator 3
 443 00d0 0122     		movs	r2, #1
 444 00d2 00E0     		b	.L28
 445              	.L27:
 446              		.loc 1 131 0 discriminator 4
 447 00d4 0022     		movs	r2, #0
 448              	.L28:
 449              		.loc 1 131 0 discriminator 6
 450 00d6 184B     		ldr	r3, .L34+16
 451 00d8 1A70     		strb	r2, [r3]
 132:main.c        ****     sen6_on_line = (V6 > 10 && V6 < 100) ? 1u : 0u;
 452              		.loc 1 132 0 is_stmt 1 discriminator 6
 453 00da BB8A     		ldrh	r3, [r7, #20]
 454 00dc 0A2B     		cmp	r3, #10
 455 00de 04D9     		bls	.L29
 456              		.loc 1 132 0 is_stmt 0 discriminator 1
 457 00e0 BB8A     		ldrh	r3, [r7, #20]
 458 00e2 632B     		cmp	r3, #99
 459 00e4 01D8     		bhi	.L29
 460              		.loc 1 132 0 discriminator 3
 461 00e6 0122     		movs	r2, #1
 462 00e8 00E0     		b	.L30
 463              	.L29:
 464              		.loc 1 132 0 discriminator 4
 465 00ea 0022     		movs	r2, #0
 466              	.L30:
 467              		.loc 1 132 0 discriminator 6
 468 00ec 134B     		ldr	r3, .L34+20
 469 00ee 1A70     		strb	r2, [r3]
 133:main.c        **** 
 134:main.c        ****     if (g_direction == 0u && turn_cooldown_ticks == 0u){
 470              		.loc 1 134 0 is_stmt 1 discriminator 6
 471 00f0 134B     		ldr	r3, .L34+24
 472 00f2 1B78     		ldrb	r3, [r3]
 473 00f4 DBB2     		uxtb	r3, r3
 474 00f6 002B     		cmp	r3, #0
 475 00f8 12D1     		bne	.L33
 476              		.loc 1 134 0 is_stmt 0 discriminator 1
 477 00fa 124B     		ldr	r3, .L34+28
 478 00fc 1B88     		ldrh	r3, [r3]
 479 00fe 002B     		cmp	r3, #0
 480 0100 0ED1     		bne	.L33
 135:main.c        ****         if (sen1_on_line){
 481              		.loc 1 135 0 is_stmt 1
 482 0102 094B     		ldr	r3, .L34
 483 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 484 0106 002B     		cmp	r3, #0
 485 0108 03D0     		beq	.L32
 136:main.c        ****             g_direction = 1;  // LEFT turn
 486              		.loc 1 136 0
 487 010a 0D4B     		ldr	r3, .L34+24
 488 010c 0122     		movs	r2, #1
 489 010e 1A70     		strb	r2, [r3]
 137:main.c        ****         } else if (sen2_on_line){
 138:main.c        ****             g_direction = 2;  // RIGHT turn
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 12


 139:main.c        ****         }
 140:main.c        ****     }
 141:main.c        **** }
 490              		.loc 1 141 0
 491 0110 06E0     		b	.L33
 492              	.L32:
 137:main.c        ****         } else if (sen2_on_line){
 493              		.loc 1 137 0
 494 0112 064B     		ldr	r3, .L34+4
 495 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 496 0116 002B     		cmp	r3, #0
 497 0118 02D0     		beq	.L33
 138:main.c        ****         }
 498              		.loc 1 138 0
 499 011a 094B     		ldr	r3, .L34+24
 500 011c 0222     		movs	r2, #2
 501 011e 1A70     		strb	r2, [r3]
 502              	.L33:
 503              		.loc 1 141 0
 504 0120 00BF     		nop
 505 0122 2037     		adds	r7, r7, #32
 506              		.cfi_def_cfa_offset 8
 507 0124 BD46     		mov	sp, r7
 508              		.cfi_def_cfa_register 13
 509              		@ sp needed
 510 0126 80BD     		pop	{r7, pc}
 511              	.L35:
 512              		.align	2
 513              	.L34:
 514 0128 00000000 		.word	sen1_on_line
 515 012c 01000000 		.word	sen2_on_line
 516 0130 02000000 		.word	sen3_on_line
 517 0134 03000000 		.word	sen4_on_line
 518 0138 04000000 		.word	sen5_on_line
 519 013c 05000000 		.word	sen6_on_line
 520 0140 06000000 		.word	g_direction
 521 0144 10000000 		.word	turn_cooldown_ticks
 522              		.cfi_endproc
 523              	.LFE66:
 524              		.size	light_sensors_update_and_maybe_request_turn, .-light_sensors_update_and_maybe_request_turn
 525              		.global	__aeabi_fcmplt
 526              		.global	__aeabi_fcmpgt
 527              		.section	.text._clampf,"ax",%progbits
 528              		.align	2
 529              		.thumb
 530              		.thumb_func
 531              		.type	_clampf, %function
 532              	_clampf:
 533              	.LFB67:
 142:main.c        **** 
 143:main.c        **** /* ================= PI Controller (same as your current file) ================= */
 144:main.c        **** #define STEER_MAX        15
 145:main.c        **** #define KP               16.0f
 146:main.c        **** #define KI               2.0f
 147:main.c        **** #define INT_LIM          30.0f
 148:main.c        **** #define LOSS_TIMEOUT_T   0.25f
 149:main.c        **** 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 13


 150:main.c        **** typedef struct { float i, u, t_loss; } pi_t;
 151:main.c        **** static inline float _clampf(float x, float lo, float hi){ return (x<lo?lo:(x>hi?hi:x)); }
 534              		.loc 1 151 0
 535              		.cfi_startproc
 536              		@ args = 0, pretend = 0, frame = 16
 537              		@ frame_needed = 1, uses_anonymous_args = 0
 538 0000 80B5     		push	{r7, lr}
 539              		.cfi_def_cfa_offset 8
 540              		.cfi_offset 7, -8
 541              		.cfi_offset 14, -4
 542 0002 84B0     		sub	sp, sp, #16
 543              		.cfi_def_cfa_offset 24
 544 0004 00AF     		add	r7, sp, #0
 545              		.cfi_def_cfa_register 7
 546 0006 F860     		str	r0, [r7, #12]	@ float
 547 0008 B960     		str	r1, [r7, #8]	@ float
 548 000a 7A60     		str	r2, [r7, #4]	@ float
 549              		.loc 1 151 0
 550 000c B968     		ldr	r1, [r7, #8]	@ float
 551 000e F868     		ldr	r0, [r7, #12]	@ float
 552 0010 FFF7FEFF 		bl	__aeabi_fcmplt
 553 0014 0346     		mov	r3, r0
 554 0016 002B     		cmp	r3, #0
 555 0018 01D0     		beq	.L46
 556              		.loc 1 151 0 is_stmt 0 discriminator 1
 557 001a BB68     		ldr	r3, [r7, #8]	@ float
 558 001c 09E0     		b	.L43
 559              	.L46:
 560              		.loc 1 151 0 discriminator 2
 561 001e 7968     		ldr	r1, [r7, #4]	@ float
 562 0020 F868     		ldr	r0, [r7, #12]	@ float
 563 0022 FFF7FEFF 		bl	__aeabi_fcmpgt
 564 0026 0346     		mov	r3, r0
 565 0028 002B     		cmp	r3, #0
 566 002a 01D0     		beq	.L47
 567              		.loc 1 151 0 discriminator 4
 568 002c 7B68     		ldr	r3, [r7, #4]	@ float
 569 002e 00E0     		b	.L43
 570              	.L47:
 571              		.loc 1 151 0 discriminator 5
 572 0030 FB68     		ldr	r3, [r7, #12]	@ float
 573              	.L43:
 574              		.loc 1 151 0 discriminator 9
 575 0032 1846     		mov	r0, r3
 576 0034 1037     		adds	r7, r7, #16
 577              		.cfi_def_cfa_offset 8
 578 0036 BD46     		mov	sp, r7
 579              		.cfi_def_cfa_register 13
 580              		@ sp needed
 581 0038 80BD     		pop	{r7, pc}
 582              		.cfi_endproc
 583              	.LFE67:
 584              		.size	_clampf, .-_clampf
 585              		.global	__aeabi_fmul
 586              		.global	__aeabi_fadd
 587              		.global	__aeabi_fsub
 588              		.global	__aeabi_fcmpge
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 14


 589              		.global	__aeabi_f2iz
 590              		.global	__aeabi_fcmple
 591 003a 00BF     		.section	.text.pi_step,"ax",%progbits
 592              		.align	2
 593              		.thumb
 594              		.thumb_func
 595              		.type	pi_step, %function
 596              	pi_step:
 597              	.LFB68:
 152:main.c        **** 
 153:main.c        **** static int pi_step(pi_t* pi, uint16_t V4_pp, uint16_t V5_pp, uint16_t V6_pp)
 154:main.c        **** {
 598              		.loc 1 154 0 is_stmt 1
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 64
 601              		@ frame_needed = 1, uses_anonymous_args = 0
 602 0000 90B5     		push	{r4, r7, lr}
 603              		.cfi_def_cfa_offset 12
 604              		.cfi_offset 4, -12
 605              		.cfi_offset 7, -8
 606              		.cfi_offset 14, -4
 607 0002 91B0     		sub	sp, sp, #68
 608              		.cfi_def_cfa_offset 80
 609 0004 00AF     		add	r7, sp, #0
 610              		.cfi_def_cfa_register 7
 611 0006 F860     		str	r0, [r7, #12]
 612 0008 0846     		mov	r0, r1
 613 000a 1146     		mov	r1, r2
 614 000c 1A46     		mov	r2, r3
 615 000e 0346     		mov	r3, r0	@ movhi
 616 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 617 0012 0B46     		mov	r3, r1	@ movhi
 618 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 619 0016 1346     		mov	r3, r2	@ movhi
 620 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 155:main.c        ****     float c4 = norm01_from_pp(V4_pp)*1.5f;
 621              		.loc 1 155 0
 622 001a 7B89     		ldrh	r3, [r7, #10]
 623 001c 1846     		mov	r0, r3
 624 001e FFF7FEFF 		bl	norm01_from_pp
 625 0022 0346     		mov	r3, r0
 626 0024 4FF07F51 		mov	r1, #1069547520
 627 0028 1846     		mov	r0, r3
 628 002a FFF7FEFF 		bl	__aeabi_fmul
 629 002e 0346     		mov	r3, r0
 630 0030 BB63     		str	r3, [r7, #56]	@ float
 156:main.c        ****     float c5 = norm01_from_pp(V5_pp)*1.5f;
 631              		.loc 1 156 0
 632 0032 3B89     		ldrh	r3, [r7, #8]
 633 0034 1846     		mov	r0, r3
 634 0036 FFF7FEFF 		bl	norm01_from_pp
 635 003a 0346     		mov	r3, r0
 636 003c 4FF07F51 		mov	r1, #1069547520
 637 0040 1846     		mov	r0, r3
 638 0042 FFF7FEFF 		bl	__aeabi_fmul
 639 0046 0346     		mov	r3, r0
 640 0048 7B63     		str	r3, [r7, #52]	@ float
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 15


 157:main.c        ****     float c6 = norm01_from_pp(V6_pp)*1.5f;
 641              		.loc 1 157 0
 642 004a FB88     		ldrh	r3, [r7, #6]
 643 004c 1846     		mov	r0, r3
 644 004e FFF7FEFF 		bl	norm01_from_pp
 645 0052 0346     		mov	r3, r0
 646 0054 4FF07F51 		mov	r1, #1069547520
 647 0058 1846     		mov	r0, r3
 648 005a FFF7FEFF 		bl	__aeabi_fmul
 649 005e 0346     		mov	r3, r0
 650 0060 3B63     		str	r3, [r7, #48]	@ float
 158:main.c        ****     float sum = c4 + c5 + c6;
 651              		.loc 1 158 0
 652 0062 796B     		ldr	r1, [r7, #52]	@ float
 653 0064 B86B     		ldr	r0, [r7, #56]	@ float
 654 0066 FFF7FEFF 		bl	__aeabi_fadd
 655 006a 0346     		mov	r3, r0
 656 006c 396B     		ldr	r1, [r7, #48]	@ float
 657 006e 1846     		mov	r0, r3
 658 0070 FFF7FEFF 		bl	__aeabi_fadd
 659 0074 0346     		mov	r3, r0
 660 0076 FB62     		str	r3, [r7, #44]	@ float
 159:main.c        ****     bool valid = (sum > 0.08f);
 661              		.loc 1 159 0
 662 0078 0123     		movs	r3, #1
 663 007a 1C46     		mov	r4, r3
 664 007c 7949     		ldr	r1, .L68
 665 007e F86A     		ldr	r0, [r7, #44]	@ float
 666 0080 FFF7FEFF 		bl	__aeabi_fcmpgt
 667 0084 0346     		mov	r3, r0
 668 0086 002B     		cmp	r3, #0
 669 0088 01D1     		bne	.L49
 670 008a 0023     		movs	r3, #0
 671 008c 1C46     		mov	r4, r3
 672              	.L49:
 673 008e 87F82B40 		strb	r4, [r7, #43]
 160:main.c        **** 
 161:main.c        ****     float pos = 0.0f;
 674              		.loc 1 161 0
 675 0092 4FF00003 		mov	r3, #0
 676 0096 FB63     		str	r3, [r7, #60]	@ float
 162:main.c        ****     if (valid) pos = (-1.0f * c4 + 0.0f * c5 + 1.0f * c6) / sum;
 677              		.loc 1 162 0
 678 0098 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 679 009c 002B     		cmp	r3, #0
 680 009e 15D0     		beq	.L50
 681              		.loc 1 162 0 is_stmt 0 discriminator 1
 682 00a0 4FF00001 		mov	r1, #0
 683 00a4 786B     		ldr	r0, [r7, #52]	@ float
 684 00a6 FFF7FEFF 		bl	__aeabi_fmul
 685 00aa 0346     		mov	r3, r0
 686 00ac B96B     		ldr	r1, [r7, #56]	@ float
 687 00ae 1846     		mov	r0, r3
 688 00b0 FFF7FEFF 		bl	__aeabi_fsub
 689 00b4 0346     		mov	r3, r0
 690 00b6 396B     		ldr	r1, [r7, #48]	@ float
 691 00b8 1846     		mov	r0, r3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 16


 692 00ba FFF7FEFF 		bl	__aeabi_fadd
 693 00be 0346     		mov	r3, r0
 694 00c0 F96A     		ldr	r1, [r7, #44]	@ float
 695 00c2 1846     		mov	r0, r3
 696 00c4 FFF7FEFF 		bl	__aeabi_fdiv
 697 00c8 0346     		mov	r3, r0
 698 00ca FB63     		str	r3, [r7, #60]	@ float
 699              	.L50:
 163:main.c        **** 
 164:main.c        ****     float e = pos;
 700              		.loc 1 164 0 is_stmt 1
 701 00cc FB6B     		ldr	r3, [r7, #60]	@ float
 702 00ce 7B62     		str	r3, [r7, #36]	@ float
 165:main.c        **** 
 166:main.c        ****     if (!valid) {
 703              		.loc 1 166 0
 704 00d0 97F82B30 		ldrb	r3, [r7, #43]
 705 00d4 83F00103 		eor	r3, r3, #1
 706 00d8 DBB2     		uxtb	r3, r3
 707 00da 002B     		cmp	r3, #0
 708 00dc 2AD0     		beq	.L51
 167:main.c        ****         pi->t_loss += DT_S;
 709              		.loc 1 167 0
 710 00de FB68     		ldr	r3, [r7, #12]
 711 00e0 9B68     		ldr	r3, [r3, #8]	@ float
 712 00e2 6149     		ldr	r1, .L68+4
 713 00e4 1846     		mov	r0, r3
 714 00e6 FFF7FEFF 		bl	__aeabi_fadd
 715 00ea 0346     		mov	r3, r0
 716 00ec 1A46     		mov	r2, r3
 717 00ee FB68     		ldr	r3, [r7, #12]
 718 00f0 9A60     		str	r2, [r3, #8]	@ float
 168:main.c        ****         if (pi->t_loss >= LOSS_TIMEOUT_T) pi->i *= 0.92f;
 719              		.loc 1 168 0
 720 00f2 FB68     		ldr	r3, [r7, #12]
 721 00f4 9B68     		ldr	r3, [r3, #8]	@ float
 722 00f6 4FF07A51 		mov	r1, #1048576000
 723 00fa 1846     		mov	r0, r3
 724 00fc FFF7FEFF 		bl	__aeabi_fcmpge
 725 0100 0346     		mov	r3, r0
 726 0102 002B     		cmp	r3, #0
 727 0104 09D0     		beq	.L52
 728              		.loc 1 168 0 is_stmt 0 discriminator 1
 729 0106 FB68     		ldr	r3, [r7, #12]
 730 0108 1B68     		ldr	r3, [r3]	@ float
 731 010a 5849     		ldr	r1, .L68+8
 732 010c 1846     		mov	r0, r3
 733 010e FFF7FEFF 		bl	__aeabi_fmul
 734 0112 0346     		mov	r3, r0
 735 0114 1A46     		mov	r2, r3
 736 0116 FB68     		ldr	r3, [r7, #12]
 737 0118 1A60     		str	r2, [r3]	@ float
 738              	.L52:
 169:main.c        ****         return (int)_clampf(pi->u, -(float)STEER_MAX, (float)STEER_MAX);
 739              		.loc 1 169 0 is_stmt 1
 740 011a FB68     		ldr	r3, [r7, #12]
 741 011c 5B68     		ldr	r3, [r3, #4]	@ float
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 17


 742 011e 544A     		ldr	r2, .L68+12
 743 0120 5449     		ldr	r1, .L68+16
 744 0122 1846     		mov	r0, r3
 745 0124 FFF7FEFF 		bl	_clampf
 746 0128 0346     		mov	r3, r0
 747 012a 1846     		mov	r0, r3
 748 012c FFF7FEFF 		bl	__aeabi_f2iz
 749 0130 0346     		mov	r3, r0
 750 0132 92E0     		b	.L54
 751              	.L51:
 170:main.c        ****     }
 171:main.c        ****     pi->t_loss = 0.0f;
 752              		.loc 1 171 0
 753 0134 FB68     		ldr	r3, [r7, #12]
 754 0136 4FF00002 		mov	r2, #0
 755 013a 9A60     		str	r2, [r3, #8]	@ float
 172:main.c        **** 
 173:main.c        ****     float i_next = _clampf(pi->i + e * DT_S, -INT_LIM, +INT_LIM);
 756              		.loc 1 173 0
 757 013c FB68     		ldr	r3, [r7, #12]
 758 013e 1C68     		ldr	r4, [r3]	@ float
 759 0140 4949     		ldr	r1, .L68+4
 760 0142 786A     		ldr	r0, [r7, #36]	@ float
 761 0144 FFF7FEFF 		bl	__aeabi_fmul
 762 0148 0346     		mov	r3, r0
 763 014a 1946     		mov	r1, r3
 764 014c 2046     		mov	r0, r4
 765 014e FFF7FEFF 		bl	__aeabi_fadd
 766 0152 0346     		mov	r3, r0
 767 0154 484A     		ldr	r2, .L68+20
 768 0156 4949     		ldr	r1, .L68+24
 769 0158 1846     		mov	r0, r3
 770 015a FFF7FEFF 		bl	_clampf
 771 015e 3862     		str	r0, [r7, #32]	@ float
 174:main.c        ****     float u_raw  = KP * e + KI * i_next;
 772              		.loc 1 174 0
 773 0160 4FF08341 		mov	r1, #1098907648
 774 0164 786A     		ldr	r0, [r7, #36]	@ float
 775 0166 FFF7FEFF 		bl	__aeabi_fmul
 776 016a 0346     		mov	r3, r0
 777 016c 1C46     		mov	r4, r3
 778 016e 3B6A     		ldr	r3, [r7, #32]	@ float
 779 0170 1946     		mov	r1, r3
 780 0172 1846     		mov	r0, r3
 781 0174 FFF7FEFF 		bl	__aeabi_fadd
 782 0178 0346     		mov	r3, r0
 783 017a 1946     		mov	r1, r3
 784 017c 2046     		mov	r0, r4
 785 017e FFF7FEFF 		bl	__aeabi_fadd
 786 0182 0346     		mov	r3, r0
 787 0184 FB61     		str	r3, [r7, #28]	@ float
 175:main.c        ****     float u      = _clampf(u_raw, -(float)STEER_MAX, (float)STEER_MAX);
 788              		.loc 1 175 0
 789 0186 3A4A     		ldr	r2, .L68+12
 790 0188 3A49     		ldr	r1, .L68+16
 791 018a F869     		ldr	r0, [r7, #28]	@ float
 792 018c FFF7FEFF 		bl	_clampf
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 18


 793 0190 B861     		str	r0, [r7, #24]	@ float
 176:main.c        **** 
 177:main.c        ****     bool sat_hi = (u >=  (float)STEER_MAX - 1e-3f);
 794              		.loc 1 177 0
 795 0192 0123     		movs	r3, #1
 796 0194 1C46     		mov	r4, r3
 797 0196 3A49     		ldr	r1, .L68+28
 798 0198 B869     		ldr	r0, [r7, #24]	@ float
 799 019a FFF7FEFF 		bl	__aeabi_fcmpge
 800 019e 0346     		mov	r3, r0
 801 01a0 002B     		cmp	r3, #0
 802 01a2 01D1     		bne	.L55
 803 01a4 0023     		movs	r3, #0
 804 01a6 1C46     		mov	r4, r3
 805              	.L55:
 806 01a8 FC75     		strb	r4, [r7, #23]
 178:main.c        ****     bool sat_lo = (u <= -(float)STEER_MAX + 1e-3f);
 807              		.loc 1 178 0
 808 01aa 0123     		movs	r3, #1
 809 01ac 1C46     		mov	r4, r3
 810 01ae 3549     		ldr	r1, .L68+32
 811 01b0 B869     		ldr	r0, [r7, #24]	@ float
 812 01b2 FFF7FEFF 		bl	__aeabi_fcmple
 813 01b6 0346     		mov	r3, r0
 814 01b8 002B     		cmp	r3, #0
 815 01ba 01D1     		bne	.L56
 816 01bc 0023     		movs	r3, #0
 817 01be 1C46     		mov	r4, r3
 818              	.L56:
 819 01c0 BC75     		strb	r4, [r7, #22]
 179:main.c        **** 
 180:main.c        ****     if ((sat_hi && (KI * i_next > KI * pi->i)) ||
 820              		.loc 1 180 0
 821 01c2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 822 01c4 002B     		cmp	r3, #0
 823 01c6 14D0     		beq	.L57
 824              		.loc 1 180 0 is_stmt 0 discriminator 1
 825 01c8 3B6A     		ldr	r3, [r7, #32]	@ float
 826 01ca 1946     		mov	r1, r3
 827 01cc 1846     		mov	r0, r3
 828 01ce FFF7FEFF 		bl	__aeabi_fadd
 829 01d2 0346     		mov	r3, r0
 830 01d4 1C46     		mov	r4, r3
 831 01d6 FB68     		ldr	r3, [r7, #12]
 832 01d8 1B68     		ldr	r3, [r3]	@ float
 833 01da 1946     		mov	r1, r3
 834 01dc 1846     		mov	r0, r3
 835 01de FFF7FEFF 		bl	__aeabi_fadd
 836 01e2 0346     		mov	r3, r0
 837 01e4 1946     		mov	r1, r3
 838 01e6 2046     		mov	r0, r4
 839 01e8 FFF7FEFF 		bl	__aeabi_fcmpgt
 840 01ec 0346     		mov	r3, r0
 841 01ee 002B     		cmp	r3, #0
 842 01f0 1AD1     		bne	.L59
 843              	.L57:
 844              		.loc 1 180 0 discriminator 3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 19


 845 01f2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 846 01f4 002B     		cmp	r3, #0
 847 01f6 14D0     		beq	.L60
 181:main.c        ****         (sat_lo && (KI * i_next < KI * pi->i))) {
 848              		.loc 1 181 0 is_stmt 1
 849 01f8 3B6A     		ldr	r3, [r7, #32]	@ float
 850 01fa 1946     		mov	r1, r3
 851 01fc 1846     		mov	r0, r3
 852 01fe FFF7FEFF 		bl	__aeabi_fadd
 853 0202 0346     		mov	r3, r0
 854 0204 1C46     		mov	r4, r3
 855 0206 FB68     		ldr	r3, [r7, #12]
 856 0208 1B68     		ldr	r3, [r3]	@ float
 857 020a 1946     		mov	r1, r3
 858 020c 1846     		mov	r0, r3
 859 020e FFF7FEFF 		bl	__aeabi_fadd
 860 0212 0346     		mov	r3, r0
 861 0214 1946     		mov	r1, r3
 862 0216 2046     		mov	r0, r4
 863 0218 FFF7FEFF 		bl	__aeabi_fcmplt
 864 021c 0346     		mov	r3, r0
 865 021e 002B     		cmp	r3, #0
 866 0220 02D1     		bne	.L59
 867              	.L60:
 182:main.c        ****         /* donâ€™t integrate further into saturation */
 183:main.c        ****     } else {
 184:main.c        ****         pi->i = i_next;
 868              		.loc 1 184 0
 869 0222 FB68     		ldr	r3, [r7, #12]
 870 0224 3A6A     		ldr	r2, [r7, #32]	@ float
 871 0226 1A60     		str	r2, [r3]	@ float
 872              	.L59:
 185:main.c        ****     }
 186:main.c        **** 
 187:main.c        ****     pi->u = u;
 873              		.loc 1 187 0
 874 0228 FB68     		ldr	r3, [r7, #12]
 875 022a BA69     		ldr	r2, [r7, #24]	@ float
 876 022c 5A60     		str	r2, [r3, #4]	@ float
 188:main.c        ****     return (int)(u + (u>=0?0.5f:-0.5f));
 877              		.loc 1 188 0
 878 022e 4FF00001 		mov	r1, #0
 879 0232 B869     		ldr	r0, [r7, #24]	@ float
 880 0234 FFF7FEFF 		bl	__aeabi_fcmpge
 881 0238 0346     		mov	r3, r0
 882 023a 002B     		cmp	r3, #0
 883 023c 02D0     		beq	.L67
 884              		.loc 1 188 0 is_stmt 0 discriminator 1
 885 023e 4FF07C53 		mov	r3, #1056964608
 886 0242 01E0     		b	.L64
 887              	.L67:
 888              		.loc 1 188 0 discriminator 2
 889 0244 4FF03F43 		mov	r3, #-1090519040
 890              	.L64:
 891              		.loc 1 188 0 discriminator 4
 892 0248 B969     		ldr	r1, [r7, #24]	@ float
 893 024a 1846     		mov	r0, r3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 20


 894 024c FFF7FEFF 		bl	__aeabi_fadd
 895 0250 0346     		mov	r3, r0
 896 0252 1846     		mov	r0, r3
 897 0254 FFF7FEFF 		bl	__aeabi_f2iz
 898 0258 0346     		mov	r3, r0
 899              	.L54:
 189:main.c        **** }
 900              		.loc 1 189 0 is_stmt 1
 901 025a 1846     		mov	r0, r3
 902 025c 4437     		adds	r7, r7, #68
 903              		.cfi_def_cfa_offset 12
 904 025e BD46     		mov	sp, r7
 905              		.cfi_def_cfa_register 13
 906              		@ sp needed
 907 0260 90BD     		pop	{r4, r7, pc}
 908              	.L69:
 909 0262 00BF     		.align	2
 910              	.L68:
 911 0264 0AD7A33D 		.word	1034147594
 912 0268 6F12033C 		.word	1006834287
 913 026c 1F856B3F 		.word	1064011039
 914 0270 00007041 		.word	1097859072
 915 0274 000070C1 		.word	-1049624576
 916 0278 0000F041 		.word	1106247680
 917 027c 0000F0C1 		.word	-1041235968
 918 0280 E7FB6F41 		.word	1097858023
 919 0284 E7FB6FC1 		.word	-1049625625
 920              		.cfi_endproc
 921              	.LFE68:
 922              		.size	pi_step, .-pi_step
 923              		.section	.rodata
 924              		.align	2
 925              	.LC0:
 926 0000 00       		.byte	0
 927 0001 02       		.byte	2
 928 0002 00       		.byte	0
 929 0003 02       		.byte	2
 930 0004 00       		.byte	0
 931 0005 00       		.byte	0
 932 0006 01       		.byte	1
 933 0007 00       		.byte	0
 934 0008 02       		.byte	2
 935 0009 00       		.byte	0
 936 000a 02       		.byte	2
 937 000b 00       		.byte	0
 938 000c 00       		.byte	0
 939 000d 03       		.byte	3
 940              		.section	.text.main,"ax",%progbits
 941              		.align	2
 942              		.global	main
 943              		.thumb
 944              		.thumb_func
 945              		.type	main, %function
 946              	main:
 947              	.LFB69:
 190:main.c        **** 
 191:main.c        **** int main(void)
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 21


 192:main.c        **** {
 948              		.loc 1 192 0
 949              		.cfi_startproc
 950              		@ args = 0, pretend = 0, frame = 72
 951              		@ frame_needed = 1, uses_anonymous_args = 0
 952 0000 90B5     		push	{r4, r7, lr}
 953              		.cfi_def_cfa_offset 12
 954              		.cfi_offset 4, -12
 955              		.cfi_offset 7, -8
 956              		.cfi_offset 14, -4
 957 0002 93B0     		sub	sp, sp, #76
 958              		.cfi_def_cfa_offset 88
 959 0004 00AF     		add	r7, sp, #0
 960              		.cfi_def_cfa_register 7
 193:main.c        ****     motor_enable(1u, 1u);
 961              		.loc 1 193 0
 962 0006 0121     		movs	r1, #1
 963 0008 0120     		movs	r0, #1
 964 000a FFF7FEFF 		bl	motor_enable
 194:main.c        ****     CyGlobalIntEnable;
 965              		.loc 1 194 0
 966              		.syntax unified
 967              	@ 194 "main.c" 1
 968 000e 62B6     		CPSIE   i
 969              	@ 0 "" 2
 195:main.c        **** 
 196:main.c        ****     /* ADC for sensors */
 197:main.c        ****     ADC_Start();
 970              		.loc 1 197 0
 971              		.thumb
 972              		.syntax unified
 973 0010 FFF7FEFF 		bl	ADC_Start
 198:main.c        ****     CyDelay(10);
 974              		.loc 1 198 0
 975 0014 0A20     		movs	r0, #10
 976 0016 FFF7FEFF 		bl	CyDelay
 199:main.c        **** 
 200:main.c        ****     /* Encoders + 5 ms tick (distance only) */
 201:main.c        ****     Clock_QENC_Start();
 977              		.loc 1 201 0
 978 001a FFF7FEFF 		bl	Clock_QENC_Start
 202:main.c        ****     QuadDec_M1_Start(); QuadDec_M2_Start();
 979              		.loc 1 202 0
 980 001e FFF7FEFF 		bl	QuadDec_M1_Start
 981 0022 FFF7FEFF 		bl	QuadDec_M2_Start
 203:main.c        ****     QuadDec_M1_SetCounter(0); QuadDec_M2_SetCounter(0);
 982              		.loc 1 203 0
 983 0026 0020     		movs	r0, #0
 984 0028 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 985 002c 0020     		movs	r0, #0
 986 002e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 204:main.c        ****     Clock_QD_Start();
 987              		.loc 1 204 0
 988 0032 FFF7FEFF 		bl	Clock_QD_Start
 205:main.c        ****     Timer_QD_Start();  // 5 ms period in TopDesign
 989              		.loc 1 205 0
 990 0036 FFF7FEFF 		bl	Timer_QD_Start
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 22


 206:main.c        ****     isr_qd_StartEx(isr_qd_Handler);
 991              		.loc 1 206 0
 992 003a 9648     		ldr	r0, .L121
 993 003c FFF7FEFF 		bl	isr_qd_StartEx
 207:main.c        **** 
 208:main.c        ****     /* PWM & motor driver */
 209:main.c        ****     Clock_PWM_Start();
 994              		.loc 1 209 0
 995 0040 FFF7FEFF 		bl	Clock_PWM_Start
 210:main.c        ****     PWM_1_Start(); PWM_2_Start();
 996              		.loc 1 210 0
 997 0044 FFF7FEFF 		bl	PWM_1_Start
 998 0048 FFF7FEFF 		bl	PWM_2_Start
 211:main.c        ****     PWM_1_WritePeriod(PWM_PERIOD);
 999              		.loc 1 211 0
 1000 004c C820     		movs	r0, #200
 1001 004e FFF7FEFF 		bl	PWM_1_WritePeriod
 212:main.c        ****     PWM_2_WritePeriod(PWM_PERIOD);
 1002              		.loc 1 212 0
 1003 0052 C820     		movs	r0, #200
 1004 0054 FFF7FEFF 		bl	PWM_2_WritePeriod
 213:main.c        ****     set_motors_symmetric(0);
 1005              		.loc 1 213 0
 1006 0058 0020     		movs	r0, #0
 1007 005a FFF7FEFF 		bl	set_motors_symmetric
 214:main.c        ****     motor_enable(0u, 0u);
 1008              		.loc 1 214 0
 1009 005e 0021     		movs	r1, #0
 1010 0060 0020     		movs	r0, #0
 1011 0062 FFF7FEFF 		bl	motor_enable
 215:main.c        **** 
 216:main.c        ****     /* Directions module */
 217:main.c        ****     Directions_Init();
 1012              		.loc 1 217 0
 1013 0066 FFF7FEFF 		bl	Directions_Init
 218:main.c        ****     g_direction = 0u;
 1014              		.loc 1 218 0
 1015 006a 8B4B     		ldr	r3, .L121+4
 1016 006c 0022     		movs	r2, #0
 1017 006e 1A70     		strb	r2, [r3]
 219:main.c        **** 
 220:main.c        ****     /* Feed-forward cruise duty (kept) */
 221:main.c        ****     int center_duty_est = (int)((V_CRUISE_MM_S * 100) / VMAX_CONST_MM_S);
 1018              		.loc 1 221 0
 1019 0070 1423     		movs	r3, #20
 1020 0072 7B64     		str	r3, [r7, #68]
 222:main.c        ****     if (center_duty_est < 0) center_duty_est = 0;
 1021              		.loc 1 222 0
 1022 0074 7B6C     		ldr	r3, [r7, #68]
 1023 0076 002B     		cmp	r3, #0
 1024 0078 01DA     		bge	.L71
 1025              		.loc 1 222 0 is_stmt 0 discriminator 1
 1026 007a 0023     		movs	r3, #0
 1027 007c 7B64     		str	r3, [r7, #68]
 1028              	.L71:
 223:main.c        ****     if (center_duty_est > 100) center_duty_est = 100;
 1029              		.loc 1 223 0 is_stmt 1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 23


 1030 007e 7B6C     		ldr	r3, [r7, #68]
 1031 0080 642B     		cmp	r3, #100
 1032 0082 01DD     		ble	.L72
 1033              		.loc 1 223 0 is_stmt 0 discriminator 1
 1034 0084 6423     		movs	r3, #100
 1035 0086 7B64     		str	r3, [r7, #68]
 1036              	.L72:
 224:main.c        **** 
 225:main.c        ****     /* PI state */
 226:main.c        ****     pi_t pi = { .i = 0.0f, .u = 0.0f, .t_loss = 0.0f };
 1037              		.loc 1 226 0 is_stmt 1
 1038 0088 4FF00003 		mov	r3, #0
 1039 008c BB61     		str	r3, [r7, #24]	@ float
 1040 008e 4FF00003 		mov	r3, #0
 1041 0092 FB61     		str	r3, [r7, #28]	@ float
 1042 0094 4FF00003 		mov	r3, #0
 1043 0098 3B62     		str	r3, [r7, #32]	@ float
 227:main.c        ****     
 228:main.c        ****     CyDelay(1000);  // So the motors don't jump
 1044              		.loc 1 228 0
 1045 009a 4FF47A70 		mov	r0, #1000
 1046 009e FFF7FEFF 		bl	CyDelay
 229:main.c        ****     set_motors_with_trim_and_steer(100,10);
 1047              		.loc 1 229 0
 1048 00a2 0A21     		movs	r1, #10
 1049 00a4 6420     		movs	r0, #100
 1050 00a6 FFF7FEFF 		bl	set_motors_with_trim_and_steer
 230:main.c        ****     CyDelay(40);
 1051              		.loc 1 230 0
 1052 00aa 2820     		movs	r0, #40
 1053 00ac FFF7FEFF 		bl	CyDelay
 231:main.c        ****     set_motors_symmetric(0); 
 1054              		.loc 1 231 0
 1055 00b0 0020     		movs	r0, #0
 1056 00b2 FFF7FEFF 		bl	set_motors_symmetric
 232:main.c        ****     
 233:main.c        ****     
 234:main.c        ****     // Pathfinding array
 235:main.c        ****     /* 
 236:main.c        ****      * STRAIGHT -> 0, TURN LEFT -> 1, TURN RIGHT -> 2, TURN U_TURN -> 3,
 237:main.c        ****      * REACH -> 5, END -> 6
 238:main.c        ****      */
 239:main.c        ****     
 240:main.c        **** const uint8_t CMD_STATES[] = {
 1057              		.loc 1 240 0
 1058 00b6 794A     		ldr	r2, .L121+8
 1059 00b8 07F10803 		add	r3, r7, #8
 1060 00bc 1446     		mov	r4, r2
 1061 00be 2068     		ldr	r0, [r4]	@ unaligned
 1062 00c0 6168     		ldr	r1, [r4, #4]	@ unaligned
 1063 00c2 A268     		ldr	r2, [r4, #8]	@ unaligned
 1064 00c4 07C3     		stmia	r3!, {r0, r1, r2}
 1065 00c6 A289     		ldrh	r2, [r4, #12]	@ unaligned
 1066 00c8 1A80     		strh	r2, [r3]	@ unaligned
 241:main.c        **** 
 242:main.c        ****     0, // START
 243:main.c        ****     2, // RIGHT
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 24


 244:main.c        ****     0,
 245:main.c        ****     2, // RIGHT
 246:main.c        ****     0,
 247:main.c        ****     0,
 248:main.c        ****     1, // LEFT
 249:main.c        ****     0,
 250:main.c        ****     2, // RIGHT
 251:main.c        ****     0,
 252:main.c        ****     2, // RIGHT
 253:main.c        ****     0,
 254:main.c        ****     0,// 5, // REACH
 255:main.c        ****     3
 256:main.c        **** }; /*
 257:main.c        ****     3, // UTURN
 258:main.c        ****     0,
 259:main.c        ****     2, // RIGHT
 260:main.c        ****     0,
 261:main.c        ****     1, // LEFT
 262:main.c        ****     0,
 263:main.c        ****     2, // RIGHT
 264:main.c        ****     0,
 265:main.c        ****     1, // LEFT
 266:main.c        ****     0,// 5, // REACH
 267:main.c        ****     2, // RIGHT
 268:main.c        ****     0,
 269:main.c        ****     2, // RIGHT
 270:main.c        ****     0,
 271:main.c        ****     2, // RIGHT
 272:main.c        ****     0,
 273:main.c        ****     1, // LEFT
 274:main.c        ****     0,// 5, // REACH
 275:main.c        ****     3, // UTURN
 276:main.c        ****     0,
 277:main.c        ****     2, // RIGHT
 278:main.c        ****     0,
 279:main.c        ****     1, // LEFT
 280:main.c        ****     0,
 281:main.c        ****     0,
 282:main.c        ****     1, // LEFT
 283:main.c        ****     0,
 284:main.c        ****     0,
 285:main.c        ****     0,
 286:main.c        ****     1, // LEFT
 287:main.c        ****     0,// 5, // REACH
 288:main.c        ****     1, // LEFT
 289:main.c        ****     0,
 290:main.c        ****     2, // RIGHT
 291:main.c        ****     0,
 292:main.c        ****     0,
 293:main.c        ****     2, // RIGHT
 294:main.c        ****     0,
 295:main.c        ****     1, // LEFT
 296:main.c        ****     0,
 297:main.c        ****     2, // RIGHT
 298:main.c        ****     0,
 299:main.c        ****     6  // END
 300:main.c        **** }; */
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 25


 301:main.c        ****     //int8_t indexMAX = 50;  // Loop index
 302:main.c        ****     
 303:main.c        ****     // For Testing
 304:main.c        ****     //const uint8_t CMD_STATES[] = {0,2};
 305:main.c        ****     //int8_t indexMAX = 2;  // Loop index
 306:main.c        ****     int8_t max = 14;
 1067              		.loc 1 306 0
 1068 00ca 0E23     		movs	r3, #14
 1069 00cc 87F83730 		strb	r3, [r7, #55]
 307:main.c        ****     const uint16_t CMD_STATES_LEN = sizeof(CMD_STATES) / sizeof(CMD_STATES[0]);
 1070              		.loc 1 307 0
 1071 00d0 0E23     		movs	r3, #14
 1072 00d2 BB86     		strh	r3, [r7, #52]	@ movhi
 308:main.c        ****     
 309:main.c        ****     int8_t i = 0;  // Loop index
 1073              		.loc 1 309 0
 1074 00d4 0023     		movs	r3, #0
 1075 00d6 87F84330 		strb	r3, [r7, #67]
 310:main.c        ****     int32_t target_dist = 0;
 1076              		.loc 1 310 0
 1077 00da 0023     		movs	r3, #0
 1078 00dc FB63     		str	r3, [r7, #60]
 311:main.c        ****     
 312:main.c        ****     int8_t straight_complete = 0;
 1079              		.loc 1 312 0
 1080 00de 0023     		movs	r3, #0
 1081 00e0 87F83B30 		strb	r3, [r7, #59]
 313:main.c        ****     int8_t turn_complete = 0;
 1082              		.loc 1 313 0
 1083 00e4 0023     		movs	r3, #0
 1084 00e6 87F83A30 		strb	r3, [r7, #58]
 314:main.c        ****     int8_t uTurn_complete = 0;
 1085              		.loc 1 314 0
 1086 00ea 0023     		movs	r3, #0
 1087 00ec 87F83930 		strb	r3, [r7, #57]
 315:main.c        ****     int8_t fruit_complete = 0;
 1088              		.loc 1 315 0
 1089 00f0 0023     		movs	r3, #0
 1090 00f2 87F83830 		strb	r3, [r7, #56]
 1091              	.L119:
 1092              	.LBB3:
 316:main.c        **** 
 317:main.c        ****     for(;;){
 318:main.c        ****         
 319:main.c        ****         // This check will make the robot stay stopped
 320:main.c        ****         // once the path is complete.
 321:main.c        ****         /*if (g_stop_now) {
 322:main.c        ****             set_motors_symmetric(0);
 323:main.c        ****             motor_enable(1u, 1u);
 324:main.c        ****             continue;
 325:main.c        ****         } */
 326:main.c        **** 
 327:main.c        ****         /* Read sensors + maybe request turn */
 328:main.c        ****         uint16_t V4_pp=0, V5_pp=0, V6_pp=0;
 1093              		.loc 1 328 0
 1094 00f6 0023     		movs	r3, #0
 1095 00f8 FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 26


 1096 00fa 0023     		movs	r3, #0
 1097 00fc BB80     		strh	r3, [r7, #4]	@ movhi
 1098 00fe 0023     		movs	r3, #0
 1099 0100 7B80     		strh	r3, [r7, #2]	@ movhi
 329:main.c        ****         light_sensors_update_and_maybe_request_turn(&V4_pp, &V5_pp, &V6_pp);
 1100              		.loc 1 329 0
 1101 0102 BA1C     		adds	r2, r7, #2
 1102 0104 391D     		adds	r1, r7, #4
 1103 0106 BB1D     		adds	r3, r7, #6
 1104 0108 1846     		mov	r0, r3
 1105 010a FFF7FEFF 		bl	light_sensors_update_and_maybe_request_turn
 330:main.c        ****         
 331:main.c        **** 
 332:main.c        **** //
 333:main.c        **** //        /* Straight run with PI steering */
 334:main.c        **** //        
 335:main.c        **** //        if(turn_cooldown_ticks > 0) {
 336:main.c        **** //            turn_cooldown_ticks--;
 337:main.c        **** //        }
 338:main.c        **** //        
 339:main.c        **** //        /*
 340:main.c        **** //        // Add bias when back right sensor is under line
 341:main.c        **** //        uint16_t V5 = Sensor_ComputePeakToPeak(4);
 342:main.c        **** //        sen5_on_line = (V5 > 10 && V5 < 100) ? 1u : 0u;
 343:main.c        **** //        if (sen5_on_line == 1) {
 344:main.c        **** //            Motors_SetPercent(0,25);
 345:main.c        **** //            //set_motors_with_trim_and_steer(50,50); 
 346:main.c        **** //            CyDelay(10);
 347:main.c        **** //        } */
 348:main.c        ****         
 349:main.c        ****         
 350:main.c        **** //        int steer = pi_step(&pi, V4_pp, V5_pp, V6_pp);
 351:main.c        **** //        set_motors_with_trim_and_steer(center_duty_est, steer);
 352:main.c        **** //        
 353:main.c        **** //        
 354:main.c        **** //        /* Distance stop */    // g_dist_mm = total distance traveled
 355:main.c        **** //        g_stop_now = (g_dist_mm >= TARGET_DIST_MM) ? 1u : 0u;
 356:main.c        **** //        if (g_stop_now) {
 357:main.c        **** //            set_motors_symmetric(0);
 358:main.c        **** //            motor_enable(1u, 1u);
 359:main.c        **** //            g_direction = 0u;
 360:main.c        **** //            continue;
 361:main.c        **** //        }
 362:main.c        ****         
 363:main.c        ****         
 364:main.c        ****         
 365:main.c        ****         
 366:main.c        ****         /* Straight run with PI steering */        
 367:main.c        ****         if(turn_cooldown_ticks > 0) {
 1106              		.loc 1 367 0
 1107 010e 644B     		ldr	r3, .L121+12
 1108 0110 1B88     		ldrh	r3, [r3]
 1109 0112 002B     		cmp	r3, #0
 1110 0114 05D0     		beq	.L73
 368:main.c        ****             turn_cooldown_ticks--;
 1111              		.loc 1 368 0
 1112 0116 624B     		ldr	r3, .L121+12
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 27


 1113 0118 1B88     		ldrh	r3, [r3]
 1114 011a 013B     		subs	r3, r3, #1
 1115 011c 9AB2     		uxth	r2, r3
 1116 011e 604B     		ldr	r3, .L121+12
 1117 0120 1A80     		strh	r2, [r3]	@ movhi
 1118              	.L73:
 369:main.c        ****        }
 370:main.c        ****         
 371:main.c        ****         
 372:main.c        ****         // PATHFINDING ALGORITHM
 373:main.c        ****         
 374:main.c        ****         if (CMD_STATES[i] == 0) {
 1119              		.loc 1 374 0
 1120 0122 97F94330 		ldrsb	r3, [r7, #67]
 1121 0126 07F14802 		add	r2, r7, #72
 1122 012a 1344     		add	r3, r3, r2
 1123 012c 13F8403C 		ldrb	r3, [r3, #-64]	@ zero_extendqisi2
 1124 0130 002B     		cmp	r3, #0
 1125 0132 42D1     		bne	.L74
 1126              	.LBB4:
 375:main.c        ****             // Go STRAIGHT
 376:main.c        ****             int steer = pi_step(&pi, V4_pp, V5_pp, V6_pp);
 1127              		.loc 1 376 0
 1128 0134 F988     		ldrh	r1, [r7, #6]
 1129 0136 BA88     		ldrh	r2, [r7, #4]
 1130 0138 7B88     		ldrh	r3, [r7, #2]
 1131 013a 07F11800 		add	r0, r7, #24
 1132 013e FFF7FEFF 		bl	pi_step
 1133 0142 3863     		str	r0, [r7, #48]
 377:main.c        ****             set_motors_with_trim_and_steer(center_duty_est, steer);
 1134              		.loc 1 377 0
 1135 0144 396B     		ldr	r1, [r7, #48]
 1136 0146 786C     		ldr	r0, [r7, #68]
 1137 0148 FFF7FEFF 		bl	set_motors_with_trim_and_steer
 378:main.c        **** 
 379:main.c        ****             // Rising-edge detect on S1/S2
 380:main.c        ****             uint16_t V1 = Sensor_ComputePeakToPeak(0);
 1138              		.loc 1 380 0
 1139 014c 0020     		movs	r0, #0
 1140 014e FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 1141 0152 0346     		mov	r3, r0
 1142 0154 FB85     		strh	r3, [r7, #46]	@ movhi
 381:main.c        ****             uint16_t V2 = Sensor_ComputePeakToPeak(1);
 1143              		.loc 1 381 0
 1144 0156 0120     		movs	r0, #1
 1145 0158 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 1146 015c 0346     		mov	r3, r0
 1147 015e BB85     		strh	r3, [r7, #44]	@ movhi
 382:main.c        ****             sen1_on_line = (V1 > 10 && V1 < 100) ? 1u : 0u;
 1148              		.loc 1 382 0
 1149 0160 FB8D     		ldrh	r3, [r7, #46]
 1150 0162 0A2B     		cmp	r3, #10
 1151 0164 04D9     		bls	.L75
 1152              		.loc 1 382 0 is_stmt 0 discriminator 1
 1153 0166 FB8D     		ldrh	r3, [r7, #46]
 1154 0168 632B     		cmp	r3, #99
 1155 016a 01D8     		bhi	.L75
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 28


 1156              		.loc 1 382 0 discriminator 3
 1157 016c 0122     		movs	r2, #1
 1158 016e 00E0     		b	.L76
 1159              	.L75:
 1160              		.loc 1 382 0 discriminator 4
 1161 0170 0022     		movs	r2, #0
 1162              	.L76:
 1163              		.loc 1 382 0 discriminator 6
 1164 0172 4C4B     		ldr	r3, .L121+16
 1165 0174 1A70     		strb	r2, [r3]
 383:main.c        ****             sen2_on_line = (V2 > 10 && V2 < 100) ? 1u : 0u;
 1166              		.loc 1 383 0 is_stmt 1 discriminator 6
 1167 0176 BB8D     		ldrh	r3, [r7, #44]
 1168 0178 0A2B     		cmp	r3, #10
 1169 017a 04D9     		bls	.L77
 1170              		.loc 1 383 0 is_stmt 0 discriminator 1
 1171 017c BB8D     		ldrh	r3, [r7, #44]
 1172 017e 632B     		cmp	r3, #99
 1173 0180 01D8     		bhi	.L77
 1174              		.loc 1 383 0 discriminator 3
 1175 0182 0122     		movs	r2, #1
 1176 0184 00E0     		b	.L78
 1177              	.L77:
 1178              		.loc 1 383 0 discriminator 4
 1179 0186 0022     		movs	r2, #0
 1180              	.L78:
 1181              		.loc 1 383 0 discriminator 6
 1182 0188 474B     		ldr	r3, .L121+20
 1183 018a 1A70     		strb	r2, [r3]
 384:main.c        **** 
 385:main.c        ****             uint8_t s12_now = (sen1_on_line | sen2_on_line);
 1184              		.loc 1 385 0 is_stmt 1 discriminator 6
 1185 018c 454B     		ldr	r3, .L121+16
 1186 018e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1187 0190 454B     		ldr	r3, .L121+20
 1188 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1189 0194 1343     		orrs	r3, r3, r2
 1190 0196 87F82B30 		strb	r3, [r7, #43]
 386:main.c        ****             if (s12_now && !s12_prev) {
 1191              		.loc 1 386 0 discriminator 6
 1192 019a 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 1193 019e 002B     		cmp	r3, #0
 1194 01a0 06D0     		beq	.L79
 1195              		.loc 1 386 0 is_stmt 0 discriminator 1
 1196 01a2 424B     		ldr	r3, .L121+24
 1197 01a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1198 01a6 002B     		cmp	r3, #0
 1199 01a8 02D1     		bne	.L79
 387:main.c        ****                 straight_complete = 1;     // tell the indexer to advance
 1200              		.loc 1 387 0 is_stmt 1
 1201 01aa 0123     		movs	r3, #1
 1202 01ac 87F83B30 		strb	r3, [r7, #59]
 1203              	.L79:
 388:main.c        ****             }
 389:main.c        ****             s12_prev = s12_now;
 1204              		.loc 1 389 0
 1205 01b0 3E4A     		ldr	r2, .L121+24
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 29


 1206 01b2 97F82B30 		ldrb	r3, [r7, #43]
 1207 01b6 1370     		strb	r3, [r2]
 1208              	.LBE4:
 1209 01b8 ACE1     		b	.L120
 1210              	.L74:
 390:main.c        **** 
 391:main.c        ****             
 392:main.c        ****         } else if((CMD_STATES[i] == 1)) {
 1211              		.loc 1 392 0
 1212 01ba 97F94330 		ldrsb	r3, [r7, #67]
 1213 01be 07F14802 		add	r2, r7, #72
 1214 01c2 1344     		add	r3, r3, r2
 1215 01c4 13F8403C 		ldrb	r3, [r3, #-64]	@ zero_extendqisi2
 1216 01c8 012B     		cmp	r3, #1
 1217 01ca 75D1     		bne	.L81
 393:main.c        ****             // Go LEFT
 394:main.c        ****             
 395:main.c        ****             g_direction = 1u;
 1218              		.loc 1 395 0
 1219 01cc 324B     		ldr	r3, .L121+4
 1220 01ce 0122     		movs	r2, #1
 1221 01d0 1A70     		strb	r2, [r3]
 396:main.c        ****             /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 397:main.c        ****                 /* Arm once on the first detection (edge 0 -> 1/2) */
 398:main.c        ****                 if ((g_direction == 1u || g_direction == 2u) && dir_latched_side == 0){
 1222              		.loc 1 398 0
 1223 01d2 314B     		ldr	r3, .L121+4
 1224 01d4 1B78     		ldrb	r3, [r3]
 1225 01d6 DBB2     		uxtb	r3, r3
 1226 01d8 012B     		cmp	r3, #1
 1227 01da 04D0     		beq	.L82
 1228              		.loc 1 398 0 is_stmt 0 discriminator 2
 1229 01dc 2E4B     		ldr	r3, .L121+4
 1230 01de 1B78     		ldrb	r3, [r3]
 1231 01e0 DBB2     		uxtb	r3, r3
 1232 01e2 022B     		cmp	r3, #2
 1233 01e4 0BD1     		bne	.L83
 1234              	.L82:
 1235              		.loc 1 398 0 discriminator 3
 1236 01e6 324B     		ldr	r3, .L121+28
 1237 01e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1238 01ea 002B     		cmp	r3, #0
 1239 01ec 07D1     		bne	.L83
 399:main.c        ****                     dir_latched_side = g_direction;          /* remember side */
 1240              		.loc 1 399 0 is_stmt 1
 1241 01ee 2A4B     		ldr	r3, .L121+4
 1242 01f0 1B78     		ldrb	r3, [r3]
 1243 01f2 DAB2     		uxtb	r2, r3
 1244 01f4 2E4B     		ldr	r3, .L121+28
 1245 01f6 1A70     		strb	r2, [r3]
 400:main.c        ****                     dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 1246              		.loc 1 400 0
 1247 01f8 2E4B     		ldr	r3, .L121+32
 1248 01fa 0D22     		movs	r2, #13
 1249 01fc 1A80     		strh	r2, [r3]	@ movhi
 1250              	.L83:
 401:main.c        ****                     //CyDelay(50);
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 30


 402:main.c        ****                 }
 403:main.c        ****                 /* If request cleared during delay, cancel gracefully */
 404:main.c        ****                 if (g_direction == 0u && dir_latched_side != 0){
 1251              		.loc 1 404 0
 1252 01fe 264B     		ldr	r3, .L121+4
 1253 0200 1B78     		ldrb	r3, [r3]
 1254 0202 DBB2     		uxtb	r3, r3
 1255 0204 002B     		cmp	r3, #0
 1256 0206 09D1     		bne	.L84
 1257              		.loc 1 404 0 is_stmt 0 discriminator 1
 1258 0208 294B     		ldr	r3, .L121+28
 1259 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1260 020c 002B     		cmp	r3, #0
 1261 020e 05D0     		beq	.L84
 405:main.c        ****                     dir_latched_side = 0;
 1262              		.loc 1 405 0 is_stmt 1
 1263 0210 274B     		ldr	r3, .L121+28
 1264 0212 0022     		movs	r2, #0
 1265 0214 1A70     		strb	r2, [r3]
 406:main.c        ****                     dir_delay_ticks  = 0;
 1266              		.loc 1 406 0
 1267 0216 274B     		ldr	r3, .L121+32
 1268 0218 0022     		movs	r2, #0
 1269 021a 1A80     		strh	r2, [r3]	@ movhi
 1270              	.L84:
 407:main.c        ****                 }
 408:main.c        **** 
 409:main.c        ****                 if (g_direction == 1u || g_direction == 2u){
 1271              		.loc 1 409 0
 1272 021c 1E4B     		ldr	r3, .L121+4
 1273 021e 1B78     		ldrb	r3, [r3]
 1274 0220 DBB2     		uxtb	r3, r3
 1275 0222 012B     		cmp	r3, #1
 1276 0224 04D0     		beq	.L85
 1277              		.loc 1 409 0 is_stmt 0 discriminator 1
 1278 0226 1C4B     		ldr	r3, .L121+4
 1279 0228 1B78     		ldrb	r3, [r3]
 1280 022a DBB2     		uxtb	r3, r3
 1281 022c 022B     		cmp	r3, #2
 1282 022e 25D1     		bne	.L86
 1283              	.L85:
 410:main.c        ****                     if (dir_delay_ticks > 0){
 1284              		.loc 1 410 0 is_stmt 1
 1285 0230 204B     		ldr	r3, .L121+32
 1286 0232 1B88     		ldrh	r3, [r3]
 1287 0234 002B     		cmp	r3, #0
 1288 0236 06D0     		beq	.L87
 411:main.c        ****                         /* Still delaying: keep doing normal straight PI */
 412:main.c        ****                         dir_delay_ticks--;
 1289              		.loc 1 412 0
 1290 0238 1E4B     		ldr	r3, .L121+32
 1291 023a 1B88     		ldrh	r3, [r3]
 1292 023c 013B     		subs	r3, r3, #1
 1293 023e 9AB2     		uxth	r2, r3
 1294 0240 1C4B     		ldr	r3, .L121+32
 1295 0242 1A80     		strh	r2, [r3]	@ movhi
 1296 0244 1AE0     		b	.L86
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 31


 1297              	.L87:
 413:main.c        ****                     } else {
 414:main.c        ****                         /* Delay elapsed: perform the maneuver */
 415:main.c        ****                         Directions_Handle(&g_direction);
 1298              		.loc 1 415 0
 1299 0246 1448     		ldr	r0, .L121+4
 1300 0248 FFF7FEFF 		bl	Directions_Handle
 416:main.c        **** 
 417:main.c        ****                         /* When turn completes, Directions sets g_direction back to 0 */
 418:main.c        ****                         if (g_direction == 0u){
 1301              		.loc 1 418 0
 1302 024c 124B     		ldr	r3, .L121+4
 1303 024e 1B78     		ldrb	r3, [r3]
 1304 0250 DBB2     		uxtb	r3, r3
 1305 0252 002B     		cmp	r3, #0
 1306 0254 0ED1     		bne	.L88
 419:main.c        ****                             pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 1307              		.loc 1 419 0
 1308 0256 4FF00003 		mov	r3, #0
 1309 025a BB61     		str	r3, [r7, #24]	@ float
 1310 025c 4FF00003 		mov	r3, #0
 1311 0260 FB61     		str	r3, [r7, #28]	@ float
 1312 0262 4FF00003 		mov	r3, #0
 1313 0266 3B62     		str	r3, [r7, #32]	@ float
 420:main.c        ****                             dir_latched_side = 0;                        /* ready next time */
 1314              		.loc 1 420 0
 1315 0268 114B     		ldr	r3, .L121+28
 1316 026a 0022     		movs	r2, #0
 1317 026c 1A70     		strb	r2, [r3]
 421:main.c        ****                             
 422:main.c        ****                             
 423:main.c        ****                             turn_complete = 1;
 1318              		.loc 1 423 0
 1319 026e 0123     		movs	r3, #1
 1320 0270 87F83A30 		strb	r3, [r7, #58]
 1321              	.L88:
 424:main.c        ****                         }
 425:main.c        ****                         CyDelay(LOOP_DT_MS);
 1322              		.loc 1 425 0
 1323 0274 0820     		movs	r0, #8
 1324 0276 FFF7FEFF 		bl	CyDelay
 426:main.c        ****                         continue;  /* skip the rest this tick */
 1325              		.loc 1 426 0
 1326 027a 7DE1     		b	.L118
 1327              	.L86:
 427:main.c        ****                     }
 428:main.c        ****                 }
 429:main.c        ****                 /* ---------------- end turn handling with delay ---------------- */
 430:main.c        ****                 /* Straight run with PI steering */
 431:main.c        ****         
 432:main.c        ****         if(turn_cooldown_ticks > 0) {
 1328              		.loc 1 432 0
 1329 027c 084B     		ldr	r3, .L121+12
 1330 027e 1B88     		ldrh	r3, [r3]
 1331 0280 002B     		cmp	r3, #0
 1332 0282 00F04781 		beq	.L120
 433:main.c        ****             turn_cooldown_ticks--;
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 32


 1333              		.loc 1 433 0
 1334 0286 064B     		ldr	r3, .L121+12
 1335 0288 1B88     		ldrh	r3, [r3]
 1336 028a 013B     		subs	r3, r3, #1
 1337 028c 9AB2     		uxth	r2, r3
 1338 028e 044B     		ldr	r3, .L121+12
 1339 0290 1A80     		strh	r2, [r3]	@ movhi
 1340 0292 3FE1     		b	.L120
 1341              	.L122:
 1342              		.align	2
 1343              	.L121:
 1344 0294 00000000 		.word	isr_qd_Handler
 1345 0298 06000000 		.word	g_direction
 1346 029c 00000000 		.word	.LC0
 1347 02a0 10000000 		.word	turn_cooldown_ticks
 1348 02a4 00000000 		.word	sen1_on_line
 1349 02a8 01000000 		.word	sen2_on_line
 1350 02ac 12000000 		.word	s12_prev
 1351 02b0 0E000000 		.word	dir_latched_side
 1352 02b4 0C000000 		.word	dir_delay_ticks
 1353              	.L81:
 434:main.c        ****         }
 435:main.c        ****                 
 436:main.c        ****             
 437:main.c        ****         } else if((CMD_STATES[i] == 2)) {
 1354              		.loc 1 437 0
 1355 02b8 97F94330 		ldrsb	r3, [r7, #67]
 1356 02bc 07F14802 		add	r2, r7, #72
 1357 02c0 1344     		add	r3, r3, r2
 1358 02c2 13F8403C 		ldrb	r3, [r3, #-64]	@ zero_extendqisi2
 1359 02c6 022B     		cmp	r3, #2
 1360 02c8 63D1     		bne	.L91
 438:main.c        ****             // Go RIGHT
 439:main.c        ****             g_direction = 2u;
 1361              		.loc 1 439 0
 1362 02ca AC4B     		ldr	r3, .L123
 1363 02cc 0222     		movs	r2, #2
 1364 02ce 1A70     		strb	r2, [r3]
 440:main.c        ****             /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 441:main.c        ****                 /* Arm once on the first detection (edge 0 -> 1/2) */
 442:main.c        ****                 if ((g_direction == 1u || g_direction == 2u) && dir_latched_side == 0){
 1365              		.loc 1 442 0
 1366 02d0 AA4B     		ldr	r3, .L123
 1367 02d2 1B78     		ldrb	r3, [r3]
 1368 02d4 DBB2     		uxtb	r3, r3
 1369 02d6 012B     		cmp	r3, #1
 1370 02d8 04D0     		beq	.L92
 1371              		.loc 1 442 0 is_stmt 0 discriminator 2
 1372 02da A84B     		ldr	r3, .L123
 1373 02dc 1B78     		ldrb	r3, [r3]
 1374 02de DBB2     		uxtb	r3, r3
 1375 02e0 022B     		cmp	r3, #2
 1376 02e2 0BD1     		bne	.L93
 1377              	.L92:
 1378              		.loc 1 442 0 discriminator 3
 1379 02e4 A64B     		ldr	r3, .L123+4
 1380 02e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 33


 1381 02e8 002B     		cmp	r3, #0
 1382 02ea 07D1     		bne	.L93
 443:main.c        ****                     dir_latched_side = g_direction;          /* remember side */
 1383              		.loc 1 443 0 is_stmt 1
 1384 02ec A34B     		ldr	r3, .L123
 1385 02ee 1B78     		ldrb	r3, [r3]
 1386 02f0 DAB2     		uxtb	r2, r3
 1387 02f2 A34B     		ldr	r3, .L123+4
 1388 02f4 1A70     		strb	r2, [r3]
 444:main.c        ****                     dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 1389              		.loc 1 444 0
 1390 02f6 A34B     		ldr	r3, .L123+8
 1391 02f8 0D22     		movs	r2, #13
 1392 02fa 1A80     		strh	r2, [r3]	@ movhi
 1393              	.L93:
 445:main.c        ****                     //CyDelay(50);
 446:main.c        ****                 }
 447:main.c        ****                 /* If request cleared during delay, cancel gracefully */
 448:main.c        ****                 if (g_direction == 0u && dir_latched_side != 0){
 1394              		.loc 1 448 0
 1395 02fc 9F4B     		ldr	r3, .L123
 1396 02fe 1B78     		ldrb	r3, [r3]
 1397 0300 DBB2     		uxtb	r3, r3
 1398 0302 002B     		cmp	r3, #0
 1399 0304 09D1     		bne	.L94
 1400              		.loc 1 448 0 is_stmt 0 discriminator 1
 1401 0306 9E4B     		ldr	r3, .L123+4
 1402 0308 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1403 030a 002B     		cmp	r3, #0
 1404 030c 05D0     		beq	.L94
 449:main.c        ****                     dir_latched_side = 0;
 1405              		.loc 1 449 0 is_stmt 1
 1406 030e 9C4B     		ldr	r3, .L123+4
 1407 0310 0022     		movs	r2, #0
 1408 0312 1A70     		strb	r2, [r3]
 450:main.c        ****                     dir_delay_ticks  = 0;
 1409              		.loc 1 450 0
 1410 0314 9B4B     		ldr	r3, .L123+8
 1411 0316 0022     		movs	r2, #0
 1412 0318 1A80     		strh	r2, [r3]	@ movhi
 1413              	.L94:
 451:main.c        ****                 }
 452:main.c        **** 
 453:main.c        ****                 if (g_direction == 1u || g_direction == 2u){
 1414              		.loc 1 453 0
 1415 031a 984B     		ldr	r3, .L123
 1416 031c 1B78     		ldrb	r3, [r3]
 1417 031e DBB2     		uxtb	r3, r3
 1418 0320 012B     		cmp	r3, #1
 1419 0322 04D0     		beq	.L95
 1420              		.loc 1 453 0 is_stmt 0 discriminator 1
 1421 0324 954B     		ldr	r3, .L123
 1422 0326 1B78     		ldrb	r3, [r3]
 1423 0328 DBB2     		uxtb	r3, r3
 1424 032a 022B     		cmp	r3, #2
 1425 032c 25D1     		bne	.L96
 1426              	.L95:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 34


 454:main.c        ****                     if (dir_delay_ticks > 0){
 1427              		.loc 1 454 0 is_stmt 1
 1428 032e 954B     		ldr	r3, .L123+8
 1429 0330 1B88     		ldrh	r3, [r3]
 1430 0332 002B     		cmp	r3, #0
 1431 0334 06D0     		beq	.L97
 455:main.c        ****                         /* Still delaying: keep doing normal straight PI */
 456:main.c        ****                         dir_delay_ticks--;
 1432              		.loc 1 456 0
 1433 0336 934B     		ldr	r3, .L123+8
 1434 0338 1B88     		ldrh	r3, [r3]
 1435 033a 013B     		subs	r3, r3, #1
 1436 033c 9AB2     		uxth	r2, r3
 1437 033e 914B     		ldr	r3, .L123+8
 1438 0340 1A80     		strh	r2, [r3]	@ movhi
 1439 0342 1AE0     		b	.L96
 1440              	.L97:
 457:main.c        ****                     } else {
 458:main.c        ****                         /* Delay elapsed: perform the maneuver */
 459:main.c        ****                         Directions_Handle(&g_direction);
 1441              		.loc 1 459 0
 1442 0344 8D48     		ldr	r0, .L123
 1443 0346 FFF7FEFF 		bl	Directions_Handle
 460:main.c        **** 
 461:main.c        ****                         /* When turn completes, Directions sets g_direction back to 0 */
 462:main.c        ****                         if (g_direction == 0u){
 1444              		.loc 1 462 0
 1445 034a 8C4B     		ldr	r3, .L123
 1446 034c 1B78     		ldrb	r3, [r3]
 1447 034e DBB2     		uxtb	r3, r3
 1448 0350 002B     		cmp	r3, #0
 1449 0352 0ED1     		bne	.L98
 463:main.c        ****                             pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 1450              		.loc 1 463 0
 1451 0354 4FF00003 		mov	r3, #0
 1452 0358 BB61     		str	r3, [r7, #24]	@ float
 1453 035a 4FF00003 		mov	r3, #0
 1454 035e FB61     		str	r3, [r7, #28]	@ float
 1455 0360 4FF00003 		mov	r3, #0
 1456 0364 3B62     		str	r3, [r7, #32]	@ float
 464:main.c        ****                             dir_latched_side = 0;                        /* ready next time */
 1457              		.loc 1 464 0
 1458 0366 864B     		ldr	r3, .L123+4
 1459 0368 0022     		movs	r2, #0
 1460 036a 1A70     		strb	r2, [r3]
 465:main.c        ****                             
 466:main.c        ****                            
 467:main.c        ****                             turn_complete = 1;
 1461              		.loc 1 467 0
 1462 036c 0123     		movs	r3, #1
 1463 036e 87F83A30 		strb	r3, [r7, #58]
 1464              	.L98:
 468:main.c        ****                         }
 469:main.c        ****                         CyDelay(LOOP_DT_MS);
 1465              		.loc 1 469 0
 1466 0372 0820     		movs	r0, #8
 1467 0374 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 35


 470:main.c        ****                         continue;  /* skip the rest this tick */
 1468              		.loc 1 470 0
 1469 0378 FEE0     		b	.L118
 1470              	.L96:
 471:main.c        ****                     }
 472:main.c        ****                 }
 473:main.c        ****                 /* ---------------- end turn handling with delay ---------------- */
 474:main.c        ****                 /* Straight run with PI steering */
 475:main.c        ****         
 476:main.c        ****         if(turn_cooldown_ticks > 0) {
 1471              		.loc 1 476 0
 1472 037a 834B     		ldr	r3, .L123+12
 1473 037c 1B88     		ldrh	r3, [r3]
 1474 037e 002B     		cmp	r3, #0
 1475 0380 00F0C880 		beq	.L120
 477:main.c        ****             turn_cooldown_ticks--;
 1476              		.loc 1 477 0
 1477 0384 804B     		ldr	r3, .L123+12
 1478 0386 1B88     		ldrh	r3, [r3]
 1479 0388 013B     		subs	r3, r3, #1
 1480 038a 9AB2     		uxth	r2, r3
 1481 038c 7E4B     		ldr	r3, .L123+12
 1482 038e 1A80     		strh	r2, [r3]	@ movhi
 1483 0390 C0E0     		b	.L120
 1484              	.L91:
 478:main.c        ****         }
 479:main.c        ****             
 480:main.c        ****         } else if((CMD_STATES[i] == 3)) {
 1485              		.loc 1 480 0
 1486 0392 97F94330 		ldrsb	r3, [r7, #67]
 1487 0396 07F14802 		add	r2, r7, #72
 1488 039a 1344     		add	r3, r3, r2
 1489 039c 13F8403C 		ldrb	r3, [r3, #-64]	@ zero_extendqisi2
 1490 03a0 032B     		cmp	r3, #3
 1491 03a2 6CD1     		bne	.L100
 481:main.c        ****             // Do U-TURN
 482:main.c        ****             g_direction = 3u;
 1492              		.loc 1 482 0
 1493 03a4 754B     		ldr	r3, .L123
 1494 03a6 0322     		movs	r2, #3
 1495 03a8 1A70     		strb	r2, [r3]
 483:main.c        ****             /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 484:main.c        ****                 /* Arm once on the first detection (edge 0 -> 1/2) */
 485:main.c        ****                 if ((g_direction == 1u || g_direction == 2u || g_direction == 3u) && dir_latched_si
 1496              		.loc 1 485 0
 1497 03aa 744B     		ldr	r3, .L123
 1498 03ac 1B78     		ldrb	r3, [r3]
 1499 03ae DBB2     		uxtb	r3, r3
 1500 03b0 012B     		cmp	r3, #1
 1501 03b2 09D0     		beq	.L101
 1502              		.loc 1 485 0 is_stmt 0 discriminator 2
 1503 03b4 714B     		ldr	r3, .L123
 1504 03b6 1B78     		ldrb	r3, [r3]
 1505 03b8 DBB2     		uxtb	r3, r3
 1506 03ba 022B     		cmp	r3, #2
 1507 03bc 04D0     		beq	.L101
 1508              		.loc 1 485 0 discriminator 4
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 36


 1509 03be 6F4B     		ldr	r3, .L123
 1510 03c0 1B78     		ldrb	r3, [r3]
 1511 03c2 DBB2     		uxtb	r3, r3
 1512 03c4 032B     		cmp	r3, #3
 1513 03c6 0BD1     		bne	.L102
 1514              	.L101:
 1515              		.loc 1 485 0 discriminator 5
 1516 03c8 6D4B     		ldr	r3, .L123+4
 1517 03ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1518 03cc 002B     		cmp	r3, #0
 1519 03ce 07D1     		bne	.L102
 486:main.c        ****                     dir_latched_side = g_direction;          /* remember side */
 1520              		.loc 1 486 0 is_stmt 1
 1521 03d0 6A4B     		ldr	r3, .L123
 1522 03d2 1B78     		ldrb	r3, [r3]
 1523 03d4 DAB2     		uxtb	r2, r3
 1524 03d6 6A4B     		ldr	r3, .L123+4
 1525 03d8 1A70     		strb	r2, [r3]
 487:main.c        ****                     dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 1526              		.loc 1 487 0
 1527 03da 6A4B     		ldr	r3, .L123+8
 1528 03dc 0D22     		movs	r2, #13
 1529 03de 1A80     		strh	r2, [r3]	@ movhi
 1530              	.L102:
 488:main.c        ****                     //CyDelay(50);
 489:main.c        ****                 }
 490:main.c        ****                 /* If request cleared during delay, cancel gracefully */
 491:main.c        ****                 if (g_direction == 0u && dir_latched_side != 0){
 1531              		.loc 1 491 0
 1532 03e0 664B     		ldr	r3, .L123
 1533 03e2 1B78     		ldrb	r3, [r3]
 1534 03e4 DBB2     		uxtb	r3, r3
 1535 03e6 002B     		cmp	r3, #0
 1536 03e8 09D1     		bne	.L103
 1537              		.loc 1 491 0 is_stmt 0 discriminator 1
 1538 03ea 654B     		ldr	r3, .L123+4
 1539 03ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1540 03ee 002B     		cmp	r3, #0
 1541 03f0 05D0     		beq	.L103
 492:main.c        ****                     dir_latched_side = 0;
 1542              		.loc 1 492 0 is_stmt 1
 1543 03f2 634B     		ldr	r3, .L123+4
 1544 03f4 0022     		movs	r2, #0
 1545 03f6 1A70     		strb	r2, [r3]
 493:main.c        ****                     dir_delay_ticks  = 0;
 1546              		.loc 1 493 0
 1547 03f8 624B     		ldr	r3, .L123+8
 1548 03fa 0022     		movs	r2, #0
 1549 03fc 1A80     		strh	r2, [r3]	@ movhi
 1550              	.L103:
 494:main.c        ****                 }
 495:main.c        **** 
 496:main.c        ****                 if (g_direction == 1u || g_direction == 2u || g_direction == 3u){
 1551              		.loc 1 496 0
 1552 03fe 5F4B     		ldr	r3, .L123
 1553 0400 1B78     		ldrb	r3, [r3]
 1554 0402 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 37


 1555 0404 012B     		cmp	r3, #1
 1556 0406 09D0     		beq	.L104
 1557              		.loc 1 496 0 is_stmt 0 discriminator 1
 1558 0408 5C4B     		ldr	r3, .L123
 1559 040a 1B78     		ldrb	r3, [r3]
 1560 040c DBB2     		uxtb	r3, r3
 1561 040e 022B     		cmp	r3, #2
 1562 0410 04D0     		beq	.L104
 1563              		.loc 1 496 0 discriminator 2
 1564 0412 5A4B     		ldr	r3, .L123
 1565 0414 1B78     		ldrb	r3, [r3]
 1566 0416 DBB2     		uxtb	r3, r3
 1567 0418 032B     		cmp	r3, #3
 1568 041a 25D1     		bne	.L105
 1569              	.L104:
 497:main.c        ****                     if (dir_delay_ticks > 0){
 1570              		.loc 1 497 0 is_stmt 1
 1571 041c 594B     		ldr	r3, .L123+8
 1572 041e 1B88     		ldrh	r3, [r3]
 1573 0420 002B     		cmp	r3, #0
 1574 0422 06D0     		beq	.L106
 498:main.c        ****                         /* Still delaying: keep doing normal straight PI */
 499:main.c        ****                         dir_delay_ticks--;
 1575              		.loc 1 499 0
 1576 0424 574B     		ldr	r3, .L123+8
 1577 0426 1B88     		ldrh	r3, [r3]
 1578 0428 013B     		subs	r3, r3, #1
 1579 042a 9AB2     		uxth	r2, r3
 1580 042c 554B     		ldr	r3, .L123+8
 1581 042e 1A80     		strh	r2, [r3]	@ movhi
 1582 0430 1AE0     		b	.L105
 1583              	.L106:
 500:main.c        ****                     } else {
 501:main.c        ****                         /* Delay elapsed: perform the maneuver */
 502:main.c        ****                         Directions_Handle(&g_direction);
 1584              		.loc 1 502 0
 1585 0432 5248     		ldr	r0, .L123
 1586 0434 FFF7FEFF 		bl	Directions_Handle
 503:main.c        **** 
 504:main.c        ****                         /* When turn completes, Directions sets g_direction back to 0 */
 505:main.c        ****                         if (g_direction == 0u){
 1587              		.loc 1 505 0
 1588 0438 504B     		ldr	r3, .L123
 1589 043a 1B78     		ldrb	r3, [r3]
 1590 043c DBB2     		uxtb	r3, r3
 1591 043e 002B     		cmp	r3, #0
 1592 0440 0ED1     		bne	.L107
 506:main.c        ****                             pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 1593              		.loc 1 506 0
 1594 0442 4FF00003 		mov	r3, #0
 1595 0446 BB61     		str	r3, [r7, #24]	@ float
 1596 0448 4FF00003 		mov	r3, #0
 1597 044c FB61     		str	r3, [r7, #28]	@ float
 1598 044e 4FF00003 		mov	r3, #0
 1599 0452 3B62     		str	r3, [r7, #32]	@ float
 507:main.c        ****                             dir_latched_side = 0;                        /* ready next time */
 1600              		.loc 1 507 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 38


 1601 0454 4A4B     		ldr	r3, .L123+4
 1602 0456 0022     		movs	r2, #0
 1603 0458 1A70     		strb	r2, [r3]
 508:main.c        ****                             
 509:main.c        **** 
 510:main.c        ****                             uTurn_complete = 1;
 1604              		.loc 1 510 0
 1605 045a 0123     		movs	r3, #1
 1606 045c 87F83930 		strb	r3, [r7, #57]
 1607              	.L107:
 511:main.c        ****                         }
 512:main.c        ****                         CyDelay(LOOP_DT_MS);
 1608              		.loc 1 512 0
 1609 0460 0820     		movs	r0, #8
 1610 0462 FFF7FEFF 		bl	CyDelay
 513:main.c        ****                         continue;  /* skip the rest this tick */
 1611              		.loc 1 513 0
 1612 0466 87E0     		b	.L118
 1613              	.L105:
 514:main.c        ****                     }
 515:main.c        ****                 }
 516:main.c        ****                 /* ---------------- end turn handling with delay ---------------- */
 517:main.c        ****                 /* Straight run with PI steering */
 518:main.c        ****         
 519:main.c        ****         if(turn_cooldown_ticks > 0) {
 1614              		.loc 1 519 0
 1615 0468 474B     		ldr	r3, .L123+12
 1616 046a 1B88     		ldrh	r3, [r3]
 1617 046c 002B     		cmp	r3, #0
 1618 046e 51D0     		beq	.L120
 520:main.c        ****             turn_cooldown_ticks--;
 1619              		.loc 1 520 0
 1620 0470 454B     		ldr	r3, .L123+12
 1621 0472 1B88     		ldrh	r3, [r3]
 1622 0474 013B     		subs	r3, r3, #1
 1623 0476 9AB2     		uxth	r2, r3
 1624 0478 434B     		ldr	r3, .L123+12
 1625 047a 1A80     		strh	r2, [r3]	@ movhi
 1626 047c 4AE0     		b	.L120
 1627              	.L100:
 521:main.c        ****         }
 522:main.c        ****           
 523:main.c        ****             
 524:main.c        ****         } else if((CMD_STATES[i] == 5)) {
 1628              		.loc 1 524 0
 1629 047e 97F94330 		ldrsb	r3, [r7, #67]
 1630 0482 07F14802 		add	r2, r7, #72
 1631 0486 1344     		add	r3, r3, r2
 1632 0488 13F8403C 		ldrb	r3, [r3, #-64]	@ zero_extendqisi2
 1633 048c 052B     		cmp	r3, #5
 1634 048e 2DD1     		bne	.L109
 525:main.c        ****         // REACH FOOD
 526:main.c        **** 
 527:main.c        ****          // --- FIX 1: Set the target distance *only once* ---
 528:main.c        ****          // We know we just entered this state if target_dist is 0
 529:main.c        ****         if (target_dist == 0) {
 1635              		.loc 1 529 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 39


 1636 0490 FB6B     		ldr	r3, [r7, #60]
 1637 0492 002B     		cmp	r3, #0
 1638 0494 03D1     		bne	.L110
 530:main.c        ****          // Set target to be 500mm *from our current position*
 531:main.c        ****          target_dist = g_dist_mm + 150 ; // in mm
 1639              		.loc 1 531 0
 1640 0496 3D4B     		ldr	r3, .L123+16
 1641 0498 1B68     		ldr	r3, [r3]
 1642 049a 9633     		adds	r3, r3, #150
 1643 049c FB63     		str	r3, [r7, #60]
 1644              	.L110:
 532:main.c        ****          }
 533:main.c        **** 
 534:main.c        ****         // Check if we have *now* reached that target
 535:main.c        ****          g_stop_now = (g_dist_mm >= target_dist) ? 1u : 0u;
 1645              		.loc 1 535 0
 1646 049e 3B4B     		ldr	r3, .L123+16
 1647 04a0 1A68     		ldr	r2, [r3]
 1648 04a2 FB6B     		ldr	r3, [r7, #60]
 1649 04a4 9A42     		cmp	r2, r3
 1650 04a6 01DB     		blt	.L111
 1651              		.loc 1 535 0 is_stmt 0 discriminator 1
 1652 04a8 0122     		movs	r2, #1
 1653 04aa 00E0     		b	.L112
 1654              	.L111:
 1655              		.loc 1 535 0 discriminator 2
 1656 04ac 0022     		movs	r2, #0
 1657              	.L112:
 1658              		.loc 1 535 0 discriminator 4
 1659 04ae 384B     		ldr	r3, .L123+20
 1660 04b0 1A70     		strb	r2, [r3]
 536:main.c        **** 
 537:main.c        ****          // --- FIX 2 & 3: Use if/else and remove 'continue' ---
 538:main.c        ****          if (g_stop_now) {
 1661              		.loc 1 538 0 is_stmt 1 discriminator 4
 1662 04b2 374B     		ldr	r3, .L123+20
 1663 04b4 1B78     		ldrb	r3, [r3]
 1664 04b6 DBB2     		uxtb	r3, r3
 1665 04b8 002B     		cmp	r3, #0
 1666 04ba 0AD0     		beq	.L113
 539:main.c        ****          // Target met: STOP
 540:main.c        ****          set_motors_symmetric(0);
 1667              		.loc 1 540 0
 1668 04bc 0020     		movs	r0, #0
 1669 04be FFF7FEFF 		bl	set_motors_symmetric
 541:main.c        ****          motor_enable(1u, 1u); // Disable the motors
 1670              		.loc 1 541 0
 1671 04c2 0121     		movs	r1, #1
 1672 04c4 0120     		movs	r0, #1
 1673 04c6 FFF7FEFF 		bl	motor_enable
 542:main.c        ****         
 543:main.c        ****          fruit_complete = 1; // Flag that this state is done
 1674              		.loc 1 543 0
 1675 04ca 0123     		movs	r3, #1
 1676 04cc 87F83830 		strb	r3, [r7, #56]
 1677 04d0 20E0     		b	.L120
 1678              	.L113:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 40


 1679              	.LBB5:
 544:main.c        ****         //D4_Write(1);
 545:main.c        ****          // DO NOT 'continue' here
 546:main.c        ****         } else {
 547:main.c        ****          // Target not met: KEEP DRIVING
 548:main.c        ****          int steer = pi_step(&pi, V4_pp, V5_pp, V6_pp);
 1680              		.loc 1 548 0
 1681 04d2 F988     		ldrh	r1, [r7, #6]
 1682 04d4 BA88     		ldrh	r2, [r7, #4]
 1683 04d6 7B88     		ldrh	r3, [r7, #2]
 1684 04d8 07F11800 		add	r0, r7, #24
 1685 04dc FFF7FEFF 		bl	pi_step
 1686 04e0 7862     		str	r0, [r7, #36]
 549:main.c        ****          set_motors_with_trim_and_steer(center_duty_est, steer);
 1687              		.loc 1 549 0
 1688 04e2 796A     		ldr	r1, [r7, #36]
 1689 04e4 786C     		ldr	r0, [r7, #68]
 1690 04e6 FFF7FEFF 		bl	set_motors_with_trim_and_steer
 1691 04ea 13E0     		b	.L120
 1692              	.L109:
 1693              	.LBE5:
 550:main.c        ****          }
 551:main.c        **** 
 552:main.c        ****         
 553:main.c        ****         
 554:main.c        ****         
 555:main.c        ****         } else if((CMD_STATES[i] == 6)) {
 1694              		.loc 1 555 0
 1695 04ec 97F94330 		ldrsb	r3, [r7, #67]
 1696 04f0 07F14802 		add	r2, r7, #72
 1697 04f4 1344     		add	r3, r3, r2
 1698 04f6 13F8403C 		ldrb	r3, [r3, #-64]	@ zero_extendqisi2
 1699 04fa 062B     		cmp	r3, #6
 1700 04fc 0AD1     		bne	.L120
 556:main.c        ****          // FINISH
 557:main.c        ****             set_motors_symmetric(0);
 1701              		.loc 1 557 0
 1702 04fe 0020     		movs	r0, #0
 1703 0500 FFF7FEFF 		bl	set_motors_symmetric
 558:main.c        ****             motor_enable(1u, 1u);
 1704              		.loc 1 558 0
 1705 0504 0121     		movs	r1, #1
 1706 0506 0120     		movs	r0, #1
 1707 0508 FFF7FEFF 		bl	motor_enable
 559:main.c        ****             CyDelay(20000);
 1708              		.loc 1 559 0
 1709 050c 44F62060 		movw	r0, #20000
 1710 0510 FFF7FEFF 		bl	CyDelay
 1711              	.L120:
 560:main.c        ****         }
 561:main.c        ****         
 562:main.c        ****         if (i == 134) {
 563:main.c        ****             D4_Write(1);
 564:main.c        ****             D5_Write(1);
 565:main.c        ****             D7_Write(1);
 566:main.c        ****             D8_Write(1);
 567:main.c        ****             
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 41


 568:main.c        ****         }
 569:main.c        ****         
 570:main.c        ****         // food
 571:main.c        ****         /*if (i == 12 || i == 22 || i == 30 || i == 43) {
 572:main.c        ****             CyDelay(2000);
 573:main.c        ****         } */
 574:main.c        ****         
 575:main.c        ****         
 576:main.c        ****         
 577:main.c        ****         /* This logic checks the state that just FINISHED (e.g., i == 4)
 578:main.c        ****          * and overwrites the default cooldown period for the 
 579:main.c        ****          * 'straight' segment that is about to begin.
 580:main.c        ****          */
 581:main.c        ****         /*if (i == 4) {
 582:main.c        ****             // Set 4000ms cooldown (4000ms / 8ms_per_loop)
 583:main.c        ****             turn_cooldown_ticks = (uint16_t)(4000 / LOOP_DT_MS);
 584:main.c        ****         } 
 585:main.c        ****         else if (i == 10) {
 586:main.c        ****             // Set 2000ms cooldown
 587:main.c        ****             turn_cooldown_ticks = (uint16_t)(2000 / LOOP_DT_MS);
 588:main.c        ****         }
 589:main.c        ****         else if (i == 35) {
 590:main.c        ****             // Set 5000ms cooldown
 591:main.c        ****             turn_cooldown_ticks = (uint16_t)(5000 / LOOP_DT_MS);
 592:main.c        ****         }
 593:main.c        ****         else if (i == 38) {
 594:main.c        ****             // Set 500ms cooldown
 595:main.c        ****             turn_cooldown_ticks = (uint16_t)(500 / LOOP_DT_MS);
 596:main.c        ****         }
 597:main.c        ****         else if (i == 46) {
 598:main.c        ****             // Set 1000ms cooldown
 599:main.c        ****             turn_cooldown_ticks = (uint16_t)(1000 / LOOP_DT_MS);
 600:main.c        ****         }*/
 601:main.c        ****         
 602:main.c        ****         
 603:main.c        ****         if (straight_complete == 1u || turn_complete == 1u || uTurn_complete == 1u || fruit_complet
 1712              		.loc 1 603 0
 1713 0514 97F93B30 		ldrsb	r3, [r7, #59]
 1714 0518 012B     		cmp	r3, #1
 1715 051a 0BD0     		beq	.L115
 1716              		.loc 1 603 0 is_stmt 0 discriminator 1
 1717 051c 97F93A30 		ldrsb	r3, [r7, #58]
 1718 0520 012B     		cmp	r3, #1
 1719 0522 07D0     		beq	.L115
 1720              		.loc 1 603 0 discriminator 2
 1721 0524 97F93930 		ldrsb	r3, [r7, #57]
 1722 0528 012B     		cmp	r3, #1
 1723 052a 03D0     		beq	.L115
 1724              		.loc 1 603 0 discriminator 3
 1725 052c 97F93830 		ldrsb	r3, [r7, #56]
 1726 0530 012B     		cmp	r3, #1
 1727 0532 1ED1     		bne	.L116
 1728              	.L115:
 604:main.c        ****             
 605:main.c        ****                 // Check if we are at the end of the array
 606:main.c        ****             if (i < max) {
 1729              		.loc 1 606 0 is_stmt 1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 42


 1730 0534 97F94320 		ldrsb	r2, [r7, #67]
 1731 0538 97F93730 		ldrsb	r3, [r7, #55]
 1732 053c 9A42     		cmp	r2, r3
 1733 053e 14DA     		bge	.L117
 607:main.c        **** 
 608:main.c        ****              i += 1;
 1734              		.loc 1 608 0
 1735 0540 97F84330 		ldrb	r3, [r7, #67]	@ zero_extendqisi2
 1736 0544 0133     		adds	r3, r3, #1
 1737 0546 DBB2     		uxtb	r3, r3
 1738 0548 87F84330 		strb	r3, [r7, #67]
 609:main.c        ****             
 610:main.c        ****                 
 611:main.c        ****                 straight_complete = 0;
 1739              		.loc 1 611 0
 1740 054c 0023     		movs	r3, #0
 1741 054e 87F83B30 		strb	r3, [r7, #59]
 612:main.c        ****                 turn_complete = 0;
 1742              		.loc 1 612 0
 1743 0552 0023     		movs	r3, #0
 1744 0554 87F83A30 		strb	r3, [r7, #58]
 613:main.c        ****                 uTurn_complete = 0;
 1745              		.loc 1 613 0
 1746 0558 0023     		movs	r3, #0
 1747 055a 87F83930 		strb	r3, [r7, #57]
 614:main.c        ****                 fruit_complete = 0;
 1748              		.loc 1 614 0
 1749 055e 0023     		movs	r3, #0
 1750 0560 87F83830 		strb	r3, [r7, #56]
 615:main.c        ****                 
 616:main.c        ****                 target_dist = 0;
 1751              		.loc 1 616 0
 1752 0564 0023     		movs	r3, #0
 1753 0566 FB63     		str	r3, [r7, #60]
 1754 0568 03E0     		b	.L116
 1755              	.L117:
 617:main.c        ****             } else {
 618:main.c        ****                 Motors_SetPercent(0,0);
 1756              		.loc 1 618 0
 1757 056a 0021     		movs	r1, #0
 1758 056c 0020     		movs	r0, #0
 1759 056e FFF7FEFF 		bl	Motors_SetPercent
 1760              	.L116:
 619:main.c        ****             }
 620:main.c        ****         }
 621:main.c        ****         
 622:main.c        **** 
 623:main.c        ****         CyDelay(LOOP_DT_MS);
 1761              		.loc 1 623 0
 1762 0572 0820     		movs	r0, #8
 1763 0574 FFF7FEFF 		bl	CyDelay
 1764              	.L118:
 1765              	.LBE3:
 624:main.c        ****     }
 1766              		.loc 1 624 0 discriminator 1
 1767 0578 BDE5     		b	.L119
 1768              	.L124:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 43


 1769 057a 00BF     		.align	2
 1770              	.L123:
 1771 057c 06000000 		.word	g_direction
 1772 0580 0E000000 		.word	dir_latched_side
 1773 0584 0C000000 		.word	dir_delay_ticks
 1774 0588 10000000 		.word	turn_cooldown_ticks
 1775 058c 08000000 		.word	g_dist_mm
 1776 0590 07000000 		.word	g_stop_now
 1777              		.cfi_endproc
 1778              	.LFE69:
 1779              		.size	main, .-main
 1780              		.text
 1781              	.Letext0:
 1782              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1783              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1784              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 1785              		.section	.debug_info,"",%progbits
 1786              	.Ldebug_info0:
 1787 0000 4D060000 		.4byte	0x64d
 1788 0004 0400     		.2byte	0x4
 1789 0006 00000000 		.4byte	.Ldebug_abbrev0
 1790 000a 04       		.byte	0x4
 1791 000b 01       		.uleb128 0x1
 1792 000c 68000000 		.4byte	.LASF67
 1793 0010 0C       		.byte	0xc
 1794 0011 1E030000 		.4byte	.LASF68
 1795 0015 23010000 		.4byte	.LASF69
 1796 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1797 001d 00000000 		.4byte	0
 1798 0021 00000000 		.4byte	.Ldebug_line0
 1799 0025 02       		.uleb128 0x2
 1800 0026 B8020000 		.4byte	.LASF0
 1801 002a 02       		.byte	0x2
 1802 002b 1B       		.byte	0x1b
 1803 002c 30000000 		.4byte	0x30
 1804 0030 03       		.uleb128 0x3
 1805 0031 01       		.byte	0x1
 1806 0032 06       		.byte	0x6
 1807 0033 2C020000 		.4byte	.LASF2
 1808 0037 02       		.uleb128 0x2
 1809 0038 A8010000 		.4byte	.LASF1
 1810 003c 02       		.byte	0x2
 1811 003d 1D       		.byte	0x1d
 1812 003e 42000000 		.4byte	0x42
 1813 0042 03       		.uleb128 0x3
 1814 0043 01       		.byte	0x1
 1815 0044 08       		.byte	0x8
 1816 0045 B2010000 		.4byte	.LASF3
 1817 0049 03       		.uleb128 0x3
 1818 004a 02       		.byte	0x2
 1819 004b 05       		.byte	0x5
 1820 004c 3F000000 		.4byte	.LASF4
 1821 0050 02       		.uleb128 0x2
 1822 0051 FB000000 		.4byte	.LASF5
 1823 0055 02       		.byte	0x2
 1824 0056 2B       		.byte	0x2b
 1825 0057 5B000000 		.4byte	0x5b
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 44


 1826 005b 03       		.uleb128 0x3
 1827 005c 02       		.byte	0x2
 1828 005d 07       		.byte	0x7
 1829 005e 98020000 		.4byte	.LASF6
 1830 0062 02       		.uleb128 0x2
 1831 0063 7B030000 		.4byte	.LASF7
 1832 0067 02       		.byte	0x2
 1833 0068 3F       		.byte	0x3f
 1834 0069 6D000000 		.4byte	0x6d
 1835 006d 03       		.uleb128 0x3
 1836 006e 04       		.byte	0x4
 1837 006f 05       		.byte	0x5
 1838 0070 8F010000 		.4byte	.LASF8
 1839 0074 03       		.uleb128 0x3
 1840 0075 04       		.byte	0x4
 1841 0076 07       		.byte	0x7
 1842 0077 25030000 		.4byte	.LASF9
 1843 007b 02       		.uleb128 0x2
 1844 007c 98010000 		.4byte	.LASF10
 1845 0080 02       		.byte	0x2
 1846 0081 59       		.byte	0x59
 1847 0082 86000000 		.4byte	0x86
 1848 0086 03       		.uleb128 0x3
 1849 0087 08       		.byte	0x8
 1850 0088 05       		.byte	0x5
 1851 0089 77010000 		.4byte	.LASF11
 1852 008d 03       		.uleb128 0x3
 1853 008e 08       		.byte	0x8
 1854 008f 07       		.byte	0x7
 1855 0090 38020000 		.4byte	.LASF12
 1856 0094 04       		.uleb128 0x4
 1857 0095 04       		.byte	0x4
 1858 0096 05       		.byte	0x5
 1859 0097 696E7400 		.ascii	"int\000"
 1860 009b 03       		.uleb128 0x3
 1861 009c 04       		.byte	0x4
 1862 009d 07       		.byte	0x7
 1863 009e 5C020000 		.4byte	.LASF13
 1864 00a2 02       		.uleb128 0x2
 1865 00a3 38000000 		.4byte	.LASF14
 1866 00a7 03       		.byte	0x3
 1867 00a8 14       		.byte	0x14
 1868 00a9 25000000 		.4byte	0x25
 1869 00ad 02       		.uleb128 0x2
 1870 00ae 0E010000 		.4byte	.LASF15
 1871 00b2 03       		.byte	0x3
 1872 00b3 18       		.byte	0x18
 1873 00b4 37000000 		.4byte	0x37
 1874 00b8 02       		.uleb128 0x2
 1875 00b9 6F020000 		.4byte	.LASF16
 1876 00bd 03       		.byte	0x3
 1877 00be 24       		.byte	0x24
 1878 00bf 50000000 		.4byte	0x50
 1879 00c3 02       		.uleb128 0x2
 1880 00c4 E0020000 		.4byte	.LASF17
 1881 00c8 03       		.byte	0x3
 1882 00c9 2C       		.byte	0x2c
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 45


 1883 00ca 62000000 		.4byte	0x62
 1884 00ce 02       		.uleb128 0x2
 1885 00cf 06010000 		.4byte	.LASF18
 1886 00d3 03       		.byte	0x3
 1887 00d4 38       		.byte	0x38
 1888 00d5 7B000000 		.4byte	0x7b
 1889 00d9 03       		.uleb128 0x3
 1890 00da 04       		.byte	0x4
 1891 00db 04       		.byte	0x4
 1892 00dc 71010000 		.4byte	.LASF19
 1893 00e0 03       		.uleb128 0x3
 1894 00e1 08       		.byte	0x8
 1895 00e2 04       		.byte	0x4
 1896 00e3 A7030000 		.4byte	.LASF20
 1897 00e7 03       		.uleb128 0x3
 1898 00e8 01       		.byte	0x1
 1899 00e9 08       		.byte	0x8
 1900 00ea 85010000 		.4byte	.LASF21
 1901 00ee 03       		.uleb128 0x3
 1902 00ef 08       		.byte	0x8
 1903 00f0 04       		.byte	0x4
 1904 00f1 E1010000 		.4byte	.LASF22
 1905 00f5 03       		.uleb128 0x3
 1906 00f6 04       		.byte	0x4
 1907 00f7 07       		.byte	0x7
 1908 00f8 5F000000 		.4byte	.LASF23
 1909 00fc 05       		.uleb128 0x5
 1910 00fd AD000000 		.4byte	0xad
 1911 0101 06       		.uleb128 0x6
 1912 0102 0C       		.byte	0xc
 1913 0103 01       		.byte	0x1
 1914 0104 96       		.byte	0x96
 1915 0105 2A010000 		.4byte	0x12a
 1916 0109 07       		.uleb128 0x7
 1917 010a 6900     		.ascii	"i\000"
 1918 010c 01       		.byte	0x1
 1919 010d 96       		.byte	0x96
 1920 010e D9000000 		.4byte	0xd9
 1921 0112 00       		.byte	0
 1922 0113 07       		.uleb128 0x7
 1923 0114 7500     		.ascii	"u\000"
 1924 0116 01       		.byte	0x1
 1925 0117 96       		.byte	0x96
 1926 0118 D9000000 		.4byte	0xd9
 1927 011c 04       		.byte	0x4
 1928 011d 08       		.uleb128 0x8
 1929 011e 74030000 		.4byte	.LASF24
 1930 0122 01       		.byte	0x1
 1931 0123 96       		.byte	0x96
 1932 0124 D9000000 		.4byte	0xd9
 1933 0128 08       		.byte	0x8
 1934 0129 00       		.byte	0
 1935 012a 02       		.uleb128 0x2
 1936 012b 8A010000 		.4byte	.LASF25
 1937 012f 01       		.byte	0x1
 1938 0130 96       		.byte	0x96
 1939 0131 01010000 		.4byte	0x101
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 46


 1940 0135 09       		.uleb128 0x9
 1941 0136 C1020000 		.4byte	.LASF70
 1942 013a 01       		.byte	0x1
 1943 013b 4C       		.byte	0x4c
 1944 013c 00000000 		.4byte	.LFB64
 1945 0140 14010000 		.4byte	.LFE64-.LFB64
 1946 0144 01       		.uleb128 0x1
 1947 0145 9C       		.byte	0x9c
 1948 0146 F0010000 		.4byte	0x1f0
 1949 014a 0A       		.uleb128 0xa
 1950 014b 12000000 		.4byte	.LBB2
 1951 014f EA000000 		.4byte	.LBE2-.LBB2
 1952 0153 0B       		.uleb128 0xb
 1953 0154 DC010000 		.4byte	.LASF26
 1954 0158 01       		.byte	0x1
 1955 0159 4F       		.byte	0x4f
 1956 015a C3000000 		.4byte	0xc3
 1957 015e 02       		.uleb128 0x2
 1958 015f 91       		.byte	0x91
 1959 0160 54       		.sleb128 -44
 1960 0161 0B       		.uleb128 0xb
 1961 0162 16010000 		.4byte	.LASF27
 1962 0166 01       		.byte	0x1
 1963 0167 50       		.byte	0x50
 1964 0168 C3000000 		.4byte	0xc3
 1965 016c 02       		.uleb128 0x2
 1966 016d 91       		.byte	0x91
 1967 016e 50       		.sleb128 -48
 1968 016f 0C       		.uleb128 0xc
 1969 0170 643100   		.ascii	"d1\000"
 1970 0173 01       		.byte	0x1
 1971 0174 52       		.byte	0x52
 1972 0175 C3000000 		.4byte	0xc3
 1973 0179 02       		.uleb128 0x2
 1974 017a 91       		.byte	0x91
 1975 017b 4C       		.sleb128 -52
 1976 017c 0C       		.uleb128 0xc
 1977 017d 643200   		.ascii	"d2\000"
 1978 0180 01       		.byte	0x1
 1979 0181 52       		.byte	0x52
 1980 0182 C3000000 		.4byte	0xc3
 1981 0186 02       		.uleb128 0x2
 1982 0187 91       		.byte	0x91
 1983 0188 48       		.sleb128 -56
 1984 0189 0C       		.uleb128 0xc
 1985 018a 613100   		.ascii	"a1\000"
 1986 018d 01       		.byte	0x1
 1987 018e 53       		.byte	0x53
 1988 018f C3000000 		.4byte	0xc3
 1989 0193 02       		.uleb128 0x2
 1990 0194 91       		.byte	0x91
 1991 0195 44       		.sleb128 -60
 1992 0196 0C       		.uleb128 0xc
 1993 0197 613200   		.ascii	"a2\000"
 1994 019a 01       		.byte	0x1
 1995 019b 54       		.byte	0x54
 1996 019c C3000000 		.4byte	0xc3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 47


 1997 01a0 02       		.uleb128 0x2
 1998 01a1 91       		.byte	0x91
 1999 01a2 40       		.sleb128 -64
 2000 01a3 0B       		.uleb128 0xb
 2001 01a4 DA030000 		.4byte	.LASF28
 2002 01a8 01       		.byte	0x1
 2003 01a9 55       		.byte	0x55
 2004 01aa C3000000 		.4byte	0xc3
 2005 01ae 03       		.uleb128 0x3
 2006 01af 91       		.byte	0x91
 2007 01b0 BC7F     		.sleb128 -68
 2008 01b2 0B       		.uleb128 0xb
 2009 01b3 37030000 		.4byte	.LASF29
 2010 01b7 01       		.byte	0x1
 2011 01b8 56       		.byte	0x56
 2012 01b9 C3000000 		.4byte	0xc3
 2013 01bd 03       		.uleb128 0x3
 2014 01be 91       		.byte	0x91
 2015 01bf B87F     		.sleb128 -72
 2016 01c1 0C       		.uleb128 0xc
 2017 01c2 6E756D00 		.ascii	"num\000"
 2018 01c6 01       		.byte	0x1
 2019 01c7 59       		.byte	0x59
 2020 01c8 CE000000 		.4byte	0xce
 2021 01cc 03       		.uleb128 0x3
 2022 01cd 91       		.byte	0x91
 2023 01ce B07F     		.sleb128 -80
 2024 01d0 0B       		.uleb128 0xb
 2025 01d1 1B010000 		.4byte	.LASF30
 2026 01d5 01       		.byte	0x1
 2027 01d6 5A       		.byte	0x5a
 2028 01d7 C3000000 		.4byte	0xc3
 2029 01db 03       		.uleb128 0x3
 2030 01dc 91       		.byte	0x91
 2031 01dd AC7F     		.sleb128 -84
 2032 01df 0B       		.uleb128 0xb
 2033 01e0 FC020000 		.4byte	.LASF31
 2034 01e4 01       		.byte	0x1
 2035 01e5 5B       		.byte	0x5b
 2036 01e6 C3000000 		.4byte	0xc3
 2037 01ea 03       		.uleb128 0x3
 2038 01eb 91       		.byte	0x91
 2039 01ec A87F     		.sleb128 -88
 2040 01ee 00       		.byte	0
 2041 01ef 00       		.byte	0
 2042 01f0 0D       		.uleb128 0xd
 2043 01f1 85030000 		.4byte	.LASF35
 2044 01f5 01       		.byte	0x1
 2045 01f6 6A       		.byte	0x6a
 2046 01f7 D9000000 		.4byte	0xd9
 2047 01fb 00000000 		.4byte	.LFB65
 2048 01ff 44000000 		.4byte	.LFE65-.LFB65
 2049 0203 01       		.uleb128 0x1
 2050 0204 9C       		.byte	0x9c
 2051 0205 17020000 		.4byte	0x217
 2052 0209 0E       		.uleb128 0xe
 2053 020a 707000   		.ascii	"pp\000"
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 48


 2054 020d 01       		.byte	0x1
 2055 020e 6A       		.byte	0x6a
 2056 020f B8000000 		.4byte	0xb8
 2057 0213 02       		.uleb128 0x2
 2058 0214 91       		.byte	0x91
 2059 0215 76       		.sleb128 -10
 2060 0216 00       		.byte	0
 2061 0217 0F       		.uleb128 0xf
 2062 0218 41030000 		.4byte	.LASF71
 2063 021c 01       		.byte	0x1
 2064 021d 72       		.byte	0x72
 2065 021e 00000000 		.4byte	.LFB66
 2066 0222 48010000 		.4byte	.LFE66-.LFB66
 2067 0226 01       		.uleb128 0x1
 2068 0227 9C       		.byte	0x9c
 2069 0228 A5020000 		.4byte	0x2a5
 2070 022c 10       		.uleb128 0x10
 2071 022d 32000000 		.4byte	.LASF32
 2072 0231 01       		.byte	0x1
 2073 0232 72       		.byte	0x72
 2074 0233 A5020000 		.4byte	0x2a5
 2075 0237 02       		.uleb128 0x2
 2076 0238 91       		.byte	0x91
 2077 0239 64       		.sleb128 -28
 2078 023a 10       		.uleb128 0x10
 2079 023b 6B010000 		.4byte	.LASF33
 2080 023f 01       		.byte	0x1
 2081 0240 72       		.byte	0x72
 2082 0241 A5020000 		.4byte	0x2a5
 2083 0245 02       		.uleb128 0x2
 2084 0246 91       		.byte	0x91
 2085 0247 60       		.sleb128 -32
 2086 0248 10       		.uleb128 0x10
 2087 0249 69020000 		.4byte	.LASF34
 2088 024d 01       		.byte	0x1
 2089 024e 72       		.byte	0x72
 2090 024f A5020000 		.4byte	0x2a5
 2091 0253 02       		.uleb128 0x2
 2092 0254 91       		.byte	0x91
 2093 0255 5C       		.sleb128 -36
 2094 0256 0C       		.uleb128 0xc
 2095 0257 563100   		.ascii	"V1\000"
 2096 025a 01       		.byte	0x1
 2097 025b 74       		.byte	0x74
 2098 025c B8000000 		.4byte	0xb8
 2099 0260 02       		.uleb128 0x2
 2100 0261 91       		.byte	0x91
 2101 0262 76       		.sleb128 -10
 2102 0263 0C       		.uleb128 0xc
 2103 0264 563200   		.ascii	"V2\000"
 2104 0267 01       		.byte	0x1
 2105 0268 75       		.byte	0x75
 2106 0269 B8000000 		.4byte	0xb8
 2107 026d 02       		.uleb128 0x2
 2108 026e 91       		.byte	0x91
 2109 026f 74       		.sleb128 -12
 2110 0270 0C       		.uleb128 0xc
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 49


 2111 0271 563300   		.ascii	"V3\000"
 2112 0274 01       		.byte	0x1
 2113 0275 76       		.byte	0x76
 2114 0276 B8000000 		.4byte	0xb8
 2115 027a 02       		.uleb128 0x2
 2116 027b 91       		.byte	0x91
 2117 027c 72       		.sleb128 -14
 2118 027d 0C       		.uleb128 0xc
 2119 027e 563400   		.ascii	"V4\000"
 2120 0281 01       		.byte	0x1
 2121 0282 77       		.byte	0x77
 2122 0283 B8000000 		.4byte	0xb8
 2123 0287 02       		.uleb128 0x2
 2124 0288 91       		.byte	0x91
 2125 0289 70       		.sleb128 -16
 2126 028a 0C       		.uleb128 0xc
 2127 028b 563500   		.ascii	"V5\000"
 2128 028e 01       		.byte	0x1
 2129 028f 78       		.byte	0x78
 2130 0290 B8000000 		.4byte	0xb8
 2131 0294 02       		.uleb128 0x2
 2132 0295 91       		.byte	0x91
 2133 0296 6E       		.sleb128 -18
 2134 0297 0C       		.uleb128 0xc
 2135 0298 563600   		.ascii	"V6\000"
 2136 029b 01       		.byte	0x1
 2137 029c 79       		.byte	0x79
 2138 029d B8000000 		.4byte	0xb8
 2139 02a1 02       		.uleb128 0x2
 2140 02a2 91       		.byte	0x91
 2141 02a3 6C       		.sleb128 -20
 2142 02a4 00       		.byte	0
 2143 02a5 11       		.uleb128 0x11
 2144 02a6 04       		.byte	0x4
 2145 02a7 B8000000 		.4byte	0xb8
 2146 02ab 0D       		.uleb128 0xd
 2147 02ac 85020000 		.4byte	.LASF36
 2148 02b0 01       		.byte	0x1
 2149 02b1 97       		.byte	0x97
 2150 02b2 D9000000 		.4byte	0xd9
 2151 02b6 00000000 		.4byte	.LFB67
 2152 02ba 3A000000 		.4byte	.LFE67-.LFB67
 2153 02be 01       		.uleb128 0x1
 2154 02bf 9C       		.byte	0x9c
 2155 02c0 EB020000 		.4byte	0x2eb
 2156 02c4 0E       		.uleb128 0xe
 2157 02c5 7800     		.ascii	"x\000"
 2158 02c7 01       		.byte	0x1
 2159 02c8 97       		.byte	0x97
 2160 02c9 D9000000 		.4byte	0xd9
 2161 02cd 02       		.uleb128 0x2
 2162 02ce 91       		.byte	0x91
 2163 02cf 74       		.sleb128 -12
 2164 02d0 0E       		.uleb128 0xe
 2165 02d1 6C6F00   		.ascii	"lo\000"
 2166 02d4 01       		.byte	0x1
 2167 02d5 97       		.byte	0x97
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 50


 2168 02d6 D9000000 		.4byte	0xd9
 2169 02da 02       		.uleb128 0x2
 2170 02db 91       		.byte	0x91
 2171 02dc 70       		.sleb128 -16
 2172 02dd 0E       		.uleb128 0xe
 2173 02de 686900   		.ascii	"hi\000"
 2174 02e1 01       		.byte	0x1
 2175 02e2 97       		.byte	0x97
 2176 02e3 D9000000 		.4byte	0xd9
 2177 02e7 02       		.uleb128 0x2
 2178 02e8 91       		.byte	0x91
 2179 02e9 6C       		.sleb128 -20
 2180 02ea 00       		.byte	0
 2181 02eb 0D       		.uleb128 0xd
 2182 02ec E8020000 		.4byte	.LASF37
 2183 02f0 01       		.byte	0x1
 2184 02f1 99       		.byte	0x99
 2185 02f2 94000000 		.4byte	0x94
 2186 02f6 00000000 		.4byte	.LFB68
 2187 02fa 88020000 		.4byte	.LFE68-.LFB68
 2188 02fe 01       		.uleb128 0x1
 2189 02ff 9C       		.byte	0x9c
 2190 0300 E1030000 		.4byte	0x3e1
 2191 0304 0E       		.uleb128 0xe
 2192 0305 706900   		.ascii	"pi\000"
 2193 0308 01       		.byte	0x1
 2194 0309 99       		.byte	0x99
 2195 030a E1030000 		.4byte	0x3e1
 2196 030e 03       		.uleb128 0x3
 2197 030f 91       		.byte	0x91
 2198 0310 BC7F     		.sleb128 -68
 2199 0312 10       		.uleb128 0x10
 2200 0313 32000000 		.4byte	.LASF32
 2201 0317 01       		.byte	0x1
 2202 0318 99       		.byte	0x99
 2203 0319 B8000000 		.4byte	0xb8
 2204 031d 03       		.uleb128 0x3
 2205 031e 91       		.byte	0x91
 2206 031f BA7F     		.sleb128 -70
 2207 0321 10       		.uleb128 0x10
 2208 0322 6B010000 		.4byte	.LASF33
 2209 0326 01       		.byte	0x1
 2210 0327 99       		.byte	0x99
 2211 0328 B8000000 		.4byte	0xb8
 2212 032c 03       		.uleb128 0x3
 2213 032d 91       		.byte	0x91
 2214 032e B87F     		.sleb128 -72
 2215 0330 10       		.uleb128 0x10
 2216 0331 69020000 		.4byte	.LASF34
 2217 0335 01       		.byte	0x1
 2218 0336 99       		.byte	0x99
 2219 0337 B8000000 		.4byte	0xb8
 2220 033b 03       		.uleb128 0x3
 2221 033c 91       		.byte	0x91
 2222 033d B67F     		.sleb128 -74
 2223 033f 0C       		.uleb128 0xc
 2224 0340 633400   		.ascii	"c4\000"
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 51


 2225 0343 01       		.byte	0x1
 2226 0344 9B       		.byte	0x9b
 2227 0345 D9000000 		.4byte	0xd9
 2228 0349 02       		.uleb128 0x2
 2229 034a 91       		.byte	0x91
 2230 034b 68       		.sleb128 -24
 2231 034c 0C       		.uleb128 0xc
 2232 034d 633500   		.ascii	"c5\000"
 2233 0350 01       		.byte	0x1
 2234 0351 9C       		.byte	0x9c
 2235 0352 D9000000 		.4byte	0xd9
 2236 0356 02       		.uleb128 0x2
 2237 0357 91       		.byte	0x91
 2238 0358 64       		.sleb128 -28
 2239 0359 0C       		.uleb128 0xc
 2240 035a 633600   		.ascii	"c6\000"
 2241 035d 01       		.byte	0x1
 2242 035e 9D       		.byte	0x9d
 2243 035f D9000000 		.4byte	0xd9
 2244 0363 02       		.uleb128 0x2
 2245 0364 91       		.byte	0x91
 2246 0365 60       		.sleb128 -32
 2247 0366 0C       		.uleb128 0xc
 2248 0367 73756D00 		.ascii	"sum\000"
 2249 036b 01       		.byte	0x1
 2250 036c 9E       		.byte	0x9e
 2251 036d D9000000 		.4byte	0xd9
 2252 0371 02       		.uleb128 0x2
 2253 0372 91       		.byte	0x91
 2254 0373 5C       		.sleb128 -36
 2255 0374 0B       		.uleb128 0xb
 2256 0375 19020000 		.4byte	.LASF38
 2257 0379 01       		.byte	0x1
 2258 037a 9F       		.byte	0x9f
 2259 037b E7030000 		.4byte	0x3e7
 2260 037f 02       		.uleb128 0x2
 2261 0380 91       		.byte	0x91
 2262 0381 5B       		.sleb128 -37
 2263 0382 0C       		.uleb128 0xc
 2264 0383 706F7300 		.ascii	"pos\000"
 2265 0387 01       		.byte	0x1
 2266 0388 A1       		.byte	0xa1
 2267 0389 D9000000 		.4byte	0xd9
 2268 038d 02       		.uleb128 0x2
 2269 038e 91       		.byte	0x91
 2270 038f 6C       		.sleb128 -20
 2271 0390 0C       		.uleb128 0xc
 2272 0391 6500     		.ascii	"e\000"
 2273 0393 01       		.byte	0x1
 2274 0394 A4       		.byte	0xa4
 2275 0395 D9000000 		.4byte	0xd9
 2276 0399 02       		.uleb128 0x2
 2277 039a 91       		.byte	0x91
 2278 039b 54       		.sleb128 -44
 2279 039c 0B       		.uleb128 0xb
 2280 039d 17030000 		.4byte	.LASF39
 2281 03a1 01       		.byte	0x1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 52


 2282 03a2 AD       		.byte	0xad
 2283 03a3 D9000000 		.4byte	0xd9
 2284 03a7 02       		.uleb128 0x2
 2285 03a8 91       		.byte	0x91
 2286 03a9 50       		.sleb128 -48
 2287 03aa 0B       		.uleb128 0xb
 2288 03ab A2010000 		.4byte	.LASF40
 2289 03af 01       		.byte	0x1
 2290 03b0 AE       		.byte	0xae
 2291 03b1 D9000000 		.4byte	0xd9
 2292 03b5 02       		.uleb128 0x2
 2293 03b6 91       		.byte	0x91
 2294 03b7 4C       		.sleb128 -52
 2295 03b8 0C       		.uleb128 0xc
 2296 03b9 7500     		.ascii	"u\000"
 2297 03bb 01       		.byte	0x1
 2298 03bc AF       		.byte	0xaf
 2299 03bd D9000000 		.4byte	0xd9
 2300 03c1 02       		.uleb128 0x2
 2301 03c2 91       		.byte	0x91
 2302 03c3 48       		.sleb128 -56
 2303 03c4 0B       		.uleb128 0xb
 2304 03c5 6D030000 		.4byte	.LASF41
 2305 03c9 01       		.byte	0x1
 2306 03ca B1       		.byte	0xb1
 2307 03cb E7030000 		.4byte	0x3e7
 2308 03cf 02       		.uleb128 0x2
 2309 03d0 91       		.byte	0x91
 2310 03d1 47       		.sleb128 -57
 2311 03d2 0B       		.uleb128 0xb
 2312 03d3 A0030000 		.4byte	.LASF42
 2313 03d7 01       		.byte	0x1
 2314 03d8 B2       		.byte	0xb2
 2315 03d9 E7030000 		.4byte	0x3e7
 2316 03dd 02       		.uleb128 0x2
 2317 03de 91       		.byte	0x91
 2318 03df 46       		.sleb128 -58
 2319 03e0 00       		.byte	0
 2320 03e1 11       		.uleb128 0x11
 2321 03e2 04       		.byte	0x4
 2322 03e3 2A010000 		.4byte	0x12a
 2323 03e7 03       		.uleb128 0x3
 2324 03e8 01       		.byte	0x1
 2325 03e9 02       		.byte	0x2
 2326 03ea F6020000 		.4byte	.LASF43
 2327 03ee 12       		.uleb128 0x12
 2328 03ef F6000000 		.4byte	.LASF72
 2329 03f3 01       		.byte	0x1
 2330 03f4 BF       		.byte	0xbf
 2331 03f5 94000000 		.4byte	0x94
 2332 03f9 00000000 		.4byte	.LFB69
 2333 03fd 94050000 		.4byte	.LFE69-.LFB69
 2334 0401 01       		.uleb128 0x1
 2335 0402 9C       		.byte	0x9c
 2336 0403 43050000 		.4byte	0x543
 2337 0407 0B       		.uleb128 0xb
 2338 0408 D0020000 		.4byte	.LASF44
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 53


 2339 040c 01       		.byte	0x1
 2340 040d DD       		.byte	0xdd
 2341 040e 94000000 		.4byte	0x94
 2342 0412 02       		.uleb128 0x2
 2343 0413 91       		.byte	0x91
 2344 0414 6C       		.sleb128 -20
 2345 0415 0C       		.uleb128 0xc
 2346 0416 706900   		.ascii	"pi\000"
 2347 0419 01       		.byte	0x1
 2348 041a E2       		.byte	0xe2
 2349 041b 2A010000 		.4byte	0x12a
 2350 041f 02       		.uleb128 0x2
 2351 0420 91       		.byte	0x91
 2352 0421 40       		.sleb128 -64
 2353 0422 0B       		.uleb128 0xb
 2354 0423 8D020000 		.4byte	.LASF45
 2355 0427 01       		.byte	0x1
 2356 0428 F0       		.byte	0xf0
 2357 0429 58050000 		.4byte	0x558
 2358 042d 03       		.uleb128 0x3
 2359 042e 91       		.byte	0x91
 2360 042f B07F     		.sleb128 -80
 2361 0431 13       		.uleb128 0x13
 2362 0432 6D617800 		.ascii	"max\000"
 2363 0436 01       		.byte	0x1
 2364 0437 3201     		.2byte	0x132
 2365 0439 A2000000 		.4byte	0xa2
 2366 043d 02       		.uleb128 0x2
 2367 043e 91       		.byte	0x91
 2368 043f 5F       		.sleb128 -33
 2369 0440 14       		.uleb128 0x14
 2370 0441 00000000 		.4byte	.LASF46
 2371 0445 01       		.byte	0x1
 2372 0446 3301     		.2byte	0x133
 2373 0448 5D050000 		.4byte	0x55d
 2374 044c 02       		.uleb128 0x2
 2375 044d 91       		.byte	0x91
 2376 044e 5C       		.sleb128 -36
 2377 044f 13       		.uleb128 0x13
 2378 0450 6900     		.ascii	"i\000"
 2379 0452 01       		.byte	0x1
 2380 0453 3501     		.2byte	0x135
 2381 0455 A2000000 		.4byte	0xa2
 2382 0459 02       		.uleb128 0x2
 2383 045a 91       		.byte	0x91
 2384 045b 6B       		.sleb128 -21
 2385 045c 14       		.uleb128 0x14
 2386 045d CE030000 		.4byte	.LASF47
 2387 0461 01       		.byte	0x1
 2388 0462 3601     		.2byte	0x136
 2389 0464 C3000000 		.4byte	0xc3
 2390 0468 02       		.uleb128 0x2
 2391 0469 91       		.byte	0x91
 2392 046a 64       		.sleb128 -28
 2393 046b 14       		.uleb128 0x14
 2394 046c 20000000 		.4byte	.LASF48
 2395 0470 01       		.byte	0x1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 54


 2396 0471 3801     		.2byte	0x138
 2397 0473 A2000000 		.4byte	0xa2
 2398 0477 02       		.uleb128 0x2
 2399 0478 91       		.byte	0x91
 2400 0479 63       		.sleb128 -29
 2401 047a 14       		.uleb128 0x14
 2402 047b 51000000 		.4byte	.LASF49
 2403 047f 01       		.byte	0x1
 2404 0480 3901     		.2byte	0x139
 2405 0482 A2000000 		.4byte	0xa2
 2406 0486 02       		.uleb128 0x2
 2407 0487 91       		.byte	0x91
 2408 0488 62       		.sleb128 -30
 2409 0489 14       		.uleb128 0x14
 2410 048a E3030000 		.4byte	.LASF50
 2411 048e 01       		.byte	0x1
 2412 048f 3A01     		.2byte	0x13a
 2413 0491 A2000000 		.4byte	0xa2
 2414 0495 02       		.uleb128 0x2
 2415 0496 91       		.byte	0x91
 2416 0497 61       		.sleb128 -31
 2417 0498 14       		.uleb128 0x14
 2418 0499 CD010000 		.4byte	.LASF51
 2419 049d 01       		.byte	0x1
 2420 049e 3B01     		.2byte	0x13b
 2421 04a0 A2000000 		.4byte	0xa2
 2422 04a4 02       		.uleb128 0x2
 2423 04a5 91       		.byte	0x91
 2424 04a6 60       		.sleb128 -32
 2425 04a7 0A       		.uleb128 0xa
 2426 04a8 F6000000 		.4byte	.LBB3
 2427 04ac 82040000 		.4byte	.LBE3-.LBB3
 2428 04b0 14       		.uleb128 0x14
 2429 04b1 32000000 		.4byte	.LASF32
 2430 04b5 01       		.byte	0x1
 2431 04b6 4801     		.2byte	0x148
 2432 04b8 B8000000 		.4byte	0xb8
 2433 04bc 03       		.uleb128 0x3
 2434 04bd 91       		.byte	0x91
 2435 04be AE7F     		.sleb128 -82
 2436 04c0 14       		.uleb128 0x14
 2437 04c1 6B010000 		.4byte	.LASF33
 2438 04c5 01       		.byte	0x1
 2439 04c6 4801     		.2byte	0x148
 2440 04c8 B8000000 		.4byte	0xb8
 2441 04cc 03       		.uleb128 0x3
 2442 04cd 91       		.byte	0x91
 2443 04ce AC7F     		.sleb128 -84
 2444 04d0 14       		.uleb128 0x14
 2445 04d1 69020000 		.4byte	.LASF34
 2446 04d5 01       		.byte	0x1
 2447 04d6 4801     		.2byte	0x148
 2448 04d8 B8000000 		.4byte	0xb8
 2449 04dc 03       		.uleb128 0x3
 2450 04dd 91       		.byte	0x91
 2451 04de AA7F     		.sleb128 -86
 2452 04e0 15       		.uleb128 0x15
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 55


 2453 04e1 34010000 		.4byte	.LBB4
 2454 04e5 84000000 		.4byte	.LBE4-.LBB4
 2455 04e9 28050000 		.4byte	0x528
 2456 04ed 14       		.uleb128 0x14
 2457 04ee F0020000 		.4byte	.LASF52
 2458 04f2 01       		.byte	0x1
 2459 04f3 7801     		.2byte	0x178
 2460 04f5 94000000 		.4byte	0x94
 2461 04f9 02       		.uleb128 0x2
 2462 04fa 91       		.byte	0x91
 2463 04fb 58       		.sleb128 -40
 2464 04fc 13       		.uleb128 0x13
 2465 04fd 563100   		.ascii	"V1\000"
 2466 0500 01       		.byte	0x1
 2467 0501 7C01     		.2byte	0x17c
 2468 0503 B8000000 		.4byte	0xb8
 2469 0507 02       		.uleb128 0x2
 2470 0508 91       		.byte	0x91
 2471 0509 56       		.sleb128 -42
 2472 050a 13       		.uleb128 0x13
 2473 050b 563200   		.ascii	"V2\000"
 2474 050e 01       		.byte	0x1
 2475 050f 7D01     		.2byte	0x17d
 2476 0511 B8000000 		.4byte	0xb8
 2477 0515 02       		.uleb128 0x2
 2478 0516 91       		.byte	0x91
 2479 0517 54       		.sleb128 -44
 2480 0518 14       		.uleb128 0x14
 2481 0519 49000000 		.4byte	.LASF53
 2482 051d 01       		.byte	0x1
 2483 051e 8101     		.2byte	0x181
 2484 0520 AD000000 		.4byte	0xad
 2485 0524 02       		.uleb128 0x2
 2486 0525 91       		.byte	0x91
 2487 0526 53       		.sleb128 -45
 2488 0527 00       		.byte	0
 2489 0528 0A       		.uleb128 0xa
 2490 0529 D2040000 		.4byte	.LBB5
 2491 052d 1A000000 		.4byte	.LBE5-.LBB5
 2492 0531 14       		.uleb128 0x14
 2493 0532 F0020000 		.4byte	.LASF52
 2494 0536 01       		.byte	0x1
 2495 0537 2402     		.2byte	0x224
 2496 0539 94000000 		.4byte	0x94
 2497 053d 02       		.uleb128 0x2
 2498 053e 91       		.byte	0x91
 2499 053f 4C       		.sleb128 -52
 2500 0540 00       		.byte	0
 2501 0541 00       		.byte	0
 2502 0542 00       		.byte	0
 2503 0543 16       		.uleb128 0x16
 2504 0544 53050000 		.4byte	0x553
 2505 0548 53050000 		.4byte	0x553
 2506 054c 17       		.uleb128 0x17
 2507 054d F5000000 		.4byte	0xf5
 2508 0551 0D       		.byte	0xd
 2509 0552 00       		.byte	0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 56


 2510 0553 18       		.uleb128 0x18
 2511 0554 AD000000 		.4byte	0xad
 2512 0558 18       		.uleb128 0x18
 2513 0559 43050000 		.4byte	0x543
 2514 055d 18       		.uleb128 0x18
 2515 055e B8000000 		.4byte	0xb8
 2516 0562 0B       		.uleb128 0xb
 2517 0563 C0010000 		.4byte	.LASF54
 2518 0567 01       		.byte	0x1
 2519 0568 3A       		.byte	0x3a
 2520 0569 AD000000 		.4byte	0xad
 2521 056d 05       		.uleb128 0x5
 2522 056e 03       		.byte	0x3
 2523 056f 00000000 		.4byte	sen1_on_line
 2524 0573 0B       		.uleb128 0xb
 2525 0574 ED010000 		.4byte	.LASF55
 2526 0578 01       		.byte	0x1
 2527 0579 3A       		.byte	0x3a
 2528 057a AD000000 		.4byte	0xad
 2529 057e 05       		.uleb128 0x5
 2530 057f 03       		.byte	0x3
 2531 0580 01000000 		.4byte	sen2_on_line
 2532 0584 0B       		.uleb128 0xb
 2533 0585 1F020000 		.4byte	.LASF56
 2534 0589 01       		.byte	0x1
 2535 058a 3A       		.byte	0x3a
 2536 058b AD000000 		.4byte	0xad
 2537 058f 05       		.uleb128 0x5
 2538 0590 03       		.byte	0x3
 2539 0591 02000000 		.4byte	sen3_on_line
 2540 0595 0B       		.uleb128 0xb
 2541 0596 4F020000 		.4byte	.LASF57
 2542 059a 01       		.byte	0x1
 2543 059b 3B       		.byte	0x3b
 2544 059c AD000000 		.4byte	0xad
 2545 05a0 05       		.uleb128 0x5
 2546 05a1 03       		.byte	0x3
 2547 05a2 03000000 		.4byte	sen4_on_line
 2548 05a6 0B       		.uleb128 0xb
 2549 05a7 78020000 		.4byte	.LASF58
 2550 05ab 01       		.byte	0x1
 2551 05ac 3B       		.byte	0x3b
 2552 05ad AD000000 		.4byte	0xad
 2553 05b1 05       		.uleb128 0x5
 2554 05b2 03       		.byte	0x3
 2555 05b3 04000000 		.4byte	sen5_on_line
 2556 05b7 0B       		.uleb128 0xb
 2557 05b8 AB020000 		.4byte	.LASF59
 2558 05bc 01       		.byte	0x1
 2559 05bd 3B       		.byte	0x3b
 2560 05be AD000000 		.4byte	0xad
 2561 05c2 05       		.uleb128 0x5
 2562 05c3 03       		.byte	0x3
 2563 05c4 05000000 		.4byte	sen6_on_line
 2564 05c8 0B       		.uleb128 0xb
 2565 05c9 94030000 		.4byte	.LASF60
 2566 05cd 01       		.byte	0x1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 57


 2567 05ce 3E       		.byte	0x3e
 2568 05cf FC000000 		.4byte	0xfc
 2569 05d3 05       		.uleb128 0x5
 2570 05d4 03       		.byte	0x3
 2571 05d5 06000000 		.4byte	g_direction
 2572 05d9 0B       		.uleb128 0xb
 2573 05da FA010000 		.4byte	.LASF61
 2574 05de 01       		.byte	0x1
 2575 05df 3F       		.byte	0x3f
 2576 05e0 FC000000 		.4byte	0xfc
 2577 05e4 05       		.uleb128 0x5
 2578 05e5 03       		.byte	0x3
 2579 05e6 07000000 		.4byte	g_stop_now
 2580 05ea 0B       		.uleb128 0xb
 2581 05eb B7030000 		.4byte	.LASF62
 2582 05ef 01       		.byte	0x1
 2583 05f0 40       		.byte	0x40
 2584 05f1 FB050000 		.4byte	0x5fb
 2585 05f5 05       		.uleb128 0x5
 2586 05f6 03       		.byte	0x3
 2587 05f7 08000000 		.4byte	g_dist_mm
 2588 05fb 05       		.uleb128 0x5
 2589 05fc C3000000 		.4byte	0xc3
 2590 0600 0B       		.uleb128 0xb
 2591 0601 07030000 		.4byte	.LASF63
 2592 0605 01       		.byte	0x1
 2593 0606 43       		.byte	0x43
 2594 0607 B8000000 		.4byte	0xb8
 2595 060b 05       		.uleb128 0x5
 2596 060c 03       		.byte	0x3
 2597 060d 0C000000 		.4byte	dir_delay_ticks
 2598 0611 0B       		.uleb128 0xb
 2599 0612 0F000000 		.4byte	.LASF64
 2600 0616 01       		.byte	0x1
 2601 0617 44       		.byte	0x44
 2602 0618 AD000000 		.4byte	0xad
 2603 061c 05       		.uleb128 0x5
 2604 061d 03       		.byte	0x3
 2605 061e 0E000000 		.4byte	dir_latched_side
 2606 0622 0B       		.uleb128 0xb
 2607 0623 05020000 		.4byte	.LASF65
 2608 0627 01       		.byte	0x1
 2609 0628 47       		.byte	0x47
 2610 0629 B8000000 		.4byte	0xb8
 2611 062d 05       		.uleb128 0x5
 2612 062e 03       		.byte	0x3
 2613 062f 10000000 		.4byte	turn_cooldown_ticks
 2614 0633 0B       		.uleb128 0xb
 2615 0634 AE030000 		.4byte	.LASF66
 2616 0638 01       		.byte	0x1
 2617 0639 48       		.byte	0x48
 2618 063a AD000000 		.4byte	0xad
 2619 063e 05       		.uleb128 0x5
 2620 063f 03       		.byte	0x3
 2621 0640 12000000 		.4byte	s12_prev
 2622 0644 19       		.uleb128 0x19
 2623 0645 C1030000 		.4byte	.LASF73
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 58


 2624 0649 04       		.byte	0x4
 2625 064a 1207     		.2byte	0x712
 2626 064c FB050000 		.4byte	0x5fb
 2627 0650 00       		.byte	0
 2628              		.section	.debug_abbrev,"",%progbits
 2629              	.Ldebug_abbrev0:
 2630 0000 01       		.uleb128 0x1
 2631 0001 11       		.uleb128 0x11
 2632 0002 01       		.byte	0x1
 2633 0003 25       		.uleb128 0x25
 2634 0004 0E       		.uleb128 0xe
 2635 0005 13       		.uleb128 0x13
 2636 0006 0B       		.uleb128 0xb
 2637 0007 03       		.uleb128 0x3
 2638 0008 0E       		.uleb128 0xe
 2639 0009 1B       		.uleb128 0x1b
 2640 000a 0E       		.uleb128 0xe
 2641 000b 55       		.uleb128 0x55
 2642 000c 17       		.uleb128 0x17
 2643 000d 11       		.uleb128 0x11
 2644 000e 01       		.uleb128 0x1
 2645 000f 10       		.uleb128 0x10
 2646 0010 17       		.uleb128 0x17
 2647 0011 00       		.byte	0
 2648 0012 00       		.byte	0
 2649 0013 02       		.uleb128 0x2
 2650 0014 16       		.uleb128 0x16
 2651 0015 00       		.byte	0
 2652 0016 03       		.uleb128 0x3
 2653 0017 0E       		.uleb128 0xe
 2654 0018 3A       		.uleb128 0x3a
 2655 0019 0B       		.uleb128 0xb
 2656 001a 3B       		.uleb128 0x3b
 2657 001b 0B       		.uleb128 0xb
 2658 001c 49       		.uleb128 0x49
 2659 001d 13       		.uleb128 0x13
 2660 001e 00       		.byte	0
 2661 001f 00       		.byte	0
 2662 0020 03       		.uleb128 0x3
 2663 0021 24       		.uleb128 0x24
 2664 0022 00       		.byte	0
 2665 0023 0B       		.uleb128 0xb
 2666 0024 0B       		.uleb128 0xb
 2667 0025 3E       		.uleb128 0x3e
 2668 0026 0B       		.uleb128 0xb
 2669 0027 03       		.uleb128 0x3
 2670 0028 0E       		.uleb128 0xe
 2671 0029 00       		.byte	0
 2672 002a 00       		.byte	0
 2673 002b 04       		.uleb128 0x4
 2674 002c 24       		.uleb128 0x24
 2675 002d 00       		.byte	0
 2676 002e 0B       		.uleb128 0xb
 2677 002f 0B       		.uleb128 0xb
 2678 0030 3E       		.uleb128 0x3e
 2679 0031 0B       		.uleb128 0xb
 2680 0032 03       		.uleb128 0x3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 59


 2681 0033 08       		.uleb128 0x8
 2682 0034 00       		.byte	0
 2683 0035 00       		.byte	0
 2684 0036 05       		.uleb128 0x5
 2685 0037 35       		.uleb128 0x35
 2686 0038 00       		.byte	0
 2687 0039 49       		.uleb128 0x49
 2688 003a 13       		.uleb128 0x13
 2689 003b 00       		.byte	0
 2690 003c 00       		.byte	0
 2691 003d 06       		.uleb128 0x6
 2692 003e 13       		.uleb128 0x13
 2693 003f 01       		.byte	0x1
 2694 0040 0B       		.uleb128 0xb
 2695 0041 0B       		.uleb128 0xb
 2696 0042 3A       		.uleb128 0x3a
 2697 0043 0B       		.uleb128 0xb
 2698 0044 3B       		.uleb128 0x3b
 2699 0045 0B       		.uleb128 0xb
 2700 0046 01       		.uleb128 0x1
 2701 0047 13       		.uleb128 0x13
 2702 0048 00       		.byte	0
 2703 0049 00       		.byte	0
 2704 004a 07       		.uleb128 0x7
 2705 004b 0D       		.uleb128 0xd
 2706 004c 00       		.byte	0
 2707 004d 03       		.uleb128 0x3
 2708 004e 08       		.uleb128 0x8
 2709 004f 3A       		.uleb128 0x3a
 2710 0050 0B       		.uleb128 0xb
 2711 0051 3B       		.uleb128 0x3b
 2712 0052 0B       		.uleb128 0xb
 2713 0053 49       		.uleb128 0x49
 2714 0054 13       		.uleb128 0x13
 2715 0055 38       		.uleb128 0x38
 2716 0056 0B       		.uleb128 0xb
 2717 0057 00       		.byte	0
 2718 0058 00       		.byte	0
 2719 0059 08       		.uleb128 0x8
 2720 005a 0D       		.uleb128 0xd
 2721 005b 00       		.byte	0
 2722 005c 03       		.uleb128 0x3
 2723 005d 0E       		.uleb128 0xe
 2724 005e 3A       		.uleb128 0x3a
 2725 005f 0B       		.uleb128 0xb
 2726 0060 3B       		.uleb128 0x3b
 2727 0061 0B       		.uleb128 0xb
 2728 0062 49       		.uleb128 0x49
 2729 0063 13       		.uleb128 0x13
 2730 0064 38       		.uleb128 0x38
 2731 0065 0B       		.uleb128 0xb
 2732 0066 00       		.byte	0
 2733 0067 00       		.byte	0
 2734 0068 09       		.uleb128 0x9
 2735 0069 2E       		.uleb128 0x2e
 2736 006a 01       		.byte	0x1
 2737 006b 3F       		.uleb128 0x3f
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 60


 2738 006c 19       		.uleb128 0x19
 2739 006d 03       		.uleb128 0x3
 2740 006e 0E       		.uleb128 0xe
 2741 006f 3A       		.uleb128 0x3a
 2742 0070 0B       		.uleb128 0xb
 2743 0071 3B       		.uleb128 0x3b
 2744 0072 0B       		.uleb128 0xb
 2745 0073 27       		.uleb128 0x27
 2746 0074 19       		.uleb128 0x19
 2747 0075 11       		.uleb128 0x11
 2748 0076 01       		.uleb128 0x1
 2749 0077 12       		.uleb128 0x12
 2750 0078 06       		.uleb128 0x6
 2751 0079 40       		.uleb128 0x40
 2752 007a 18       		.uleb128 0x18
 2753 007b 9642     		.uleb128 0x2116
 2754 007d 19       		.uleb128 0x19
 2755 007e 01       		.uleb128 0x1
 2756 007f 13       		.uleb128 0x13
 2757 0080 00       		.byte	0
 2758 0081 00       		.byte	0
 2759 0082 0A       		.uleb128 0xa
 2760 0083 0B       		.uleb128 0xb
 2761 0084 01       		.byte	0x1
 2762 0085 11       		.uleb128 0x11
 2763 0086 01       		.uleb128 0x1
 2764 0087 12       		.uleb128 0x12
 2765 0088 06       		.uleb128 0x6
 2766 0089 00       		.byte	0
 2767 008a 00       		.byte	0
 2768 008b 0B       		.uleb128 0xb
 2769 008c 34       		.uleb128 0x34
 2770 008d 00       		.byte	0
 2771 008e 03       		.uleb128 0x3
 2772 008f 0E       		.uleb128 0xe
 2773 0090 3A       		.uleb128 0x3a
 2774 0091 0B       		.uleb128 0xb
 2775 0092 3B       		.uleb128 0x3b
 2776 0093 0B       		.uleb128 0xb
 2777 0094 49       		.uleb128 0x49
 2778 0095 13       		.uleb128 0x13
 2779 0096 02       		.uleb128 0x2
 2780 0097 18       		.uleb128 0x18
 2781 0098 00       		.byte	0
 2782 0099 00       		.byte	0
 2783 009a 0C       		.uleb128 0xc
 2784 009b 34       		.uleb128 0x34
 2785 009c 00       		.byte	0
 2786 009d 03       		.uleb128 0x3
 2787 009e 08       		.uleb128 0x8
 2788 009f 3A       		.uleb128 0x3a
 2789 00a0 0B       		.uleb128 0xb
 2790 00a1 3B       		.uleb128 0x3b
 2791 00a2 0B       		.uleb128 0xb
 2792 00a3 49       		.uleb128 0x49
 2793 00a4 13       		.uleb128 0x13
 2794 00a5 02       		.uleb128 0x2
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 61


 2795 00a6 18       		.uleb128 0x18
 2796 00a7 00       		.byte	0
 2797 00a8 00       		.byte	0
 2798 00a9 0D       		.uleb128 0xd
 2799 00aa 2E       		.uleb128 0x2e
 2800 00ab 01       		.byte	0x1
 2801 00ac 03       		.uleb128 0x3
 2802 00ad 0E       		.uleb128 0xe
 2803 00ae 3A       		.uleb128 0x3a
 2804 00af 0B       		.uleb128 0xb
 2805 00b0 3B       		.uleb128 0x3b
 2806 00b1 0B       		.uleb128 0xb
 2807 00b2 27       		.uleb128 0x27
 2808 00b3 19       		.uleb128 0x19
 2809 00b4 49       		.uleb128 0x49
 2810 00b5 13       		.uleb128 0x13
 2811 00b6 11       		.uleb128 0x11
 2812 00b7 01       		.uleb128 0x1
 2813 00b8 12       		.uleb128 0x12
 2814 00b9 06       		.uleb128 0x6
 2815 00ba 40       		.uleb128 0x40
 2816 00bb 18       		.uleb128 0x18
 2817 00bc 9642     		.uleb128 0x2116
 2818 00be 19       		.uleb128 0x19
 2819 00bf 01       		.uleb128 0x1
 2820 00c0 13       		.uleb128 0x13
 2821 00c1 00       		.byte	0
 2822 00c2 00       		.byte	0
 2823 00c3 0E       		.uleb128 0xe
 2824 00c4 05       		.uleb128 0x5
 2825 00c5 00       		.byte	0
 2826 00c6 03       		.uleb128 0x3
 2827 00c7 08       		.uleb128 0x8
 2828 00c8 3A       		.uleb128 0x3a
 2829 00c9 0B       		.uleb128 0xb
 2830 00ca 3B       		.uleb128 0x3b
 2831 00cb 0B       		.uleb128 0xb
 2832 00cc 49       		.uleb128 0x49
 2833 00cd 13       		.uleb128 0x13
 2834 00ce 02       		.uleb128 0x2
 2835 00cf 18       		.uleb128 0x18
 2836 00d0 00       		.byte	0
 2837 00d1 00       		.byte	0
 2838 00d2 0F       		.uleb128 0xf
 2839 00d3 2E       		.uleb128 0x2e
 2840 00d4 01       		.byte	0x1
 2841 00d5 03       		.uleb128 0x3
 2842 00d6 0E       		.uleb128 0xe
 2843 00d7 3A       		.uleb128 0x3a
 2844 00d8 0B       		.uleb128 0xb
 2845 00d9 3B       		.uleb128 0x3b
 2846 00da 0B       		.uleb128 0xb
 2847 00db 27       		.uleb128 0x27
 2848 00dc 19       		.uleb128 0x19
 2849 00dd 11       		.uleb128 0x11
 2850 00de 01       		.uleb128 0x1
 2851 00df 12       		.uleb128 0x12
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 62


 2852 00e0 06       		.uleb128 0x6
 2853 00e1 40       		.uleb128 0x40
 2854 00e2 18       		.uleb128 0x18
 2855 00e3 9642     		.uleb128 0x2116
 2856 00e5 19       		.uleb128 0x19
 2857 00e6 01       		.uleb128 0x1
 2858 00e7 13       		.uleb128 0x13
 2859 00e8 00       		.byte	0
 2860 00e9 00       		.byte	0
 2861 00ea 10       		.uleb128 0x10
 2862 00eb 05       		.uleb128 0x5
 2863 00ec 00       		.byte	0
 2864 00ed 03       		.uleb128 0x3
 2865 00ee 0E       		.uleb128 0xe
 2866 00ef 3A       		.uleb128 0x3a
 2867 00f0 0B       		.uleb128 0xb
 2868 00f1 3B       		.uleb128 0x3b
 2869 00f2 0B       		.uleb128 0xb
 2870 00f3 49       		.uleb128 0x49
 2871 00f4 13       		.uleb128 0x13
 2872 00f5 02       		.uleb128 0x2
 2873 00f6 18       		.uleb128 0x18
 2874 00f7 00       		.byte	0
 2875 00f8 00       		.byte	0
 2876 00f9 11       		.uleb128 0x11
 2877 00fa 0F       		.uleb128 0xf
 2878 00fb 00       		.byte	0
 2879 00fc 0B       		.uleb128 0xb
 2880 00fd 0B       		.uleb128 0xb
 2881 00fe 49       		.uleb128 0x49
 2882 00ff 13       		.uleb128 0x13
 2883 0100 00       		.byte	0
 2884 0101 00       		.byte	0
 2885 0102 12       		.uleb128 0x12
 2886 0103 2E       		.uleb128 0x2e
 2887 0104 01       		.byte	0x1
 2888 0105 3F       		.uleb128 0x3f
 2889 0106 19       		.uleb128 0x19
 2890 0107 03       		.uleb128 0x3
 2891 0108 0E       		.uleb128 0xe
 2892 0109 3A       		.uleb128 0x3a
 2893 010a 0B       		.uleb128 0xb
 2894 010b 3B       		.uleb128 0x3b
 2895 010c 0B       		.uleb128 0xb
 2896 010d 27       		.uleb128 0x27
 2897 010e 19       		.uleb128 0x19
 2898 010f 49       		.uleb128 0x49
 2899 0110 13       		.uleb128 0x13
 2900 0111 11       		.uleb128 0x11
 2901 0112 01       		.uleb128 0x1
 2902 0113 12       		.uleb128 0x12
 2903 0114 06       		.uleb128 0x6
 2904 0115 40       		.uleb128 0x40
 2905 0116 18       		.uleb128 0x18
 2906 0117 9642     		.uleb128 0x2116
 2907 0119 19       		.uleb128 0x19
 2908 011a 01       		.uleb128 0x1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 63


 2909 011b 13       		.uleb128 0x13
 2910 011c 00       		.byte	0
 2911 011d 00       		.byte	0
 2912 011e 13       		.uleb128 0x13
 2913 011f 34       		.uleb128 0x34
 2914 0120 00       		.byte	0
 2915 0121 03       		.uleb128 0x3
 2916 0122 08       		.uleb128 0x8
 2917 0123 3A       		.uleb128 0x3a
 2918 0124 0B       		.uleb128 0xb
 2919 0125 3B       		.uleb128 0x3b
 2920 0126 05       		.uleb128 0x5
 2921 0127 49       		.uleb128 0x49
 2922 0128 13       		.uleb128 0x13
 2923 0129 02       		.uleb128 0x2
 2924 012a 18       		.uleb128 0x18
 2925 012b 00       		.byte	0
 2926 012c 00       		.byte	0
 2927 012d 14       		.uleb128 0x14
 2928 012e 34       		.uleb128 0x34
 2929 012f 00       		.byte	0
 2930 0130 03       		.uleb128 0x3
 2931 0131 0E       		.uleb128 0xe
 2932 0132 3A       		.uleb128 0x3a
 2933 0133 0B       		.uleb128 0xb
 2934 0134 3B       		.uleb128 0x3b
 2935 0135 05       		.uleb128 0x5
 2936 0136 49       		.uleb128 0x49
 2937 0137 13       		.uleb128 0x13
 2938 0138 02       		.uleb128 0x2
 2939 0139 18       		.uleb128 0x18
 2940 013a 00       		.byte	0
 2941 013b 00       		.byte	0
 2942 013c 15       		.uleb128 0x15
 2943 013d 0B       		.uleb128 0xb
 2944 013e 01       		.byte	0x1
 2945 013f 11       		.uleb128 0x11
 2946 0140 01       		.uleb128 0x1
 2947 0141 12       		.uleb128 0x12
 2948 0142 06       		.uleb128 0x6
 2949 0143 01       		.uleb128 0x1
 2950 0144 13       		.uleb128 0x13
 2951 0145 00       		.byte	0
 2952 0146 00       		.byte	0
 2953 0147 16       		.uleb128 0x16
 2954 0148 01       		.uleb128 0x1
 2955 0149 01       		.byte	0x1
 2956 014a 49       		.uleb128 0x49
 2957 014b 13       		.uleb128 0x13
 2958 014c 01       		.uleb128 0x1
 2959 014d 13       		.uleb128 0x13
 2960 014e 00       		.byte	0
 2961 014f 00       		.byte	0
 2962 0150 17       		.uleb128 0x17
 2963 0151 21       		.uleb128 0x21
 2964 0152 00       		.byte	0
 2965 0153 49       		.uleb128 0x49
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 64


 2966 0154 13       		.uleb128 0x13
 2967 0155 2F       		.uleb128 0x2f
 2968 0156 0B       		.uleb128 0xb
 2969 0157 00       		.byte	0
 2970 0158 00       		.byte	0
 2971 0159 18       		.uleb128 0x18
 2972 015a 26       		.uleb128 0x26
 2973 015b 00       		.byte	0
 2974 015c 49       		.uleb128 0x49
 2975 015d 13       		.uleb128 0x13
 2976 015e 00       		.byte	0
 2977 015f 00       		.byte	0
 2978 0160 19       		.uleb128 0x19
 2979 0161 34       		.uleb128 0x34
 2980 0162 00       		.byte	0
 2981 0163 03       		.uleb128 0x3
 2982 0164 0E       		.uleb128 0xe
 2983 0165 3A       		.uleb128 0x3a
 2984 0166 0B       		.uleb128 0xb
 2985 0167 3B       		.uleb128 0x3b
 2986 0168 05       		.uleb128 0x5
 2987 0169 49       		.uleb128 0x49
 2988 016a 13       		.uleb128 0x13
 2989 016b 3F       		.uleb128 0x3f
 2990 016c 19       		.uleb128 0x19
 2991 016d 3C       		.uleb128 0x3c
 2992 016e 19       		.uleb128 0x19
 2993 016f 00       		.byte	0
 2994 0170 00       		.byte	0
 2995 0171 00       		.byte	0
 2996              		.section	.debug_aranges,"",%progbits
 2997 0000 44000000 		.4byte	0x44
 2998 0004 0200     		.2byte	0x2
 2999 0006 00000000 		.4byte	.Ldebug_info0
 3000 000a 04       		.byte	0x4
 3001 000b 00       		.byte	0
 3002 000c 0000     		.2byte	0
 3003 000e 0000     		.2byte	0
 3004 0010 00000000 		.4byte	.LFB64
 3005 0014 14010000 		.4byte	.LFE64-.LFB64
 3006 0018 00000000 		.4byte	.LFB65
 3007 001c 44000000 		.4byte	.LFE65-.LFB65
 3008 0020 00000000 		.4byte	.LFB66
 3009 0024 48010000 		.4byte	.LFE66-.LFB66
 3010 0028 00000000 		.4byte	.LFB67
 3011 002c 3A000000 		.4byte	.LFE67-.LFB67
 3012 0030 00000000 		.4byte	.LFB68
 3013 0034 88020000 		.4byte	.LFE68-.LFB68
 3014 0038 00000000 		.4byte	.LFB69
 3015 003c 94050000 		.4byte	.LFE69-.LFB69
 3016 0040 00000000 		.4byte	0
 3017 0044 00000000 		.4byte	0
 3018              		.section	.debug_ranges,"",%progbits
 3019              	.Ldebug_ranges0:
 3020 0000 00000000 		.4byte	.LFB64
 3021 0004 14010000 		.4byte	.LFE64
 3022 0008 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 65


 3023 000c 44000000 		.4byte	.LFE65
 3024 0010 00000000 		.4byte	.LFB66
 3025 0014 48010000 		.4byte	.LFE66
 3026 0018 00000000 		.4byte	.LFB67
 3027 001c 3A000000 		.4byte	.LFE67
 3028 0020 00000000 		.4byte	.LFB68
 3029 0024 88020000 		.4byte	.LFE68
 3030 0028 00000000 		.4byte	.LFB69
 3031 002c 94050000 		.4byte	.LFE69
 3032 0030 00000000 		.4byte	0
 3033 0034 00000000 		.4byte	0
 3034              		.section	.debug_line,"",%progbits
 3035              	.Ldebug_line0:
 3036 0000 8C040000 		.section	.debug_str,"MS",%progbits,1
 3036      02003F01 
 3036      00000201 
 3036      FB0E0D00 
 3036      01010101 
 3037              	.LASF46:
 3038 0000 434D445F 		.ascii	"CMD_STATES_LEN\000"
 3038      53544154 
 3038      45535F4C 
 3038      454E00
 3039              	.LASF64:
 3040 000f 6469725F 		.ascii	"dir_latched_side\000"
 3040      6C617463 
 3040      6865645F 
 3040      73696465 
 3040      00
 3041              	.LASF48:
 3042 0020 73747261 		.ascii	"straight_complete\000"
 3042      69676874 
 3042      5F636F6D 
 3042      706C6574 
 3042      6500
 3043              	.LASF32:
 3044 0032 56345F70 		.ascii	"V4_pp\000"
 3044      7000
 3045              	.LASF14:
 3046 0038 696E7438 		.ascii	"int8_t\000"
 3046      5F7400
 3047              	.LASF4:
 3048 003f 73686F72 		.ascii	"short int\000"
 3048      7420696E 
 3048      7400
 3049              	.LASF53:
 3050 0049 7331325F 		.ascii	"s12_now\000"
 3050      6E6F7700 
 3051              	.LASF49:
 3052 0051 7475726E 		.ascii	"turn_complete\000"
 3052      5F636F6D 
 3052      706C6574 
 3052      6500
 3053              	.LASF23:
 3054 005f 73697A65 		.ascii	"sizetype\000"
 3054      74797065 
 3054      00
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 66


 3055              	.LASF67:
 3056 0068 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3056      43313120 
 3056      352E342E 
 3056      31203230 
 3056      31363036 
 3057 009b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3057      20726576 
 3057      6973696F 
 3057      6E203233 
 3057      37373135 
 3058 00ce 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3058      66756E63 
 3058      74696F6E 
 3058      2D736563 
 3058      74696F6E 
 3059              	.LASF72:
 3060 00f6 6D61696E 		.ascii	"main\000"
 3060      00
 3061              	.LASF5:
 3062 00fb 5F5F7569 		.ascii	"__uint16_t\000"
 3062      6E743136 
 3062      5F7400
 3063              	.LASF18:
 3064 0106 696E7436 		.ascii	"int64_t\000"
 3064      345F7400 
 3065              	.LASF15:
 3066 010e 75696E74 		.ascii	"uint8_t\000"
 3066      385F7400 
 3067              	.LASF27:
 3068 0116 72617732 		.ascii	"raw2\000"
 3068      00
 3069              	.LASF30:
 3070 011b 646D6D5F 		.ascii	"dmm_abs\000"
 3070      61627300 
 3071              	.LASF69:
 3072 0123 433A5C55 		.ascii	"C:\\Users\\yram171\\Downloads\\Compsys-301-CODE\\YA"
 3072      73657273 
 3072      5C797261 
 3072      6D313731 
 3072      5C446F77 
 3073 0151 53482043 		.ascii	"SH Code\\CS301_Class.cydsn\000"
 3073      6F64655C 
 3073      43533330 
 3073      315F436C 
 3073      6173732E 
 3074              	.LASF33:
 3075 016b 56355F70 		.ascii	"V5_pp\000"
 3075      7000
 3076              	.LASF19:
 3077 0171 666C6F61 		.ascii	"float\000"
 3077      7400
 3078              	.LASF11:
 3079 0177 6C6F6E67 		.ascii	"long long int\000"
 3079      206C6F6E 
 3079      6720696E 
 3079      7400
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 67


 3080              	.LASF21:
 3081 0185 63686172 		.ascii	"char\000"
 3081      00
 3082              	.LASF25:
 3083 018a 70695F74 		.ascii	"pi_t\000"
 3083      00
 3084              	.LASF8:
 3085 018f 6C6F6E67 		.ascii	"long int\000"
 3085      20696E74 
 3085      00
 3086              	.LASF10:
 3087 0198 5F5F696E 		.ascii	"__int64_t\000"
 3087      7436345F 
 3087      7400
 3088              	.LASF40:
 3089 01a2 755F7261 		.ascii	"u_raw\000"
 3089      7700
 3090              	.LASF1:
 3091 01a8 5F5F7569 		.ascii	"__uint8_t\000"
 3091      6E74385F 
 3091      7400
 3092              	.LASF3:
 3093 01b2 756E7369 		.ascii	"unsigned char\000"
 3093      676E6564 
 3093      20636861 
 3093      7200
 3094              	.LASF54:
 3095 01c0 73656E31 		.ascii	"sen1_on_line\000"
 3095      5F6F6E5F 
 3095      6C696E65 
 3095      00
 3096              	.LASF51:
 3097 01cd 66727569 		.ascii	"fruit_complete\000"
 3097      745F636F 
 3097      6D706C65 
 3097      746500
 3098              	.LASF26:
 3099 01dc 72617731 		.ascii	"raw1\000"
 3099      00
 3100              	.LASF22:
 3101 01e1 6C6F6E67 		.ascii	"long double\000"
 3101      20646F75 
 3101      626C6500 
 3102              	.LASF55:
 3103 01ed 73656E32 		.ascii	"sen2_on_line\000"
 3103      5F6F6E5F 
 3103      6C696E65 
 3103      00
 3104              	.LASF61:
 3105 01fa 675F7374 		.ascii	"g_stop_now\000"
 3105      6F705F6E 
 3105      6F7700
 3106              	.LASF65:
 3107 0205 7475726E 		.ascii	"turn_cooldown_ticks\000"
 3107      5F636F6F 
 3107      6C646F77 
 3107      6E5F7469 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 68


 3107      636B7300 
 3108              	.LASF38:
 3109 0219 76616C69 		.ascii	"valid\000"
 3109      6400
 3110              	.LASF56:
 3111 021f 73656E33 		.ascii	"sen3_on_line\000"
 3111      5F6F6E5F 
 3111      6C696E65 
 3111      00
 3112              	.LASF2:
 3113 022c 7369676E 		.ascii	"signed char\000"
 3113      65642063 
 3113      68617200 
 3114              	.LASF12:
 3115 0238 6C6F6E67 		.ascii	"long long unsigned int\000"
 3115      206C6F6E 
 3115      6720756E 
 3115      7369676E 
 3115      65642069 
 3116              	.LASF57:
 3117 024f 73656E34 		.ascii	"sen4_on_line\000"
 3117      5F6F6E5F 
 3117      6C696E65 
 3117      00
 3118              	.LASF13:
 3119 025c 756E7369 		.ascii	"unsigned int\000"
 3119      676E6564 
 3119      20696E74 
 3119      00
 3120              	.LASF34:
 3121 0269 56365F70 		.ascii	"V6_pp\000"
 3121      7000
 3122              	.LASF16:
 3123 026f 75696E74 		.ascii	"uint16_t\000"
 3123      31365F74 
 3123      00
 3124              	.LASF58:
 3125 0278 73656E35 		.ascii	"sen5_on_line\000"
 3125      5F6F6E5F 
 3125      6C696E65 
 3125      00
 3126              	.LASF36:
 3127 0285 5F636C61 		.ascii	"_clampf\000"
 3127      6D706600 
 3128              	.LASF45:
 3129 028d 434D445F 		.ascii	"CMD_STATES\000"
 3129      53544154 
 3129      455300
 3130              	.LASF6:
 3131 0298 73686F72 		.ascii	"short unsigned int\000"
 3131      7420756E 
 3131      7369676E 
 3131      65642069 
 3131      6E7400
 3132              	.LASF59:
 3133 02ab 73656E36 		.ascii	"sen6_on_line\000"
 3133      5F6F6E5F 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 69


 3133      6C696E65 
 3133      00
 3134              	.LASF0:
 3135 02b8 5F5F696E 		.ascii	"__int8_t\000"
 3135      74385F74 
 3135      00
 3136              	.LASF70:
 3137 02c1 6973725F 		.ascii	"isr_qd_Handler\000"
 3137      71645F48 
 3137      616E646C 
 3137      657200
 3138              	.LASF44:
 3139 02d0 63656E74 		.ascii	"center_duty_est\000"
 3139      65725F64 
 3139      7574795F 
 3139      65737400 
 3140              	.LASF17:
 3141 02e0 696E7433 		.ascii	"int32_t\000"
 3141      325F7400 
 3142              	.LASF37:
 3143 02e8 70695F73 		.ascii	"pi_step\000"
 3143      74657000 
 3144              	.LASF52:
 3145 02f0 73746565 		.ascii	"steer\000"
 3145      7200
 3146              	.LASF43:
 3147 02f6 5F426F6F 		.ascii	"_Bool\000"
 3147      6C00
 3148              	.LASF31:
 3149 02fc 646D6D5F 		.ascii	"dmm_signed\000"
 3149      7369676E 
 3149      656400
 3150              	.LASF63:
 3151 0307 6469725F 		.ascii	"dir_delay_ticks\000"
 3151      64656C61 
 3151      795F7469 
 3151      636B7300 
 3152              	.LASF39:
 3153 0317 695F6E65 		.ascii	"i_next\000"
 3153      787400
 3154              	.LASF68:
 3155 031e 6D61696E 		.ascii	"main.c\000"
 3155      2E6300
 3156              	.LASF9:
 3157 0325 6C6F6E67 		.ascii	"long unsigned int\000"
 3157      20756E73 
 3157      69676E65 
 3157      6420696E 
 3157      7400
 3158              	.LASF29:
 3159 0337 64617667 		.ascii	"davg_sign\000"
 3159      5F736967 
 3159      6E00
 3160              	.LASF71:
 3161 0341 6C696768 		.ascii	"light_sensors_update_and_maybe_request_turn\000"
 3161      745F7365 
 3161      6E736F72 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\cchcZ4RW.s 			page 70


 3161      735F7570 
 3161      64617465 
 3162              	.LASF41:
 3163 036d 7361745F 		.ascii	"sat_hi\000"
 3163      686900
 3164              	.LASF24:
 3165 0374 745F6C6F 		.ascii	"t_loss\000"
 3165      737300
 3166              	.LASF7:
 3167 037b 5F5F696E 		.ascii	"__int32_t\000"
 3167      7433325F 
 3167      7400
 3168              	.LASF35:
 3169 0385 6E6F726D 		.ascii	"norm01_from_pp\000"
 3169      30315F66 
 3169      726F6D5F 
 3169      707000
 3170              	.LASF60:
 3171 0394 675F6469 		.ascii	"g_direction\000"
 3171      72656374 
 3171      696F6E00 
 3172              	.LASF42:
 3173 03a0 7361745F 		.ascii	"sat_lo\000"
 3173      6C6F00
 3174              	.LASF20:
 3175 03a7 646F7562 		.ascii	"double\000"
 3175      6C6500
 3176              	.LASF66:
 3177 03ae 7331325F 		.ascii	"s12_prev\000"
 3177      70726576 
 3177      00
 3178              	.LASF62:
 3179 03b7 675F6469 		.ascii	"g_dist_mm\000"
 3179      73745F6D 
 3179      6D00
 3180              	.LASF73:
 3181 03c1 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3181      52784275 
 3181      66666572 
 3181      00
 3182              	.LASF47:
 3183 03ce 74617267 		.ascii	"target_dist\000"
 3183      65745F64 
 3183      69737400 
 3184              	.LASF28:
 3185 03da 64617667 		.ascii	"davg_abs\000"
 3185      5F616273 
 3185      00
 3186              	.LASF50:
 3187 03e3 75547572 		.ascii	"uTurn_complete\000"
 3187      6E5F636F 
 3187      6D706C65 
 3187      746500
 3188              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	sen1_on_line:
  21 0000 00       		.space	1
  22              	sen2_on_line:
  23 0001 00       		.space	1
  24              	sen3_on_line:
  25 0002 00       		.space	1
  26              	sen4_on_line:
  27 0003 00       		.space	1
  28              	sen5_on_line:
  29 0004 00       		.space	1
  30              	sen6_on_line:
  31 0005 00       		.space	1
  32              	g_direction:
  33 0006 00       		.space	1
  34              	g_stop_now:
  35 0007 00       		.space	1
  36              		.align	2
  37              	g_dist_mm:
  38 0008 00000000 		.space	4
  39              		.align	1
  40              	dir_delay_ticks:
  41 000c 0000     		.space	2
  42              	dir_latched_side:
  43 000e 00       		.space	1
  44 000f 00       		.align	1
  45              	turn_cooldown_ticks:
  46 0010 0000     		.space	2
  47              		.global	__aeabi_ldivmod
  48              		.section	.text.isr_qd_Handler,"ax",%progbits
  49              		.align	2
  50              		.global	isr_qd_Handler
  51              		.thumb
  52              		.thumb_func
  53              		.type	isr_qd_Handler, %function
  54              	isr_qd_Handler:
  55              	.LFB64:
  56              		.file 1 "main.c"
   1:main.c        **** /* ========================= main.c (with PI steering + turn-call delay) =========================
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 2


   2:main.c        ****  * - Keeps straight-line PI active during a short delay after g_direction flips (Option A)
   3:main.c        ****  * - Then calls Directions_Handle(&g_direction) to run the maneuver
   4:main.c        ****  * - Resets PI integrator after the turn completes
   5:main.c        ****  * ============================================================================================== *
   6:main.c        **** 
   7:main.c        **** #include <project.h>
   8:main.c        **** #include <stdint.h>
   9:main.c        **** #include <stdbool.h>
  10:main.c        **** 
  11:main.c        **** #include <sensors.h>     // Sensor_ComputePeakToPeak()
  12:main.c        **** #include "motor_s.h"     // set_motors_*, motor_enable
  13:main.c        **** #include "directions.h"  // Directions_* turning module
  14:main.c        **** 
  15:main.c        **** 
  16:main.c        **** /* ===== Loop pacing (kept) ===== */
  17:main.c        **** #define LOOP_DT_MS               8u
  18:main.c        **** #define DT_S   ( (float)LOOP_DT_MS / 1000.0f )
  19:main.c        **** 
  20:main.c        **** /* ===== Cruise speed / distance target (kept) ===== */
  21:main.c        **** #define VMAX_CONST_MM_S        1000
  22:main.c        **** #define SPEED_FRAC_PERCENT      20
  23:main.c        **** #define V_CRUISE_MM_S  ((int32_t)VMAX_CONST_MM_S * (int32_t)SPEED_FRAC_PERCENT / 100)
  24:main.c        **** #define TARGET_DIST_MM        150  // HALF THE DISTANCE   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  25:main.c        **** 
  26:main.c        **** /* ===== Encoder â†’ mm conversion (kept) ===== */
  27:main.c        **** #define QD_SAMPLE_MS             5u
  28:main.c        **** #define CPR_OUTSHAFT           228u
  29:main.c        **** #define R_MM                    34
  30:main.c        **** #define PI_X1000              3142
  31:main.c        **** #define PERIM_MM_X1000   ((int32_t)(2 * PI_X1000 * R_MM))
  32:main.c        **** #define MM_PER_COUNT_X1000     ( PERIM_MM_X1000 / CPR_OUTSHAFT )
  33:main.c        **** #define CALIB_DIST_X1000     1000   // Changed to 1000 to avoid scaling
  34:main.c        **** #define APPLY_CALIB_DIST(x)  ( (int32_t)(((int64_t)(x) * CALIB_DIST_X1000 + 500)/1000) )
  35:main.c        **** 
  36:main.c        **** /* ===== S1/S2 relaxed detection (kept) ===== */
  37:main.c        **** #define S_MINC_COUNTS            10
  38:main.c        **** #define S_MAXC_COUNTS           100
  39:main.c        **** #define S_HYST_COUNTS           16u
  40:main.c        **** 
  41:main.c        **** /* ===== Turn request filtering (kept) ===== */
  42:main.c        **** #define TURN_DEBOUNCE_TICKS       5u
  43:main.c        **** #define CLEAR_ARM_TICKS           4u
  44:main.c        **** 
  45:main.c        **** #define DIR_CALL_DELAY_MS        (100)  /* wait ~200 ms before starting the maneuver */
  46:main.c        **** #define DIR_CALL_DELAY_TICKS     ((DIR_CALL_DELAY_MS + LOOP_DT_MS - 1) / LOOP_DT_MS)
  47:main.c        **** 
  48:main.c        **** 
  49:main.c        **** // Cooldown after turn to ignore intersection sensors V1 & V2
  50:main.c        ****  #define TURN_COOLDOWN_MS (400)
  51:main.c        **** //static volatile uint16_t TURN_COOLDOWN_MS;
  52:main.c        **** 
  53:main.c        **** #define TURN_COOLDOWN_TICKS ((TURN_COOLDOWN_MS + LOOP_DT_MS - 1) / LOOP_DT_MS
  54:main.c        **** 
  55:main.c        **** 
  56:main.c        **** 
  57:main.c        **** /* ===== Local sensor flags (used for S1/S2 edge) ===== */
  58:main.c        **** static uint8_t sen1_on_line=0, sen2_on_line=0, sen3_on_line=0;
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 3


  59:main.c        **** static uint8_t sen4_on_line=0, sen5_on_line=0, sen6_on_line=0;
  60:main.c        **** 
  61:main.c        **** /* ===== Global state (kept) ===== */
  62:main.c        **** static volatile uint8_t g_direction = 0;   /* 0=straight, 1=left, 2=right */
  63:main.c        **** static volatile uint8_t g_stop_now  = 0;
  64:main.c        **** static volatile int32_t g_dist_mm   = 0;
  65:main.c        **** 
  66:main.c        **** /* ===== Option A state ===== */
  67:main.c        **** static uint16_t dir_delay_ticks = 0;        /* countdown in loop ticks */
  68:main.c        **** static uint8_t  dir_latched_side = 0;       /* remembers 1 or 2 while waiting */
  69:main.c        **** 
  70:main.c        **** 
  71:main.c        **** static uint16_t turn_cooldown_ticks = 0;
  72:main.c        **** 
  73:main.c        **** 
  74:main.c        **** /* ------------------------------- 5 ms Timer ISR: accumulate distance (kept) ---------------------
  75:main.c        **** CY_ISR(isr_qd_Handler)
  76:main.c        **** {
  57              		.loc 1 76 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 48
  60              		@ frame_needed = 1, uses_anonymous_args = 0
  61 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  62              		.cfi_def_cfa_offset 36
  63              		.cfi_offset 4, -36
  64              		.cfi_offset 5, -32
  65              		.cfi_offset 6, -28
  66              		.cfi_offset 7, -24
  67              		.cfi_offset 8, -20
  68              		.cfi_offset 9, -16
  69              		.cfi_offset 10, -12
  70              		.cfi_offset 11, -8
  71              		.cfi_offset 14, -4
  72 0004 8DB0     		sub	sp, sp, #52
  73              		.cfi_def_cfa_offset 88
  74 0006 00AF     		add	r7, sp, #0
  75              		.cfi_def_cfa_register 7
  77:main.c        ****     if (g_direction == 0u) {  // Only accumulate distance when moving straight
  76              		.loc 1 77 0
  77 0008 404B     		ldr	r3, .L7
  78 000a 1B78     		ldrb	r3, [r3]
  79 000c DBB2     		uxtb	r3, r3
  80 000e 002B     		cmp	r3, #0
  81 0010 74D1     		bne	.L2
  82              	.LBB2:
  78:main.c        ****         int32_t raw1 = QuadDec_M1_GetCounter();  QuadDec_M1_SetCounter(0);
  83              		.loc 1 78 0
  84 0012 FFF7FEFF 		bl	QuadDec_M1_GetCounter
  85 0016 0346     		mov	r3, r0
  86 0018 FB62     		str	r3, [r7, #44]
  87 001a 0020     		movs	r0, #0
  88 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  79:main.c        ****         int32_t raw2 = QuadDec_M2_GetCounter();  QuadDec_M2_SetCounter(0);
  89              		.loc 1 79 0
  90 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
  91 0024 0346     		mov	r3, r0
  92 0026 BB62     		str	r3, [r7, #40]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 4


  93 0028 0020     		movs	r0, #0
  94 002a FFF7FEFF 		bl	QuadDec_M2_SetCounter
  80:main.c        **** 
  81:main.c        ****         int32_t d1 = raw1, d2 = raw2;
  95              		.loc 1 81 0
  96 002e FB6A     		ldr	r3, [r7, #44]
  97 0030 7B62     		str	r3, [r7, #36]
  98 0032 BB6A     		ldr	r3, [r7, #40]
  99 0034 3B62     		str	r3, [r7, #32]
  82:main.c        ****         int32_t a1 = (d1 >= 0) ? d1 : -d1;
 100              		.loc 1 82 0
 101 0036 7B6A     		ldr	r3, [r7, #36]
 102 0038 002B     		cmp	r3, #0
 103 003a B8BF     		it	lt
 104 003c 5B42     		rsblt	r3, r3, #0
 105 003e FB61     		str	r3, [r7, #28]
  83:main.c        ****         int32_t a2 = (d2 >= 0) ? d2 : -d2;
 106              		.loc 1 83 0
 107 0040 3B6A     		ldr	r3, [r7, #32]
 108 0042 002B     		cmp	r3, #0
 109 0044 B8BF     		it	lt
 110 0046 5B42     		rsblt	r3, r3, #0
 111 0048 BB61     		str	r3, [r7, #24]
  84:main.c        ****         int32_t davg_abs = (a1 + a2) / 2;
 112              		.loc 1 84 0
 113 004a FA69     		ldr	r2, [r7, #28]
 114 004c BB69     		ldr	r3, [r7, #24]
 115 004e 1344     		add	r3, r3, r2
 116 0050 DA0F     		lsrs	r2, r3, #31
 117 0052 1344     		add	r3, r3, r2
 118 0054 5B10     		asrs	r3, r3, #1
 119 0056 7B61     		str	r3, [r7, #20]
  85:main.c        ****         int32_t davg_sign = ((d1 + d2) >= 0) ? +1 : -1;
 120              		.loc 1 85 0
 121 0058 7A6A     		ldr	r2, [r7, #36]
 122 005a 3B6A     		ldr	r3, [r7, #32]
 123 005c 1344     		add	r3, r3, r2
 124 005e 002B     		cmp	r3, #0
 125 0060 01DB     		blt	.L3
 126              		.loc 1 85 0 is_stmt 0 discriminator 1
 127 0062 0123     		movs	r3, #1
 128 0064 01E0     		b	.L4
 129              	.L3:
 130              		.loc 1 85 0 discriminator 2
 131 0066 4FF0FF33 		mov	r3, #-1
 132              	.L4:
 133              		.loc 1 85 0 discriminator 4
 134 006a 3B61     		str	r3, [r7, #16]
  86:main.c        **** 
  87:main.c        ****         // Calculate the distance moved
  88:main.c        ****         int64_t num = (int64_t)(davg_abs) * MM_PER_COUNT_X1000;  // Calculate mm from encoder count
 135              		.loc 1 88 0 is_stmt 1 discriminator 4
 136 006c 7B69     		ldr	r3, [r7, #20]
 137 006e 1946     		mov	r1, r3
 138 0070 4FEAE172 		asr	r2, r1, #31
 139 0074 0B46     		mov	r3, r1
 140 0076 1446     		mov	r4, r2
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 5


 141 0078 DB18     		adds	r3, r3, r3
 142 007a 44EB0404 		adc	r4, r4, r4
 143 007e 5B18     		adds	r3, r3, r1
 144 0080 44EB0204 		adc	r4, r4, r2
 145 0084 4FEA840B 		lsl	fp, r4, #2
 146 0088 4BEA937B 		orr	fp, fp, r3, lsr #30
 147 008c 4FEA830A 		lsl	r10, r3, #2
 148 0090 5346     		mov	r3, r10
 149 0092 5C46     		mov	r4, fp
 150 0094 5B18     		adds	r3, r3, r1
 151 0096 44EB0204 		adc	r4, r4, r2
 152 009a E600     		lsls	r6, r4, #3
 153 009c 46EA5376 		orr	r6, r6, r3, lsr #29
 154 00a0 DD00     		lsls	r5, r3, #3
 155 00a2 5B19     		adds	r3, r3, r5
 156 00a4 44EB0604 		adc	r4, r4, r6
 157 00a8 4FEAC409 		lsl	r9, r4, #3
 158 00ac 49EA5379 		orr	r9, r9, r3, lsr #29
 159 00b0 4FEAC308 		lsl	r8, r3, #3
 160 00b4 4346     		mov	r3, r8
 161 00b6 4C46     		mov	r4, r9
 162 00b8 5B18     		adds	r3, r3, r1
 163 00ba 44EB0204 		adc	r4, r4, r2
 164 00be C7E90234 		strd	r3, [r7, #8]
  89:main.c        ****         int32_t dmm_abs = (int32_t)((num + 500) / 1000);          // Round to nearest mm
 165              		.loc 1 89 0 discriminator 4
 166 00c2 D7E90234 		ldrd	r3, [r7, #8]
 167 00c6 13F5FA70 		adds	r0, r3, #500
 168 00ca 44F10001 		adc	r1, r4, #0
 169 00ce 4FF47A72 		mov	r2, #1000
 170 00d2 4FF00003 		mov	r3, #0
 171 00d6 FFF7FEFF 		bl	__aeabi_ldivmod
 172 00da 0346     		mov	r3, r0
 173 00dc 0C46     		mov	r4, r1
 174 00de 7B60     		str	r3, [r7, #4]
  90:main.c        ****         int32_t dmm_signed = (davg_sign >= 0) ? +dmm_abs : -dmm_abs;
 175              		.loc 1 90 0 discriminator 4
 176 00e0 3B69     		ldr	r3, [r7, #16]
 177 00e2 002B     		cmp	r3, #0
 178 00e4 02DA     		bge	.L5
 179              		.loc 1 90 0 is_stmt 0 discriminator 1
 180 00e6 7B68     		ldr	r3, [r7, #4]
 181 00e8 5B42     		negs	r3, r3
 182 00ea 00E0     		b	.L6
 183              	.L5:
 184              		.loc 1 90 0 discriminator 2
 185 00ec 7B68     		ldr	r3, [r7, #4]
 186              	.L6:
 187              		.loc 1 90 0 discriminator 4
 188 00ee 3B60     		str	r3, [r7]
  91:main.c        **** 
  92:main.c        ****         // Update the global distance traveled
  93:main.c        ****         g_dist_mm += dmm_signed;
 189              		.loc 1 93 0 is_stmt 1 discriminator 4
 190 00f0 074B     		ldr	r3, .L7+4
 191 00f2 1A68     		ldr	r2, [r3]
 192 00f4 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 6


 193 00f6 1344     		add	r3, r3, r2
 194 00f8 054A     		ldr	r2, .L7+4
 195 00fa 1360     		str	r3, [r2]
 196              	.L2:
 197              	.LBE2:
  94:main.c        **** 
  95:main.c        ****         // Optionally add small smoothing for distance (comment this out if you don't want smoothin
  96:main.c        ****         // static int32_t v_mm = 0;
  97:main.c        ****         // v_mm = v_mm + ((dmm_signed - v_mm) >> 2); // ~alpha=0.25
  98:main.c        ****         // g_dist_mm += v_mm;
  99:main.c        ****     }
 100:main.c        **** 
 101:main.c        ****     (void)Timer_QD_ReadStatusRegister();  // Clear the interrupt flag
 198              		.loc 1 101 0
 199 00fc FFF7FEFF 		bl	Timer_QD_ReadStatusRegister
 102:main.c        **** }
 200              		.loc 1 102 0
 201 0100 00BF     		nop
 202 0102 3437     		adds	r7, r7, #52
 203              		.cfi_def_cfa_offset 36
 204 0104 BD46     		mov	sp, r7
 205              		.cfi_def_cfa_register 13
 206              		@ sp needed
 207 0106 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 208              	.L8:
 209 010a 00BF     		.align	2
 210              	.L7:
 211 010c 06000000 		.word	g_direction
 212 0110 08000000 		.word	g_dist_mm
 213              		.cfi_endproc
 214              	.LFE64:
 215              		.size	isr_qd_Handler, .-isr_qd_Handler
 216              		.global	__aeabi_i2f
 217              		.global	__aeabi_fdiv
 218              		.section	.text.norm01_from_pp,"ax",%progbits
 219              		.align	2
 220              		.thumb
 221              		.thumb_func
 222              		.type	norm01_from_pp, %function
 223              	norm01_from_pp:
 224              	.LFB65:
 103:main.c        **** 
 104:main.c        **** /* Utility: normalize peak-to-peak to [0..1] */
 105:main.c        **** static inline float norm01_from_pp(uint16_t pp)
 106:main.c        **** {
 225              		.loc 1 106 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 8
 228              		@ frame_needed = 1, uses_anonymous_args = 0
 229 0000 80B5     		push	{r7, lr}
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 82B0     		sub	sp, sp, #8
 234              		.cfi_def_cfa_offset 16
 235 0004 00AF     		add	r7, sp, #0
 236              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 7


 237 0006 0346     		mov	r3, r0
 238 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 107:main.c        ****     if (pp <= S_MINC_COUNTS) return 0.0f;
 239              		.loc 1 107 0
 240 000a FB88     		ldrh	r3, [r7, #6]
 241 000c 0A2B     		cmp	r3, #10
 242 000e 02D8     		bhi	.L10
 243              		.loc 1 107 0 is_stmt 0 discriminator 1
 244 0010 4FF00003 		mov	r3, #0
 245 0014 10E0     		b	.L11
 246              	.L10:
 108:main.c        ****     if (pp >= S_MAXC_COUNTS) return 1.0f;
 247              		.loc 1 108 0 is_stmt 1
 248 0016 FB88     		ldrh	r3, [r7, #6]
 249 0018 632B     		cmp	r3, #99
 250 001a 02D9     		bls	.L12
 251              		.loc 1 108 0 is_stmt 0 discriminator 1
 252 001c 4FF07E53 		mov	r3, #1065353216
 253 0020 0AE0     		b	.L11
 254              	.L12:
 109:main.c        ****     return (float)(pp - S_MINC_COUNTS) / (float)(S_MAXC_COUNTS - S_MINC_COUNTS);
 255              		.loc 1 109 0 is_stmt 1
 256 0022 FB88     		ldrh	r3, [r7, #6]
 257 0024 0A3B     		subs	r3, r3, #10
 258 0026 1846     		mov	r0, r3
 259 0028 FFF7FEFF 		bl	__aeabi_i2f
 260 002c 0346     		mov	r3, r0
 261 002e 0449     		ldr	r1, .L13
 262 0030 1846     		mov	r0, r3
 263 0032 FFF7FEFF 		bl	__aeabi_fdiv
 264 0036 0346     		mov	r3, r0
 265              	.L11:
 110:main.c        **** }
 266              		.loc 1 110 0
 267 0038 1846     		mov	r0, r3
 268 003a 0837     		adds	r7, r7, #8
 269              		.cfi_def_cfa_offset 8
 270 003c BD46     		mov	sp, r7
 271              		.cfi_def_cfa_register 13
 272              		@ sp needed
 273 003e 80BD     		pop	{r7, pc}
 274              	.L14:
 275              		.align	2
 276              	.L13:
 277 0040 0000B442 		.word	1119092736
 278              		.cfi_endproc
 279              	.LFE65:
 280              		.size	norm01_from_pp, .-norm01_from_pp
 281              		.section	.text.light_sensors_update_and_maybe_request_turn,"ax",%progbits
 282              		.align	2
 283              		.thumb
 284              		.thumb_func
 285              		.type	light_sensors_update_and_maybe_request_turn, %function
 286              	light_sensors_update_and_maybe_request_turn:
 287              	.LFB66:
 111:main.c        **** 
 112:main.c        **** /* Read sensors and (maybe) request a turn based on S1 / S2 (kept) */
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 8


 113:main.c        **** static void light_sensors_update_and_maybe_request_turn(uint16_t* V4_pp, uint16_t* V5_pp, uint16_t*
 114:main.c        **** {
 288              		.loc 1 114 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 32
 291              		@ frame_needed = 1, uses_anonymous_args = 0
 292 0000 80B5     		push	{r7, lr}
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 7, -8
 295              		.cfi_offset 14, -4
 296 0002 88B0     		sub	sp, sp, #32
 297              		.cfi_def_cfa_offset 40
 298 0004 00AF     		add	r7, sp, #0
 299              		.cfi_def_cfa_register 7
 300 0006 F860     		str	r0, [r7, #12]
 301 0008 B960     		str	r1, [r7, #8]
 302 000a 7A60     		str	r2, [r7, #4]
 115:main.c        ****     uint16_t V1 = Sensor_ComputePeakToPeak(0);
 303              		.loc 1 115 0
 304 000c 0020     		movs	r0, #0
 305 000e FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 306 0012 0346     		mov	r3, r0
 307 0014 FB83     		strh	r3, [r7, #30]	@ movhi
 116:main.c        ****     uint16_t V2 = Sensor_ComputePeakToPeak(1);
 308              		.loc 1 116 0
 309 0016 0120     		movs	r0, #1
 310 0018 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 311 001c 0346     		mov	r3, r0
 312 001e BB83     		strh	r3, [r7, #28]	@ movhi
 117:main.c        ****     uint16_t V3 = Sensor_ComputePeakToPeak(2);
 313              		.loc 1 117 0
 314 0020 0220     		movs	r0, #2
 315 0022 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 316 0026 0346     		mov	r3, r0
 317 0028 7B83     		strh	r3, [r7, #26]	@ movhi
 118:main.c        ****     uint16_t V4 = Sensor_ComputePeakToPeak(3);
 318              		.loc 1 118 0
 319 002a 0320     		movs	r0, #3
 320 002c FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 321 0030 0346     		mov	r3, r0
 322 0032 3B83     		strh	r3, [r7, #24]	@ movhi
 119:main.c        ****     uint16_t V5 = Sensor_ComputePeakToPeak(4);
 323              		.loc 1 119 0
 324 0034 0420     		movs	r0, #4
 325 0036 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 326 003a 0346     		mov	r3, r0
 327 003c FB82     		strh	r3, [r7, #22]	@ movhi
 120:main.c        ****     uint16_t V6 = Sensor_ComputePeakToPeak(5);
 328              		.loc 1 120 0
 329 003e 0520     		movs	r0, #5
 330 0040 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 331 0044 0346     		mov	r3, r0
 332 0046 BB82     		strh	r3, [r7, #20]	@ movhi
 121:main.c        **** 
 122:main.c        ****     if (V4_pp) *V4_pp = V4;
 333              		.loc 1 122 0
 334 0048 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 9


 335 004a 002B     		cmp	r3, #0
 336 004c 02D0     		beq	.L16
 337              		.loc 1 122 0 is_stmt 0 discriminator 1
 338 004e FB68     		ldr	r3, [r7, #12]
 339 0050 3A8B     		ldrh	r2, [r7, #24]	@ movhi
 340 0052 1A80     		strh	r2, [r3]	@ movhi
 341              	.L16:
 123:main.c        ****     if (V5_pp) *V5_pp = V5;
 342              		.loc 1 123 0 is_stmt 1
 343 0054 BB68     		ldr	r3, [r7, #8]
 344 0056 002B     		cmp	r3, #0
 345 0058 02D0     		beq	.L17
 346              		.loc 1 123 0 is_stmt 0 discriminator 1
 347 005a BB68     		ldr	r3, [r7, #8]
 348 005c FA8A     		ldrh	r2, [r7, #22]	@ movhi
 349 005e 1A80     		strh	r2, [r3]	@ movhi
 350              	.L17:
 124:main.c        ****     if (V6_pp) *V6_pp = V6;
 351              		.loc 1 124 0 is_stmt 1
 352 0060 7B68     		ldr	r3, [r7, #4]
 353 0062 002B     		cmp	r3, #0
 354 0064 02D0     		beq	.L18
 355              		.loc 1 124 0 is_stmt 0 discriminator 1
 356 0066 7B68     		ldr	r3, [r7, #4]
 357 0068 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 358 006a 1A80     		strh	r2, [r3]	@ movhi
 359              	.L18:
 125:main.c        ****     
 126:main.c        ****     sen1_on_line = (V1 > 10 && V1 < 100) ? 1u : 0u;
 360              		.loc 1 126 0 is_stmt 1
 361 006c FB8B     		ldrh	r3, [r7, #30]
 362 006e 0A2B     		cmp	r3, #10
 363 0070 04D9     		bls	.L19
 364              		.loc 1 126 0 is_stmt 0 discriminator 1
 365 0072 FB8B     		ldrh	r3, [r7, #30]
 366 0074 632B     		cmp	r3, #99
 367 0076 01D8     		bhi	.L19
 368              		.loc 1 126 0 discriminator 3
 369 0078 0122     		movs	r2, #1
 370 007a 00E0     		b	.L20
 371              	.L19:
 372              		.loc 1 126 0 discriminator 4
 373 007c 0022     		movs	r2, #0
 374              	.L20:
 375              		.loc 1 126 0 discriminator 6
 376 007e 2A4B     		ldr	r3, .L34
 377 0080 1A70     		strb	r2, [r3]
 127:main.c        ****     sen2_on_line = (V2 > 10 && V2 < 100) ? 1u : 0u;
 378              		.loc 1 127 0 is_stmt 1 discriminator 6
 379 0082 BB8B     		ldrh	r3, [r7, #28]
 380 0084 0A2B     		cmp	r3, #10
 381 0086 04D9     		bls	.L21
 382              		.loc 1 127 0 is_stmt 0 discriminator 1
 383 0088 BB8B     		ldrh	r3, [r7, #28]
 384 008a 632B     		cmp	r3, #99
 385 008c 01D8     		bhi	.L21
 386              		.loc 1 127 0 discriminator 3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 10


 387 008e 0122     		movs	r2, #1
 388 0090 00E0     		b	.L22
 389              	.L21:
 390              		.loc 1 127 0 discriminator 4
 391 0092 0022     		movs	r2, #0
 392              	.L22:
 393              		.loc 1 127 0 discriminator 6
 394 0094 254B     		ldr	r3, .L34+4
 395 0096 1A70     		strb	r2, [r3]
 128:main.c        ****     sen3_on_line = (V3 > 10 && V3 < 100) ? 1u : 0u;
 396              		.loc 1 128 0 is_stmt 1 discriminator 6
 397 0098 7B8B     		ldrh	r3, [r7, #26]
 398 009a 0A2B     		cmp	r3, #10
 399 009c 04D9     		bls	.L23
 400              		.loc 1 128 0 is_stmt 0 discriminator 1
 401 009e 7B8B     		ldrh	r3, [r7, #26]
 402 00a0 632B     		cmp	r3, #99
 403 00a2 01D8     		bhi	.L23
 404              		.loc 1 128 0 discriminator 3
 405 00a4 0122     		movs	r2, #1
 406 00a6 00E0     		b	.L24
 407              	.L23:
 408              		.loc 1 128 0 discriminator 4
 409 00a8 0022     		movs	r2, #0
 410              	.L24:
 411              		.loc 1 128 0 discriminator 6
 412 00aa 214B     		ldr	r3, .L34+8
 413 00ac 1A70     		strb	r2, [r3]
 129:main.c        ****     sen4_on_line = (V4 > 10 && V4 < 100) ? 1u : 0u;
 414              		.loc 1 129 0 is_stmt 1 discriminator 6
 415 00ae 3B8B     		ldrh	r3, [r7, #24]
 416 00b0 0A2B     		cmp	r3, #10
 417 00b2 04D9     		bls	.L25
 418              		.loc 1 129 0 is_stmt 0 discriminator 1
 419 00b4 3B8B     		ldrh	r3, [r7, #24]
 420 00b6 632B     		cmp	r3, #99
 421 00b8 01D8     		bhi	.L25
 422              		.loc 1 129 0 discriminator 3
 423 00ba 0122     		movs	r2, #1
 424 00bc 00E0     		b	.L26
 425              	.L25:
 426              		.loc 1 129 0 discriminator 4
 427 00be 0022     		movs	r2, #0
 428              	.L26:
 429              		.loc 1 129 0 discriminator 6
 430 00c0 1C4B     		ldr	r3, .L34+12
 431 00c2 1A70     		strb	r2, [r3]
 130:main.c        ****     sen5_on_line = (V5 > 10 && V5 < 100) ? 1u : 0u;
 432              		.loc 1 130 0 is_stmt 1 discriminator 6
 433 00c4 FB8A     		ldrh	r3, [r7, #22]
 434 00c6 0A2B     		cmp	r3, #10
 435 00c8 04D9     		bls	.L27
 436              		.loc 1 130 0 is_stmt 0 discriminator 1
 437 00ca FB8A     		ldrh	r3, [r7, #22]
 438 00cc 632B     		cmp	r3, #99
 439 00ce 01D8     		bhi	.L27
 440              		.loc 1 130 0 discriminator 3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 11


 441 00d0 0122     		movs	r2, #1
 442 00d2 00E0     		b	.L28
 443              	.L27:
 444              		.loc 1 130 0 discriminator 4
 445 00d4 0022     		movs	r2, #0
 446              	.L28:
 447              		.loc 1 130 0 discriminator 6
 448 00d6 184B     		ldr	r3, .L34+16
 449 00d8 1A70     		strb	r2, [r3]
 131:main.c        ****     sen6_on_line = (V6 > 10 && V6 < 100) ? 1u : 0u;
 450              		.loc 1 131 0 is_stmt 1 discriminator 6
 451 00da BB8A     		ldrh	r3, [r7, #20]
 452 00dc 0A2B     		cmp	r3, #10
 453 00de 04D9     		bls	.L29
 454              		.loc 1 131 0 is_stmt 0 discriminator 1
 455 00e0 BB8A     		ldrh	r3, [r7, #20]
 456 00e2 632B     		cmp	r3, #99
 457 00e4 01D8     		bhi	.L29
 458              		.loc 1 131 0 discriminator 3
 459 00e6 0122     		movs	r2, #1
 460 00e8 00E0     		b	.L30
 461              	.L29:
 462              		.loc 1 131 0 discriminator 4
 463 00ea 0022     		movs	r2, #0
 464              	.L30:
 465              		.loc 1 131 0 discriminator 6
 466 00ec 134B     		ldr	r3, .L34+20
 467 00ee 1A70     		strb	r2, [r3]
 132:main.c        **** 
 133:main.c        ****     if (g_direction == 0u && turn_cooldown_ticks == 0u){
 468              		.loc 1 133 0 is_stmt 1 discriminator 6
 469 00f0 134B     		ldr	r3, .L34+24
 470 00f2 1B78     		ldrb	r3, [r3]
 471 00f4 DBB2     		uxtb	r3, r3
 472 00f6 002B     		cmp	r3, #0
 473 00f8 12D1     		bne	.L33
 474              		.loc 1 133 0 is_stmt 0 discriminator 1
 475 00fa 124B     		ldr	r3, .L34+28
 476 00fc 1B88     		ldrh	r3, [r3]
 477 00fe 002B     		cmp	r3, #0
 478 0100 0ED1     		bne	.L33
 134:main.c        ****         if (sen1_on_line){
 479              		.loc 1 134 0 is_stmt 1
 480 0102 094B     		ldr	r3, .L34
 481 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 482 0106 002B     		cmp	r3, #0
 483 0108 03D0     		beq	.L32
 135:main.c        ****             g_direction = 1;  // LEFT turn
 484              		.loc 1 135 0
 485 010a 0D4B     		ldr	r3, .L34+24
 486 010c 0122     		movs	r2, #1
 487 010e 1A70     		strb	r2, [r3]
 136:main.c        ****         } else if (sen2_on_line){
 137:main.c        ****             g_direction = 2;  // RIGHT turn
 138:main.c        ****         }
 139:main.c        ****     }
 140:main.c        **** }
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 12


 488              		.loc 1 140 0
 489 0110 06E0     		b	.L33
 490              	.L32:
 136:main.c        ****         } else if (sen2_on_line){
 491              		.loc 1 136 0
 492 0112 064B     		ldr	r3, .L34+4
 493 0114 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 494 0116 002B     		cmp	r3, #0
 495 0118 02D0     		beq	.L33
 137:main.c        ****         }
 496              		.loc 1 137 0
 497 011a 094B     		ldr	r3, .L34+24
 498 011c 0222     		movs	r2, #2
 499 011e 1A70     		strb	r2, [r3]
 500              	.L33:
 501              		.loc 1 140 0
 502 0120 00BF     		nop
 503 0122 2037     		adds	r7, r7, #32
 504              		.cfi_def_cfa_offset 8
 505 0124 BD46     		mov	sp, r7
 506              		.cfi_def_cfa_register 13
 507              		@ sp needed
 508 0126 80BD     		pop	{r7, pc}
 509              	.L35:
 510              		.align	2
 511              	.L34:
 512 0128 00000000 		.word	sen1_on_line
 513 012c 01000000 		.word	sen2_on_line
 514 0130 02000000 		.word	sen3_on_line
 515 0134 03000000 		.word	sen4_on_line
 516 0138 04000000 		.word	sen5_on_line
 517 013c 05000000 		.word	sen6_on_line
 518 0140 06000000 		.word	g_direction
 519 0144 10000000 		.word	turn_cooldown_ticks
 520              		.cfi_endproc
 521              	.LFE66:
 522              		.size	light_sensors_update_and_maybe_request_turn, .-light_sensors_update_and_maybe_request_turn
 523              		.global	__aeabi_fcmplt
 524              		.global	__aeabi_fcmpgt
 525              		.section	.text._clampf,"ax",%progbits
 526              		.align	2
 527              		.thumb
 528              		.thumb_func
 529              		.type	_clampf, %function
 530              	_clampf:
 531              	.LFB67:
 141:main.c        **** 
 142:main.c        **** /* ================= PI Controller (same as your current file) ================= */
 143:main.c        **** #define STEER_MAX        15
 144:main.c        **** #define KP               16.0f
 145:main.c        **** #define KI               3.0f
 146:main.c        **** #define INT_LIM          30.0f
 147:main.c        **** #define LOSS_TIMEOUT_T   0.25f
 148:main.c        **** 
 149:main.c        **** typedef struct { float i, u, t_loss; } pi_t;
 150:main.c        **** static inline float _clampf(float x, float lo, float hi){ return (x<lo?lo:(x>hi?hi:x)); }
 532              		.loc 1 150 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 13


 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 16
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536 0000 80B5     		push	{r7, lr}
 537              		.cfi_def_cfa_offset 8
 538              		.cfi_offset 7, -8
 539              		.cfi_offset 14, -4
 540 0002 84B0     		sub	sp, sp, #16
 541              		.cfi_def_cfa_offset 24
 542 0004 00AF     		add	r7, sp, #0
 543              		.cfi_def_cfa_register 7
 544 0006 F860     		str	r0, [r7, #12]	@ float
 545 0008 B960     		str	r1, [r7, #8]	@ float
 546 000a 7A60     		str	r2, [r7, #4]	@ float
 547              		.loc 1 150 0
 548 000c B968     		ldr	r1, [r7, #8]	@ float
 549 000e F868     		ldr	r0, [r7, #12]	@ float
 550 0010 FFF7FEFF 		bl	__aeabi_fcmplt
 551 0014 0346     		mov	r3, r0
 552 0016 002B     		cmp	r3, #0
 553 0018 01D0     		beq	.L46
 554              		.loc 1 150 0 is_stmt 0 discriminator 1
 555 001a BB68     		ldr	r3, [r7, #8]	@ float
 556 001c 09E0     		b	.L43
 557              	.L46:
 558              		.loc 1 150 0 discriminator 2
 559 001e 7968     		ldr	r1, [r7, #4]	@ float
 560 0020 F868     		ldr	r0, [r7, #12]	@ float
 561 0022 FFF7FEFF 		bl	__aeabi_fcmpgt
 562 0026 0346     		mov	r3, r0
 563 0028 002B     		cmp	r3, #0
 564 002a 01D0     		beq	.L47
 565              		.loc 1 150 0 discriminator 4
 566 002c 7B68     		ldr	r3, [r7, #4]	@ float
 567 002e 00E0     		b	.L43
 568              	.L47:
 569              		.loc 1 150 0 discriminator 5
 570 0030 FB68     		ldr	r3, [r7, #12]	@ float
 571              	.L43:
 572              		.loc 1 150 0 discriminator 9
 573 0032 1846     		mov	r0, r3
 574 0034 1037     		adds	r7, r7, #16
 575              		.cfi_def_cfa_offset 8
 576 0036 BD46     		mov	sp, r7
 577              		.cfi_def_cfa_register 13
 578              		@ sp needed
 579 0038 80BD     		pop	{r7, pc}
 580              		.cfi_endproc
 581              	.LFE67:
 582              		.size	_clampf, .-_clampf
 583              		.global	__aeabi_fmul
 584              		.global	__aeabi_fadd
 585              		.global	__aeabi_fsub
 586              		.global	__aeabi_fcmpge
 587              		.global	__aeabi_f2iz
 588              		.global	__aeabi_fcmple
 589 003a 00BF     		.section	.text.pi_step,"ax",%progbits
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 14


 590              		.align	2
 591              		.thumb
 592              		.thumb_func
 593              		.type	pi_step, %function
 594              	pi_step:
 595              	.LFB68:
 151:main.c        **** 
 152:main.c        **** static int pi_step(pi_t* pi, uint16_t V4_pp, uint16_t V5_pp, uint16_t V6_pp)
 153:main.c        **** {
 596              		.loc 1 153 0 is_stmt 1
 597              		.cfi_startproc
 598              		@ args = 0, pretend = 0, frame = 64
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600 0000 90B5     		push	{r4, r7, lr}
 601              		.cfi_def_cfa_offset 12
 602              		.cfi_offset 4, -12
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0002 91B0     		sub	sp, sp, #68
 606              		.cfi_def_cfa_offset 80
 607 0004 00AF     		add	r7, sp, #0
 608              		.cfi_def_cfa_register 7
 609 0006 F860     		str	r0, [r7, #12]
 610 0008 0846     		mov	r0, r1
 611 000a 1146     		mov	r1, r2
 612 000c 1A46     		mov	r2, r3
 613 000e 0346     		mov	r3, r0	@ movhi
 614 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 615 0012 0B46     		mov	r3, r1	@ movhi
 616 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 617 0016 1346     		mov	r3, r2	@ movhi
 618 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 154:main.c        ****     float c4 = norm01_from_pp(V4_pp)*1.5f;
 619              		.loc 1 154 0
 620 001a 7B89     		ldrh	r3, [r7, #10]
 621 001c 1846     		mov	r0, r3
 622 001e FFF7FEFF 		bl	norm01_from_pp
 623 0022 0346     		mov	r3, r0
 624 0024 4FF07F51 		mov	r1, #1069547520
 625 0028 1846     		mov	r0, r3
 626 002a FFF7FEFF 		bl	__aeabi_fmul
 627 002e 0346     		mov	r3, r0
 628 0030 BB63     		str	r3, [r7, #56]	@ float
 155:main.c        ****     float c5 = norm01_from_pp(V5_pp)*1.5f;
 629              		.loc 1 155 0
 630 0032 3B89     		ldrh	r3, [r7, #8]
 631 0034 1846     		mov	r0, r3
 632 0036 FFF7FEFF 		bl	norm01_from_pp
 633 003a 0346     		mov	r3, r0
 634 003c 4FF07F51 		mov	r1, #1069547520
 635 0040 1846     		mov	r0, r3
 636 0042 FFF7FEFF 		bl	__aeabi_fmul
 637 0046 0346     		mov	r3, r0
 638 0048 7B63     		str	r3, [r7, #52]	@ float
 156:main.c        ****     float c6 = norm01_from_pp(V6_pp)*1.5f;
 639              		.loc 1 156 0
 640 004a FB88     		ldrh	r3, [r7, #6]
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 15


 641 004c 1846     		mov	r0, r3
 642 004e FFF7FEFF 		bl	norm01_from_pp
 643 0052 0346     		mov	r3, r0
 644 0054 4FF07F51 		mov	r1, #1069547520
 645 0058 1846     		mov	r0, r3
 646 005a FFF7FEFF 		bl	__aeabi_fmul
 647 005e 0346     		mov	r3, r0
 648 0060 3B63     		str	r3, [r7, #48]	@ float
 157:main.c        ****     float sum = c4 + c5 + c6;
 649              		.loc 1 157 0
 650 0062 796B     		ldr	r1, [r7, #52]	@ float
 651 0064 B86B     		ldr	r0, [r7, #56]	@ float
 652 0066 FFF7FEFF 		bl	__aeabi_fadd
 653 006a 0346     		mov	r3, r0
 654 006c 396B     		ldr	r1, [r7, #48]	@ float
 655 006e 1846     		mov	r0, r3
 656 0070 FFF7FEFF 		bl	__aeabi_fadd
 657 0074 0346     		mov	r3, r0
 658 0076 FB62     		str	r3, [r7, #44]	@ float
 158:main.c        ****     bool valid = (sum > 0.08f);
 659              		.loc 1 158 0
 660 0078 0123     		movs	r3, #1
 661 007a 1C46     		mov	r4, r3
 662 007c 7749     		ldr	r1, .L68
 663 007e F86A     		ldr	r0, [r7, #44]	@ float
 664 0080 FFF7FEFF 		bl	__aeabi_fcmpgt
 665 0084 0346     		mov	r3, r0
 666 0086 002B     		cmp	r3, #0
 667 0088 01D1     		bne	.L49
 668 008a 0023     		movs	r3, #0
 669 008c 1C46     		mov	r4, r3
 670              	.L49:
 671 008e 87F82B40 		strb	r4, [r7, #43]
 159:main.c        **** 
 160:main.c        ****     float pos = 0.0f;
 672              		.loc 1 160 0
 673 0092 4FF00003 		mov	r3, #0
 674 0096 FB63     		str	r3, [r7, #60]	@ float
 161:main.c        ****     if (valid) pos = (-1.0f * c4 + 0.0f * c5 + 1.0f * c6) / sum;
 675              		.loc 1 161 0
 676 0098 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 677 009c 002B     		cmp	r3, #0
 678 009e 15D0     		beq	.L50
 679              		.loc 1 161 0 is_stmt 0 discriminator 1
 680 00a0 4FF00001 		mov	r1, #0
 681 00a4 786B     		ldr	r0, [r7, #52]	@ float
 682 00a6 FFF7FEFF 		bl	__aeabi_fmul
 683 00aa 0346     		mov	r3, r0
 684 00ac B96B     		ldr	r1, [r7, #56]	@ float
 685 00ae 1846     		mov	r0, r3
 686 00b0 FFF7FEFF 		bl	__aeabi_fsub
 687 00b4 0346     		mov	r3, r0
 688 00b6 396B     		ldr	r1, [r7, #48]	@ float
 689 00b8 1846     		mov	r0, r3
 690 00ba FFF7FEFF 		bl	__aeabi_fadd
 691 00be 0346     		mov	r3, r0
 692 00c0 F96A     		ldr	r1, [r7, #44]	@ float
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 16


 693 00c2 1846     		mov	r0, r3
 694 00c4 FFF7FEFF 		bl	__aeabi_fdiv
 695 00c8 0346     		mov	r3, r0
 696 00ca FB63     		str	r3, [r7, #60]	@ float
 697              	.L50:
 162:main.c        **** 
 163:main.c        ****     float e = pos;
 698              		.loc 1 163 0 is_stmt 1
 699 00cc FB6B     		ldr	r3, [r7, #60]	@ float
 700 00ce 7B62     		str	r3, [r7, #36]	@ float
 164:main.c        **** 
 165:main.c        ****     if (!valid) {
 701              		.loc 1 165 0
 702 00d0 97F82B30 		ldrb	r3, [r7, #43]
 703 00d4 83F00103 		eor	r3, r3, #1
 704 00d8 DBB2     		uxtb	r3, r3
 705 00da 002B     		cmp	r3, #0
 706 00dc 2AD0     		beq	.L51
 166:main.c        ****         pi->t_loss += DT_S;
 707              		.loc 1 166 0
 708 00de FB68     		ldr	r3, [r7, #12]
 709 00e0 9B68     		ldr	r3, [r3, #8]	@ float
 710 00e2 5F49     		ldr	r1, .L68+4
 711 00e4 1846     		mov	r0, r3
 712 00e6 FFF7FEFF 		bl	__aeabi_fadd
 713 00ea 0346     		mov	r3, r0
 714 00ec 1A46     		mov	r2, r3
 715 00ee FB68     		ldr	r3, [r7, #12]
 716 00f0 9A60     		str	r2, [r3, #8]	@ float
 167:main.c        ****         if (pi->t_loss >= LOSS_TIMEOUT_T) pi->i *= 0.92f;
 717              		.loc 1 167 0
 718 00f2 FB68     		ldr	r3, [r7, #12]
 719 00f4 9B68     		ldr	r3, [r3, #8]	@ float
 720 00f6 4FF07A51 		mov	r1, #1048576000
 721 00fa 1846     		mov	r0, r3
 722 00fc FFF7FEFF 		bl	__aeabi_fcmpge
 723 0100 0346     		mov	r3, r0
 724 0102 002B     		cmp	r3, #0
 725 0104 09D0     		beq	.L52
 726              		.loc 1 167 0 is_stmt 0 discriminator 1
 727 0106 FB68     		ldr	r3, [r7, #12]
 728 0108 1B68     		ldr	r3, [r3]	@ float
 729 010a 5649     		ldr	r1, .L68+8
 730 010c 1846     		mov	r0, r3
 731 010e FFF7FEFF 		bl	__aeabi_fmul
 732 0112 0346     		mov	r3, r0
 733 0114 1A46     		mov	r2, r3
 734 0116 FB68     		ldr	r3, [r7, #12]
 735 0118 1A60     		str	r2, [r3]	@ float
 736              	.L52:
 168:main.c        ****         return (int)_clampf(pi->u, -(float)STEER_MAX, (float)STEER_MAX);
 737              		.loc 1 168 0 is_stmt 1
 738 011a FB68     		ldr	r3, [r7, #12]
 739 011c 5B68     		ldr	r3, [r3, #4]	@ float
 740 011e 524A     		ldr	r2, .L68+12
 741 0120 5249     		ldr	r1, .L68+16
 742 0122 1846     		mov	r0, r3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 17


 743 0124 FFF7FEFF 		bl	_clampf
 744 0128 0346     		mov	r3, r0
 745 012a 1846     		mov	r0, r3
 746 012c FFF7FEFF 		bl	__aeabi_f2iz
 747 0130 0346     		mov	r3, r0
 748 0132 8FE0     		b	.L54
 749              	.L51:
 169:main.c        ****     }
 170:main.c        ****     pi->t_loss = 0.0f;
 750              		.loc 1 170 0
 751 0134 FB68     		ldr	r3, [r7, #12]
 752 0136 4FF00002 		mov	r2, #0
 753 013a 9A60     		str	r2, [r3, #8]	@ float
 171:main.c        **** 
 172:main.c        ****     float i_next = _clampf(pi->i + e * DT_S, -INT_LIM, +INT_LIM);
 754              		.loc 1 172 0
 755 013c FB68     		ldr	r3, [r7, #12]
 756 013e 1C68     		ldr	r4, [r3]	@ float
 757 0140 4749     		ldr	r1, .L68+4
 758 0142 786A     		ldr	r0, [r7, #36]	@ float
 759 0144 FFF7FEFF 		bl	__aeabi_fmul
 760 0148 0346     		mov	r3, r0
 761 014a 1946     		mov	r1, r3
 762 014c 2046     		mov	r0, r4
 763 014e FFF7FEFF 		bl	__aeabi_fadd
 764 0152 0346     		mov	r3, r0
 765 0154 464A     		ldr	r2, .L68+20
 766 0156 4749     		ldr	r1, .L68+24
 767 0158 1846     		mov	r0, r3
 768 015a FFF7FEFF 		bl	_clampf
 769 015e 3862     		str	r0, [r7, #32]	@ float
 173:main.c        ****     float u_raw  = KP * e + KI * i_next;
 770              		.loc 1 173 0
 771 0160 4FF08341 		mov	r1, #1098907648
 772 0164 786A     		ldr	r0, [r7, #36]	@ float
 773 0166 FFF7FEFF 		bl	__aeabi_fmul
 774 016a 0346     		mov	r3, r0
 775 016c 1C46     		mov	r4, r3
 776 016e 4249     		ldr	r1, .L68+28
 777 0170 386A     		ldr	r0, [r7, #32]	@ float
 778 0172 FFF7FEFF 		bl	__aeabi_fmul
 779 0176 0346     		mov	r3, r0
 780 0178 1946     		mov	r1, r3
 781 017a 2046     		mov	r0, r4
 782 017c FFF7FEFF 		bl	__aeabi_fadd
 783 0180 0346     		mov	r3, r0
 784 0182 FB61     		str	r3, [r7, #28]	@ float
 174:main.c        ****     float u      = _clampf(u_raw, -(float)STEER_MAX, (float)STEER_MAX);
 785              		.loc 1 174 0
 786 0184 384A     		ldr	r2, .L68+12
 787 0186 3949     		ldr	r1, .L68+16
 788 0188 F869     		ldr	r0, [r7, #28]	@ float
 789 018a FFF7FEFF 		bl	_clampf
 790 018e B861     		str	r0, [r7, #24]	@ float
 175:main.c        **** 
 176:main.c        ****     bool sat_hi = (u >=  (float)STEER_MAX - 1e-3f);
 791              		.loc 1 176 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 18


 792 0190 0123     		movs	r3, #1
 793 0192 1C46     		mov	r4, r3
 794 0194 3949     		ldr	r1, .L68+32
 795 0196 B869     		ldr	r0, [r7, #24]	@ float
 796 0198 FFF7FEFF 		bl	__aeabi_fcmpge
 797 019c 0346     		mov	r3, r0
 798 019e 002B     		cmp	r3, #0
 799 01a0 01D1     		bne	.L55
 800 01a2 0023     		movs	r3, #0
 801 01a4 1C46     		mov	r4, r3
 802              	.L55:
 803 01a6 FC75     		strb	r4, [r7, #23]
 177:main.c        ****     bool sat_lo = (u <= -(float)STEER_MAX + 1e-3f);
 804              		.loc 1 177 0
 805 01a8 0123     		movs	r3, #1
 806 01aa 1C46     		mov	r4, r3
 807 01ac 3449     		ldr	r1, .L68+36
 808 01ae B869     		ldr	r0, [r7, #24]	@ float
 809 01b0 FFF7FEFF 		bl	__aeabi_fcmple
 810 01b4 0346     		mov	r3, r0
 811 01b6 002B     		cmp	r3, #0
 812 01b8 01D1     		bne	.L56
 813 01ba 0023     		movs	r3, #0
 814 01bc 1C46     		mov	r4, r3
 815              	.L56:
 816 01be BC75     		strb	r4, [r7, #22]
 178:main.c        **** 
 179:main.c        ****     if ((sat_hi && (KI * i_next > KI * pi->i)) ||
 817              		.loc 1 179 0
 818 01c0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 819 01c2 002B     		cmp	r3, #0
 820 01c4 13D0     		beq	.L57
 821              		.loc 1 179 0 is_stmt 0 discriminator 1
 822 01c6 2C49     		ldr	r1, .L68+28
 823 01c8 386A     		ldr	r0, [r7, #32]	@ float
 824 01ca FFF7FEFF 		bl	__aeabi_fmul
 825 01ce 0346     		mov	r3, r0
 826 01d0 1C46     		mov	r4, r3
 827 01d2 FB68     		ldr	r3, [r7, #12]
 828 01d4 1B68     		ldr	r3, [r3]	@ float
 829 01d6 2849     		ldr	r1, .L68+28
 830 01d8 1846     		mov	r0, r3
 831 01da FFF7FEFF 		bl	__aeabi_fmul
 832 01de 0346     		mov	r3, r0
 833 01e0 1946     		mov	r1, r3
 834 01e2 2046     		mov	r0, r4
 835 01e4 FFF7FEFF 		bl	__aeabi_fcmpgt
 836 01e8 0346     		mov	r3, r0
 837 01ea 002B     		cmp	r3, #0
 838 01ec 19D1     		bne	.L59
 839              	.L57:
 840              		.loc 1 179 0 discriminator 3
 841 01ee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 842 01f0 002B     		cmp	r3, #0
 843 01f2 13D0     		beq	.L60
 180:main.c        ****         (sat_lo && (KI * i_next < KI * pi->i))) {
 844              		.loc 1 180 0 is_stmt 1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 19


 845 01f4 2049     		ldr	r1, .L68+28
 846 01f6 386A     		ldr	r0, [r7, #32]	@ float
 847 01f8 FFF7FEFF 		bl	__aeabi_fmul
 848 01fc 0346     		mov	r3, r0
 849 01fe 1C46     		mov	r4, r3
 850 0200 FB68     		ldr	r3, [r7, #12]
 851 0202 1B68     		ldr	r3, [r3]	@ float
 852 0204 1C49     		ldr	r1, .L68+28
 853 0206 1846     		mov	r0, r3
 854 0208 FFF7FEFF 		bl	__aeabi_fmul
 855 020c 0346     		mov	r3, r0
 856 020e 1946     		mov	r1, r3
 857 0210 2046     		mov	r0, r4
 858 0212 FFF7FEFF 		bl	__aeabi_fcmplt
 859 0216 0346     		mov	r3, r0
 860 0218 002B     		cmp	r3, #0
 861 021a 02D1     		bne	.L59
 862              	.L60:
 181:main.c        ****         /* donâ€™t integrate further into saturation */
 182:main.c        ****     } else {
 183:main.c        ****         pi->i = i_next;
 863              		.loc 1 183 0
 864 021c FB68     		ldr	r3, [r7, #12]
 865 021e 3A6A     		ldr	r2, [r7, #32]	@ float
 866 0220 1A60     		str	r2, [r3]	@ float
 867              	.L59:
 184:main.c        ****     }
 185:main.c        **** 
 186:main.c        ****     pi->u = u;
 868              		.loc 1 186 0
 869 0222 FB68     		ldr	r3, [r7, #12]
 870 0224 BA69     		ldr	r2, [r7, #24]	@ float
 871 0226 5A60     		str	r2, [r3, #4]	@ float
 187:main.c        ****     return (int)(u + (u>=0?0.5f:-0.5f));
 872              		.loc 1 187 0
 873 0228 4FF00001 		mov	r1, #0
 874 022c B869     		ldr	r0, [r7, #24]	@ float
 875 022e FFF7FEFF 		bl	__aeabi_fcmpge
 876 0232 0346     		mov	r3, r0
 877 0234 002B     		cmp	r3, #0
 878 0236 02D0     		beq	.L67
 879              		.loc 1 187 0 is_stmt 0 discriminator 1
 880 0238 4FF07C53 		mov	r3, #1056964608
 881 023c 01E0     		b	.L64
 882              	.L67:
 883              		.loc 1 187 0 discriminator 2
 884 023e 4FF03F43 		mov	r3, #-1090519040
 885              	.L64:
 886              		.loc 1 187 0 discriminator 4
 887 0242 B969     		ldr	r1, [r7, #24]	@ float
 888 0244 1846     		mov	r0, r3
 889 0246 FFF7FEFF 		bl	__aeabi_fadd
 890 024a 0346     		mov	r3, r0
 891 024c 1846     		mov	r0, r3
 892 024e FFF7FEFF 		bl	__aeabi_f2iz
 893 0252 0346     		mov	r3, r0
 894              	.L54:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 20


 188:main.c        **** }
 895              		.loc 1 188 0 is_stmt 1
 896 0254 1846     		mov	r0, r3
 897 0256 4437     		adds	r7, r7, #68
 898              		.cfi_def_cfa_offset 12
 899 0258 BD46     		mov	sp, r7
 900              		.cfi_def_cfa_register 13
 901              		@ sp needed
 902 025a 90BD     		pop	{r4, r7, pc}
 903              	.L69:
 904              		.align	2
 905              	.L68:
 906 025c 0AD7A33D 		.word	1034147594
 907 0260 6F12033C 		.word	1006834287
 908 0264 1F856B3F 		.word	1064011039
 909 0268 00007041 		.word	1097859072
 910 026c 000070C1 		.word	-1049624576
 911 0270 0000F041 		.word	1106247680
 912 0274 0000F0C1 		.word	-1041235968
 913 0278 00004040 		.word	1077936128
 914 027c E7FB6F41 		.word	1097858023
 915 0280 E7FB6FC1 		.word	-1049625625
 916              		.cfi_endproc
 917              	.LFE68:
 918              		.size	pi_step, .-pi_step
 919              		.section	.rodata
 920              		.align	2
 921              	.LC0:
 922 0000 00       		.byte	0
 923 0001 02       		.byte	2
 924 0002 00       		.byte	0
 925 0003 02       		.byte	2
 926 0004 00       		.byte	0
 927 0005 00       		.byte	0
 928 0006 01       		.byte	1
 929 0007 00       		.byte	0
 930 0008 02       		.byte	2
 931 0009 00       		.byte	0
 932 000a 02       		.byte	2
 933 000b 00       		.byte	0
 934 000c 00       		.byte	0
 935 000d 03       		.byte	3
 936 000e 00       		.byte	0
 937 000f 02       		.byte	2
 938 0010 00       		.byte	0
 939 0011 01       		.byte	1
 940 0012 00       		.byte	0
 941 0013 02       		.byte	2
 942 0014 00       		.byte	0
 943 0015 01       		.byte	1
 944 0016 00       		.byte	0
 945 0017 02       		.byte	2
 946 0018 00       		.byte	0
 947 0019 02       		.byte	2
 948 001a 00       		.byte	0
 949 001b 02       		.byte	2
 950 001c 00       		.byte	0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 21


 951 001d 01       		.byte	1
 952 001e 00       		.byte	0
 953 001f 03       		.byte	3
 954 0020 00       		.byte	0
 955 0021 02       		.byte	2
 956 0022 00       		.byte	0
 957 0023 01       		.byte	1
 958 0024 00       		.byte	0
 959 0025 00       		.byte	0
 960 0026 01       		.byte	1
 961 0027 00       		.byte	0
 962 0028 00       		.byte	0
 963 0029 00       		.byte	0
 964 002a 01       		.byte	1
 965 002b 00       		.byte	0
 966 002c 01       		.byte	1
 967 002d 00       		.byte	0
 968 002e 02       		.byte	2
 969 002f 00       		.byte	0
 970 0030 00       		.byte	0
 971 0031 02       		.byte	2
 972 0032 00       		.byte	0
 973 0033 01       		.byte	1
 974 0034 00       		.byte	0
 975 0035 02       		.byte	2
 976 0036 00       		.byte	0
 977 0037 06       		.byte	6
 978              		.section	.text.main,"ax",%progbits
 979              		.align	2
 980              		.global	main
 981              		.thumb
 982              		.thumb_func
 983              		.type	main, %function
 984              	main:
 985              	.LFB69:
 189:main.c        **** 
 190:main.c        **** int main(void)
 191:main.c        **** {
 986              		.loc 1 191 0
 987              		.cfi_startproc
 988              		@ args = 0, pretend = 0, frame = 112
 989              		@ frame_needed = 1, uses_anonymous_args = 0
 990 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 991              		.cfi_def_cfa_offset 20
 992              		.cfi_offset 4, -20
 993              		.cfi_offset 5, -16
 994              		.cfi_offset 6, -12
 995              		.cfi_offset 7, -8
 996              		.cfi_offset 14, -4
 997 0002 9DB0     		sub	sp, sp, #116
 998              		.cfi_def_cfa_offset 136
 999 0004 00AF     		add	r7, sp, #0
 1000              		.cfi_def_cfa_register 7
 192:main.c        ****     motor_enable(1u, 1u);
 1001              		.loc 1 192 0
 1002 0006 0121     		movs	r1, #1
 1003 0008 0120     		movs	r0, #1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 22


 1004 000a FFF7FEFF 		bl	motor_enable
 193:main.c        ****     CyGlobalIntEnable;
 1005              		.loc 1 193 0
 1006              		.syntax unified
 1007              	@ 193 "main.c" 1
 1008 000e 62B6     		CPSIE   i
 1009              	@ 0 "" 2
 194:main.c        **** 
 195:main.c        ****     /* ADC for sensors */
 196:main.c        ****     ADC_Start();
 1010              		.loc 1 196 0
 1011              		.thumb
 1012              		.syntax unified
 1013 0010 FFF7FEFF 		bl	ADC_Start
 197:main.c        ****     CyDelay(10);
 1014              		.loc 1 197 0
 1015 0014 0A20     		movs	r0, #10
 1016 0016 FFF7FEFF 		bl	CyDelay
 198:main.c        **** 
 199:main.c        ****     /* Encoders + 5 ms tick (distance only) */
 200:main.c        ****     Clock_QENC_Start();
 1017              		.loc 1 200 0
 1018 001a FFF7FEFF 		bl	Clock_QENC_Start
 201:main.c        ****     QuadDec_M1_Start(); QuadDec_M2_Start();
 1019              		.loc 1 201 0
 1020 001e FFF7FEFF 		bl	QuadDec_M1_Start
 1021 0022 FFF7FEFF 		bl	QuadDec_M2_Start
 202:main.c        ****     QuadDec_M1_SetCounter(0); QuadDec_M2_SetCounter(0);
 1022              		.loc 1 202 0
 1023 0026 0020     		movs	r0, #0
 1024 0028 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 1025 002c 0020     		movs	r0, #0
 1026 002e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 203:main.c        ****     Clock_QD_Start();
 1027              		.loc 1 203 0
 1028 0032 FFF7FEFF 		bl	Clock_QD_Start
 204:main.c        ****     Timer_QD_Start();  // 5 ms period in TopDesign
 1029              		.loc 1 204 0
 1030 0036 FFF7FEFF 		bl	Timer_QD_Start
 205:main.c        ****     isr_qd_StartEx(isr_qd_Handler);
 1031              		.loc 1 205 0
 1032 003a 9D48     		ldr	r0, .L129
 1033 003c FFF7FEFF 		bl	isr_qd_StartEx
 206:main.c        **** 
 207:main.c        ****     /* PWM & motor driver */
 208:main.c        ****     Clock_PWM_Start();
 1034              		.loc 1 208 0
 1035 0040 FFF7FEFF 		bl	Clock_PWM_Start
 209:main.c        ****     PWM_1_Start(); PWM_2_Start();
 1036              		.loc 1 209 0
 1037 0044 FFF7FEFF 		bl	PWM_1_Start
 1038 0048 FFF7FEFF 		bl	PWM_2_Start
 210:main.c        ****     PWM_1_WritePeriod(PWM_PERIOD);
 1039              		.loc 1 210 0
 1040 004c C820     		movs	r0, #200
 1041 004e FFF7FEFF 		bl	PWM_1_WritePeriod
 211:main.c        ****     PWM_2_WritePeriod(PWM_PERIOD);
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 23


 1042              		.loc 1 211 0
 1043 0052 C820     		movs	r0, #200
 1044 0054 FFF7FEFF 		bl	PWM_2_WritePeriod
 212:main.c        ****     set_motors_symmetric(0);
 1045              		.loc 1 212 0
 1046 0058 0020     		movs	r0, #0
 1047 005a FFF7FEFF 		bl	set_motors_symmetric
 213:main.c        ****     motor_enable(0u, 0u);
 1048              		.loc 1 213 0
 1049 005e 0021     		movs	r1, #0
 1050 0060 0020     		movs	r0, #0
 1051 0062 FFF7FEFF 		bl	motor_enable
 214:main.c        **** 
 215:main.c        ****     /* Directions module */
 216:main.c        ****     Directions_Init();
 1052              		.loc 1 216 0
 1053 0066 FFF7FEFF 		bl	Directions_Init
 217:main.c        ****     g_direction = 0u;
 1054              		.loc 1 217 0
 1055 006a 924B     		ldr	r3, .L129+4
 1056 006c 0022     		movs	r2, #0
 1057 006e 1A70     		strb	r2, [r3]
 218:main.c        **** 
 219:main.c        ****     /* Feed-forward cruise duty (kept) */
 220:main.c        ****     int center_duty_est = (int)((V_CRUISE_MM_S * 100) / VMAX_CONST_MM_S);
 1058              		.loc 1 220 0
 1059 0070 1423     		movs	r3, #20
 1060 0072 FB66     		str	r3, [r7, #108]
 221:main.c        ****     if (center_duty_est < 0) center_duty_est = 0;
 1061              		.loc 1 221 0
 1062 0074 FB6E     		ldr	r3, [r7, #108]
 1063 0076 002B     		cmp	r3, #0
 1064 0078 01DA     		bge	.L71
 1065              		.loc 1 221 0 is_stmt 0 discriminator 1
 1066 007a 0023     		movs	r3, #0
 1067 007c FB66     		str	r3, [r7, #108]
 1068              	.L71:
 222:main.c        ****     if (center_duty_est > 100) center_duty_est = 100;
 1069              		.loc 1 222 0 is_stmt 1
 1070 007e FB6E     		ldr	r3, [r7, #108]
 1071 0080 642B     		cmp	r3, #100
 1072 0082 01DD     		ble	.L72
 1073              		.loc 1 222 0 is_stmt 0 discriminator 1
 1074 0084 6423     		movs	r3, #100
 1075 0086 FB66     		str	r3, [r7, #108]
 1076              	.L72:
 223:main.c        **** 
 224:main.c        ****     /* PI state */
 225:main.c        ****     pi_t pi = { .i = 0.0f, .u = 0.0f, .t_loss = 0.0f };
 1077              		.loc 1 225 0 is_stmt 1
 1078 0088 4FF00003 		mov	r3, #0
 1079 008c 7B64     		str	r3, [r7, #68]	@ float
 1080 008e 4FF00003 		mov	r3, #0
 1081 0092 BB64     		str	r3, [r7, #72]	@ float
 1082 0094 4FF00003 		mov	r3, #0
 1083 0098 FB64     		str	r3, [r7, #76]	@ float
 226:main.c        ****     
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 24


 227:main.c        ****     CyDelay(1000);  // So the motors don't jump
 1084              		.loc 1 227 0
 1085 009a 4FF47A70 		mov	r0, #1000
 1086 009e FFF7FEFF 		bl	CyDelay
 228:main.c        ****     set_motors_with_trim_and_steer(100,10);
 1087              		.loc 1 228 0
 1088 00a2 0A21     		movs	r1, #10
 1089 00a4 6420     		movs	r0, #100
 1090 00a6 FFF7FEFF 		bl	set_motors_with_trim_and_steer
 229:main.c        ****     CyDelay(40);
 1091              		.loc 1 229 0
 1092 00aa 2820     		movs	r0, #40
 1093 00ac FFF7FEFF 		bl	CyDelay
 230:main.c        ****     set_motors_symmetric(0); 
 1094              		.loc 1 230 0
 1095 00b0 0020     		movs	r0, #0
 1096 00b2 FFF7FEFF 		bl	set_motors_symmetric
 231:main.c        ****     
 232:main.c        ****     
 233:main.c        ****     // Pathfinding array
 234:main.c        ****     /* 
 235:main.c        ****      * STRAIGHT -> 0, TURN LEFT -> 1, TURN RIGHT -> 2, TURN U_TURN -> 3,
 236:main.c        ****      * REACH -> 5, END -> 6
 237:main.c        ****      */
 238:main.c        ****     
 239:main.c        **** const uint8_t CMD_STATES[] = {
 1097              		.loc 1 239 0
 1098 00b6 804B     		ldr	r3, .L129+8
 1099 00b8 1C46     		mov	r4, r3
 1100 00ba 07F10C06 		add	r6, r7, #12
 1101 00be 04F1300E 		add	lr, r4, #48
 1102              	.L73:
 1103 00c2 3546     		mov	r5, r6
 1104 00c4 2346     		mov	r3, r4
 1105 00c6 1868     		ldr	r0, [r3]	@ unaligned
 1106 00c8 5968     		ldr	r1, [r3, #4]	@ unaligned
 1107 00ca 9A68     		ldr	r2, [r3, #8]	@ unaligned
 1108 00cc DB68     		ldr	r3, [r3, #12]	@ unaligned
 1109 00ce 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1110 00d0 1034     		adds	r4, r4, #16
 1111 00d2 1036     		adds	r6, r6, #16
 1112 00d4 7445     		cmp	r4, lr
 1113 00d6 F4D1     		bne	.L73
 1114 00d8 3346     		mov	r3, r6
 1115 00da 2246     		mov	r2, r4
 1116 00dc 1068     		ldr	r0, [r2]	@ unaligned
 1117 00de 5168     		ldr	r1, [r2, #4]	@ unaligned
 1118 00e0 03C3     		stmia	r3!, {r0, r1}
 240:main.c        **** 
 241:main.c        ****     0, // START
 242:main.c        ****     2, // RIGHT
 243:main.c        ****     0,
 244:main.c        ****     2, // RIGHT
 245:main.c        ****     0,
 246:main.c        ****     0,
 247:main.c        ****     1, // LEFT
 248:main.c        ****     0,
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 25


 249:main.c        ****     2, // RIGHT
 250:main.c        ****     0,
 251:main.c        ****     2, // RIGHT
 252:main.c        ****     0,
 253:main.c        ****     0,// 5, // REACH
 254:main.c        ****     3, // UTURN
 255:main.c        ****     0,
 256:main.c        ****     2, // RIGHT
 257:main.c        ****     0,
 258:main.c        ****     1, // LEFT
 259:main.c        ****     0,
 260:main.c        ****     2, // RIGHT
 261:main.c        ****     0,
 262:main.c        ****     1, // LEFT
 263:main.c        ****     0,// 5, // REACH
 264:main.c        ****     2, // RIGHT
 265:main.c        ****     0,
 266:main.c        ****     2, // RIGHT
 267:main.c        ****     0,
 268:main.c        ****     2, // RIGHT
 269:main.c        ****     0,
 270:main.c        ****     1, // LEFT
 271:main.c        ****     0,// 5, // REACH
 272:main.c        ****     3, // UTURN
 273:main.c        ****     0,
 274:main.c        ****     2, // RIGHT
 275:main.c        ****     0,
 276:main.c        ****     1, // LEFT
 277:main.c        ****     0,
 278:main.c        ****     0,
 279:main.c        ****     1, // LEFT
 280:main.c        ****     0,
 281:main.c        ****     0,
 282:main.c        ****     0,
 283:main.c        ****     1, // LEFT
 284:main.c        ****     0,// 5, // REACH
 285:main.c        ****     1, // LEFT
 286:main.c        ****     0,
 287:main.c        ****     2, // RIGHT
 288:main.c        ****     0,
 289:main.c        ****     0,
 290:main.c        ****     2, // RIGHT
 291:main.c        ****     0,
 292:main.c        ****     1, // LEFT
 293:main.c        ****     0,
 294:main.c        ****     2, // RIGHT
 295:main.c        ****     0,
 296:main.c        ****     6  // END
 297:main.c        **** }; 
 298:main.c        ****     //int8_t indexMAX = 50;  // Loop index
 299:main.c        ****     
 300:main.c        ****     // For Testing
 301:main.c        ****     //const uint8_t CMD_STATES[] = {0,2};
 302:main.c        ****     //int8_t indexMAX = 2;  // Loop index
 303:main.c        ****     
 304:main.c        ****     const uint16_t CMD_STATES_LEN = sizeof(CMD_STATES) / sizeof(CMD_STATES[0]);
 1119              		.loc 1 304 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 26


 1120 00e2 3823     		movs	r3, #56
 1121 00e4 A7F85E30 		strh	r3, [r7, #94]	@ movhi
 305:main.c        ****     
 306:main.c        ****     int8_t i = 0;  // Loop index
 1122              		.loc 1 306 0
 1123 00e8 0023     		movs	r3, #0
 1124 00ea 87F86B30 		strb	r3, [r7, #107]
 307:main.c        ****     int32_t target_dist = 0;
 1125              		.loc 1 307 0
 1126 00ee 0023     		movs	r3, #0
 1127 00f0 7B66     		str	r3, [r7, #100]
 308:main.c        ****     
 309:main.c        ****     int8_t straight_complete = 0;
 1128              		.loc 1 309 0
 1129 00f2 0023     		movs	r3, #0
 1130 00f4 87F86330 		strb	r3, [r7, #99]
 310:main.c        ****     int8_t turn_complete = 0;
 1131              		.loc 1 310 0
 1132 00f8 0023     		movs	r3, #0
 1133 00fa 87F86230 		strb	r3, [r7, #98]
 311:main.c        ****     int8_t uTurn_complete = 0;
 1134              		.loc 1 311 0
 1135 00fe 0023     		movs	r3, #0
 1136 0100 87F86130 		strb	r3, [r7, #97]
 312:main.c        ****     int8_t fruit_complete = 0;
 1137              		.loc 1 312 0
 1138 0104 0023     		movs	r3, #0
 1139 0106 87F86030 		strb	r3, [r7, #96]
 1140              	.L128:
 1141              	.LBB3:
 313:main.c        **** 
 314:main.c        ****     for(;;){
 315:main.c        ****         
 316:main.c        ****         // This check will make the robot stay stopped
 317:main.c        ****         // once the path is complete.
 318:main.c        ****         /*if (g_stop_now) {
 319:main.c        ****             set_motors_symmetric(0);
 320:main.c        ****             motor_enable(1u, 1u);
 321:main.c        ****             continue;
 322:main.c        ****         } */
 323:main.c        **** 
 324:main.c        ****         /* Read sensors + maybe request turn */
 325:main.c        ****         uint16_t V4_pp=0, V5_pp=0, V6_pp=0;
 1142              		.loc 1 325 0
 1143 010a 0023     		movs	r3, #0
 1144 010c 7B81     		strh	r3, [r7, #10]	@ movhi
 1145 010e 0023     		movs	r3, #0
 1146 0110 3B81     		strh	r3, [r7, #8]	@ movhi
 1147 0112 0023     		movs	r3, #0
 1148 0114 FB80     		strh	r3, [r7, #6]	@ movhi
 326:main.c        ****         light_sensors_update_and_maybe_request_turn(&V4_pp, &V5_pp, &V6_pp);
 1149              		.loc 1 326 0
 1150 0116 BA1D     		adds	r2, r7, #6
 1151 0118 07F10801 		add	r1, r7, #8
 1152 011c 07F10A03 		add	r3, r7, #10
 1153 0120 1846     		mov	r0, r3
 1154 0122 FFF7FEFF 		bl	light_sensors_update_and_maybe_request_turn
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 27


 327:main.c        ****         
 328:main.c        **** 
 329:main.c        **** //
 330:main.c        **** //        /* Straight run with PI steering */
 331:main.c        **** //        
 332:main.c        **** //        if(turn_cooldown_ticks > 0) {
 333:main.c        **** //            turn_cooldown_ticks--;
 334:main.c        **** //        }
 335:main.c        **** //        
 336:main.c        **** //        /*
 337:main.c        **** //        // Add bias when back right sensor is under line
 338:main.c        **** //        uint16_t V5 = Sensor_ComputePeakToPeak(4);
 339:main.c        **** //        sen5_on_line = (V5 > 10 && V5 < 100) ? 1u : 0u;
 340:main.c        **** //        if (sen5_on_line == 1) {
 341:main.c        **** //            Motors_SetPercent(0,25);
 342:main.c        **** //            //set_motors_with_trim_and_steer(50,50); 
 343:main.c        **** //            CyDelay(10);
 344:main.c        **** //        } */
 345:main.c        ****         
 346:main.c        ****         
 347:main.c        **** //        int steer = pi_step(&pi, V4_pp, V5_pp, V6_pp);
 348:main.c        **** //        set_motors_with_trim_and_steer(center_duty_est, steer);
 349:main.c        **** //        
 350:main.c        **** //        
 351:main.c        **** //        /* Distance stop */    // g_dist_mm = total distance traveled
 352:main.c        **** //        g_stop_now = (g_dist_mm >= TARGET_DIST_MM) ? 1u : 0u;
 353:main.c        **** //        if (g_stop_now) {
 354:main.c        **** //            set_motors_symmetric(0);
 355:main.c        **** //            motor_enable(1u, 1u);
 356:main.c        **** //            g_direction = 0u;
 357:main.c        **** //            continue;
 358:main.c        **** //        }
 359:main.c        ****         
 360:main.c        ****         
 361:main.c        ****         
 362:main.c        ****         
 363:main.c        ****         /* Straight run with PI steering */        
 364:main.c        ****         if(turn_cooldown_ticks > 0) {
 1155              		.loc 1 364 0
 1156 0126 654B     		ldr	r3, .L129+12
 1157 0128 1B88     		ldrh	r3, [r3]
 1158 012a 002B     		cmp	r3, #0
 1159 012c 05D0     		beq	.L74
 365:main.c        ****             turn_cooldown_ticks--;
 1160              		.loc 1 365 0
 1161 012e 634B     		ldr	r3, .L129+12
 1162 0130 1B88     		ldrh	r3, [r3]
 1163 0132 013B     		subs	r3, r3, #1
 1164 0134 9AB2     		uxth	r2, r3
 1165 0136 614B     		ldr	r3, .L129+12
 1166 0138 1A80     		strh	r2, [r3]	@ movhi
 1167              	.L74:
 366:main.c        ****        }
 367:main.c        ****         
 368:main.c        ****         
 369:main.c        ****         // PATHFINDING ALGORITHM
 370:main.c        ****         
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 28


 371:main.c        ****         if (CMD_STATES[i] == 0) {
 1168              		.loc 1 371 0
 1169 013a 97F96B30 		ldrsb	r3, [r7, #107]
 1170 013e 07F17002 		add	r2, r7, #112
 1171 0142 1344     		add	r3, r3, r2
 1172 0144 13F8643C 		ldrb	r3, [r3, #-100]	@ zero_extendqisi2
 1173 0148 002B     		cmp	r3, #0
 1174 014a 44D1     		bne	.L75
 1175              	.LBB4:
 372:main.c        ****             // Go STRAIGHT
 373:main.c        ****             int steer = pi_step(&pi, V4_pp, V5_pp, V6_pp);
 1176              		.loc 1 373 0
 1177 014c 7989     		ldrh	r1, [r7, #10]
 1178 014e 3A89     		ldrh	r2, [r7, #8]
 1179 0150 FB88     		ldrh	r3, [r7, #6]
 1180 0152 07F14400 		add	r0, r7, #68
 1181 0156 FFF7FEFF 		bl	pi_step
 1182 015a B865     		str	r0, [r7, #88]
 374:main.c        ****             set_motors_with_trim_and_steer(center_duty_est, steer);
 1183              		.loc 1 374 0
 1184 015c B96D     		ldr	r1, [r7, #88]
 1185 015e F86E     		ldr	r0, [r7, #108]
 1186 0160 FFF7FEFF 		bl	set_motors_with_trim_and_steer
 375:main.c        ****             
 376:main.c        ****             uint16_t V1 = Sensor_ComputePeakToPeak(0);
 1187              		.loc 1 376 0
 1188 0164 0020     		movs	r0, #0
 1189 0166 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 1190 016a 0346     		mov	r3, r0
 1191 016c A7F85630 		strh	r3, [r7, #86]	@ movhi
 377:main.c        ****             sen1_on_line = (V1 > 10 && V1 < 100) ? 1u : 0u;
 1192              		.loc 1 377 0
 1193 0170 B7F85630 		ldrh	r3, [r7, #86]
 1194 0174 0A2B     		cmp	r3, #10
 1195 0176 05D9     		bls	.L76
 1196              		.loc 1 377 0 is_stmt 0 discriminator 1
 1197 0178 B7F85630 		ldrh	r3, [r7, #86]
 1198 017c 632B     		cmp	r3, #99
 1199 017e 01D8     		bhi	.L76
 1200              		.loc 1 377 0 discriminator 3
 1201 0180 0122     		movs	r2, #1
 1202 0182 00E0     		b	.L77
 1203              	.L76:
 1204              		.loc 1 377 0 discriminator 4
 1205 0184 0022     		movs	r2, #0
 1206              	.L77:
 1207              		.loc 1 377 0 discriminator 6
 1208 0186 4E4B     		ldr	r3, .L129+16
 1209 0188 1A70     		strb	r2, [r3]
 378:main.c        ****             uint16_t V2 = Sensor_ComputePeakToPeak(1);
 1210              		.loc 1 378 0 is_stmt 1 discriminator 6
 1211 018a 0120     		movs	r0, #1
 1212 018c FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 1213 0190 0346     		mov	r3, r0
 1214 0192 A7F85430 		strh	r3, [r7, #84]	@ movhi
 379:main.c        ****             sen2_on_line = (V2 > 10 && V2 < 100) ? 1u : 0u;
 1215              		.loc 1 379 0 discriminator 6
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 29


 1216 0196 B7F85430 		ldrh	r3, [r7, #84]
 1217 019a 0A2B     		cmp	r3, #10
 1218 019c 05D9     		bls	.L78
 1219              		.loc 1 379 0 is_stmt 0 discriminator 1
 1220 019e B7F85430 		ldrh	r3, [r7, #84]
 1221 01a2 632B     		cmp	r3, #99
 1222 01a4 01D8     		bhi	.L78
 1223              		.loc 1 379 0 discriminator 3
 1224 01a6 0122     		movs	r2, #1
 1225 01a8 00E0     		b	.L79
 1226              	.L78:
 1227              		.loc 1 379 0 discriminator 4
 1228 01aa 0022     		movs	r2, #0
 1229              	.L79:
 1230              		.loc 1 379 0 discriminator 6
 1231 01ac 454B     		ldr	r3, .L129+20
 1232 01ae 1A70     		strb	r2, [r3]
 380:main.c        ****             if (sen1_on_line == 1u || sen2_on_line == 1u) {
 1233              		.loc 1 380 0 is_stmt 1 discriminator 6
 1234 01b0 434B     		ldr	r3, .L129+16
 1235 01b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1236 01b4 012B     		cmp	r3, #1
 1237 01b6 04D0     		beq	.L80
 1238              		.loc 1 380 0 is_stmt 0 discriminator 1
 1239 01b8 424B     		ldr	r3, .L129+20
 1240 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1241 01bc 012B     		cmp	r3, #1
 1242 01be 40F0B481 		bne	.L82
 1243              	.L80:
 381:main.c        ****                 straight_complete = 1;
 1244              		.loc 1 381 0 is_stmt 1
 1245 01c2 0123     		movs	r3, #1
 1246 01c4 87F86330 		strb	r3, [r7, #99]
 382:main.c        ****                 CyDelay(250);
 1247              		.loc 1 382 0
 1248 01c8 FA20     		movs	r0, #250
 1249 01ca FFF7FEFF 		bl	CyDelay
 383:main.c        ****                 set_motors_symmetric(0); 
 1250              		.loc 1 383 0
 1251 01ce 0020     		movs	r0, #0
 1252 01d0 FFF7FEFF 		bl	set_motors_symmetric
 1253 01d4 A9E1     		b	.L82
 1254              	.L75:
 1255              	.LBE4:
 384:main.c        ****                 
 385:main.c        ****                 
 386:main.c        ****             }
 387:main.c        ****             
 388:main.c        ****         } else if((CMD_STATES[i] == 1)) {
 1256              		.loc 1 388 0
 1257 01d6 97F96B30 		ldrsb	r3, [r7, #107]
 1258 01da 07F17002 		add	r2, r7, #112
 1259 01de 1344     		add	r3, r3, r2
 1260 01e0 13F8643C 		ldrb	r3, [r3, #-100]	@ zero_extendqisi2
 1261 01e4 012B     		cmp	r3, #1
 1262 01e6 73D1     		bne	.L83
 389:main.c        ****             // Go LEFT
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 30


 390:main.c        ****             
 391:main.c        ****             g_direction = 1u;
 1263              		.loc 1 391 0
 1264 01e8 324B     		ldr	r3, .L129+4
 1265 01ea 0122     		movs	r2, #1
 1266 01ec 1A70     		strb	r2, [r3]
 392:main.c        ****             /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 393:main.c        ****                 /* Arm once on the first detection (edge 0 -> 1/2) */
 394:main.c        ****                 if ((g_direction == 1u || g_direction == 2u) && dir_latched_side == 0){
 1267              		.loc 1 394 0
 1268 01ee 314B     		ldr	r3, .L129+4
 1269 01f0 1B78     		ldrb	r3, [r3]
 1270 01f2 DBB2     		uxtb	r3, r3
 1271 01f4 012B     		cmp	r3, #1
 1272 01f6 04D0     		beq	.L84
 1273              		.loc 1 394 0 is_stmt 0 discriminator 2
 1274 01f8 2E4B     		ldr	r3, .L129+4
 1275 01fa 1B78     		ldrb	r3, [r3]
 1276 01fc DBB2     		uxtb	r3, r3
 1277 01fe 022B     		cmp	r3, #2
 1278 0200 0BD1     		bne	.L85
 1279              	.L84:
 1280              		.loc 1 394 0 discriminator 3
 1281 0202 314B     		ldr	r3, .L129+24
 1282 0204 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1283 0206 002B     		cmp	r3, #0
 1284 0208 07D1     		bne	.L85
 395:main.c        ****                     dir_latched_side = g_direction;          /* remember side */
 1285              		.loc 1 395 0 is_stmt 1
 1286 020a 2A4B     		ldr	r3, .L129+4
 1287 020c 1B78     		ldrb	r3, [r3]
 1288 020e DAB2     		uxtb	r2, r3
 1289 0210 2D4B     		ldr	r3, .L129+24
 1290 0212 1A70     		strb	r2, [r3]
 396:main.c        ****                     dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 1291              		.loc 1 396 0
 1292 0214 2D4B     		ldr	r3, .L129+28
 1293 0216 0D22     		movs	r2, #13
 1294 0218 1A80     		strh	r2, [r3]	@ movhi
 1295              	.L85:
 397:main.c        ****                     //CyDelay(50);
 398:main.c        ****                 }
 399:main.c        ****                 /* If request cleared during delay, cancel gracefully */
 400:main.c        ****                 if (g_direction == 0u && dir_latched_side != 0){
 1296              		.loc 1 400 0
 1297 021a 264B     		ldr	r3, .L129+4
 1298 021c 1B78     		ldrb	r3, [r3]
 1299 021e DBB2     		uxtb	r3, r3
 1300 0220 002B     		cmp	r3, #0
 1301 0222 09D1     		bne	.L86
 1302              		.loc 1 400 0 is_stmt 0 discriminator 1
 1303 0224 284B     		ldr	r3, .L129+24
 1304 0226 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1305 0228 002B     		cmp	r3, #0
 1306 022a 05D0     		beq	.L86
 401:main.c        ****                     dir_latched_side = 0;
 1307              		.loc 1 401 0 is_stmt 1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 31


 1308 022c 264B     		ldr	r3, .L129+24
 1309 022e 0022     		movs	r2, #0
 1310 0230 1A70     		strb	r2, [r3]
 402:main.c        ****                     dir_delay_ticks  = 0;
 1311              		.loc 1 402 0
 1312 0232 264B     		ldr	r3, .L129+28
 1313 0234 0022     		movs	r2, #0
 1314 0236 1A80     		strh	r2, [r3]	@ movhi
 1315              	.L86:
 403:main.c        ****                 }
 404:main.c        **** 
 405:main.c        ****                 if (g_direction == 1u || g_direction == 2u){
 1316              		.loc 1 405 0
 1317 0238 1E4B     		ldr	r3, .L129+4
 1318 023a 1B78     		ldrb	r3, [r3]
 1319 023c DBB2     		uxtb	r3, r3
 1320 023e 012B     		cmp	r3, #1
 1321 0240 04D0     		beq	.L87
 1322              		.loc 1 405 0 is_stmt 0 discriminator 1
 1323 0242 1C4B     		ldr	r3, .L129+4
 1324 0244 1B78     		ldrb	r3, [r3]
 1325 0246 DBB2     		uxtb	r3, r3
 1326 0248 022B     		cmp	r3, #2
 1327 024a 25D1     		bne	.L88
 1328              	.L87:
 406:main.c        ****                     if (dir_delay_ticks > 0){
 1329              		.loc 1 406 0 is_stmt 1
 1330 024c 1F4B     		ldr	r3, .L129+28
 1331 024e 1B88     		ldrh	r3, [r3]
 1332 0250 002B     		cmp	r3, #0
 1333 0252 06D0     		beq	.L89
 407:main.c        ****                         /* Still delaying: keep doing normal straight PI */
 408:main.c        ****                         dir_delay_ticks--;
 1334              		.loc 1 408 0
 1335 0254 1D4B     		ldr	r3, .L129+28
 1336 0256 1B88     		ldrh	r3, [r3]
 1337 0258 013B     		subs	r3, r3, #1
 1338 025a 9AB2     		uxth	r2, r3
 1339 025c 1B4B     		ldr	r3, .L129+28
 1340 025e 1A80     		strh	r2, [r3]	@ movhi
 1341 0260 1AE0     		b	.L88
 1342              	.L89:
 409:main.c        ****                     } else {
 410:main.c        ****                         /* Delay elapsed: perform the maneuver */
 411:main.c        ****                         Directions_Handle(&g_direction);
 1343              		.loc 1 411 0
 1344 0262 1448     		ldr	r0, .L129+4
 1345 0264 FFF7FEFF 		bl	Directions_Handle
 412:main.c        **** 
 413:main.c        ****                         /* When turn completes, Directions sets g_direction back to 0 */
 414:main.c        ****                         if (g_direction == 0u){
 1346              		.loc 1 414 0
 1347 0268 124B     		ldr	r3, .L129+4
 1348 026a 1B78     		ldrb	r3, [r3]
 1349 026c DBB2     		uxtb	r3, r3
 1350 026e 002B     		cmp	r3, #0
 1351 0270 0ED1     		bne	.L90
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 32


 415:main.c        ****                             pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 1352              		.loc 1 415 0
 1353 0272 4FF00003 		mov	r3, #0
 1354 0276 7B64     		str	r3, [r7, #68]	@ float
 1355 0278 4FF00003 		mov	r3, #0
 1356 027c BB64     		str	r3, [r7, #72]	@ float
 1357 027e 4FF00003 		mov	r3, #0
 1358 0282 FB64     		str	r3, [r7, #76]	@ float
 416:main.c        ****                             dir_latched_side = 0;                        /* ready next time */
 1359              		.loc 1 416 0
 1360 0284 104B     		ldr	r3, .L129+24
 1361 0286 0022     		movs	r2, #0
 1362 0288 1A70     		strb	r2, [r3]
 417:main.c        ****                             
 418:main.c        ****                             
 419:main.c        ****                             turn_complete = 1;
 1363              		.loc 1 419 0
 1364 028a 0123     		movs	r3, #1
 1365 028c 87F86230 		strb	r3, [r7, #98]
 1366              	.L90:
 420:main.c        ****                         }
 421:main.c        ****                         CyDelay(LOOP_DT_MS);
 1367              		.loc 1 421 0
 1368 0290 0820     		movs	r0, #8
 1369 0292 FFF7FEFF 		bl	CyDelay
 422:main.c        ****                         continue;  /* skip the rest this tick */
 1370              		.loc 1 422 0
 1371 0296 C4E1     		b	.L127
 1372              	.L88:
 423:main.c        ****                     }
 424:main.c        ****                 }
 425:main.c        ****                 /* ---------------- end turn handling with delay ---------------- */
 426:main.c        ****                 /* Straight run with PI steering */
 427:main.c        ****         
 428:main.c        ****         if(turn_cooldown_ticks > 0) {
 1373              		.loc 1 428 0
 1374 0298 084B     		ldr	r3, .L129+12
 1375 029a 1B88     		ldrh	r3, [r3]
 1376 029c 002B     		cmp	r3, #0
 1377 029e 00F04481 		beq	.L82
 429:main.c        ****             turn_cooldown_ticks--;
 1378              		.loc 1 429 0
 1379 02a2 064B     		ldr	r3, .L129+12
 1380 02a4 1B88     		ldrh	r3, [r3]
 1381 02a6 013B     		subs	r3, r3, #1
 1382 02a8 9AB2     		uxth	r2, r3
 1383 02aa 044B     		ldr	r3, .L129+12
 1384 02ac 1A80     		strh	r2, [r3]	@ movhi
 1385 02ae 3CE1     		b	.L82
 1386              	.L130:
 1387              		.align	2
 1388              	.L129:
 1389 02b0 00000000 		.word	isr_qd_Handler
 1390 02b4 06000000 		.word	g_direction
 1391 02b8 00000000 		.word	.LC0
 1392 02bc 10000000 		.word	turn_cooldown_ticks
 1393 02c0 00000000 		.word	sen1_on_line
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 33


 1394 02c4 01000000 		.word	sen2_on_line
 1395 02c8 0E000000 		.word	dir_latched_side
 1396 02cc 0C000000 		.word	dir_delay_ticks
 1397              	.L83:
 430:main.c        ****         }
 431:main.c        ****                 
 432:main.c        ****             
 433:main.c        ****         } else if((CMD_STATES[i] == 2)) {
 1398              		.loc 1 433 0
 1399 02d0 97F96B30 		ldrsb	r3, [r7, #107]
 1400 02d4 07F17002 		add	r2, r7, #112
 1401 02d8 1344     		add	r3, r3, r2
 1402 02da 13F8643C 		ldrb	r3, [r3, #-100]	@ zero_extendqisi2
 1403 02de 022B     		cmp	r3, #2
 1404 02e0 63D1     		bne	.L93
 434:main.c        ****             // Go RIGHT
 435:main.c        ****             g_direction = 2u;
 1405              		.loc 1 435 0
 1406 02e2 A94B     		ldr	r3, .L131
 1407 02e4 0222     		movs	r2, #2
 1408 02e6 1A70     		strb	r2, [r3]
 436:main.c        ****             /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 437:main.c        ****                 /* Arm once on the first detection (edge 0 -> 1/2) */
 438:main.c        ****                 if ((g_direction == 1u || g_direction == 2u) && dir_latched_side == 0){
 1409              		.loc 1 438 0
 1410 02e8 A74B     		ldr	r3, .L131
 1411 02ea 1B78     		ldrb	r3, [r3]
 1412 02ec DBB2     		uxtb	r3, r3
 1413 02ee 012B     		cmp	r3, #1
 1414 02f0 04D0     		beq	.L94
 1415              		.loc 1 438 0 is_stmt 0 discriminator 2
 1416 02f2 A54B     		ldr	r3, .L131
 1417 02f4 1B78     		ldrb	r3, [r3]
 1418 02f6 DBB2     		uxtb	r3, r3
 1419 02f8 022B     		cmp	r3, #2
 1420 02fa 0BD1     		bne	.L95
 1421              	.L94:
 1422              		.loc 1 438 0 discriminator 3
 1423 02fc A34B     		ldr	r3, .L131+4
 1424 02fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1425 0300 002B     		cmp	r3, #0
 1426 0302 07D1     		bne	.L95
 439:main.c        ****                     dir_latched_side = g_direction;          /* remember side */
 1427              		.loc 1 439 0 is_stmt 1
 1428 0304 A04B     		ldr	r3, .L131
 1429 0306 1B78     		ldrb	r3, [r3]
 1430 0308 DAB2     		uxtb	r2, r3
 1431 030a A04B     		ldr	r3, .L131+4
 1432 030c 1A70     		strb	r2, [r3]
 440:main.c        ****                     dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 1433              		.loc 1 440 0
 1434 030e A04B     		ldr	r3, .L131+8
 1435 0310 0D22     		movs	r2, #13
 1436 0312 1A80     		strh	r2, [r3]	@ movhi
 1437              	.L95:
 441:main.c        ****                     //CyDelay(50);
 442:main.c        ****                 }
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 34


 443:main.c        ****                 /* If request cleared during delay, cancel gracefully */
 444:main.c        ****                 if (g_direction == 0u && dir_latched_side != 0){
 1438              		.loc 1 444 0
 1439 0314 9C4B     		ldr	r3, .L131
 1440 0316 1B78     		ldrb	r3, [r3]
 1441 0318 DBB2     		uxtb	r3, r3
 1442 031a 002B     		cmp	r3, #0
 1443 031c 09D1     		bne	.L96
 1444              		.loc 1 444 0 is_stmt 0 discriminator 1
 1445 031e 9B4B     		ldr	r3, .L131+4
 1446 0320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1447 0322 002B     		cmp	r3, #0
 1448 0324 05D0     		beq	.L96
 445:main.c        ****                     dir_latched_side = 0;
 1449              		.loc 1 445 0 is_stmt 1
 1450 0326 994B     		ldr	r3, .L131+4
 1451 0328 0022     		movs	r2, #0
 1452 032a 1A70     		strb	r2, [r3]
 446:main.c        ****                     dir_delay_ticks  = 0;
 1453              		.loc 1 446 0
 1454 032c 984B     		ldr	r3, .L131+8
 1455 032e 0022     		movs	r2, #0
 1456 0330 1A80     		strh	r2, [r3]	@ movhi
 1457              	.L96:
 447:main.c        ****                 }
 448:main.c        **** 
 449:main.c        ****                 if (g_direction == 1u || g_direction == 2u){
 1458              		.loc 1 449 0
 1459 0332 954B     		ldr	r3, .L131
 1460 0334 1B78     		ldrb	r3, [r3]
 1461 0336 DBB2     		uxtb	r3, r3
 1462 0338 012B     		cmp	r3, #1
 1463 033a 04D0     		beq	.L97
 1464              		.loc 1 449 0 is_stmt 0 discriminator 1
 1465 033c 924B     		ldr	r3, .L131
 1466 033e 1B78     		ldrb	r3, [r3]
 1467 0340 DBB2     		uxtb	r3, r3
 1468 0342 022B     		cmp	r3, #2
 1469 0344 25D1     		bne	.L98
 1470              	.L97:
 450:main.c        ****                     if (dir_delay_ticks > 0){
 1471              		.loc 1 450 0 is_stmt 1
 1472 0346 924B     		ldr	r3, .L131+8
 1473 0348 1B88     		ldrh	r3, [r3]
 1474 034a 002B     		cmp	r3, #0
 1475 034c 06D0     		beq	.L99
 451:main.c        ****                         /* Still delaying: keep doing normal straight PI */
 452:main.c        ****                         dir_delay_ticks--;
 1476              		.loc 1 452 0
 1477 034e 904B     		ldr	r3, .L131+8
 1478 0350 1B88     		ldrh	r3, [r3]
 1479 0352 013B     		subs	r3, r3, #1
 1480 0354 9AB2     		uxth	r2, r3
 1481 0356 8E4B     		ldr	r3, .L131+8
 1482 0358 1A80     		strh	r2, [r3]	@ movhi
 1483 035a 1AE0     		b	.L98
 1484              	.L99:
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 35


 453:main.c        ****                     } else {
 454:main.c        ****                         /* Delay elapsed: perform the maneuver */
 455:main.c        ****                         Directions_Handle(&g_direction);
 1485              		.loc 1 455 0
 1486 035c 8A48     		ldr	r0, .L131
 1487 035e FFF7FEFF 		bl	Directions_Handle
 456:main.c        **** 
 457:main.c        ****                         /* When turn completes, Directions sets g_direction back to 0 */
 458:main.c        ****                         if (g_direction == 0u){
 1488              		.loc 1 458 0
 1489 0362 894B     		ldr	r3, .L131
 1490 0364 1B78     		ldrb	r3, [r3]
 1491 0366 DBB2     		uxtb	r3, r3
 1492 0368 002B     		cmp	r3, #0
 1493 036a 0ED1     		bne	.L100
 459:main.c        ****                             pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 1494              		.loc 1 459 0
 1495 036c 4FF00003 		mov	r3, #0
 1496 0370 7B64     		str	r3, [r7, #68]	@ float
 1497 0372 4FF00003 		mov	r3, #0
 1498 0376 BB64     		str	r3, [r7, #72]	@ float
 1499 0378 4FF00003 		mov	r3, #0
 1500 037c FB64     		str	r3, [r7, #76]	@ float
 460:main.c        ****                             dir_latched_side = 0;                        /* ready next time */
 1501              		.loc 1 460 0
 1502 037e 834B     		ldr	r3, .L131+4
 1503 0380 0022     		movs	r2, #0
 1504 0382 1A70     		strb	r2, [r3]
 461:main.c        ****                             
 462:main.c        ****                            
 463:main.c        ****                             turn_complete = 1;
 1505              		.loc 1 463 0
 1506 0384 0123     		movs	r3, #1
 1507 0386 87F86230 		strb	r3, [r7, #98]
 1508              	.L100:
 464:main.c        ****                         }
 465:main.c        ****                         CyDelay(LOOP_DT_MS);
 1509              		.loc 1 465 0
 1510 038a 0820     		movs	r0, #8
 1511 038c FFF7FEFF 		bl	CyDelay
 466:main.c        ****                         continue;  /* skip the rest this tick */
 1512              		.loc 1 466 0
 1513 0390 47E1     		b	.L127
 1514              	.L98:
 467:main.c        ****                     }
 468:main.c        ****                 }
 469:main.c        ****                 /* ---------------- end turn handling with delay ---------------- */
 470:main.c        ****                 /* Straight run with PI steering */
 471:main.c        ****         
 472:main.c        ****         if(turn_cooldown_ticks > 0) {
 1515              		.loc 1 472 0
 1516 0392 804B     		ldr	r3, .L131+12
 1517 0394 1B88     		ldrh	r3, [r3]
 1518 0396 002B     		cmp	r3, #0
 1519 0398 00F0C780 		beq	.L82
 473:main.c        ****             turn_cooldown_ticks--;
 1520              		.loc 1 473 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 36


 1521 039c 7D4B     		ldr	r3, .L131+12
 1522 039e 1B88     		ldrh	r3, [r3]
 1523 03a0 013B     		subs	r3, r3, #1
 1524 03a2 9AB2     		uxth	r2, r3
 1525 03a4 7B4B     		ldr	r3, .L131+12
 1526 03a6 1A80     		strh	r2, [r3]	@ movhi
 1527 03a8 BFE0     		b	.L82
 1528              	.L93:
 474:main.c        ****         }
 475:main.c        ****             
 476:main.c        ****         } else if((CMD_STATES[i] == 3)) {
 1529              		.loc 1 476 0
 1530 03aa 97F96B30 		ldrsb	r3, [r7, #107]
 1531 03ae 07F17002 		add	r2, r7, #112
 1532 03b2 1344     		add	r3, r3, r2
 1533 03b4 13F8643C 		ldrb	r3, [r3, #-100]	@ zero_extendqisi2
 1534 03b8 032B     		cmp	r3, #3
 1535 03ba 6CD1     		bne	.L102
 477:main.c        ****             // Do U-TURN
 478:main.c        ****             g_direction = 3u;
 1536              		.loc 1 478 0
 1537 03bc 724B     		ldr	r3, .L131
 1538 03be 0322     		movs	r2, #3
 1539 03c0 1A70     		strb	r2, [r3]
 479:main.c        ****             /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 480:main.c        ****                 /* Arm once on the first detection (edge 0 -> 1/2) */
 481:main.c        ****                 if ((g_direction == 1u || g_direction == 2u || g_direction == 3u) && dir_latched_si
 1540              		.loc 1 481 0
 1541 03c2 714B     		ldr	r3, .L131
 1542 03c4 1B78     		ldrb	r3, [r3]
 1543 03c6 DBB2     		uxtb	r3, r3
 1544 03c8 012B     		cmp	r3, #1
 1545 03ca 09D0     		beq	.L103
 1546              		.loc 1 481 0 is_stmt 0 discriminator 2
 1547 03cc 6E4B     		ldr	r3, .L131
 1548 03ce 1B78     		ldrb	r3, [r3]
 1549 03d0 DBB2     		uxtb	r3, r3
 1550 03d2 022B     		cmp	r3, #2
 1551 03d4 04D0     		beq	.L103
 1552              		.loc 1 481 0 discriminator 4
 1553 03d6 6C4B     		ldr	r3, .L131
 1554 03d8 1B78     		ldrb	r3, [r3]
 1555 03da DBB2     		uxtb	r3, r3
 1556 03dc 032B     		cmp	r3, #3
 1557 03de 0BD1     		bne	.L104
 1558              	.L103:
 1559              		.loc 1 481 0 discriminator 5
 1560 03e0 6A4B     		ldr	r3, .L131+4
 1561 03e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1562 03e4 002B     		cmp	r3, #0
 1563 03e6 07D1     		bne	.L104
 482:main.c        ****                     dir_latched_side = g_direction;          /* remember side */
 1564              		.loc 1 482 0 is_stmt 1
 1565 03e8 674B     		ldr	r3, .L131
 1566 03ea 1B78     		ldrb	r3, [r3]
 1567 03ec DAB2     		uxtb	r2, r3
 1568 03ee 674B     		ldr	r3, .L131+4
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 37


 1569 03f0 1A70     		strb	r2, [r3]
 483:main.c        ****                     dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 1570              		.loc 1 483 0
 1571 03f2 674B     		ldr	r3, .L131+8
 1572 03f4 0D22     		movs	r2, #13
 1573 03f6 1A80     		strh	r2, [r3]	@ movhi
 1574              	.L104:
 484:main.c        ****                     //CyDelay(50);
 485:main.c        ****                 }
 486:main.c        ****                 /* If request cleared during delay, cancel gracefully */
 487:main.c        ****                 if (g_direction == 0u && dir_latched_side != 0){
 1575              		.loc 1 487 0
 1576 03f8 634B     		ldr	r3, .L131
 1577 03fa 1B78     		ldrb	r3, [r3]
 1578 03fc DBB2     		uxtb	r3, r3
 1579 03fe 002B     		cmp	r3, #0
 1580 0400 09D1     		bne	.L105
 1581              		.loc 1 487 0 is_stmt 0 discriminator 1
 1582 0402 624B     		ldr	r3, .L131+4
 1583 0404 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1584 0406 002B     		cmp	r3, #0
 1585 0408 05D0     		beq	.L105
 488:main.c        ****                     dir_latched_side = 0;
 1586              		.loc 1 488 0 is_stmt 1
 1587 040a 604B     		ldr	r3, .L131+4
 1588 040c 0022     		movs	r2, #0
 1589 040e 1A70     		strb	r2, [r3]
 489:main.c        ****                     dir_delay_ticks  = 0;
 1590              		.loc 1 489 0
 1591 0410 5F4B     		ldr	r3, .L131+8
 1592 0412 0022     		movs	r2, #0
 1593 0414 1A80     		strh	r2, [r3]	@ movhi
 1594              	.L105:
 490:main.c        ****                 }
 491:main.c        **** 
 492:main.c        ****                 if (g_direction == 1u || g_direction == 2u || g_direction == 3u){
 1595              		.loc 1 492 0
 1596 0416 5C4B     		ldr	r3, .L131
 1597 0418 1B78     		ldrb	r3, [r3]
 1598 041a DBB2     		uxtb	r3, r3
 1599 041c 012B     		cmp	r3, #1
 1600 041e 09D0     		beq	.L106
 1601              		.loc 1 492 0 is_stmt 0 discriminator 1
 1602 0420 594B     		ldr	r3, .L131
 1603 0422 1B78     		ldrb	r3, [r3]
 1604 0424 DBB2     		uxtb	r3, r3
 1605 0426 022B     		cmp	r3, #2
 1606 0428 04D0     		beq	.L106
 1607              		.loc 1 492 0 discriminator 2
 1608 042a 574B     		ldr	r3, .L131
 1609 042c 1B78     		ldrb	r3, [r3]
 1610 042e DBB2     		uxtb	r3, r3
 1611 0430 032B     		cmp	r3, #3
 1612 0432 25D1     		bne	.L107
 1613              	.L106:
 493:main.c        ****                     if (dir_delay_ticks > 0){
 1614              		.loc 1 493 0 is_stmt 1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 38


 1615 0434 564B     		ldr	r3, .L131+8
 1616 0436 1B88     		ldrh	r3, [r3]
 1617 0438 002B     		cmp	r3, #0
 1618 043a 06D0     		beq	.L108
 494:main.c        ****                         /* Still delaying: keep doing normal straight PI */
 495:main.c        ****                         dir_delay_ticks--;
 1619              		.loc 1 495 0
 1620 043c 544B     		ldr	r3, .L131+8
 1621 043e 1B88     		ldrh	r3, [r3]
 1622 0440 013B     		subs	r3, r3, #1
 1623 0442 9AB2     		uxth	r2, r3
 1624 0444 524B     		ldr	r3, .L131+8
 1625 0446 1A80     		strh	r2, [r3]	@ movhi
 1626 0448 1AE0     		b	.L107
 1627              	.L108:
 496:main.c        ****                     } else {
 497:main.c        ****                         /* Delay elapsed: perform the maneuver */
 498:main.c        ****                         Directions_Handle(&g_direction);
 1628              		.loc 1 498 0
 1629 044a 4F48     		ldr	r0, .L131
 1630 044c FFF7FEFF 		bl	Directions_Handle
 499:main.c        **** 
 500:main.c        ****                         /* When turn completes, Directions sets g_direction back to 0 */
 501:main.c        ****                         if (g_direction == 0u){
 1631              		.loc 1 501 0
 1632 0450 4D4B     		ldr	r3, .L131
 1633 0452 1B78     		ldrb	r3, [r3]
 1634 0454 DBB2     		uxtb	r3, r3
 1635 0456 002B     		cmp	r3, #0
 1636 0458 0ED1     		bne	.L109
 502:main.c        ****                             pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 1637              		.loc 1 502 0
 1638 045a 4FF00003 		mov	r3, #0
 1639 045e 7B64     		str	r3, [r7, #68]	@ float
 1640 0460 4FF00003 		mov	r3, #0
 1641 0464 BB64     		str	r3, [r7, #72]	@ float
 1642 0466 4FF00003 		mov	r3, #0
 1643 046a FB64     		str	r3, [r7, #76]	@ float
 503:main.c        ****                             dir_latched_side = 0;                        /* ready next time */
 1644              		.loc 1 503 0
 1645 046c 474B     		ldr	r3, .L131+4
 1646 046e 0022     		movs	r2, #0
 1647 0470 1A70     		strb	r2, [r3]
 504:main.c        ****                             
 505:main.c        **** 
 506:main.c        ****                             uTurn_complete = 1;
 1648              		.loc 1 506 0
 1649 0472 0123     		movs	r3, #1
 1650 0474 87F86130 		strb	r3, [r7, #97]
 1651              	.L109:
 507:main.c        ****                         }
 508:main.c        ****                         CyDelay(LOOP_DT_MS);
 1652              		.loc 1 508 0
 1653 0478 0820     		movs	r0, #8
 1654 047a FFF7FEFF 		bl	CyDelay
 509:main.c        ****                         continue;  /* skip the rest this tick */
 1655              		.loc 1 509 0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 39


 1656 047e D0E0     		b	.L127
 1657              	.L107:
 510:main.c        ****                     }
 511:main.c        ****                 }
 512:main.c        ****                 /* ---------------- end turn handling with delay ---------------- */
 513:main.c        ****                 /* Straight run with PI steering */
 514:main.c        ****         
 515:main.c        ****         if(turn_cooldown_ticks > 0) {
 1658              		.loc 1 515 0
 1659 0480 444B     		ldr	r3, .L131+12
 1660 0482 1B88     		ldrh	r3, [r3]
 1661 0484 002B     		cmp	r3, #0
 1662 0486 50D0     		beq	.L82
 516:main.c        ****             turn_cooldown_ticks--;
 1663              		.loc 1 516 0
 1664 0488 424B     		ldr	r3, .L131+12
 1665 048a 1B88     		ldrh	r3, [r3]
 1666 048c 013B     		subs	r3, r3, #1
 1667 048e 9AB2     		uxth	r2, r3
 1668 0490 404B     		ldr	r3, .L131+12
 1669 0492 1A80     		strh	r2, [r3]	@ movhi
 1670 0494 49E0     		b	.L82
 1671              	.L102:
 517:main.c        ****         }
 518:main.c        ****           
 519:main.c        ****             
 520:main.c        ****         } else if((CMD_STATES[i] == 5)) {
 1672              		.loc 1 520 0
 1673 0496 97F96B30 		ldrsb	r3, [r7, #107]
 1674 049a 07F17002 		add	r2, r7, #112
 1675 049e 1344     		add	r3, r3, r2
 1676 04a0 13F8643C 		ldrb	r3, [r3, #-100]	@ zero_extendqisi2
 1677 04a4 052B     		cmp	r3, #5
 1678 04a6 30D1     		bne	.L111
 521:main.c        ****         // REACH FOOD
 522:main.c        **** 
 523:main.c        ****          // --- FIX 1: Set the target distance *only once* ---
 524:main.c        ****          // We know we just entered this state if target_dist is 0
 525:main.c        ****         if (target_dist == 0) {
 1679              		.loc 1 525 0
 1680 04a8 7B6E     		ldr	r3, [r7, #100]
 1681 04aa 002B     		cmp	r3, #0
 1682 04ac 03D1     		bne	.L112
 526:main.c        ****          // Set target to be 500mm *from our current position*
 527:main.c        ****          target_dist = g_dist_mm + 150 ; // in mm
 1683              		.loc 1 527 0
 1684 04ae 3A4B     		ldr	r3, .L131+16
 1685 04b0 1B68     		ldr	r3, [r3]
 1686 04b2 9633     		adds	r3, r3, #150
 1687 04b4 7B66     		str	r3, [r7, #100]
 1688              	.L112:
 528:main.c        ****          }
 529:main.c        **** 
 530:main.c        ****         // Check if we have *now* reached that target
 531:main.c        ****          g_stop_now = (g_dist_mm >= target_dist) ? 1u : 0u;
 1689              		.loc 1 531 0
 1690 04b6 384B     		ldr	r3, .L131+16
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 40


 1691 04b8 1A68     		ldr	r2, [r3]
 1692 04ba 7B6E     		ldr	r3, [r7, #100]
 1693 04bc 9A42     		cmp	r2, r3
 1694 04be 01DB     		blt	.L113
 1695              		.loc 1 531 0 is_stmt 0 discriminator 1
 1696 04c0 0122     		movs	r2, #1
 1697 04c2 00E0     		b	.L114
 1698              	.L113:
 1699              		.loc 1 531 0 discriminator 2
 1700 04c4 0022     		movs	r2, #0
 1701              	.L114:
 1702              		.loc 1 531 0 discriminator 4
 1703 04c6 354B     		ldr	r3, .L131+20
 1704 04c8 1A70     		strb	r2, [r3]
 532:main.c        **** 
 533:main.c        ****          // --- FIX 2 & 3: Use if/else and remove 'continue' ---
 534:main.c        ****          if (g_stop_now) {
 1705              		.loc 1 534 0 is_stmt 1 discriminator 4
 1706 04ca 344B     		ldr	r3, .L131+20
 1707 04cc 1B78     		ldrb	r3, [r3]
 1708 04ce DBB2     		uxtb	r3, r3
 1709 04d0 002B     		cmp	r3, #0
 1710 04d2 0DD0     		beq	.L115
 535:main.c        ****          // Target met: STOP
 536:main.c        ****          set_motors_symmetric(0);
 1711              		.loc 1 536 0
 1712 04d4 0020     		movs	r0, #0
 1713 04d6 FFF7FEFF 		bl	set_motors_symmetric
 537:main.c        ****          motor_enable(1u, 1u); // Disable the motors
 1714              		.loc 1 537 0
 1715 04da 0121     		movs	r1, #1
 1716 04dc 0120     		movs	r0, #1
 1717 04de FFF7FEFF 		bl	motor_enable
 538:main.c        ****         
 539:main.c        ****          fruit_complete = 1; // Flag that this state is done
 1718              		.loc 1 539 0
 1719 04e2 0123     		movs	r3, #1
 1720 04e4 87F86030 		strb	r3, [r7, #96]
 540:main.c        ****         D4_Write(1);
 1721              		.loc 1 540 0
 1722 04e8 0120     		movs	r0, #1
 1723 04ea FFF7FEFF 		bl	D4_Write
 1724 04ee 1CE0     		b	.L82
 1725              	.L115:
 1726              	.LBB5:
 541:main.c        ****          // DO NOT 'continue' here
 542:main.c        ****         } else {
 543:main.c        ****          // Target not met: KEEP DRIVING
 544:main.c        ****          int steer = pi_step(&pi, V4_pp, V5_pp, V6_pp);
 1727              		.loc 1 544 0
 1728 04f0 7989     		ldrh	r1, [r7, #10]
 1729 04f2 3A89     		ldrh	r2, [r7, #8]
 1730 04f4 FB88     		ldrh	r3, [r7, #6]
 1731 04f6 07F14400 		add	r0, r7, #68
 1732 04fa FFF7FEFF 		bl	pi_step
 1733 04fe 3865     		str	r0, [r7, #80]
 545:main.c        ****          set_motors_with_trim_and_steer(center_duty_est, steer);
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 41


 1734              		.loc 1 545 0
 1735 0500 396D     		ldr	r1, [r7, #80]
 1736 0502 F86E     		ldr	r0, [r7, #108]
 1737 0504 FFF7FEFF 		bl	set_motors_with_trim_and_steer
 1738 0508 0FE0     		b	.L82
 1739              	.L111:
 1740              	.LBE5:
 546:main.c        ****          }
 547:main.c        **** 
 548:main.c        ****         
 549:main.c        ****         
 550:main.c        ****         
 551:main.c        ****         } else if((CMD_STATES[i] == 6)) {
 1741              		.loc 1 551 0
 1742 050a 97F96B30 		ldrsb	r3, [r7, #107]
 1743 050e 07F17002 		add	r2, r7, #112
 1744 0512 1344     		add	r3, r3, r2
 1745 0514 13F8643C 		ldrb	r3, [r3, #-100]	@ zero_extendqisi2
 1746 0518 062B     		cmp	r3, #6
 1747 051a 06D1     		bne	.L82
 552:main.c        ****          // FINISH
 553:main.c        ****             set_motors_symmetric(0);
 1748              		.loc 1 553 0
 1749 051c 0020     		movs	r0, #0
 1750 051e FFF7FEFF 		bl	set_motors_symmetric
 554:main.c        ****             motor_enable(1u, 1u);
 1751              		.loc 1 554 0
 1752 0522 0121     		movs	r1, #1
 1753 0524 0120     		movs	r0, #1
 1754 0526 FFF7FEFF 		bl	motor_enable
 1755              	.L82:
 555:main.c        ****         
 556:main.c        ****         }
 557:main.c        ****         
 558:main.c        ****         // food
 559:main.c        ****         if (i == 12 || i == 22 || i == 30 || i == 43) {
 1756              		.loc 1 559 0
 1757 052a 97F96B30 		ldrsb	r3, [r7, #107]
 1758 052e 0C2B     		cmp	r3, #12
 1759 0530 0BD0     		beq	.L117
 1760              		.loc 1 559 0 is_stmt 0 discriminator 1
 1761 0532 97F96B30 		ldrsb	r3, [r7, #107]
 1762 0536 162B     		cmp	r3, #22
 1763 0538 07D0     		beq	.L117
 1764              		.loc 1 559 0 discriminator 2
 1765 053a 97F96B30 		ldrsb	r3, [r7, #107]
 1766 053e 1E2B     		cmp	r3, #30
 1767 0540 03D0     		beq	.L117
 1768              		.loc 1 559 0 discriminator 3
 1769 0542 97F96B30 		ldrsb	r3, [r7, #107]
 1770 0546 2B2B     		cmp	r3, #43
 1771 0548 03D1     		bne	.L118
 1772              	.L117:
 560:main.c        ****             CyDelay(2000);
 1773              		.loc 1 560 0 is_stmt 1
 1774 054a 4FF4FA60 		mov	r0, #2000
 1775 054e FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 42


 1776              	.L118:
 561:main.c        ****         } 
 562:main.c        ****         
 563:main.c        ****         
 564:main.c        ****         
 565:main.c        ****         /* This logic checks the state that just FINISHED (e.g., i == 4)
 566:main.c        ****          * and overwrites the default cooldown period for the 
 567:main.c        ****          * 'straight' segment that is about to begin.
 568:main.c        ****          */
 569:main.c        ****         if (i == 4) {
 1777              		.loc 1 569 0
 1778 0552 97F96B30 		ldrsb	r3, [r7, #107]
 1779 0556 042B     		cmp	r3, #4
 1780 0558 04D1     		bne	.L119
 570:main.c        ****             // Set 4000ms cooldown (4000ms / 8ms_per_loop)
 571:main.c        ****             turn_cooldown_ticks = (uint16_t)(4000 / LOOP_DT_MS);
 1781              		.loc 1 571 0
 1782 055a 0E4B     		ldr	r3, .L131+12
 1783 055c 4FF4FA72 		mov	r2, #500
 1784 0560 1A80     		strh	r2, [r3]	@ movhi
 1785 0562 2CE0     		b	.L120
 1786              	.L119:
 572:main.c        ****         } 
 573:main.c        ****         else if (i == 10) {
 1787              		.loc 1 573 0
 1788 0564 97F96B30 		ldrsb	r3, [r7, #107]
 1789 0568 0A2B     		cmp	r3, #10
 1790 056a 03D1     		bne	.L121
 574:main.c        ****             // Set 2000ms cooldown
 575:main.c        ****             turn_cooldown_ticks = (uint16_t)(2000 / LOOP_DT_MS);
 1791              		.loc 1 575 0
 1792 056c 094B     		ldr	r3, .L131+12
 1793 056e FA22     		movs	r2, #250
 1794 0570 1A80     		strh	r2, [r3]	@ movhi
 1795 0572 24E0     		b	.L120
 1796              	.L121:
 576:main.c        ****         }
 577:main.c        ****         else if (i == 35) {
 1797              		.loc 1 577 0
 1798 0574 97F96B30 		ldrsb	r3, [r7, #107]
 1799 0578 232B     		cmp	r3, #35
 1800 057a 11D1     		bne	.L122
 578:main.c        ****             // Set 5000ms cooldown
 579:main.c        ****             turn_cooldown_ticks = (uint16_t)(5000 / LOOP_DT_MS);
 1801              		.loc 1 579 0
 1802 057c 054B     		ldr	r3, .L131+12
 1803 057e 40F27122 		movw	r2, #625
 1804 0582 1A80     		strh	r2, [r3]	@ movhi
 1805 0584 1BE0     		b	.L120
 1806              	.L132:
 1807 0586 00BF     		.align	2
 1808              	.L131:
 1809 0588 06000000 		.word	g_direction
 1810 058c 0E000000 		.word	dir_latched_side
 1811 0590 0C000000 		.word	dir_delay_ticks
 1812 0594 10000000 		.word	turn_cooldown_ticks
 1813 0598 08000000 		.word	g_dist_mm
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 43


 1814 059c 07000000 		.word	g_stop_now
 1815              	.L122:
 580:main.c        ****         }
 581:main.c        ****         else if (i == 38) {
 1816              		.loc 1 581 0
 1817 05a0 97F96B30 		ldrsb	r3, [r7, #107]
 1818 05a4 262B     		cmp	r3, #38
 1819 05a6 03D1     		bne	.L123
 582:main.c        ****             // Set 500ms cooldown
 583:main.c        ****             turn_cooldown_ticks = (uint16_t)(500 / LOOP_DT_MS);
 1820              		.loc 1 583 0
 1821 05a8 1E4B     		ldr	r3, .L133
 1822 05aa 3E22     		movs	r2, #62
 1823 05ac 1A80     		strh	r2, [r3]	@ movhi
 1824 05ae 06E0     		b	.L120
 1825              	.L123:
 584:main.c        ****         }
 585:main.c        ****         else if (i == 46) {
 1826              		.loc 1 585 0
 1827 05b0 97F96B30 		ldrsb	r3, [r7, #107]
 1828 05b4 2E2B     		cmp	r3, #46
 1829 05b6 02D1     		bne	.L120
 586:main.c        ****             // Set 1000ms cooldown
 587:main.c        ****             turn_cooldown_ticks = (uint16_t)(1000 / LOOP_DT_MS);
 1830              		.loc 1 587 0
 1831 05b8 1A4B     		ldr	r3, .L133
 1832 05ba 7D22     		movs	r2, #125
 1833 05bc 1A80     		strh	r2, [r3]	@ movhi
 1834              	.L120:
 588:main.c        ****         }
 589:main.c        ****         
 590:main.c        ****         
 591:main.c        ****         if (straight_complete == 1u || turn_complete == 1u || uTurn_complete == 1u || fruit_complet
 1835              		.loc 1 591 0
 1836 05be 97F96330 		ldrsb	r3, [r7, #99]
 1837 05c2 012B     		cmp	r3, #1
 1838 05c4 0BD0     		beq	.L124
 1839              		.loc 1 591 0 is_stmt 0 discriminator 1
 1840 05c6 97F96230 		ldrsb	r3, [r7, #98]
 1841 05ca 012B     		cmp	r3, #1
 1842 05cc 07D0     		beq	.L124
 1843              		.loc 1 591 0 discriminator 2
 1844 05ce 97F96130 		ldrsb	r3, [r7, #97]
 1845 05d2 012B     		cmp	r3, #1
 1846 05d4 03D0     		beq	.L124
 1847              		.loc 1 591 0 discriminator 3
 1848 05d6 97F96030 		ldrsb	r3, [r7, #96]
 1849 05da 012B     		cmp	r3, #1
 1850 05dc 1ED1     		bne	.L125
 1851              	.L124:
 592:main.c        ****             
 593:main.c        ****                 // Check if we are at the end of the array
 594:main.c        ****             if (i < CMD_STATES_LEN) {
 1852              		.loc 1 594 0 is_stmt 1
 1853 05de 97F96B20 		ldrsb	r2, [r7, #107]
 1854 05e2 B7F85E30 		ldrh	r3, [r7, #94]
 1855 05e6 9A42     		cmp	r2, r3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 44


 1856 05e8 14DA     		bge	.L126
 595:main.c        **** 
 596:main.c        ****              i += 1;
 1857              		.loc 1 596 0
 1858 05ea 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 1859 05ee 0133     		adds	r3, r3, #1
 1860 05f0 DBB2     		uxtb	r3, r3
 1861 05f2 87F86B30 		strb	r3, [r7, #107]
 597:main.c        ****             
 598:main.c        ****                 
 599:main.c        ****                 straight_complete = 0;
 1862              		.loc 1 599 0
 1863 05f6 0023     		movs	r3, #0
 1864 05f8 87F86330 		strb	r3, [r7, #99]
 600:main.c        ****                 turn_complete = 0;
 1865              		.loc 1 600 0
 1866 05fc 0023     		movs	r3, #0
 1867 05fe 87F86230 		strb	r3, [r7, #98]
 601:main.c        ****                 uTurn_complete = 0;
 1868              		.loc 1 601 0
 1869 0602 0023     		movs	r3, #0
 1870 0604 87F86130 		strb	r3, [r7, #97]
 602:main.c        ****                 fruit_complete = 0;
 1871              		.loc 1 602 0
 1872 0608 0023     		movs	r3, #0
 1873 060a 87F86030 		strb	r3, [r7, #96]
 603:main.c        ****                 
 604:main.c        ****                 target_dist = 0;
 1874              		.loc 1 604 0
 1875 060e 0023     		movs	r3, #0
 1876 0610 7B66     		str	r3, [r7, #100]
 1877 0612 03E0     		b	.L125
 1878              	.L126:
 605:main.c        ****             } else {
 606:main.c        ****                 Motors_SetPercent(0,0);
 1879              		.loc 1 606 0
 1880 0614 0021     		movs	r1, #0
 1881 0616 0020     		movs	r0, #0
 1882 0618 FFF7FEFF 		bl	Motors_SetPercent
 1883              	.L125:
 607:main.c        ****             }
 608:main.c        ****         }
 609:main.c        ****         
 610:main.c        **** 
 611:main.c        ****         CyDelay(LOOP_DT_MS);
 1884              		.loc 1 611 0
 1885 061c 0820     		movs	r0, #8
 1886 061e FFF7FEFF 		bl	CyDelay
 1887              	.L127:
 1888              	.LBE3:
 612:main.c        ****     }
 1889              		.loc 1 612 0 discriminator 1
 1890 0622 72E5     		b	.L128
 1891              	.L134:
 1892              		.align	2
 1893              	.L133:
 1894 0624 10000000 		.word	turn_cooldown_ticks
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 45


 1895              		.cfi_endproc
 1896              	.LFE69:
 1897              		.size	main, .-main
 1898              		.text
 1899              	.Letext0:
 1900              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1901              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1902              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 1903              		.section	.debug_info,"",%progbits
 1904              	.Ldebug_info0:
 1905 0000 1F060000 		.4byte	0x61f
 1906 0004 0400     		.2byte	0x4
 1907 0006 00000000 		.4byte	.Ldebug_abbrev0
 1908 000a 04       		.byte	0x4
 1909 000b 01       		.uleb128 0x1
 1910 000c 60000000 		.4byte	.LASF65
 1911 0010 0C       		.byte	0xc
 1912 0011 16030000 		.4byte	.LASF66
 1913 0015 1B010000 		.4byte	.LASF67
 1914 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1915 001d 00000000 		.4byte	0
 1916 0021 00000000 		.4byte	.Ldebug_line0
 1917 0025 02       		.uleb128 0x2
 1918 0026 B0020000 		.4byte	.LASF0
 1919 002a 02       		.byte	0x2
 1920 002b 1B       		.byte	0x1b
 1921 002c 30000000 		.4byte	0x30
 1922 0030 03       		.uleb128 0x3
 1923 0031 01       		.byte	0x1
 1924 0032 06       		.byte	0x6
 1925 0033 24020000 		.4byte	.LASF2
 1926 0037 02       		.uleb128 0x2
 1927 0038 A0010000 		.4byte	.LASF1
 1928 003c 02       		.byte	0x2
 1929 003d 1D       		.byte	0x1d
 1930 003e 42000000 		.4byte	0x42
 1931 0042 03       		.uleb128 0x3
 1932 0043 01       		.byte	0x1
 1933 0044 08       		.byte	0x8
 1934 0045 AA010000 		.4byte	.LASF3
 1935 0049 03       		.uleb128 0x3
 1936 004a 02       		.byte	0x2
 1937 004b 05       		.byte	0x5
 1938 004c 3F000000 		.4byte	.LASF4
 1939 0050 02       		.uleb128 0x2
 1940 0051 F3000000 		.4byte	.LASF5
 1941 0055 02       		.byte	0x2
 1942 0056 2B       		.byte	0x2b
 1943 0057 5B000000 		.4byte	0x5b
 1944 005b 03       		.uleb128 0x3
 1945 005c 02       		.byte	0x2
 1946 005d 07       		.byte	0x7
 1947 005e 90020000 		.4byte	.LASF6
 1948 0062 02       		.uleb128 0x2
 1949 0063 73030000 		.4byte	.LASF7
 1950 0067 02       		.byte	0x2
 1951 0068 3F       		.byte	0x3f
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 46


 1952 0069 6D000000 		.4byte	0x6d
 1953 006d 03       		.uleb128 0x3
 1954 006e 04       		.byte	0x4
 1955 006f 05       		.byte	0x5
 1956 0070 87010000 		.4byte	.LASF8
 1957 0074 03       		.uleb128 0x3
 1958 0075 04       		.byte	0x4
 1959 0076 07       		.byte	0x7
 1960 0077 1D030000 		.4byte	.LASF9
 1961 007b 02       		.uleb128 0x2
 1962 007c 90010000 		.4byte	.LASF10
 1963 0080 02       		.byte	0x2
 1964 0081 59       		.byte	0x59
 1965 0082 86000000 		.4byte	0x86
 1966 0086 03       		.uleb128 0x3
 1967 0087 08       		.byte	0x8
 1968 0088 05       		.byte	0x5
 1969 0089 6F010000 		.4byte	.LASF11
 1970 008d 03       		.uleb128 0x3
 1971 008e 08       		.byte	0x8
 1972 008f 07       		.byte	0x7
 1973 0090 30020000 		.4byte	.LASF12
 1974 0094 04       		.uleb128 0x4
 1975 0095 04       		.byte	0x4
 1976 0096 05       		.byte	0x5
 1977 0097 696E7400 		.ascii	"int\000"
 1978 009b 03       		.uleb128 0x3
 1979 009c 04       		.byte	0x4
 1980 009d 07       		.byte	0x7
 1981 009e 54020000 		.4byte	.LASF13
 1982 00a2 02       		.uleb128 0x2
 1983 00a3 38000000 		.4byte	.LASF14
 1984 00a7 03       		.byte	0x3
 1985 00a8 14       		.byte	0x14
 1986 00a9 25000000 		.4byte	0x25
 1987 00ad 02       		.uleb128 0x2
 1988 00ae 06010000 		.4byte	.LASF15
 1989 00b2 03       		.byte	0x3
 1990 00b3 18       		.byte	0x18
 1991 00b4 37000000 		.4byte	0x37
 1992 00b8 02       		.uleb128 0x2
 1993 00b9 67020000 		.4byte	.LASF16
 1994 00bd 03       		.byte	0x3
 1995 00be 24       		.byte	0x24
 1996 00bf 50000000 		.4byte	0x50
 1997 00c3 02       		.uleb128 0x2
 1998 00c4 D8020000 		.4byte	.LASF17
 1999 00c8 03       		.byte	0x3
 2000 00c9 2C       		.byte	0x2c
 2001 00ca 62000000 		.4byte	0x62
 2002 00ce 02       		.uleb128 0x2
 2003 00cf FE000000 		.4byte	.LASF18
 2004 00d3 03       		.byte	0x3
 2005 00d4 38       		.byte	0x38
 2006 00d5 7B000000 		.4byte	0x7b
 2007 00d9 03       		.uleb128 0x3
 2008 00da 04       		.byte	0x4
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 47


 2009 00db 04       		.byte	0x4
 2010 00dc 69010000 		.4byte	.LASF19
 2011 00e0 03       		.uleb128 0x3
 2012 00e1 08       		.byte	0x8
 2013 00e2 04       		.byte	0x4
 2014 00e3 9F030000 		.4byte	.LASF20
 2015 00e7 03       		.uleb128 0x3
 2016 00e8 01       		.byte	0x1
 2017 00e9 08       		.byte	0x8
 2018 00ea 7D010000 		.4byte	.LASF21
 2019 00ee 03       		.uleb128 0x3
 2020 00ef 08       		.byte	0x8
 2021 00f0 04       		.byte	0x4
 2022 00f1 D9010000 		.4byte	.LASF22
 2023 00f5 03       		.uleb128 0x3
 2024 00f6 04       		.byte	0x4
 2025 00f7 07       		.byte	0x7
 2026 00f8 57000000 		.4byte	.LASF23
 2027 00fc 05       		.uleb128 0x5
 2028 00fd AD000000 		.4byte	0xad
 2029 0101 06       		.uleb128 0x6
 2030 0102 0C       		.byte	0xc
 2031 0103 01       		.byte	0x1
 2032 0104 95       		.byte	0x95
 2033 0105 2A010000 		.4byte	0x12a
 2034 0109 07       		.uleb128 0x7
 2035 010a 6900     		.ascii	"i\000"
 2036 010c 01       		.byte	0x1
 2037 010d 95       		.byte	0x95
 2038 010e D9000000 		.4byte	0xd9
 2039 0112 00       		.byte	0
 2040 0113 07       		.uleb128 0x7
 2041 0114 7500     		.ascii	"u\000"
 2042 0116 01       		.byte	0x1
 2043 0117 95       		.byte	0x95
 2044 0118 D9000000 		.4byte	0xd9
 2045 011c 04       		.byte	0x4
 2046 011d 08       		.uleb128 0x8
 2047 011e 6C030000 		.4byte	.LASF24
 2048 0122 01       		.byte	0x1
 2049 0123 95       		.byte	0x95
 2050 0124 D9000000 		.4byte	0xd9
 2051 0128 08       		.byte	0x8
 2052 0129 00       		.byte	0
 2053 012a 02       		.uleb128 0x2
 2054 012b 82010000 		.4byte	.LASF25
 2055 012f 01       		.byte	0x1
 2056 0130 95       		.byte	0x95
 2057 0131 01010000 		.4byte	0x101
 2058 0135 09       		.uleb128 0x9
 2059 0136 B9020000 		.4byte	.LASF68
 2060 013a 01       		.byte	0x1
 2061 013b 4B       		.byte	0x4b
 2062 013c 00000000 		.4byte	.LFB64
 2063 0140 14010000 		.4byte	.LFE64-.LFB64
 2064 0144 01       		.uleb128 0x1
 2065 0145 9C       		.byte	0x9c
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 48


 2066 0146 F0010000 		.4byte	0x1f0
 2067 014a 0A       		.uleb128 0xa
 2068 014b 12000000 		.4byte	.LBB2
 2069 014f EA000000 		.4byte	.LBE2-.LBB2
 2070 0153 0B       		.uleb128 0xb
 2071 0154 D4010000 		.4byte	.LASF26
 2072 0158 01       		.byte	0x1
 2073 0159 4E       		.byte	0x4e
 2074 015a C3000000 		.4byte	0xc3
 2075 015e 02       		.uleb128 0x2
 2076 015f 91       		.byte	0x91
 2077 0160 54       		.sleb128 -44
 2078 0161 0B       		.uleb128 0xb
 2079 0162 0E010000 		.4byte	.LASF27
 2080 0166 01       		.byte	0x1
 2081 0167 4F       		.byte	0x4f
 2082 0168 C3000000 		.4byte	0xc3
 2083 016c 02       		.uleb128 0x2
 2084 016d 91       		.byte	0x91
 2085 016e 50       		.sleb128 -48
 2086 016f 0C       		.uleb128 0xc
 2087 0170 643100   		.ascii	"d1\000"
 2088 0173 01       		.byte	0x1
 2089 0174 51       		.byte	0x51
 2090 0175 C3000000 		.4byte	0xc3
 2091 0179 02       		.uleb128 0x2
 2092 017a 91       		.byte	0x91
 2093 017b 4C       		.sleb128 -52
 2094 017c 0C       		.uleb128 0xc
 2095 017d 643200   		.ascii	"d2\000"
 2096 0180 01       		.byte	0x1
 2097 0181 51       		.byte	0x51
 2098 0182 C3000000 		.4byte	0xc3
 2099 0186 02       		.uleb128 0x2
 2100 0187 91       		.byte	0x91
 2101 0188 48       		.sleb128 -56
 2102 0189 0C       		.uleb128 0xc
 2103 018a 613100   		.ascii	"a1\000"
 2104 018d 01       		.byte	0x1
 2105 018e 52       		.byte	0x52
 2106 018f C3000000 		.4byte	0xc3
 2107 0193 02       		.uleb128 0x2
 2108 0194 91       		.byte	0x91
 2109 0195 44       		.sleb128 -60
 2110 0196 0C       		.uleb128 0xc
 2111 0197 613200   		.ascii	"a2\000"
 2112 019a 01       		.byte	0x1
 2113 019b 53       		.byte	0x53
 2114 019c C3000000 		.4byte	0xc3
 2115 01a0 02       		.uleb128 0x2
 2116 01a1 91       		.byte	0x91
 2117 01a2 40       		.sleb128 -64
 2118 01a3 0B       		.uleb128 0xb
 2119 01a4 C9030000 		.4byte	.LASF28
 2120 01a8 01       		.byte	0x1
 2121 01a9 54       		.byte	0x54
 2122 01aa C3000000 		.4byte	0xc3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 49


 2123 01ae 03       		.uleb128 0x3
 2124 01af 91       		.byte	0x91
 2125 01b0 BC7F     		.sleb128 -68
 2126 01b2 0B       		.uleb128 0xb
 2127 01b3 2F030000 		.4byte	.LASF29
 2128 01b7 01       		.byte	0x1
 2129 01b8 55       		.byte	0x55
 2130 01b9 C3000000 		.4byte	0xc3
 2131 01bd 03       		.uleb128 0x3
 2132 01be 91       		.byte	0x91
 2133 01bf B87F     		.sleb128 -72
 2134 01c1 0C       		.uleb128 0xc
 2135 01c2 6E756D00 		.ascii	"num\000"
 2136 01c6 01       		.byte	0x1
 2137 01c7 58       		.byte	0x58
 2138 01c8 CE000000 		.4byte	0xce
 2139 01cc 03       		.uleb128 0x3
 2140 01cd 91       		.byte	0x91
 2141 01ce B07F     		.sleb128 -80
 2142 01d0 0B       		.uleb128 0xb
 2143 01d1 13010000 		.4byte	.LASF30
 2144 01d5 01       		.byte	0x1
 2145 01d6 59       		.byte	0x59
 2146 01d7 C3000000 		.4byte	0xc3
 2147 01db 03       		.uleb128 0x3
 2148 01dc 91       		.byte	0x91
 2149 01dd AC7F     		.sleb128 -84
 2150 01df 0B       		.uleb128 0xb
 2151 01e0 F4020000 		.4byte	.LASF31
 2152 01e4 01       		.byte	0x1
 2153 01e5 5A       		.byte	0x5a
 2154 01e6 C3000000 		.4byte	0xc3
 2155 01ea 03       		.uleb128 0x3
 2156 01eb 91       		.byte	0x91
 2157 01ec A87F     		.sleb128 -88
 2158 01ee 00       		.byte	0
 2159 01ef 00       		.byte	0
 2160 01f0 0D       		.uleb128 0xd
 2161 01f1 7D030000 		.4byte	.LASF35
 2162 01f5 01       		.byte	0x1
 2163 01f6 69       		.byte	0x69
 2164 01f7 D9000000 		.4byte	0xd9
 2165 01fb 00000000 		.4byte	.LFB65
 2166 01ff 44000000 		.4byte	.LFE65-.LFB65
 2167 0203 01       		.uleb128 0x1
 2168 0204 9C       		.byte	0x9c
 2169 0205 17020000 		.4byte	0x217
 2170 0209 0E       		.uleb128 0xe
 2171 020a 707000   		.ascii	"pp\000"
 2172 020d 01       		.byte	0x1
 2173 020e 69       		.byte	0x69
 2174 020f B8000000 		.4byte	0xb8
 2175 0213 02       		.uleb128 0x2
 2176 0214 91       		.byte	0x91
 2177 0215 76       		.sleb128 -10
 2178 0216 00       		.byte	0
 2179 0217 0F       		.uleb128 0xf
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 50


 2180 0218 39030000 		.4byte	.LASF69
 2181 021c 01       		.byte	0x1
 2182 021d 71       		.byte	0x71
 2183 021e 00000000 		.4byte	.LFB66
 2184 0222 48010000 		.4byte	.LFE66-.LFB66
 2185 0226 01       		.uleb128 0x1
 2186 0227 9C       		.byte	0x9c
 2187 0228 A5020000 		.4byte	0x2a5
 2188 022c 10       		.uleb128 0x10
 2189 022d 32000000 		.4byte	.LASF32
 2190 0231 01       		.byte	0x1
 2191 0232 71       		.byte	0x71
 2192 0233 A5020000 		.4byte	0x2a5
 2193 0237 02       		.uleb128 0x2
 2194 0238 91       		.byte	0x91
 2195 0239 64       		.sleb128 -28
 2196 023a 10       		.uleb128 0x10
 2197 023b 63010000 		.4byte	.LASF33
 2198 023f 01       		.byte	0x1
 2199 0240 71       		.byte	0x71
 2200 0241 A5020000 		.4byte	0x2a5
 2201 0245 02       		.uleb128 0x2
 2202 0246 91       		.byte	0x91
 2203 0247 60       		.sleb128 -32
 2204 0248 10       		.uleb128 0x10
 2205 0249 61020000 		.4byte	.LASF34
 2206 024d 01       		.byte	0x1
 2207 024e 71       		.byte	0x71
 2208 024f A5020000 		.4byte	0x2a5
 2209 0253 02       		.uleb128 0x2
 2210 0254 91       		.byte	0x91
 2211 0255 5C       		.sleb128 -36
 2212 0256 0C       		.uleb128 0xc
 2213 0257 563100   		.ascii	"V1\000"
 2214 025a 01       		.byte	0x1
 2215 025b 73       		.byte	0x73
 2216 025c B8000000 		.4byte	0xb8
 2217 0260 02       		.uleb128 0x2
 2218 0261 91       		.byte	0x91
 2219 0262 76       		.sleb128 -10
 2220 0263 0C       		.uleb128 0xc
 2221 0264 563200   		.ascii	"V2\000"
 2222 0267 01       		.byte	0x1
 2223 0268 74       		.byte	0x74
 2224 0269 B8000000 		.4byte	0xb8
 2225 026d 02       		.uleb128 0x2
 2226 026e 91       		.byte	0x91
 2227 026f 74       		.sleb128 -12
 2228 0270 0C       		.uleb128 0xc
 2229 0271 563300   		.ascii	"V3\000"
 2230 0274 01       		.byte	0x1
 2231 0275 75       		.byte	0x75
 2232 0276 B8000000 		.4byte	0xb8
 2233 027a 02       		.uleb128 0x2
 2234 027b 91       		.byte	0x91
 2235 027c 72       		.sleb128 -14
 2236 027d 0C       		.uleb128 0xc
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 51


 2237 027e 563400   		.ascii	"V4\000"
 2238 0281 01       		.byte	0x1
 2239 0282 76       		.byte	0x76
 2240 0283 B8000000 		.4byte	0xb8
 2241 0287 02       		.uleb128 0x2
 2242 0288 91       		.byte	0x91
 2243 0289 70       		.sleb128 -16
 2244 028a 0C       		.uleb128 0xc
 2245 028b 563500   		.ascii	"V5\000"
 2246 028e 01       		.byte	0x1
 2247 028f 77       		.byte	0x77
 2248 0290 B8000000 		.4byte	0xb8
 2249 0294 02       		.uleb128 0x2
 2250 0295 91       		.byte	0x91
 2251 0296 6E       		.sleb128 -18
 2252 0297 0C       		.uleb128 0xc
 2253 0298 563600   		.ascii	"V6\000"
 2254 029b 01       		.byte	0x1
 2255 029c 78       		.byte	0x78
 2256 029d B8000000 		.4byte	0xb8
 2257 02a1 02       		.uleb128 0x2
 2258 02a2 91       		.byte	0x91
 2259 02a3 6C       		.sleb128 -20
 2260 02a4 00       		.byte	0
 2261 02a5 11       		.uleb128 0x11
 2262 02a6 04       		.byte	0x4
 2263 02a7 B8000000 		.4byte	0xb8
 2264 02ab 0D       		.uleb128 0xd
 2265 02ac 7D020000 		.4byte	.LASF36
 2266 02b0 01       		.byte	0x1
 2267 02b1 96       		.byte	0x96
 2268 02b2 D9000000 		.4byte	0xd9
 2269 02b6 00000000 		.4byte	.LFB67
 2270 02ba 3A000000 		.4byte	.LFE67-.LFB67
 2271 02be 01       		.uleb128 0x1
 2272 02bf 9C       		.byte	0x9c
 2273 02c0 EB020000 		.4byte	0x2eb
 2274 02c4 0E       		.uleb128 0xe
 2275 02c5 7800     		.ascii	"x\000"
 2276 02c7 01       		.byte	0x1
 2277 02c8 96       		.byte	0x96
 2278 02c9 D9000000 		.4byte	0xd9
 2279 02cd 02       		.uleb128 0x2
 2280 02ce 91       		.byte	0x91
 2281 02cf 74       		.sleb128 -12
 2282 02d0 0E       		.uleb128 0xe
 2283 02d1 6C6F00   		.ascii	"lo\000"
 2284 02d4 01       		.byte	0x1
 2285 02d5 96       		.byte	0x96
 2286 02d6 D9000000 		.4byte	0xd9
 2287 02da 02       		.uleb128 0x2
 2288 02db 91       		.byte	0x91
 2289 02dc 70       		.sleb128 -16
 2290 02dd 0E       		.uleb128 0xe
 2291 02de 686900   		.ascii	"hi\000"
 2292 02e1 01       		.byte	0x1
 2293 02e2 96       		.byte	0x96
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 52


 2294 02e3 D9000000 		.4byte	0xd9
 2295 02e7 02       		.uleb128 0x2
 2296 02e8 91       		.byte	0x91
 2297 02e9 6C       		.sleb128 -20
 2298 02ea 00       		.byte	0
 2299 02eb 0D       		.uleb128 0xd
 2300 02ec E0020000 		.4byte	.LASF37
 2301 02f0 01       		.byte	0x1
 2302 02f1 98       		.byte	0x98
 2303 02f2 94000000 		.4byte	0x94
 2304 02f6 00000000 		.4byte	.LFB68
 2305 02fa 84020000 		.4byte	.LFE68-.LFB68
 2306 02fe 01       		.uleb128 0x1
 2307 02ff 9C       		.byte	0x9c
 2308 0300 E1030000 		.4byte	0x3e1
 2309 0304 0E       		.uleb128 0xe
 2310 0305 706900   		.ascii	"pi\000"
 2311 0308 01       		.byte	0x1
 2312 0309 98       		.byte	0x98
 2313 030a E1030000 		.4byte	0x3e1
 2314 030e 03       		.uleb128 0x3
 2315 030f 91       		.byte	0x91
 2316 0310 BC7F     		.sleb128 -68
 2317 0312 10       		.uleb128 0x10
 2318 0313 32000000 		.4byte	.LASF32
 2319 0317 01       		.byte	0x1
 2320 0318 98       		.byte	0x98
 2321 0319 B8000000 		.4byte	0xb8
 2322 031d 03       		.uleb128 0x3
 2323 031e 91       		.byte	0x91
 2324 031f BA7F     		.sleb128 -70
 2325 0321 10       		.uleb128 0x10
 2326 0322 63010000 		.4byte	.LASF33
 2327 0326 01       		.byte	0x1
 2328 0327 98       		.byte	0x98
 2329 0328 B8000000 		.4byte	0xb8
 2330 032c 03       		.uleb128 0x3
 2331 032d 91       		.byte	0x91
 2332 032e B87F     		.sleb128 -72
 2333 0330 10       		.uleb128 0x10
 2334 0331 61020000 		.4byte	.LASF34
 2335 0335 01       		.byte	0x1
 2336 0336 98       		.byte	0x98
 2337 0337 B8000000 		.4byte	0xb8
 2338 033b 03       		.uleb128 0x3
 2339 033c 91       		.byte	0x91
 2340 033d B67F     		.sleb128 -74
 2341 033f 0C       		.uleb128 0xc
 2342 0340 633400   		.ascii	"c4\000"
 2343 0343 01       		.byte	0x1
 2344 0344 9A       		.byte	0x9a
 2345 0345 D9000000 		.4byte	0xd9
 2346 0349 02       		.uleb128 0x2
 2347 034a 91       		.byte	0x91
 2348 034b 68       		.sleb128 -24
 2349 034c 0C       		.uleb128 0xc
 2350 034d 633500   		.ascii	"c5\000"
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 53


 2351 0350 01       		.byte	0x1
 2352 0351 9B       		.byte	0x9b
 2353 0352 D9000000 		.4byte	0xd9
 2354 0356 02       		.uleb128 0x2
 2355 0357 91       		.byte	0x91
 2356 0358 64       		.sleb128 -28
 2357 0359 0C       		.uleb128 0xc
 2358 035a 633600   		.ascii	"c6\000"
 2359 035d 01       		.byte	0x1
 2360 035e 9C       		.byte	0x9c
 2361 035f D9000000 		.4byte	0xd9
 2362 0363 02       		.uleb128 0x2
 2363 0364 91       		.byte	0x91
 2364 0365 60       		.sleb128 -32
 2365 0366 0C       		.uleb128 0xc
 2366 0367 73756D00 		.ascii	"sum\000"
 2367 036b 01       		.byte	0x1
 2368 036c 9D       		.byte	0x9d
 2369 036d D9000000 		.4byte	0xd9
 2370 0371 02       		.uleb128 0x2
 2371 0372 91       		.byte	0x91
 2372 0373 5C       		.sleb128 -36
 2373 0374 0B       		.uleb128 0xb
 2374 0375 11020000 		.4byte	.LASF38
 2375 0379 01       		.byte	0x1
 2376 037a 9E       		.byte	0x9e
 2377 037b E7030000 		.4byte	0x3e7
 2378 037f 02       		.uleb128 0x2
 2379 0380 91       		.byte	0x91
 2380 0381 5B       		.sleb128 -37
 2381 0382 0C       		.uleb128 0xc
 2382 0383 706F7300 		.ascii	"pos\000"
 2383 0387 01       		.byte	0x1
 2384 0388 A0       		.byte	0xa0
 2385 0389 D9000000 		.4byte	0xd9
 2386 038d 02       		.uleb128 0x2
 2387 038e 91       		.byte	0x91
 2388 038f 6C       		.sleb128 -20
 2389 0390 0C       		.uleb128 0xc
 2390 0391 6500     		.ascii	"e\000"
 2391 0393 01       		.byte	0x1
 2392 0394 A3       		.byte	0xa3
 2393 0395 D9000000 		.4byte	0xd9
 2394 0399 02       		.uleb128 0x2
 2395 039a 91       		.byte	0x91
 2396 039b 54       		.sleb128 -44
 2397 039c 0B       		.uleb128 0xb
 2398 039d 0F030000 		.4byte	.LASF39
 2399 03a1 01       		.byte	0x1
 2400 03a2 AC       		.byte	0xac
 2401 03a3 D9000000 		.4byte	0xd9
 2402 03a7 02       		.uleb128 0x2
 2403 03a8 91       		.byte	0x91
 2404 03a9 50       		.sleb128 -48
 2405 03aa 0B       		.uleb128 0xb
 2406 03ab 9A010000 		.4byte	.LASF40
 2407 03af 01       		.byte	0x1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 54


 2408 03b0 AD       		.byte	0xad
 2409 03b1 D9000000 		.4byte	0xd9
 2410 03b5 02       		.uleb128 0x2
 2411 03b6 91       		.byte	0x91
 2412 03b7 4C       		.sleb128 -52
 2413 03b8 0C       		.uleb128 0xc
 2414 03b9 7500     		.ascii	"u\000"
 2415 03bb 01       		.byte	0x1
 2416 03bc AE       		.byte	0xae
 2417 03bd D9000000 		.4byte	0xd9
 2418 03c1 02       		.uleb128 0x2
 2419 03c2 91       		.byte	0x91
 2420 03c3 48       		.sleb128 -56
 2421 03c4 0B       		.uleb128 0xb
 2422 03c5 65030000 		.4byte	.LASF41
 2423 03c9 01       		.byte	0x1
 2424 03ca B0       		.byte	0xb0
 2425 03cb E7030000 		.4byte	0x3e7
 2426 03cf 02       		.uleb128 0x2
 2427 03d0 91       		.byte	0x91
 2428 03d1 47       		.sleb128 -57
 2429 03d2 0B       		.uleb128 0xb
 2430 03d3 98030000 		.4byte	.LASF42
 2431 03d7 01       		.byte	0x1
 2432 03d8 B1       		.byte	0xb1
 2433 03d9 E7030000 		.4byte	0x3e7
 2434 03dd 02       		.uleb128 0x2
 2435 03de 91       		.byte	0x91
 2436 03df 46       		.sleb128 -58
 2437 03e0 00       		.byte	0
 2438 03e1 11       		.uleb128 0x11
 2439 03e2 04       		.byte	0x4
 2440 03e3 2A010000 		.4byte	0x12a
 2441 03e7 03       		.uleb128 0x3
 2442 03e8 01       		.byte	0x1
 2443 03e9 02       		.byte	0x2
 2444 03ea EE020000 		.4byte	.LASF43
 2445 03ee 12       		.uleb128 0x12
 2446 03ef EE000000 		.4byte	.LASF70
 2447 03f3 01       		.byte	0x1
 2448 03f4 BE       		.byte	0xbe
 2449 03f5 94000000 		.4byte	0x94
 2450 03f9 00000000 		.4byte	.LFB69
 2451 03fd 28060000 		.4byte	.LFE69-.LFB69
 2452 0401 01       		.uleb128 0x1
 2453 0402 9C       		.byte	0x9c
 2454 0403 26050000 		.4byte	0x526
 2455 0407 0B       		.uleb128 0xb
 2456 0408 C8020000 		.4byte	.LASF44
 2457 040c 01       		.byte	0x1
 2458 040d DC       		.byte	0xdc
 2459 040e 94000000 		.4byte	0x94
 2460 0412 02       		.uleb128 0x2
 2461 0413 91       		.byte	0x91
 2462 0414 64       		.sleb128 -28
 2463 0415 0C       		.uleb128 0xc
 2464 0416 706900   		.ascii	"pi\000"
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 55


 2465 0419 01       		.byte	0x1
 2466 041a E1       		.byte	0xe1
 2467 041b 2A010000 		.4byte	0x12a
 2468 041f 03       		.uleb128 0x3
 2469 0420 91       		.byte	0x91
 2470 0421 BC7F     		.sleb128 -68
 2471 0423 0B       		.uleb128 0xb
 2472 0424 85020000 		.4byte	.LASF45
 2473 0428 01       		.byte	0x1
 2474 0429 EF       		.byte	0xef
 2475 042a 3B050000 		.4byte	0x53b
 2476 042e 03       		.uleb128 0x3
 2477 042f 91       		.byte	0x91
 2478 0430 847F     		.sleb128 -124
 2479 0432 13       		.uleb128 0x13
 2480 0433 00000000 		.4byte	.LASF46
 2481 0437 01       		.byte	0x1
 2482 0438 3001     		.2byte	0x130
 2483 043a 40050000 		.4byte	0x540
 2484 043e 02       		.uleb128 0x2
 2485 043f 91       		.byte	0x91
 2486 0440 56       		.sleb128 -42
 2487 0441 14       		.uleb128 0x14
 2488 0442 6900     		.ascii	"i\000"
 2489 0444 01       		.byte	0x1
 2490 0445 3201     		.2byte	0x132
 2491 0447 A2000000 		.4byte	0xa2
 2492 044b 02       		.uleb128 0x2
 2493 044c 91       		.byte	0x91
 2494 044d 63       		.sleb128 -29
 2495 044e 13       		.uleb128 0x13
 2496 044f BD030000 		.4byte	.LASF47
 2497 0453 01       		.byte	0x1
 2498 0454 3301     		.2byte	0x133
 2499 0456 C3000000 		.4byte	0xc3
 2500 045a 02       		.uleb128 0x2
 2501 045b 91       		.byte	0x91
 2502 045c 5C       		.sleb128 -36
 2503 045d 13       		.uleb128 0x13
 2504 045e 20000000 		.4byte	.LASF48
 2505 0462 01       		.byte	0x1
 2506 0463 3501     		.2byte	0x135
 2507 0465 A2000000 		.4byte	0xa2
 2508 0469 02       		.uleb128 0x2
 2509 046a 91       		.byte	0x91
 2510 046b 5B       		.sleb128 -37
 2511 046c 13       		.uleb128 0x13
 2512 046d 49000000 		.4byte	.LASF49
 2513 0471 01       		.byte	0x1
 2514 0472 3601     		.2byte	0x136
 2515 0474 A2000000 		.4byte	0xa2
 2516 0478 02       		.uleb128 0x2
 2517 0479 91       		.byte	0x91
 2518 047a 5A       		.sleb128 -38
 2519 047b 13       		.uleb128 0x13
 2520 047c D2030000 		.4byte	.LASF50
 2521 0480 01       		.byte	0x1
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 56


 2522 0481 3701     		.2byte	0x137
 2523 0483 A2000000 		.4byte	0xa2
 2524 0487 02       		.uleb128 0x2
 2525 0488 91       		.byte	0x91
 2526 0489 59       		.sleb128 -39
 2527 048a 13       		.uleb128 0x13
 2528 048b C5010000 		.4byte	.LASF51
 2529 048f 01       		.byte	0x1
 2530 0490 3801     		.2byte	0x138
 2531 0492 A2000000 		.4byte	0xa2
 2532 0496 02       		.uleb128 0x2
 2533 0497 91       		.byte	0x91
 2534 0498 58       		.sleb128 -40
 2535 0499 0A       		.uleb128 0xa
 2536 049a 0A010000 		.4byte	.LBB3
 2537 049e 18050000 		.4byte	.LBE3-.LBB3
 2538 04a2 13       		.uleb128 0x13
 2539 04a3 32000000 		.4byte	.LASF32
 2540 04a7 01       		.byte	0x1
 2541 04a8 4501     		.2byte	0x145
 2542 04aa B8000000 		.4byte	0xb8
 2543 04ae 03       		.uleb128 0x3
 2544 04af 91       		.byte	0x91
 2545 04b0 827F     		.sleb128 -126
 2546 04b2 13       		.uleb128 0x13
 2547 04b3 63010000 		.4byte	.LASF33
 2548 04b7 01       		.byte	0x1
 2549 04b8 4501     		.2byte	0x145
 2550 04ba B8000000 		.4byte	0xb8
 2551 04be 03       		.uleb128 0x3
 2552 04bf 91       		.byte	0x91
 2553 04c0 807F     		.sleb128 -128
 2554 04c2 13       		.uleb128 0x13
 2555 04c3 61020000 		.4byte	.LASF34
 2556 04c7 01       		.byte	0x1
 2557 04c8 4501     		.2byte	0x145
 2558 04ca B8000000 		.4byte	0xb8
 2559 04ce 03       		.uleb128 0x3
 2560 04cf 91       		.byte	0x91
 2561 04d0 FE7E     		.sleb128 -130
 2562 04d2 15       		.uleb128 0x15
 2563 04d3 4C010000 		.4byte	.LBB4
 2564 04d7 8A000000 		.4byte	.LBE4-.LBB4
 2565 04db 0B050000 		.4byte	0x50b
 2566 04df 13       		.uleb128 0x13
 2567 04e0 E8020000 		.4byte	.LASF52
 2568 04e4 01       		.byte	0x1
 2569 04e5 7501     		.2byte	0x175
 2570 04e7 94000000 		.4byte	0x94
 2571 04eb 02       		.uleb128 0x2
 2572 04ec 91       		.byte	0x91
 2573 04ed 50       		.sleb128 -48
 2574 04ee 14       		.uleb128 0x14
 2575 04ef 563100   		.ascii	"V1\000"
 2576 04f2 01       		.byte	0x1
 2577 04f3 7801     		.2byte	0x178
 2578 04f5 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 57


 2579 04f9 02       		.uleb128 0x2
 2580 04fa 91       		.byte	0x91
 2581 04fb 4E       		.sleb128 -50
 2582 04fc 14       		.uleb128 0x14
 2583 04fd 563200   		.ascii	"V2\000"
 2584 0500 01       		.byte	0x1
 2585 0501 7A01     		.2byte	0x17a
 2586 0503 B8000000 		.4byte	0xb8
 2587 0507 02       		.uleb128 0x2
 2588 0508 91       		.byte	0x91
 2589 0509 4C       		.sleb128 -52
 2590 050a 00       		.byte	0
 2591 050b 0A       		.uleb128 0xa
 2592 050c F0040000 		.4byte	.LBB5
 2593 0510 1A000000 		.4byte	.LBE5-.LBB5
 2594 0514 13       		.uleb128 0x13
 2595 0515 E8020000 		.4byte	.LASF52
 2596 0519 01       		.byte	0x1
 2597 051a 2002     		.2byte	0x220
 2598 051c 94000000 		.4byte	0x94
 2599 0520 02       		.uleb128 0x2
 2600 0521 91       		.byte	0x91
 2601 0522 48       		.sleb128 -56
 2602 0523 00       		.byte	0
 2603 0524 00       		.byte	0
 2604 0525 00       		.byte	0
 2605 0526 16       		.uleb128 0x16
 2606 0527 36050000 		.4byte	0x536
 2607 052b 36050000 		.4byte	0x536
 2608 052f 17       		.uleb128 0x17
 2609 0530 F5000000 		.4byte	0xf5
 2610 0534 37       		.byte	0x37
 2611 0535 00       		.byte	0
 2612 0536 18       		.uleb128 0x18
 2613 0537 AD000000 		.4byte	0xad
 2614 053b 18       		.uleb128 0x18
 2615 053c 26050000 		.4byte	0x526
 2616 0540 18       		.uleb128 0x18
 2617 0541 B8000000 		.4byte	0xb8
 2618 0545 0B       		.uleb128 0xb
 2619 0546 B8010000 		.4byte	.LASF53
 2620 054a 01       		.byte	0x1
 2621 054b 3A       		.byte	0x3a
 2622 054c AD000000 		.4byte	0xad
 2623 0550 05       		.uleb128 0x5
 2624 0551 03       		.byte	0x3
 2625 0552 00000000 		.4byte	sen1_on_line
 2626 0556 0B       		.uleb128 0xb
 2627 0557 E5010000 		.4byte	.LASF54
 2628 055b 01       		.byte	0x1
 2629 055c 3A       		.byte	0x3a
 2630 055d AD000000 		.4byte	0xad
 2631 0561 05       		.uleb128 0x5
 2632 0562 03       		.byte	0x3
 2633 0563 01000000 		.4byte	sen2_on_line
 2634 0567 0B       		.uleb128 0xb
 2635 0568 17020000 		.4byte	.LASF55
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 58


 2636 056c 01       		.byte	0x1
 2637 056d 3A       		.byte	0x3a
 2638 056e AD000000 		.4byte	0xad
 2639 0572 05       		.uleb128 0x5
 2640 0573 03       		.byte	0x3
 2641 0574 02000000 		.4byte	sen3_on_line
 2642 0578 0B       		.uleb128 0xb
 2643 0579 47020000 		.4byte	.LASF56
 2644 057d 01       		.byte	0x1
 2645 057e 3B       		.byte	0x3b
 2646 057f AD000000 		.4byte	0xad
 2647 0583 05       		.uleb128 0x5
 2648 0584 03       		.byte	0x3
 2649 0585 03000000 		.4byte	sen4_on_line
 2650 0589 0B       		.uleb128 0xb
 2651 058a 70020000 		.4byte	.LASF57
 2652 058e 01       		.byte	0x1
 2653 058f 3B       		.byte	0x3b
 2654 0590 AD000000 		.4byte	0xad
 2655 0594 05       		.uleb128 0x5
 2656 0595 03       		.byte	0x3
 2657 0596 04000000 		.4byte	sen5_on_line
 2658 059a 0B       		.uleb128 0xb
 2659 059b A3020000 		.4byte	.LASF58
 2660 059f 01       		.byte	0x1
 2661 05a0 3B       		.byte	0x3b
 2662 05a1 AD000000 		.4byte	0xad
 2663 05a5 05       		.uleb128 0x5
 2664 05a6 03       		.byte	0x3
 2665 05a7 05000000 		.4byte	sen6_on_line
 2666 05ab 0B       		.uleb128 0xb
 2667 05ac 8C030000 		.4byte	.LASF59
 2668 05b0 01       		.byte	0x1
 2669 05b1 3E       		.byte	0x3e
 2670 05b2 FC000000 		.4byte	0xfc
 2671 05b6 05       		.uleb128 0x5
 2672 05b7 03       		.byte	0x3
 2673 05b8 06000000 		.4byte	g_direction
 2674 05bc 0B       		.uleb128 0xb
 2675 05bd F2010000 		.4byte	.LASF60
 2676 05c1 01       		.byte	0x1
 2677 05c2 3F       		.byte	0x3f
 2678 05c3 FC000000 		.4byte	0xfc
 2679 05c7 05       		.uleb128 0x5
 2680 05c8 03       		.byte	0x3
 2681 05c9 07000000 		.4byte	g_stop_now
 2682 05cd 0B       		.uleb128 0xb
 2683 05ce A6030000 		.4byte	.LASF61
 2684 05d2 01       		.byte	0x1
 2685 05d3 40       		.byte	0x40
 2686 05d4 DE050000 		.4byte	0x5de
 2687 05d8 05       		.uleb128 0x5
 2688 05d9 03       		.byte	0x3
 2689 05da 08000000 		.4byte	g_dist_mm
 2690 05de 05       		.uleb128 0x5
 2691 05df C3000000 		.4byte	0xc3
 2692 05e3 0B       		.uleb128 0xb
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 59


 2693 05e4 FF020000 		.4byte	.LASF62
 2694 05e8 01       		.byte	0x1
 2695 05e9 43       		.byte	0x43
 2696 05ea B8000000 		.4byte	0xb8
 2697 05ee 05       		.uleb128 0x5
 2698 05ef 03       		.byte	0x3
 2699 05f0 0C000000 		.4byte	dir_delay_ticks
 2700 05f4 0B       		.uleb128 0xb
 2701 05f5 0F000000 		.4byte	.LASF63
 2702 05f9 01       		.byte	0x1
 2703 05fa 44       		.byte	0x44
 2704 05fb AD000000 		.4byte	0xad
 2705 05ff 05       		.uleb128 0x5
 2706 0600 03       		.byte	0x3
 2707 0601 0E000000 		.4byte	dir_latched_side
 2708 0605 0B       		.uleb128 0xb
 2709 0606 FD010000 		.4byte	.LASF64
 2710 060a 01       		.byte	0x1
 2711 060b 47       		.byte	0x47
 2712 060c B8000000 		.4byte	0xb8
 2713 0610 05       		.uleb128 0x5
 2714 0611 03       		.byte	0x3
 2715 0612 10000000 		.4byte	turn_cooldown_ticks
 2716 0616 19       		.uleb128 0x19
 2717 0617 B0030000 		.4byte	.LASF71
 2718 061b 04       		.byte	0x4
 2719 061c 1207     		.2byte	0x712
 2720 061e DE050000 		.4byte	0x5de
 2721 0622 00       		.byte	0
 2722              		.section	.debug_abbrev,"",%progbits
 2723              	.Ldebug_abbrev0:
 2724 0000 01       		.uleb128 0x1
 2725 0001 11       		.uleb128 0x11
 2726 0002 01       		.byte	0x1
 2727 0003 25       		.uleb128 0x25
 2728 0004 0E       		.uleb128 0xe
 2729 0005 13       		.uleb128 0x13
 2730 0006 0B       		.uleb128 0xb
 2731 0007 03       		.uleb128 0x3
 2732 0008 0E       		.uleb128 0xe
 2733 0009 1B       		.uleb128 0x1b
 2734 000a 0E       		.uleb128 0xe
 2735 000b 55       		.uleb128 0x55
 2736 000c 17       		.uleb128 0x17
 2737 000d 11       		.uleb128 0x11
 2738 000e 01       		.uleb128 0x1
 2739 000f 10       		.uleb128 0x10
 2740 0010 17       		.uleb128 0x17
 2741 0011 00       		.byte	0
 2742 0012 00       		.byte	0
 2743 0013 02       		.uleb128 0x2
 2744 0014 16       		.uleb128 0x16
 2745 0015 00       		.byte	0
 2746 0016 03       		.uleb128 0x3
 2747 0017 0E       		.uleb128 0xe
 2748 0018 3A       		.uleb128 0x3a
 2749 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 60


 2750 001a 3B       		.uleb128 0x3b
 2751 001b 0B       		.uleb128 0xb
 2752 001c 49       		.uleb128 0x49
 2753 001d 13       		.uleb128 0x13
 2754 001e 00       		.byte	0
 2755 001f 00       		.byte	0
 2756 0020 03       		.uleb128 0x3
 2757 0021 24       		.uleb128 0x24
 2758 0022 00       		.byte	0
 2759 0023 0B       		.uleb128 0xb
 2760 0024 0B       		.uleb128 0xb
 2761 0025 3E       		.uleb128 0x3e
 2762 0026 0B       		.uleb128 0xb
 2763 0027 03       		.uleb128 0x3
 2764 0028 0E       		.uleb128 0xe
 2765 0029 00       		.byte	0
 2766 002a 00       		.byte	0
 2767 002b 04       		.uleb128 0x4
 2768 002c 24       		.uleb128 0x24
 2769 002d 00       		.byte	0
 2770 002e 0B       		.uleb128 0xb
 2771 002f 0B       		.uleb128 0xb
 2772 0030 3E       		.uleb128 0x3e
 2773 0031 0B       		.uleb128 0xb
 2774 0032 03       		.uleb128 0x3
 2775 0033 08       		.uleb128 0x8
 2776 0034 00       		.byte	0
 2777 0035 00       		.byte	0
 2778 0036 05       		.uleb128 0x5
 2779 0037 35       		.uleb128 0x35
 2780 0038 00       		.byte	0
 2781 0039 49       		.uleb128 0x49
 2782 003a 13       		.uleb128 0x13
 2783 003b 00       		.byte	0
 2784 003c 00       		.byte	0
 2785 003d 06       		.uleb128 0x6
 2786 003e 13       		.uleb128 0x13
 2787 003f 01       		.byte	0x1
 2788 0040 0B       		.uleb128 0xb
 2789 0041 0B       		.uleb128 0xb
 2790 0042 3A       		.uleb128 0x3a
 2791 0043 0B       		.uleb128 0xb
 2792 0044 3B       		.uleb128 0x3b
 2793 0045 0B       		.uleb128 0xb
 2794 0046 01       		.uleb128 0x1
 2795 0047 13       		.uleb128 0x13
 2796 0048 00       		.byte	0
 2797 0049 00       		.byte	0
 2798 004a 07       		.uleb128 0x7
 2799 004b 0D       		.uleb128 0xd
 2800 004c 00       		.byte	0
 2801 004d 03       		.uleb128 0x3
 2802 004e 08       		.uleb128 0x8
 2803 004f 3A       		.uleb128 0x3a
 2804 0050 0B       		.uleb128 0xb
 2805 0051 3B       		.uleb128 0x3b
 2806 0052 0B       		.uleb128 0xb
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 61


 2807 0053 49       		.uleb128 0x49
 2808 0054 13       		.uleb128 0x13
 2809 0055 38       		.uleb128 0x38
 2810 0056 0B       		.uleb128 0xb
 2811 0057 00       		.byte	0
 2812 0058 00       		.byte	0
 2813 0059 08       		.uleb128 0x8
 2814 005a 0D       		.uleb128 0xd
 2815 005b 00       		.byte	0
 2816 005c 03       		.uleb128 0x3
 2817 005d 0E       		.uleb128 0xe
 2818 005e 3A       		.uleb128 0x3a
 2819 005f 0B       		.uleb128 0xb
 2820 0060 3B       		.uleb128 0x3b
 2821 0061 0B       		.uleb128 0xb
 2822 0062 49       		.uleb128 0x49
 2823 0063 13       		.uleb128 0x13
 2824 0064 38       		.uleb128 0x38
 2825 0065 0B       		.uleb128 0xb
 2826 0066 00       		.byte	0
 2827 0067 00       		.byte	0
 2828 0068 09       		.uleb128 0x9
 2829 0069 2E       		.uleb128 0x2e
 2830 006a 01       		.byte	0x1
 2831 006b 3F       		.uleb128 0x3f
 2832 006c 19       		.uleb128 0x19
 2833 006d 03       		.uleb128 0x3
 2834 006e 0E       		.uleb128 0xe
 2835 006f 3A       		.uleb128 0x3a
 2836 0070 0B       		.uleb128 0xb
 2837 0071 3B       		.uleb128 0x3b
 2838 0072 0B       		.uleb128 0xb
 2839 0073 27       		.uleb128 0x27
 2840 0074 19       		.uleb128 0x19
 2841 0075 11       		.uleb128 0x11
 2842 0076 01       		.uleb128 0x1
 2843 0077 12       		.uleb128 0x12
 2844 0078 06       		.uleb128 0x6
 2845 0079 40       		.uleb128 0x40
 2846 007a 18       		.uleb128 0x18
 2847 007b 9642     		.uleb128 0x2116
 2848 007d 19       		.uleb128 0x19
 2849 007e 01       		.uleb128 0x1
 2850 007f 13       		.uleb128 0x13
 2851 0080 00       		.byte	0
 2852 0081 00       		.byte	0
 2853 0082 0A       		.uleb128 0xa
 2854 0083 0B       		.uleb128 0xb
 2855 0084 01       		.byte	0x1
 2856 0085 11       		.uleb128 0x11
 2857 0086 01       		.uleb128 0x1
 2858 0087 12       		.uleb128 0x12
 2859 0088 06       		.uleb128 0x6
 2860 0089 00       		.byte	0
 2861 008a 00       		.byte	0
 2862 008b 0B       		.uleb128 0xb
 2863 008c 34       		.uleb128 0x34
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 62


 2864 008d 00       		.byte	0
 2865 008e 03       		.uleb128 0x3
 2866 008f 0E       		.uleb128 0xe
 2867 0090 3A       		.uleb128 0x3a
 2868 0091 0B       		.uleb128 0xb
 2869 0092 3B       		.uleb128 0x3b
 2870 0093 0B       		.uleb128 0xb
 2871 0094 49       		.uleb128 0x49
 2872 0095 13       		.uleb128 0x13
 2873 0096 02       		.uleb128 0x2
 2874 0097 18       		.uleb128 0x18
 2875 0098 00       		.byte	0
 2876 0099 00       		.byte	0
 2877 009a 0C       		.uleb128 0xc
 2878 009b 34       		.uleb128 0x34
 2879 009c 00       		.byte	0
 2880 009d 03       		.uleb128 0x3
 2881 009e 08       		.uleb128 0x8
 2882 009f 3A       		.uleb128 0x3a
 2883 00a0 0B       		.uleb128 0xb
 2884 00a1 3B       		.uleb128 0x3b
 2885 00a2 0B       		.uleb128 0xb
 2886 00a3 49       		.uleb128 0x49
 2887 00a4 13       		.uleb128 0x13
 2888 00a5 02       		.uleb128 0x2
 2889 00a6 18       		.uleb128 0x18
 2890 00a7 00       		.byte	0
 2891 00a8 00       		.byte	0
 2892 00a9 0D       		.uleb128 0xd
 2893 00aa 2E       		.uleb128 0x2e
 2894 00ab 01       		.byte	0x1
 2895 00ac 03       		.uleb128 0x3
 2896 00ad 0E       		.uleb128 0xe
 2897 00ae 3A       		.uleb128 0x3a
 2898 00af 0B       		.uleb128 0xb
 2899 00b0 3B       		.uleb128 0x3b
 2900 00b1 0B       		.uleb128 0xb
 2901 00b2 27       		.uleb128 0x27
 2902 00b3 19       		.uleb128 0x19
 2903 00b4 49       		.uleb128 0x49
 2904 00b5 13       		.uleb128 0x13
 2905 00b6 11       		.uleb128 0x11
 2906 00b7 01       		.uleb128 0x1
 2907 00b8 12       		.uleb128 0x12
 2908 00b9 06       		.uleb128 0x6
 2909 00ba 40       		.uleb128 0x40
 2910 00bb 18       		.uleb128 0x18
 2911 00bc 9642     		.uleb128 0x2116
 2912 00be 19       		.uleb128 0x19
 2913 00bf 01       		.uleb128 0x1
 2914 00c0 13       		.uleb128 0x13
 2915 00c1 00       		.byte	0
 2916 00c2 00       		.byte	0
 2917 00c3 0E       		.uleb128 0xe
 2918 00c4 05       		.uleb128 0x5
 2919 00c5 00       		.byte	0
 2920 00c6 03       		.uleb128 0x3
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 63


 2921 00c7 08       		.uleb128 0x8
 2922 00c8 3A       		.uleb128 0x3a
 2923 00c9 0B       		.uleb128 0xb
 2924 00ca 3B       		.uleb128 0x3b
 2925 00cb 0B       		.uleb128 0xb
 2926 00cc 49       		.uleb128 0x49
 2927 00cd 13       		.uleb128 0x13
 2928 00ce 02       		.uleb128 0x2
 2929 00cf 18       		.uleb128 0x18
 2930 00d0 00       		.byte	0
 2931 00d1 00       		.byte	0
 2932 00d2 0F       		.uleb128 0xf
 2933 00d3 2E       		.uleb128 0x2e
 2934 00d4 01       		.byte	0x1
 2935 00d5 03       		.uleb128 0x3
 2936 00d6 0E       		.uleb128 0xe
 2937 00d7 3A       		.uleb128 0x3a
 2938 00d8 0B       		.uleb128 0xb
 2939 00d9 3B       		.uleb128 0x3b
 2940 00da 0B       		.uleb128 0xb
 2941 00db 27       		.uleb128 0x27
 2942 00dc 19       		.uleb128 0x19
 2943 00dd 11       		.uleb128 0x11
 2944 00de 01       		.uleb128 0x1
 2945 00df 12       		.uleb128 0x12
 2946 00e0 06       		.uleb128 0x6
 2947 00e1 40       		.uleb128 0x40
 2948 00e2 18       		.uleb128 0x18
 2949 00e3 9642     		.uleb128 0x2116
 2950 00e5 19       		.uleb128 0x19
 2951 00e6 01       		.uleb128 0x1
 2952 00e7 13       		.uleb128 0x13
 2953 00e8 00       		.byte	0
 2954 00e9 00       		.byte	0
 2955 00ea 10       		.uleb128 0x10
 2956 00eb 05       		.uleb128 0x5
 2957 00ec 00       		.byte	0
 2958 00ed 03       		.uleb128 0x3
 2959 00ee 0E       		.uleb128 0xe
 2960 00ef 3A       		.uleb128 0x3a
 2961 00f0 0B       		.uleb128 0xb
 2962 00f1 3B       		.uleb128 0x3b
 2963 00f2 0B       		.uleb128 0xb
 2964 00f3 49       		.uleb128 0x49
 2965 00f4 13       		.uleb128 0x13
 2966 00f5 02       		.uleb128 0x2
 2967 00f6 18       		.uleb128 0x18
 2968 00f7 00       		.byte	0
 2969 00f8 00       		.byte	0
 2970 00f9 11       		.uleb128 0x11
 2971 00fa 0F       		.uleb128 0xf
 2972 00fb 00       		.byte	0
 2973 00fc 0B       		.uleb128 0xb
 2974 00fd 0B       		.uleb128 0xb
 2975 00fe 49       		.uleb128 0x49
 2976 00ff 13       		.uleb128 0x13
 2977 0100 00       		.byte	0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 64


 2978 0101 00       		.byte	0
 2979 0102 12       		.uleb128 0x12
 2980 0103 2E       		.uleb128 0x2e
 2981 0104 01       		.byte	0x1
 2982 0105 3F       		.uleb128 0x3f
 2983 0106 19       		.uleb128 0x19
 2984 0107 03       		.uleb128 0x3
 2985 0108 0E       		.uleb128 0xe
 2986 0109 3A       		.uleb128 0x3a
 2987 010a 0B       		.uleb128 0xb
 2988 010b 3B       		.uleb128 0x3b
 2989 010c 0B       		.uleb128 0xb
 2990 010d 27       		.uleb128 0x27
 2991 010e 19       		.uleb128 0x19
 2992 010f 49       		.uleb128 0x49
 2993 0110 13       		.uleb128 0x13
 2994 0111 11       		.uleb128 0x11
 2995 0112 01       		.uleb128 0x1
 2996 0113 12       		.uleb128 0x12
 2997 0114 06       		.uleb128 0x6
 2998 0115 40       		.uleb128 0x40
 2999 0116 18       		.uleb128 0x18
 3000 0117 9642     		.uleb128 0x2116
 3001 0119 19       		.uleb128 0x19
 3002 011a 01       		.uleb128 0x1
 3003 011b 13       		.uleb128 0x13
 3004 011c 00       		.byte	0
 3005 011d 00       		.byte	0
 3006 011e 13       		.uleb128 0x13
 3007 011f 34       		.uleb128 0x34
 3008 0120 00       		.byte	0
 3009 0121 03       		.uleb128 0x3
 3010 0122 0E       		.uleb128 0xe
 3011 0123 3A       		.uleb128 0x3a
 3012 0124 0B       		.uleb128 0xb
 3013 0125 3B       		.uleb128 0x3b
 3014 0126 05       		.uleb128 0x5
 3015 0127 49       		.uleb128 0x49
 3016 0128 13       		.uleb128 0x13
 3017 0129 02       		.uleb128 0x2
 3018 012a 18       		.uleb128 0x18
 3019 012b 00       		.byte	0
 3020 012c 00       		.byte	0
 3021 012d 14       		.uleb128 0x14
 3022 012e 34       		.uleb128 0x34
 3023 012f 00       		.byte	0
 3024 0130 03       		.uleb128 0x3
 3025 0131 08       		.uleb128 0x8
 3026 0132 3A       		.uleb128 0x3a
 3027 0133 0B       		.uleb128 0xb
 3028 0134 3B       		.uleb128 0x3b
 3029 0135 05       		.uleb128 0x5
 3030 0136 49       		.uleb128 0x49
 3031 0137 13       		.uleb128 0x13
 3032 0138 02       		.uleb128 0x2
 3033 0139 18       		.uleb128 0x18
 3034 013a 00       		.byte	0
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 65


 3035 013b 00       		.byte	0
 3036 013c 15       		.uleb128 0x15
 3037 013d 0B       		.uleb128 0xb
 3038 013e 01       		.byte	0x1
 3039 013f 11       		.uleb128 0x11
 3040 0140 01       		.uleb128 0x1
 3041 0141 12       		.uleb128 0x12
 3042 0142 06       		.uleb128 0x6
 3043 0143 01       		.uleb128 0x1
 3044 0144 13       		.uleb128 0x13
 3045 0145 00       		.byte	0
 3046 0146 00       		.byte	0
 3047 0147 16       		.uleb128 0x16
 3048 0148 01       		.uleb128 0x1
 3049 0149 01       		.byte	0x1
 3050 014a 49       		.uleb128 0x49
 3051 014b 13       		.uleb128 0x13
 3052 014c 01       		.uleb128 0x1
 3053 014d 13       		.uleb128 0x13
 3054 014e 00       		.byte	0
 3055 014f 00       		.byte	0
 3056 0150 17       		.uleb128 0x17
 3057 0151 21       		.uleb128 0x21
 3058 0152 00       		.byte	0
 3059 0153 49       		.uleb128 0x49
 3060 0154 13       		.uleb128 0x13
 3061 0155 2F       		.uleb128 0x2f
 3062 0156 0B       		.uleb128 0xb
 3063 0157 00       		.byte	0
 3064 0158 00       		.byte	0
 3065 0159 18       		.uleb128 0x18
 3066 015a 26       		.uleb128 0x26
 3067 015b 00       		.byte	0
 3068 015c 49       		.uleb128 0x49
 3069 015d 13       		.uleb128 0x13
 3070 015e 00       		.byte	0
 3071 015f 00       		.byte	0
 3072 0160 19       		.uleb128 0x19
 3073 0161 34       		.uleb128 0x34
 3074 0162 00       		.byte	0
 3075 0163 03       		.uleb128 0x3
 3076 0164 0E       		.uleb128 0xe
 3077 0165 3A       		.uleb128 0x3a
 3078 0166 0B       		.uleb128 0xb
 3079 0167 3B       		.uleb128 0x3b
 3080 0168 05       		.uleb128 0x5
 3081 0169 49       		.uleb128 0x49
 3082 016a 13       		.uleb128 0x13
 3083 016b 3F       		.uleb128 0x3f
 3084 016c 19       		.uleb128 0x19
 3085 016d 3C       		.uleb128 0x3c
 3086 016e 19       		.uleb128 0x19
 3087 016f 00       		.byte	0
 3088 0170 00       		.byte	0
 3089 0171 00       		.byte	0
 3090              		.section	.debug_aranges,"",%progbits
 3091 0000 44000000 		.4byte	0x44
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 66


 3092 0004 0200     		.2byte	0x2
 3093 0006 00000000 		.4byte	.Ldebug_info0
 3094 000a 04       		.byte	0x4
 3095 000b 00       		.byte	0
 3096 000c 0000     		.2byte	0
 3097 000e 0000     		.2byte	0
 3098 0010 00000000 		.4byte	.LFB64
 3099 0014 14010000 		.4byte	.LFE64-.LFB64
 3100 0018 00000000 		.4byte	.LFB65
 3101 001c 44000000 		.4byte	.LFE65-.LFB65
 3102 0020 00000000 		.4byte	.LFB66
 3103 0024 48010000 		.4byte	.LFE66-.LFB66
 3104 0028 00000000 		.4byte	.LFB67
 3105 002c 3A000000 		.4byte	.LFE67-.LFB67
 3106 0030 00000000 		.4byte	.LFB68
 3107 0034 84020000 		.4byte	.LFE68-.LFB68
 3108 0038 00000000 		.4byte	.LFB69
 3109 003c 28060000 		.4byte	.LFE69-.LFB69
 3110 0040 00000000 		.4byte	0
 3111 0044 00000000 		.4byte	0
 3112              		.section	.debug_ranges,"",%progbits
 3113              	.Ldebug_ranges0:
 3114 0000 00000000 		.4byte	.LFB64
 3115 0004 14010000 		.4byte	.LFE64
 3116 0008 00000000 		.4byte	.LFB65
 3117 000c 44000000 		.4byte	.LFE65
 3118 0010 00000000 		.4byte	.LFB66
 3119 0014 48010000 		.4byte	.LFE66
 3120 0018 00000000 		.4byte	.LFB67
 3121 001c 3A000000 		.4byte	.LFE67
 3122 0020 00000000 		.4byte	.LFB68
 3123 0024 84020000 		.4byte	.LFE68
 3124 0028 00000000 		.4byte	.LFB69
 3125 002c 28060000 		.4byte	.LFE69
 3126 0030 00000000 		.4byte	0
 3127 0034 00000000 		.4byte	0
 3128              		.section	.debug_line,"",%progbits
 3129              	.Ldebug_line0:
 3130 0000 AA040000 		.section	.debug_str,"MS",%progbits,1
 3130      02003F01 
 3130      00000201 
 3130      FB0E0D00 
 3130      01010101 
 3131              	.LASF46:
 3132 0000 434D445F 		.ascii	"CMD_STATES_LEN\000"
 3132      53544154 
 3132      45535F4C 
 3132      454E00
 3133              	.LASF63:
 3134 000f 6469725F 		.ascii	"dir_latched_side\000"
 3134      6C617463 
 3134      6865645F 
 3134      73696465 
 3134      00
 3135              	.LASF48:
 3136 0020 73747261 		.ascii	"straight_complete\000"
 3136      69676874 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 67


 3136      5F636F6D 
 3136      706C6574 
 3136      6500
 3137              	.LASF32:
 3138 0032 56345F70 		.ascii	"V4_pp\000"
 3138      7000
 3139              	.LASF14:
 3140 0038 696E7438 		.ascii	"int8_t\000"
 3140      5F7400
 3141              	.LASF4:
 3142 003f 73686F72 		.ascii	"short int\000"
 3142      7420696E 
 3142      7400
 3143              	.LASF49:
 3144 0049 7475726E 		.ascii	"turn_complete\000"
 3144      5F636F6D 
 3144      706C6574 
 3144      6500
 3145              	.LASF23:
 3146 0057 73697A65 		.ascii	"sizetype\000"
 3146      74797065 
 3146      00
 3147              	.LASF65:
 3148 0060 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3148      43313120 
 3148      352E342E 
 3148      31203230 
 3148      31363036 
 3149 0093 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3149      20726576 
 3149      6973696F 
 3149      6E203233 
 3149      37373135 
 3150 00c6 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3150      66756E63 
 3150      74696F6E 
 3150      2D736563 
 3150      74696F6E 
 3151              	.LASF70:
 3152 00ee 6D61696E 		.ascii	"main\000"
 3152      00
 3153              	.LASF5:
 3154 00f3 5F5F7569 		.ascii	"__uint16_t\000"
 3154      6E743136 
 3154      5F7400
 3155              	.LASF18:
 3156 00fe 696E7436 		.ascii	"int64_t\000"
 3156      345F7400 
 3157              	.LASF15:
 3158 0106 75696E74 		.ascii	"uint8_t\000"
 3158      385F7400 
 3159              	.LASF27:
 3160 010e 72617732 		.ascii	"raw2\000"
 3160      00
 3161              	.LASF30:
 3162 0113 646D6D5F 		.ascii	"dmm_abs\000"
 3162      61627300 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 68


 3163              	.LASF67:
 3164 011b 433A5C55 		.ascii	"C:\\Users\\yram171\\Downloads\\Compsys-301-CODE\\YA"
 3164      73657273 
 3164      5C797261 
 3164      6D313731 
 3164      5C446F77 
 3165 0149 53482043 		.ascii	"SH Code\\CS301_Class.cydsn\000"
 3165      6F64655C 
 3165      43533330 
 3165      315F436C 
 3165      6173732E 
 3166              	.LASF33:
 3167 0163 56355F70 		.ascii	"V5_pp\000"
 3167      7000
 3168              	.LASF19:
 3169 0169 666C6F61 		.ascii	"float\000"
 3169      7400
 3170              	.LASF11:
 3171 016f 6C6F6E67 		.ascii	"long long int\000"
 3171      206C6F6E 
 3171      6720696E 
 3171      7400
 3172              	.LASF21:
 3173 017d 63686172 		.ascii	"char\000"
 3173      00
 3174              	.LASF25:
 3175 0182 70695F74 		.ascii	"pi_t\000"
 3175      00
 3176              	.LASF8:
 3177 0187 6C6F6E67 		.ascii	"long int\000"
 3177      20696E74 
 3177      00
 3178              	.LASF10:
 3179 0190 5F5F696E 		.ascii	"__int64_t\000"
 3179      7436345F 
 3179      7400
 3180              	.LASF40:
 3181 019a 755F7261 		.ascii	"u_raw\000"
 3181      7700
 3182              	.LASF1:
 3183 01a0 5F5F7569 		.ascii	"__uint8_t\000"
 3183      6E74385F 
 3183      7400
 3184              	.LASF3:
 3185 01aa 756E7369 		.ascii	"unsigned char\000"
 3185      676E6564 
 3185      20636861 
 3185      7200
 3186              	.LASF53:
 3187 01b8 73656E31 		.ascii	"sen1_on_line\000"
 3187      5F6F6E5F 
 3187      6C696E65 
 3187      00
 3188              	.LASF51:
 3189 01c5 66727569 		.ascii	"fruit_complete\000"
 3189      745F636F 
 3189      6D706C65 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 69


 3189      746500
 3190              	.LASF26:
 3191 01d4 72617731 		.ascii	"raw1\000"
 3191      00
 3192              	.LASF22:
 3193 01d9 6C6F6E67 		.ascii	"long double\000"
 3193      20646F75 
 3193      626C6500 
 3194              	.LASF54:
 3195 01e5 73656E32 		.ascii	"sen2_on_line\000"
 3195      5F6F6E5F 
 3195      6C696E65 
 3195      00
 3196              	.LASF60:
 3197 01f2 675F7374 		.ascii	"g_stop_now\000"
 3197      6F705F6E 
 3197      6F7700
 3198              	.LASF64:
 3199 01fd 7475726E 		.ascii	"turn_cooldown_ticks\000"
 3199      5F636F6F 
 3199      6C646F77 
 3199      6E5F7469 
 3199      636B7300 
 3200              	.LASF38:
 3201 0211 76616C69 		.ascii	"valid\000"
 3201      6400
 3202              	.LASF55:
 3203 0217 73656E33 		.ascii	"sen3_on_line\000"
 3203      5F6F6E5F 
 3203      6C696E65 
 3203      00
 3204              	.LASF2:
 3205 0224 7369676E 		.ascii	"signed char\000"
 3205      65642063 
 3205      68617200 
 3206              	.LASF12:
 3207 0230 6C6F6E67 		.ascii	"long long unsigned int\000"
 3207      206C6F6E 
 3207      6720756E 
 3207      7369676E 
 3207      65642069 
 3208              	.LASF56:
 3209 0247 73656E34 		.ascii	"sen4_on_line\000"
 3209      5F6F6E5F 
 3209      6C696E65 
 3209      00
 3210              	.LASF13:
 3211 0254 756E7369 		.ascii	"unsigned int\000"
 3211      676E6564 
 3211      20696E74 
 3211      00
 3212              	.LASF34:
 3213 0261 56365F70 		.ascii	"V6_pp\000"
 3213      7000
 3214              	.LASF16:
 3215 0267 75696E74 		.ascii	"uint16_t\000"
 3215      31365F74 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 70


 3215      00
 3216              	.LASF57:
 3217 0270 73656E35 		.ascii	"sen5_on_line\000"
 3217      5F6F6E5F 
 3217      6C696E65 
 3217      00
 3218              	.LASF36:
 3219 027d 5F636C61 		.ascii	"_clampf\000"
 3219      6D706600 
 3220              	.LASF45:
 3221 0285 434D445F 		.ascii	"CMD_STATES\000"
 3221      53544154 
 3221      455300
 3222              	.LASF6:
 3223 0290 73686F72 		.ascii	"short unsigned int\000"
 3223      7420756E 
 3223      7369676E 
 3223      65642069 
 3223      6E7400
 3224              	.LASF58:
 3225 02a3 73656E36 		.ascii	"sen6_on_line\000"
 3225      5F6F6E5F 
 3225      6C696E65 
 3225      00
 3226              	.LASF0:
 3227 02b0 5F5F696E 		.ascii	"__int8_t\000"
 3227      74385F74 
 3227      00
 3228              	.LASF68:
 3229 02b9 6973725F 		.ascii	"isr_qd_Handler\000"
 3229      71645F48 
 3229      616E646C 
 3229      657200
 3230              	.LASF44:
 3231 02c8 63656E74 		.ascii	"center_duty_est\000"
 3231      65725F64 
 3231      7574795F 
 3231      65737400 
 3232              	.LASF17:
 3233 02d8 696E7433 		.ascii	"int32_t\000"
 3233      325F7400 
 3234              	.LASF37:
 3235 02e0 70695F73 		.ascii	"pi_step\000"
 3235      74657000 
 3236              	.LASF52:
 3237 02e8 73746565 		.ascii	"steer\000"
 3237      7200
 3238              	.LASF43:
 3239 02ee 5F426F6F 		.ascii	"_Bool\000"
 3239      6C00
 3240              	.LASF31:
 3241 02f4 646D6D5F 		.ascii	"dmm_signed\000"
 3241      7369676E 
 3241      656400
 3242              	.LASF62:
 3243 02ff 6469725F 		.ascii	"dir_delay_ticks\000"
 3243      64656C61 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 71


 3243      795F7469 
 3243      636B7300 
 3244              	.LASF39:
 3245 030f 695F6E65 		.ascii	"i_next\000"
 3245      787400
 3246              	.LASF66:
 3247 0316 6D61696E 		.ascii	"main.c\000"
 3247      2E6300
 3248              	.LASF9:
 3249 031d 6C6F6E67 		.ascii	"long unsigned int\000"
 3249      20756E73 
 3249      69676E65 
 3249      6420696E 
 3249      7400
 3250              	.LASF29:
 3251 032f 64617667 		.ascii	"davg_sign\000"
 3251      5F736967 
 3251      6E00
 3252              	.LASF69:
 3253 0339 6C696768 		.ascii	"light_sensors_update_and_maybe_request_turn\000"
 3253      745F7365 
 3253      6E736F72 
 3253      735F7570 
 3253      64617465 
 3254              	.LASF41:
 3255 0365 7361745F 		.ascii	"sat_hi\000"
 3255      686900
 3256              	.LASF24:
 3257 036c 745F6C6F 		.ascii	"t_loss\000"
 3257      737300
 3258              	.LASF7:
 3259 0373 5F5F696E 		.ascii	"__int32_t\000"
 3259      7433325F 
 3259      7400
 3260              	.LASF35:
 3261 037d 6E6F726D 		.ascii	"norm01_from_pp\000"
 3261      30315F66 
 3261      726F6D5F 
 3261      707000
 3262              	.LASF59:
 3263 038c 675F6469 		.ascii	"g_direction\000"
 3263      72656374 
 3263      696F6E00 
 3264              	.LASF42:
 3265 0398 7361745F 		.ascii	"sat_lo\000"
 3265      6C6F00
 3266              	.LASF20:
 3267 039f 646F7562 		.ascii	"double\000"
 3267      6C6500
 3268              	.LASF61:
 3269 03a6 675F6469 		.ascii	"g_dist_mm\000"
 3269      73745F6D 
 3269      6D00
 3270              	.LASF71:
 3271 03b0 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3271      52784275 
 3271      66666572 
ARM GAS  C:\Users\yram171\AppData\Local\Temp\ccGU35XV.s 			page 72


 3271      00
 3272              	.LASF47:
 3273 03bd 74617267 		.ascii	"target_dist\000"
 3273      65745F64 
 3273      69737400 
 3274              	.LASF28:
 3275 03c9 64617667 		.ascii	"davg_abs\000"
 3275      5F616273 
 3275      00
 3276              	.LASF50:
 3277 03d2 75547572 		.ascii	"uTurn_complete\000"
 3277      6E5F636F 
 3277      6D706C65 
 3277      746500
 3278              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

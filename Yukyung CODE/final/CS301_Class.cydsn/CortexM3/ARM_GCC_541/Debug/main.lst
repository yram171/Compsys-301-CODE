ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	sen1_on_line:
  21 0000 00       		.space	1
  22              	sen2_on_line:
  23 0001 00       		.space	1
  24              	sen3_on_line:
  25 0002 00       		.space	1
  26              	sen4_on_line:
  27 0003 00       		.space	1
  28              	sen5_on_line:
  29 0004 00       		.space	1
  30              	sen6_on_line:
  31 0005 00       		.space	1
  32              	g_direction:
  33 0006 00       		.space	1
  34              	g_stop_now:
  35 0007 00       		.space	1
  36              		.align	2
  37              	g_dist_mm:
  38 0008 00000000 		.space	4
  39              		.align	1
  40              	dir_delay_ticks:
  41 000c 0000     		.space	2
  42              	dir_latched_side:
  43 000e 00       		.space	1
  44 000f 00       		.align	1
  45              	turn_cooldown_ticks:
  46 0010 0000     		.space	2
  47              	s12_prev:
  48 0012 00       		.space	1
  49              	left_sensor_count:
  50 0013 00       		.space	1
  51              	right_sensor_count:
  52 0014 00       		.space	1
  53              		.global	__aeabi_ldivmod
  54              		.section	.text.isr_qd_Handler,"ax",%progbits
  55              		.align	2
  56              		.global	isr_qd_Handler
  57              		.thumb
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 2


  58              		.thumb_func
  59              		.type	isr_qd_Handler, %function
  60              	isr_qd_Handler:
  61              	.LFB64:
  62              		.file 1 "main.c"
   1:main.c        **** /* ========================= main.c (with PI steering + turn-call delay) =========================
   2:main.c        ****  * - Keeps straight-line PI active during a short delay after g_direction flips (Option A)
   3:main.c        ****  * - Then calls Directions_Handle(&g_direction) to run the maneuver
   4:main.c        ****  * - Resets PI integrator after the turn completes
   5:main.c        ****  * ============================================================================================== *
   6:main.c        **** 
   7:main.c        **** #include <project.h>
   8:main.c        **** #include <stdint.h>
   9:main.c        **** #include <stdbool.h>
  10:main.c        **** 
  11:main.c        **** #include <sensors.h>     // Sensor_ComputePeakToPeak()
  12:main.c        **** #include "motor_s.h"     // set_motors_*, motor_enable
  13:main.c        **** #include "directions.h"  // Directions_* turning module
  14:main.c        **** 
  15:main.c        **** 
  16:main.c        **** /* ===== Loop pacing (kept) ===== */
  17:main.c        **** #define LOOP_DT_MS               8u
  18:main.c        **** #define DT_S   ( (float)LOOP_DT_MS / 1000.0f )
  19:main.c        **** 
  20:main.c        **** /* ===== Cruise speed / distance target (kept) ===== */
  21:main.c        **** #define VMAX_CONST_MM_S        1000
  22:main.c        **** #define SPEED_FRAC_PERCENT      20
  23:main.c        **** #define V_CRUISE_MM_S  ((int32_t)VMAX_CONST_MM_S * (int32_t)SPEED_FRAC_PERCENT / 100)
  24:main.c        **** #define TARGET_DIST_MM        150  
  25:main.c        **** 
  26:main.c        **** /* ===== Encoder â†’ mm conversion (kept) ===== */
  27:main.c        **** #define QD_SAMPLE_MS             5u
  28:main.c        **** #define CPR_OUTSHAFT           228u
  29:main.c        **** #define R_MM                    34
  30:main.c        **** #define PI_X1000              3142
  31:main.c        **** #define PERIM_MM_X1000   ((int32_t)(2 * PI_X1000 * R_MM))
  32:main.c        **** #define MM_PER_COUNT_X1000     ( PERIM_MM_X1000 / CPR_OUTSHAFT )
  33:main.c        **** #define CALIB_DIST_X1000     1000   // Changed to 1000 to avoid scaling
  34:main.c        **** #define APPLY_CALIB_DIST(x)  ( (int32_t)(((int64_t)(x) * CALIB_DIST_X1000 + 500)/1000) )
  35:main.c        **** 
  36:main.c        **** /* ===== S1/S2 relaxed detection (kept) ===== */
  37:main.c        **** #define S_MINC_COUNTS            10
  38:main.c        **** #define S_MAXC_COUNTS           100
  39:main.c        **** #define S_HYST_COUNTS           16u
  40:main.c        **** 
  41:main.c        **** /* ===== Turn request filtering (kept) ===== */
  42:main.c        **** #define TURN_DEBOUNCE_TICKS       5u
  43:main.c        **** #define CLEAR_ARM_TICKS           4u
  44:main.c        **** 
  45:main.c        **** #define DIR_CALL_DELAY_MS        (100)  /* wait ~200 ms before starting the maneuver */
  46:main.c        **** #define DIR_CALL_DELAY_TICKS     ((DIR_CALL_DELAY_MS + LOOP_DT_MS - 1) / LOOP_DT_MS)
  47:main.c        **** 
  48:main.c        **** 
  49:main.c        **** // Cooldown after turn to ignore intersection sensors V1 & V2
  50:main.c        ****  #define TURN_COOLDOWN_MS (400)
  51:main.c        **** //static volatile uint16_t TURN_COOLDOWN_MS;
  52:main.c        **** 
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 3


  53:main.c        **** #define TURN_COOLDOWN_TICKS ((TURN_COOLDOWN_MS + LOOP_DT_MS - 1) / LOOP_DT_MS
  54:main.c        **** 
  55:main.c        **** 
  56:main.c        **** 
  57:main.c        **** /* ===== Local sensor flags (used for S1/S2 edge) ===== */
  58:main.c        **** static uint8_t sen1_on_line=0, sen2_on_line=0, sen3_on_line=0;
  59:main.c        **** static uint8_t sen4_on_line=0, sen5_on_line=0, sen6_on_line=0;
  60:main.c        **** 
  61:main.c        **** /* ===== Global state (kept) ===== */
  62:main.c        **** static volatile uint8_t g_direction = 0;   /* 0=straight, 1=left, 2=right */
  63:main.c        **** static volatile uint8_t g_stop_now  = 0;
  64:main.c        **** static volatile int32_t g_dist_mm   = 0;
  65:main.c        **** 
  66:main.c        **** /* ===== Option A state ===== */
  67:main.c        **** static uint16_t dir_delay_ticks = 0;        /* countdown in loop ticks */
  68:main.c        **** static uint8_t  dir_latched_side = 0;       /* remembers 1 or 2 while waiting */
  69:main.c        **** 
  70:main.c        **** 
  71:main.c        **** static uint16_t turn_cooldown_ticks = 0;
  72:main.c        **** static uint8_t s12_prev = 0;
  73:main.c        **** 
  74:main.c        **** static uint8_t left_sensor_count = 0;  // Counts left sensor detections
  75:main.c        **** static uint8_t right_sensor_count = 0; // Counts right sensor detections
  76:main.c        **** 
  77:main.c        **** 
  78:main.c        **** 
  79:main.c        **** /* ------------------------------- 5 ms Timer ISR: accumulate distance (kept) ---------------------
  80:main.c        **** CY_ISR(isr_qd_Handler)
  81:main.c        **** {
  63              		.loc 1 81 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 48
  66              		@ frame_needed = 1, uses_anonymous_args = 0
  67 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  68              		.cfi_def_cfa_offset 36
  69              		.cfi_offset 4, -36
  70              		.cfi_offset 5, -32
  71              		.cfi_offset 6, -28
  72              		.cfi_offset 7, -24
  73              		.cfi_offset 8, -20
  74              		.cfi_offset 9, -16
  75              		.cfi_offset 10, -12
  76              		.cfi_offset 11, -8
  77              		.cfi_offset 14, -4
  78 0004 8DB0     		sub	sp, sp, #52
  79              		.cfi_def_cfa_offset 88
  80 0006 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  82:main.c        ****     if (g_direction == 0u) {  // Only accumulate distance when moving straight
  82              		.loc 1 82 0
  83 0008 404B     		ldr	r3, .L7
  84 000a 1B78     		ldrb	r3, [r3]
  85 000c DBB2     		uxtb	r3, r3
  86 000e 002B     		cmp	r3, #0
  87 0010 74D1     		bne	.L2
  88              	.LBB2:
  83:main.c        ****         int32_t raw1 = QuadDec_M1_GetCounter();  QuadDec_M1_SetCounter(0);
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 4


  89              		.loc 1 83 0
  90 0012 FFF7FEFF 		bl	QuadDec_M1_GetCounter
  91 0016 0346     		mov	r3, r0
  92 0018 FB62     		str	r3, [r7, #44]
  93 001a 0020     		movs	r0, #0
  94 001c FFF7FEFF 		bl	QuadDec_M1_SetCounter
  84:main.c        ****         int32_t raw2 = QuadDec_M2_GetCounter();  QuadDec_M2_SetCounter(0);
  95              		.loc 1 84 0
  96 0020 FFF7FEFF 		bl	QuadDec_M2_GetCounter
  97 0024 0346     		mov	r3, r0
  98 0026 BB62     		str	r3, [r7, #40]
  99 0028 0020     		movs	r0, #0
 100 002a FFF7FEFF 		bl	QuadDec_M2_SetCounter
  85:main.c        **** 
  86:main.c        ****         int32_t d1 = raw1, d2 = raw2;
 101              		.loc 1 86 0
 102 002e FB6A     		ldr	r3, [r7, #44]
 103 0030 7B62     		str	r3, [r7, #36]
 104 0032 BB6A     		ldr	r3, [r7, #40]
 105 0034 3B62     		str	r3, [r7, #32]
  87:main.c        ****         int32_t a1 = (d1 >= 0) ? d1 : -d1;
 106              		.loc 1 87 0
 107 0036 7B6A     		ldr	r3, [r7, #36]
 108 0038 002B     		cmp	r3, #0
 109 003a B8BF     		it	lt
 110 003c 5B42     		rsblt	r3, r3, #0
 111 003e FB61     		str	r3, [r7, #28]
  88:main.c        ****         int32_t a2 = (d2 >= 0) ? d2 : -d2;
 112              		.loc 1 88 0
 113 0040 3B6A     		ldr	r3, [r7, #32]
 114 0042 002B     		cmp	r3, #0
 115 0044 B8BF     		it	lt
 116 0046 5B42     		rsblt	r3, r3, #0
 117 0048 BB61     		str	r3, [r7, #24]
  89:main.c        ****         int32_t davg_abs = (a1 + a2) / 2;
 118              		.loc 1 89 0
 119 004a FA69     		ldr	r2, [r7, #28]
 120 004c BB69     		ldr	r3, [r7, #24]
 121 004e 1344     		add	r3, r3, r2
 122 0050 DA0F     		lsrs	r2, r3, #31
 123 0052 1344     		add	r3, r3, r2
 124 0054 5B10     		asrs	r3, r3, #1
 125 0056 7B61     		str	r3, [r7, #20]
  90:main.c        ****         int32_t davg_sign = ((d1 + d2) >= 0) ? +1 : -1;
 126              		.loc 1 90 0
 127 0058 7A6A     		ldr	r2, [r7, #36]
 128 005a 3B6A     		ldr	r3, [r7, #32]
 129 005c 1344     		add	r3, r3, r2
 130 005e 002B     		cmp	r3, #0
 131 0060 01DB     		blt	.L3
 132              		.loc 1 90 0 is_stmt 0 discriminator 1
 133 0062 0123     		movs	r3, #1
 134 0064 01E0     		b	.L4
 135              	.L3:
 136              		.loc 1 90 0 discriminator 2
 137 0066 4FF0FF33 		mov	r3, #-1
 138              	.L4:
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 5


 139              		.loc 1 90 0 discriminator 4
 140 006a 3B61     		str	r3, [r7, #16]
  91:main.c        **** 
  92:main.c        ****         // Calculate the distance moved
  93:main.c        ****         int64_t num = (int64_t)(davg_abs) * MM_PER_COUNT_X1000;  // Calculate mm from encoder count
 141              		.loc 1 93 0 is_stmt 1 discriminator 4
 142 006c 7B69     		ldr	r3, [r7, #20]
 143 006e 1946     		mov	r1, r3
 144 0070 4FEAE172 		asr	r2, r1, #31
 145 0074 0B46     		mov	r3, r1
 146 0076 1446     		mov	r4, r2
 147 0078 DB18     		adds	r3, r3, r3
 148 007a 44EB0404 		adc	r4, r4, r4
 149 007e 5B18     		adds	r3, r3, r1
 150 0080 44EB0204 		adc	r4, r4, r2
 151 0084 4FEA840B 		lsl	fp, r4, #2
 152 0088 4BEA937B 		orr	fp, fp, r3, lsr #30
 153 008c 4FEA830A 		lsl	r10, r3, #2
 154 0090 5346     		mov	r3, r10
 155 0092 5C46     		mov	r4, fp
 156 0094 5B18     		adds	r3, r3, r1
 157 0096 44EB0204 		adc	r4, r4, r2
 158 009a E600     		lsls	r6, r4, #3
 159 009c 46EA5376 		orr	r6, r6, r3, lsr #29
 160 00a0 DD00     		lsls	r5, r3, #3
 161 00a2 5B19     		adds	r3, r3, r5
 162 00a4 44EB0604 		adc	r4, r4, r6
 163 00a8 4FEAC409 		lsl	r9, r4, #3
 164 00ac 49EA5379 		orr	r9, r9, r3, lsr #29
 165 00b0 4FEAC308 		lsl	r8, r3, #3
 166 00b4 4346     		mov	r3, r8
 167 00b6 4C46     		mov	r4, r9
 168 00b8 5B18     		adds	r3, r3, r1
 169 00ba 44EB0204 		adc	r4, r4, r2
 170 00be C7E90234 		strd	r3, [r7, #8]
  94:main.c        ****         int32_t dmm_abs = (int32_t)((num + 500) / 1000);          // Round to nearest mm
 171              		.loc 1 94 0 discriminator 4
 172 00c2 D7E90234 		ldrd	r3, [r7, #8]
 173 00c6 13F5FA70 		adds	r0, r3, #500
 174 00ca 44F10001 		adc	r1, r4, #0
 175 00ce 4FF47A72 		mov	r2, #1000
 176 00d2 4FF00003 		mov	r3, #0
 177 00d6 FFF7FEFF 		bl	__aeabi_ldivmod
 178 00da 0346     		mov	r3, r0
 179 00dc 0C46     		mov	r4, r1
 180 00de 7B60     		str	r3, [r7, #4]
  95:main.c        ****         int32_t dmm_signed = (davg_sign >= 0) ? +dmm_abs : -dmm_abs;
 181              		.loc 1 95 0 discriminator 4
 182 00e0 3B69     		ldr	r3, [r7, #16]
 183 00e2 002B     		cmp	r3, #0
 184 00e4 02DA     		bge	.L5
 185              		.loc 1 95 0 is_stmt 0 discriminator 1
 186 00e6 7B68     		ldr	r3, [r7, #4]
 187 00e8 5B42     		negs	r3, r3
 188 00ea 00E0     		b	.L6
 189              	.L5:
 190              		.loc 1 95 0 discriminator 2
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 6


 191 00ec 7B68     		ldr	r3, [r7, #4]
 192              	.L6:
 193              		.loc 1 95 0 discriminator 4
 194 00ee 3B60     		str	r3, [r7]
  96:main.c        **** 
  97:main.c        ****         // Update the global distance traveled
  98:main.c        ****         g_dist_mm += dmm_signed;
 195              		.loc 1 98 0 is_stmt 1 discriminator 4
 196 00f0 074B     		ldr	r3, .L7+4
 197 00f2 1A68     		ldr	r2, [r3]
 198 00f4 3B68     		ldr	r3, [r7]
 199 00f6 1344     		add	r3, r3, r2
 200 00f8 054A     		ldr	r2, .L7+4
 201 00fa 1360     		str	r3, [r2]
 202              	.L2:
 203              	.LBE2:
  99:main.c        **** 
 100:main.c        ****         // Optionally add small smoothing for distance (comment this out if you don't want smoothin
 101:main.c        ****         // static int32_t v_mm = 0;
 102:main.c        ****         // v_mm = v_mm + ((dmm_signed - v_mm) >> 2); // ~alpha=0.25
 103:main.c        ****         // g_dist_mm += v_mm;
 104:main.c        ****     }
 105:main.c        **** 
 106:main.c        ****     (void)Timer_QD_ReadStatusRegister();  // Clear the interrupt flag
 204              		.loc 1 106 0
 205 00fc FFF7FEFF 		bl	Timer_QD_ReadStatusRegister
 107:main.c        **** }
 206              		.loc 1 107 0
 207 0100 00BF     		nop
 208 0102 3437     		adds	r7, r7, #52
 209              		.cfi_def_cfa_offset 36
 210 0104 BD46     		mov	sp, r7
 211              		.cfi_def_cfa_register 13
 212              		@ sp needed
 213 0106 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 214              	.L8:
 215 010a 00BF     		.align	2
 216              	.L7:
 217 010c 06000000 		.word	g_direction
 218 0110 08000000 		.word	g_dist_mm
 219              		.cfi_endproc
 220              	.LFE64:
 221              		.size	isr_qd_Handler, .-isr_qd_Handler
 222              		.global	__aeabi_i2f
 223              		.global	__aeabi_fdiv
 224              		.section	.text.norm01_from_pp,"ax",%progbits
 225              		.align	2
 226              		.thumb
 227              		.thumb_func
 228              		.type	norm01_from_pp, %function
 229              	norm01_from_pp:
 230              	.LFB65:
 108:main.c        **** 
 109:main.c        **** /* Utility: normalize peak-to-peak to [0..1] */
 110:main.c        **** static inline float norm01_from_pp(uint16_t pp)
 111:main.c        **** {
 231              		.loc 1 111 0
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 7


 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 8
 234              		@ frame_needed = 1, uses_anonymous_args = 0
 235 0000 80B5     		push	{r7, lr}
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 7, -8
 238              		.cfi_offset 14, -4
 239 0002 82B0     		sub	sp, sp, #8
 240              		.cfi_def_cfa_offset 16
 241 0004 00AF     		add	r7, sp, #0
 242              		.cfi_def_cfa_register 7
 243 0006 0346     		mov	r3, r0
 244 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 112:main.c        ****     if (pp <= S_MINC_COUNTS) return 0.0f;
 245              		.loc 1 112 0
 246 000a FB88     		ldrh	r3, [r7, #6]
 247 000c 0A2B     		cmp	r3, #10
 248 000e 02D8     		bhi	.L10
 249              		.loc 1 112 0 is_stmt 0 discriminator 1
 250 0010 4FF00003 		mov	r3, #0
 251 0014 10E0     		b	.L11
 252              	.L10:
 113:main.c        ****     if (pp >= S_MAXC_COUNTS) return 1.0f;
 253              		.loc 1 113 0 is_stmt 1
 254 0016 FB88     		ldrh	r3, [r7, #6]
 255 0018 632B     		cmp	r3, #99
 256 001a 02D9     		bls	.L12
 257              		.loc 1 113 0 is_stmt 0 discriminator 1
 258 001c 4FF07E53 		mov	r3, #1065353216
 259 0020 0AE0     		b	.L11
 260              	.L12:
 114:main.c        ****     return (float)(pp - S_MINC_COUNTS) / (float)(S_MAXC_COUNTS - S_MINC_COUNTS);
 261              		.loc 1 114 0 is_stmt 1
 262 0022 FB88     		ldrh	r3, [r7, #6]
 263 0024 0A3B     		subs	r3, r3, #10
 264 0026 1846     		mov	r0, r3
 265 0028 FFF7FEFF 		bl	__aeabi_i2f
 266 002c 0346     		mov	r3, r0
 267 002e 0449     		ldr	r1, .L13
 268 0030 1846     		mov	r0, r3
 269 0032 FFF7FEFF 		bl	__aeabi_fdiv
 270 0036 0346     		mov	r3, r0
 271              	.L11:
 115:main.c        **** }
 272              		.loc 1 115 0
 273 0038 1846     		mov	r0, r3
 274 003a 0837     		adds	r7, r7, #8
 275              		.cfi_def_cfa_offset 8
 276 003c BD46     		mov	sp, r7
 277              		.cfi_def_cfa_register 13
 278              		@ sp needed
 279 003e 80BD     		pop	{r7, pc}
 280              	.L14:
 281              		.align	2
 282              	.L13:
 283 0040 0000B442 		.word	1119092736
 284              		.cfi_endproc
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 8


 285              	.LFE65:
 286              		.size	norm01_from_pp, .-norm01_from_pp
 287              		.section	.text.light_sensors_update_and_maybe_request_turn,"ax",%progbits
 288              		.align	2
 289              		.thumb
 290              		.thumb_func
 291              		.type	light_sensors_update_and_maybe_request_turn, %function
 292              	light_sensors_update_and_maybe_request_turn:
 293              	.LFB66:
 116:main.c        **** 
 117:main.c        **** /* Read sensors and (maybe) request a turn based on S1 / S2 (kept) */
 118:main.c        **** static void light_sensors_update_and_maybe_request_turn(uint16_t* V3_pp, uint16_t* V4_pp, uint16_t*
 119:main.c        **** {
 294              		.loc 1 119 0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 32
 297              		@ frame_needed = 1, uses_anonymous_args = 0
 298 0000 80B5     		push	{r7, lr}
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 7, -8
 301              		.cfi_offset 14, -4
 302 0002 88B0     		sub	sp, sp, #32
 303              		.cfi_def_cfa_offset 40
 304 0004 00AF     		add	r7, sp, #0
 305              		.cfi_def_cfa_register 7
 306 0006 F860     		str	r0, [r7, #12]
 307 0008 B960     		str	r1, [r7, #8]
 308 000a 7A60     		str	r2, [r7, #4]
 309 000c 3B60     		str	r3, [r7]
 120:main.c        ****     uint16_t V1 = Sensor_ComputePeakToPeak(0);
 310              		.loc 1 120 0
 311 000e 0020     		movs	r0, #0
 312 0010 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 313 0014 0346     		mov	r3, r0
 314 0016 FB83     		strh	r3, [r7, #30]	@ movhi
 121:main.c        ****     uint16_t V2 = Sensor_ComputePeakToPeak(1);
 315              		.loc 1 121 0
 316 0018 0120     		movs	r0, #1
 317 001a FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 318 001e 0346     		mov	r3, r0
 319 0020 BB83     		strh	r3, [r7, #28]	@ movhi
 122:main.c        ****     uint16_t V3 = Sensor_ComputePeakToPeak(2);
 320              		.loc 1 122 0
 321 0022 0220     		movs	r0, #2
 322 0024 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 323 0028 0346     		mov	r3, r0
 324 002a 7B83     		strh	r3, [r7, #26]	@ movhi
 123:main.c        ****     uint16_t V4 = Sensor_ComputePeakToPeak(3);
 325              		.loc 1 123 0
 326 002c 0320     		movs	r0, #3
 327 002e FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 328 0032 0346     		mov	r3, r0
 329 0034 3B83     		strh	r3, [r7, #24]	@ movhi
 124:main.c        ****     uint16_t V5 = Sensor_ComputePeakToPeak(4);
 330              		.loc 1 124 0
 331 0036 0420     		movs	r0, #4
 332 0038 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 9


 333 003c 0346     		mov	r3, r0
 334 003e FB82     		strh	r3, [r7, #22]	@ movhi
 125:main.c        ****     uint16_t V6 = Sensor_ComputePeakToPeak(5);
 335              		.loc 1 125 0
 336 0040 0520     		movs	r0, #5
 337 0042 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 338 0046 0346     		mov	r3, r0
 339 0048 BB82     		strh	r3, [r7, #20]	@ movhi
 126:main.c        **** 
 127:main.c        ****     if (V3_pp) *V3_pp = V3;
 340              		.loc 1 127 0
 341 004a FB68     		ldr	r3, [r7, #12]
 342 004c 002B     		cmp	r3, #0
 343 004e 02D0     		beq	.L16
 344              		.loc 1 127 0 is_stmt 0 discriminator 1
 345 0050 FB68     		ldr	r3, [r7, #12]
 346 0052 7A8B     		ldrh	r2, [r7, #26]	@ movhi
 347 0054 1A80     		strh	r2, [r3]	@ movhi
 348              	.L16:
 128:main.c        ****     if (V4_pp) *V4_pp = V4;
 349              		.loc 1 128 0 is_stmt 1
 350 0056 BB68     		ldr	r3, [r7, #8]
 351 0058 002B     		cmp	r3, #0
 352 005a 02D0     		beq	.L17
 353              		.loc 1 128 0 is_stmt 0 discriminator 1
 354 005c BB68     		ldr	r3, [r7, #8]
 355 005e 3A8B     		ldrh	r2, [r7, #24]	@ movhi
 356 0060 1A80     		strh	r2, [r3]	@ movhi
 357              	.L17:
 129:main.c        ****     if (V5_pp) *V5_pp = V5;
 358              		.loc 1 129 0 is_stmt 1
 359 0062 7B68     		ldr	r3, [r7, #4]
 360 0064 002B     		cmp	r3, #0
 361 0066 02D0     		beq	.L18
 362              		.loc 1 129 0 is_stmt 0 discriminator 1
 363 0068 7B68     		ldr	r3, [r7, #4]
 364 006a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 365 006c 1A80     		strh	r2, [r3]	@ movhi
 366              	.L18:
 130:main.c        ****     if (V6_pp) *V6_pp = V6;
 367              		.loc 1 130 0 is_stmt 1
 368 006e 3B68     		ldr	r3, [r7]
 369 0070 002B     		cmp	r3, #0
 370 0072 02D0     		beq	.L19
 371              		.loc 1 130 0 is_stmt 0 discriminator 1
 372 0074 3B68     		ldr	r3, [r7]
 373 0076 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 374 0078 1A80     		strh	r2, [r3]	@ movhi
 375              	.L19:
 131:main.c        ****     
 132:main.c        ****     sen1_on_line = (V1 > 10 && V1 < 100) ? 1u : 0u;
 376              		.loc 1 132 0 is_stmt 1
 377 007a FB8B     		ldrh	r3, [r7, #30]
 378 007c 0A2B     		cmp	r3, #10
 379 007e 04D9     		bls	.L20
 380              		.loc 1 132 0 is_stmt 0 discriminator 1
 381 0080 FB8B     		ldrh	r3, [r7, #30]
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 10


 382 0082 632B     		cmp	r3, #99
 383 0084 01D8     		bhi	.L20
 384              		.loc 1 132 0 discriminator 3
 385 0086 0122     		movs	r2, #1
 386 0088 00E0     		b	.L21
 387              	.L20:
 388              		.loc 1 132 0 discriminator 4
 389 008a 0022     		movs	r2, #0
 390              	.L21:
 391              		.loc 1 132 0 discriminator 6
 392 008c 344B     		ldr	r3, .L37
 393 008e 1A70     		strb	r2, [r3]
 133:main.c        ****     sen2_on_line = (V2 > 10 && V2 < 100) ? 1u : 0u;
 394              		.loc 1 133 0 is_stmt 1 discriminator 6
 395 0090 BB8B     		ldrh	r3, [r7, #28]
 396 0092 0A2B     		cmp	r3, #10
 397 0094 04D9     		bls	.L22
 398              		.loc 1 133 0 is_stmt 0 discriminator 1
 399 0096 BB8B     		ldrh	r3, [r7, #28]
 400 0098 632B     		cmp	r3, #99
 401 009a 01D8     		bhi	.L22
 402              		.loc 1 133 0 discriminator 3
 403 009c 0122     		movs	r2, #1
 404 009e 00E0     		b	.L23
 405              	.L22:
 406              		.loc 1 133 0 discriminator 4
 407 00a0 0022     		movs	r2, #0
 408              	.L23:
 409              		.loc 1 133 0 discriminator 6
 410 00a2 304B     		ldr	r3, .L37+4
 411 00a4 1A70     		strb	r2, [r3]
 134:main.c        ****     sen3_on_line = (V3 > 10 && V3 < 100) ? 1u : 0u;
 412              		.loc 1 134 0 is_stmt 1 discriminator 6
 413 00a6 7B8B     		ldrh	r3, [r7, #26]
 414 00a8 0A2B     		cmp	r3, #10
 415 00aa 04D9     		bls	.L24
 416              		.loc 1 134 0 is_stmt 0 discriminator 1
 417 00ac 7B8B     		ldrh	r3, [r7, #26]
 418 00ae 632B     		cmp	r3, #99
 419 00b0 01D8     		bhi	.L24
 420              		.loc 1 134 0 discriminator 3
 421 00b2 0122     		movs	r2, #1
 422 00b4 00E0     		b	.L25
 423              	.L24:
 424              		.loc 1 134 0 discriminator 4
 425 00b6 0022     		movs	r2, #0
 426              	.L25:
 427              		.loc 1 134 0 discriminator 6
 428 00b8 2B4B     		ldr	r3, .L37+8
 429 00ba 1A70     		strb	r2, [r3]
 135:main.c        ****     sen4_on_line = (V4 > 10 && V4 < 100) ? 1u : 0u;
 430              		.loc 1 135 0 is_stmt 1 discriminator 6
 431 00bc 3B8B     		ldrh	r3, [r7, #24]
 432 00be 0A2B     		cmp	r3, #10
 433 00c0 04D9     		bls	.L26
 434              		.loc 1 135 0 is_stmt 0 discriminator 1
 435 00c2 3B8B     		ldrh	r3, [r7, #24]
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 11


 436 00c4 632B     		cmp	r3, #99
 437 00c6 01D8     		bhi	.L26
 438              		.loc 1 135 0 discriminator 3
 439 00c8 0122     		movs	r2, #1
 440 00ca 00E0     		b	.L27
 441              	.L26:
 442              		.loc 1 135 0 discriminator 4
 443 00cc 0022     		movs	r2, #0
 444              	.L27:
 445              		.loc 1 135 0 discriminator 6
 446 00ce 274B     		ldr	r3, .L37+12
 447 00d0 1A70     		strb	r2, [r3]
 136:main.c        ****     sen5_on_line = (V5 > 10 && V5 < 100) ? 1u : 0u;
 448              		.loc 1 136 0 is_stmt 1 discriminator 6
 449 00d2 FB8A     		ldrh	r3, [r7, #22]
 450 00d4 0A2B     		cmp	r3, #10
 451 00d6 04D9     		bls	.L28
 452              		.loc 1 136 0 is_stmt 0 discriminator 1
 453 00d8 FB8A     		ldrh	r3, [r7, #22]
 454 00da 632B     		cmp	r3, #99
 455 00dc 01D8     		bhi	.L28
 456              		.loc 1 136 0 discriminator 3
 457 00de 0122     		movs	r2, #1
 458 00e0 00E0     		b	.L29
 459              	.L28:
 460              		.loc 1 136 0 discriminator 4
 461 00e2 0022     		movs	r2, #0
 462              	.L29:
 463              		.loc 1 136 0 discriminator 6
 464 00e4 224B     		ldr	r3, .L37+16
 465 00e6 1A70     		strb	r2, [r3]
 137:main.c        ****     sen6_on_line = (V6 > 10 && V6 < 100) ? 1u : 0u;
 466              		.loc 1 137 0 is_stmt 1 discriminator 6
 467 00e8 BB8A     		ldrh	r3, [r7, #20]
 468 00ea 0A2B     		cmp	r3, #10
 469 00ec 04D9     		bls	.L30
 470              		.loc 1 137 0 is_stmt 0 discriminator 1
 471 00ee BB8A     		ldrh	r3, [r7, #20]
 472 00f0 632B     		cmp	r3, #99
 473 00f2 01D8     		bhi	.L30
 474              		.loc 1 137 0 discriminator 3
 475 00f4 0122     		movs	r2, #1
 476 00f6 00E0     		b	.L31
 477              	.L30:
 478              		.loc 1 137 0 discriminator 4
 479 00f8 0022     		movs	r2, #0
 480              	.L31:
 481              		.loc 1 137 0 discriminator 6
 482 00fa 1E4B     		ldr	r3, .L37+20
 483 00fc 1A70     		strb	r2, [r3]
 138:main.c        **** 
 139:main.c        ****     
 140:main.c        ****     if (sen1_on_line) {
 484              		.loc 1 140 0 is_stmt 1 discriminator 6
 485 00fe 184B     		ldr	r3, .L37
 486 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 487 0102 002B     		cmp	r3, #0
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 12


 488 0104 11D0     		beq	.L32
 141:main.c        ****     if (left_sensor_count == 0) {
 489              		.loc 1 141 0
 490 0106 1C4B     		ldr	r3, .L37+24
 491 0108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 492 010a 002B     		cmp	r3, #0
 493 010c 03D1     		bne	.L33
 142:main.c        ****         // First detection, ignore it (do nothing)
 143:main.c        ****         left_sensor_count = 1;  
 494              		.loc 1 143 0
 495 010e 1A4B     		ldr	r3, .L37+24
 496 0110 0122     		movs	r2, #1
 497 0112 1A70     		strb	r2, [r3]
 498 0114 09E0     		b	.L32
 499              	.L33:
 144:main.c        ****     } else if (left_sensor_count == 1) {
 500              		.loc 1 144 0
 501 0116 184B     		ldr	r3, .L37+24
 502 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 503 011a 012B     		cmp	r3, #1
 504 011c 05D1     		bne	.L32
 145:main.c        ****         // Second detection, execute left turn
 146:main.c        ****         g_direction = 1;  // Left turn
 505              		.loc 1 146 0
 506 011e 174B     		ldr	r3, .L37+28
 507 0120 0122     		movs	r2, #1
 508 0122 1A70     		strb	r2, [r3]
 147:main.c        ****         left_sensor_count = 0;  // Reset counter after executing turn
 509              		.loc 1 147 0
 510 0124 144B     		ldr	r3, .L37+24
 511 0126 0022     		movs	r2, #0
 512 0128 1A70     		strb	r2, [r3]
 513              	.L32:
 148:main.c        ****     }
 149:main.c        **** }
 150:main.c        **** 
 151:main.c        **** // Check if the right sensor detects the line
 152:main.c        **** if (sen2_on_line) {
 514              		.loc 1 152 0
 515 012a 0E4B     		ldr	r3, .L37+4
 516 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517 012e 002B     		cmp	r3, #0
 518 0130 11D0     		beq	.L36
 153:main.c        ****     if (right_sensor_count == 0) {
 519              		.loc 1 153 0
 520 0132 134B     		ldr	r3, .L37+32
 521 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 522 0136 002B     		cmp	r3, #0
 523 0138 03D1     		bne	.L35
 154:main.c        ****         // First detection, ignore it (do nothing)
 155:main.c        ****         right_sensor_count = 1;  
 524              		.loc 1 155 0
 525 013a 114B     		ldr	r3, .L37+32
 526 013c 0122     		movs	r2, #1
 527 013e 1A70     		strb	r2, [r3]
 156:main.c        ****     } else if (right_sensor_count == 1) {
 157:main.c        ****         // Second detection, execute right turn
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 13


 158:main.c        ****         g_direction = 2;  // Right turn
 159:main.c        ****         right_sensor_count = 0;  // Reset counter after executing turn
 160:main.c        ****     }
 161:main.c        **** }
 162:main.c        **** //    if (g_direction == 0u && turn_cooldown_ticks == 0u){
 163:main.c        **** //        if (sen1_on_line){
 164:main.c        **** //            g_direction = 1;  // LEFT turn
 165:main.c        **** //        } else if (sen2_on_line){
 166:main.c        **** //            g_direction = 2;  // RIGHT turn
 167:main.c        **** //        }
 168:main.c        **** //    }
 169:main.c        ****     (void)turn_cooldown_ticks;
 170:main.c        **** }
 528              		.loc 1 170 0
 529 0140 09E0     		b	.L36
 530              	.L35:
 156:main.c        ****     } else if (right_sensor_count == 1) {
 531              		.loc 1 156 0
 532 0142 0F4B     		ldr	r3, .L37+32
 533 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 534 0146 012B     		cmp	r3, #1
 535 0148 05D1     		bne	.L36
 158:main.c        ****         right_sensor_count = 0;  // Reset counter after executing turn
 536              		.loc 1 158 0
 537 014a 0C4B     		ldr	r3, .L37+28
 538 014c 0222     		movs	r2, #2
 539 014e 1A70     		strb	r2, [r3]
 159:main.c        ****     }
 540              		.loc 1 159 0
 541 0150 0B4B     		ldr	r3, .L37+32
 542 0152 0022     		movs	r2, #0
 543 0154 1A70     		strb	r2, [r3]
 544              	.L36:
 545              		.loc 1 170 0
 546 0156 00BF     		nop
 547 0158 2037     		adds	r7, r7, #32
 548              		.cfi_def_cfa_offset 8
 549 015a BD46     		mov	sp, r7
 550              		.cfi_def_cfa_register 13
 551              		@ sp needed
 552 015c 80BD     		pop	{r7, pc}
 553              	.L38:
 554 015e 00BF     		.align	2
 555              	.L37:
 556 0160 00000000 		.word	sen1_on_line
 557 0164 01000000 		.word	sen2_on_line
 558 0168 02000000 		.word	sen3_on_line
 559 016c 03000000 		.word	sen4_on_line
 560 0170 04000000 		.word	sen5_on_line
 561 0174 05000000 		.word	sen6_on_line
 562 0178 13000000 		.word	left_sensor_count
 563 017c 06000000 		.word	g_direction
 564 0180 14000000 		.word	right_sensor_count
 565              		.cfi_endproc
 566              	.LFE66:
 567              		.size	light_sensors_update_and_maybe_request_turn, .-light_sensors_update_and_maybe_request_turn
 568              		.global	__aeabi_fcmplt
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 14


 569              		.global	__aeabi_fcmpgt
 570              		.section	.text._clampf,"ax",%progbits
 571              		.align	2
 572              		.thumb
 573              		.thumb_func
 574              		.type	_clampf, %function
 575              	_clampf:
 576              	.LFB67:
 171:main.c        **** 
 172:main.c        **** /* ================= PI Controller (same as your current file) ================= */
 173:main.c        **** #define STEER_MAX        11
 174:main.c        **** #define KP               18.0f
 175:main.c        **** #define KI               2.0f
 176:main.c        **** #define INT_LIM          30.0f
 177:main.c        **** #define LOSS_TIMEOUT_T   0.25f
 178:main.c        **** 
 179:main.c        **** typedef struct { float i, u, t_loss; } pi_t;
 180:main.c        **** static inline float _clampf(float x, float lo, float hi){ return (x<lo?lo:(x>hi?hi:x)); }
 577              		.loc 1 180 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 16
 580              		@ frame_needed = 1, uses_anonymous_args = 0
 581 0000 80B5     		push	{r7, lr}
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 0002 84B0     		sub	sp, sp, #16
 586              		.cfi_def_cfa_offset 24
 587 0004 00AF     		add	r7, sp, #0
 588              		.cfi_def_cfa_register 7
 589 0006 F860     		str	r0, [r7, #12]	@ float
 590 0008 B960     		str	r1, [r7, #8]	@ float
 591 000a 7A60     		str	r2, [r7, #4]	@ float
 592              		.loc 1 180 0
 593 000c B968     		ldr	r1, [r7, #8]	@ float
 594 000e F868     		ldr	r0, [r7, #12]	@ float
 595 0010 FFF7FEFF 		bl	__aeabi_fcmplt
 596 0014 0346     		mov	r3, r0
 597 0016 002B     		cmp	r3, #0
 598 0018 01D0     		beq	.L49
 599              		.loc 1 180 0 is_stmt 0 discriminator 1
 600 001a BB68     		ldr	r3, [r7, #8]	@ float
 601 001c 09E0     		b	.L46
 602              	.L49:
 603              		.loc 1 180 0 discriminator 2
 604 001e 7968     		ldr	r1, [r7, #4]	@ float
 605 0020 F868     		ldr	r0, [r7, #12]	@ float
 606 0022 FFF7FEFF 		bl	__aeabi_fcmpgt
 607 0026 0346     		mov	r3, r0
 608 0028 002B     		cmp	r3, #0
 609 002a 01D0     		beq	.L50
 610              		.loc 1 180 0 discriminator 4
 611 002c 7B68     		ldr	r3, [r7, #4]	@ float
 612 002e 00E0     		b	.L46
 613              	.L50:
 614              		.loc 1 180 0 discriminator 5
 615 0030 FB68     		ldr	r3, [r7, #12]	@ float
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 15


 616              	.L46:
 617              		.loc 1 180 0 discriminator 9
 618 0032 1846     		mov	r0, r3
 619 0034 1037     		adds	r7, r7, #16
 620              		.cfi_def_cfa_offset 8
 621 0036 BD46     		mov	sp, r7
 622              		.cfi_def_cfa_register 13
 623              		@ sp needed
 624 0038 80BD     		pop	{r7, pc}
 625              		.cfi_endproc
 626              	.LFE67:
 627              		.size	_clampf, .-_clampf
 628              		.global	__aeabi_fmul
 629              		.global	__aeabi_fadd
 630              		.global	__aeabi_fsub
 631              		.global	__aeabi_fcmpge
 632              		.global	__aeabi_f2iz
 633              		.global	__aeabi_fcmple
 634 003a 00BF     		.section	.text.pi_step,"ax",%progbits
 635              		.align	2
 636              		.thumb
 637              		.thumb_func
 638              		.type	pi_step, %function
 639              	pi_step:
 640              	.LFB68:
 181:main.c        **** 
 182:main.c        **** static int pi_step(pi_t* pi, uint16_t V3_pp, uint16_t V4_pp, uint16_t V5_pp, uint16_t V6_pp)
 183:main.c        **** {
 641              		.loc 1 183 0 is_stmt 1
 642              		.cfi_startproc
 643              		@ args = 4, pretend = 0, frame = 64
 644              		@ frame_needed = 1, uses_anonymous_args = 0
 645 0000 90B5     		push	{r4, r7, lr}
 646              		.cfi_def_cfa_offset 12
 647              		.cfi_offset 4, -12
 648              		.cfi_offset 7, -8
 649              		.cfi_offset 14, -4
 650 0002 91B0     		sub	sp, sp, #68
 651              		.cfi_def_cfa_offset 80
 652 0004 00AF     		add	r7, sp, #0
 653              		.cfi_def_cfa_register 7
 654 0006 F860     		str	r0, [r7, #12]
 655 0008 0846     		mov	r0, r1
 656 000a 1146     		mov	r1, r2
 657 000c 1A46     		mov	r2, r3
 658 000e 0346     		mov	r3, r0	@ movhi
 659 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 660 0012 0B46     		mov	r3, r1	@ movhi
 661 0014 3B81     		strh	r3, [r7, #8]	@ movhi
 662 0016 1346     		mov	r3, r2	@ movhi
 663 0018 FB80     		strh	r3, [r7, #6]	@ movhi
 184:main.c        ****     float c3 = norm01_from_pp(V3_pp)*1.5f;
 664              		.loc 1 184 0
 665 001a 7B89     		ldrh	r3, [r7, #10]
 666 001c 1846     		mov	r0, r3
 667 001e FFF7FEFF 		bl	norm01_from_pp
 668 0022 0346     		mov	r3, r0
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 16


 669 0024 4FF07F51 		mov	r1, #1069547520
 670 0028 1846     		mov	r0, r3
 671 002a FFF7FEFF 		bl	__aeabi_fmul
 672 002e 0346     		mov	r3, r0
 673 0030 BB63     		str	r3, [r7, #56]	@ float
 185:main.c        ****     float c4 = norm01_from_pp(V4_pp)*1.5f;
 674              		.loc 1 185 0
 675 0032 3B89     		ldrh	r3, [r7, #8]
 676 0034 1846     		mov	r0, r3
 677 0036 FFF7FEFF 		bl	norm01_from_pp
 678 003a 0346     		mov	r3, r0
 679 003c 4FF07F51 		mov	r1, #1069547520
 680 0040 1846     		mov	r0, r3
 681 0042 FFF7FEFF 		bl	__aeabi_fmul
 682 0046 0346     		mov	r3, r0
 683 0048 7B63     		str	r3, [r7, #52]	@ float
 186:main.c        ****     float c5 = norm01_from_pp(V5_pp)*1.5f;
 684              		.loc 1 186 0
 685 004a FB88     		ldrh	r3, [r7, #6]
 686 004c 1846     		mov	r0, r3
 687 004e FFF7FEFF 		bl	norm01_from_pp
 688 0052 0346     		mov	r3, r0
 689 0054 4FF07F51 		mov	r1, #1069547520
 690 0058 1846     		mov	r0, r3
 691 005a FFF7FEFF 		bl	__aeabi_fmul
 692 005e 0346     		mov	r3, r0
 693 0060 3B63     		str	r3, [r7, #48]	@ float
 187:main.c        ****     float c6 = norm01_from_pp(V6_pp)*1.5f;
 694              		.loc 1 187 0
 695 0062 B7F85030 		ldrh	r3, [r7, #80]
 696 0066 1846     		mov	r0, r3
 697 0068 FFF7FEFF 		bl	norm01_from_pp
 698 006c 0346     		mov	r3, r0
 699 006e 4FF07F51 		mov	r1, #1069547520
 700 0072 1846     		mov	r0, r3
 701 0074 FFF7FEFF 		bl	__aeabi_fmul
 702 0078 0346     		mov	r3, r0
 703 007a FB62     		str	r3, [r7, #44]	@ float
 188:main.c        ****     float sum = c4 + c5 + c6;
 704              		.loc 1 188 0
 705 007c 396B     		ldr	r1, [r7, #48]	@ float
 706 007e 786B     		ldr	r0, [r7, #52]	@ float
 707 0080 FFF7FEFF 		bl	__aeabi_fadd
 708 0084 0346     		mov	r3, r0
 709 0086 F96A     		ldr	r1, [r7, #44]	@ float
 710 0088 1846     		mov	r0, r3
 711 008a FFF7FEFF 		bl	__aeabi_fadd
 712 008e 0346     		mov	r3, r0
 713 0090 BB62     		str	r3, [r7, #40]	@ float
 189:main.c        ****     bool valid = (sum > 0.08f);
 714              		.loc 1 189 0
 715 0092 0123     		movs	r3, #1
 716 0094 1C46     		mov	r4, r3
 717 0096 7949     		ldr	r1, .L71
 718 0098 B86A     		ldr	r0, [r7, #40]	@ float
 719 009a FFF7FEFF 		bl	__aeabi_fcmpgt
 720 009e 0346     		mov	r3, r0
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 17


 721 00a0 002B     		cmp	r3, #0
 722 00a2 01D1     		bne	.L52
 723 00a4 0023     		movs	r3, #0
 724 00a6 1C46     		mov	r4, r3
 725              	.L52:
 726 00a8 87F82740 		strb	r4, [r7, #39]
 190:main.c        **** 
 191:main.c        ****     float pos = 0.0f;
 727              		.loc 1 191 0
 728 00ac 4FF00003 		mov	r3, #0
 729 00b0 FB63     		str	r3, [r7, #60]	@ float
 192:main.c        ****     if (valid) pos = (-1.0f * c4 + 0.0f * c5 + 1.0f * c6) / sum;
 730              		.loc 1 192 0
 731 00b2 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 732 00b6 002B     		cmp	r3, #0
 733 00b8 15D0     		beq	.L53
 734              		.loc 1 192 0 is_stmt 0 discriminator 1
 735 00ba 4FF00001 		mov	r1, #0
 736 00be 386B     		ldr	r0, [r7, #48]	@ float
 737 00c0 FFF7FEFF 		bl	__aeabi_fmul
 738 00c4 0346     		mov	r3, r0
 739 00c6 796B     		ldr	r1, [r7, #52]	@ float
 740 00c8 1846     		mov	r0, r3
 741 00ca FFF7FEFF 		bl	__aeabi_fsub
 742 00ce 0346     		mov	r3, r0
 743 00d0 F96A     		ldr	r1, [r7, #44]	@ float
 744 00d2 1846     		mov	r0, r3
 745 00d4 FFF7FEFF 		bl	__aeabi_fadd
 746 00d8 0346     		mov	r3, r0
 747 00da B96A     		ldr	r1, [r7, #40]	@ float
 748 00dc 1846     		mov	r0, r3
 749 00de FFF7FEFF 		bl	__aeabi_fdiv
 750 00e2 0346     		mov	r3, r0
 751 00e4 FB63     		str	r3, [r7, #60]	@ float
 752              	.L53:
 193:main.c        **** 
 194:main.c        ****     float e = pos;
 753              		.loc 1 194 0 is_stmt 1
 754 00e6 FB6B     		ldr	r3, [r7, #60]	@ float
 755 00e8 3B62     		str	r3, [r7, #32]	@ float
 195:main.c        **** 
 196:main.c        ****     if (!valid) {
 756              		.loc 1 196 0
 757 00ea 97F82730 		ldrb	r3, [r7, #39]
 758 00ee 83F00103 		eor	r3, r3, #1
 759 00f2 DBB2     		uxtb	r3, r3
 760 00f4 002B     		cmp	r3, #0
 761 00f6 2AD0     		beq	.L54
 197:main.c        ****         pi->t_loss += DT_S;
 762              		.loc 1 197 0
 763 00f8 FB68     		ldr	r3, [r7, #12]
 764 00fa 9B68     		ldr	r3, [r3, #8]	@ float
 765 00fc 6049     		ldr	r1, .L71+4
 766 00fe 1846     		mov	r0, r3
 767 0100 FFF7FEFF 		bl	__aeabi_fadd
 768 0104 0346     		mov	r3, r0
 769 0106 1A46     		mov	r2, r3
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 18


 770 0108 FB68     		ldr	r3, [r7, #12]
 771 010a 9A60     		str	r2, [r3, #8]	@ float
 198:main.c        ****         if (pi->t_loss >= LOSS_TIMEOUT_T) pi->i *= 0.92f;
 772              		.loc 1 198 0
 773 010c FB68     		ldr	r3, [r7, #12]
 774 010e 9B68     		ldr	r3, [r3, #8]	@ float
 775 0110 4FF07A51 		mov	r1, #1048576000
 776 0114 1846     		mov	r0, r3
 777 0116 FFF7FEFF 		bl	__aeabi_fcmpge
 778 011a 0346     		mov	r3, r0
 779 011c 002B     		cmp	r3, #0
 780 011e 09D0     		beq	.L55
 781              		.loc 1 198 0 is_stmt 0 discriminator 1
 782 0120 FB68     		ldr	r3, [r7, #12]
 783 0122 1B68     		ldr	r3, [r3]	@ float
 784 0124 5749     		ldr	r1, .L71+8
 785 0126 1846     		mov	r0, r3
 786 0128 FFF7FEFF 		bl	__aeabi_fmul
 787 012c 0346     		mov	r3, r0
 788 012e 1A46     		mov	r2, r3
 789 0130 FB68     		ldr	r3, [r7, #12]
 790 0132 1A60     		str	r2, [r3]	@ float
 791              	.L55:
 199:main.c        ****         return (int)_clampf(pi->u, -(float)STEER_MAX, (float)STEER_MAX);
 792              		.loc 1 199 0 is_stmt 1
 793 0134 FB68     		ldr	r3, [r7, #12]
 794 0136 5B68     		ldr	r3, [r3, #4]	@ float
 795 0138 534A     		ldr	r2, .L71+12
 796 013a 5449     		ldr	r1, .L71+16
 797 013c 1846     		mov	r0, r3
 798 013e FFF7FEFF 		bl	_clampf
 799 0142 0346     		mov	r3, r0
 800 0144 1846     		mov	r0, r3
 801 0146 FFF7FEFF 		bl	__aeabi_f2iz
 802 014a 0346     		mov	r3, r0
 803 014c 91E0     		b	.L57
 804              	.L54:
 200:main.c        ****     }
 201:main.c        ****     pi->t_loss = 0.0f;
 805              		.loc 1 201 0
 806 014e FB68     		ldr	r3, [r7, #12]
 807 0150 4FF00002 		mov	r2, #0
 808 0154 9A60     		str	r2, [r3, #8]	@ float
 202:main.c        **** 
 203:main.c        ****     float i_next = _clampf(pi->i + e * DT_S, -INT_LIM, +INT_LIM);
 809              		.loc 1 203 0
 810 0156 FB68     		ldr	r3, [r7, #12]
 811 0158 1C68     		ldr	r4, [r3]	@ float
 812 015a 4949     		ldr	r1, .L71+4
 813 015c 386A     		ldr	r0, [r7, #32]	@ float
 814 015e FFF7FEFF 		bl	__aeabi_fmul
 815 0162 0346     		mov	r3, r0
 816 0164 1946     		mov	r1, r3
 817 0166 2046     		mov	r0, r4
 818 0168 FFF7FEFF 		bl	__aeabi_fadd
 819 016c 0346     		mov	r3, r0
 820 016e 484A     		ldr	r2, .L71+20
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 19


 821 0170 4849     		ldr	r1, .L71+24
 822 0172 1846     		mov	r0, r3
 823 0174 FFF7FEFF 		bl	_clampf
 824 0178 F861     		str	r0, [r7, #28]	@ float
 204:main.c        ****     float u_raw  = KP * e + KI * i_next;
 825              		.loc 1 204 0
 826 017a 4749     		ldr	r1, .L71+28
 827 017c 386A     		ldr	r0, [r7, #32]	@ float
 828 017e FFF7FEFF 		bl	__aeabi_fmul
 829 0182 0346     		mov	r3, r0
 830 0184 1C46     		mov	r4, r3
 831 0186 FB69     		ldr	r3, [r7, #28]	@ float
 832 0188 1946     		mov	r1, r3
 833 018a 1846     		mov	r0, r3
 834 018c FFF7FEFF 		bl	__aeabi_fadd
 835 0190 0346     		mov	r3, r0
 836 0192 1946     		mov	r1, r3
 837 0194 2046     		mov	r0, r4
 838 0196 FFF7FEFF 		bl	__aeabi_fadd
 839 019a 0346     		mov	r3, r0
 840 019c BB61     		str	r3, [r7, #24]	@ float
 205:main.c        ****     float u      = _clampf(u_raw, -(float)STEER_MAX, (float)STEER_MAX);
 841              		.loc 1 205 0
 842 019e 3A4A     		ldr	r2, .L71+12
 843 01a0 3A49     		ldr	r1, .L71+16
 844 01a2 B869     		ldr	r0, [r7, #24]	@ float
 845 01a4 FFF7FEFF 		bl	_clampf
 846 01a8 7861     		str	r0, [r7, #20]	@ float
 206:main.c        **** 
 207:main.c        ****     bool sat_hi = (u >=  (float)STEER_MAX - 1e-3f);
 847              		.loc 1 207 0
 848 01aa 0123     		movs	r3, #1
 849 01ac 1C46     		mov	r4, r3
 850 01ae 3B49     		ldr	r1, .L71+32
 851 01b0 7869     		ldr	r0, [r7, #20]	@ float
 852 01b2 FFF7FEFF 		bl	__aeabi_fcmpge
 853 01b6 0346     		mov	r3, r0
 854 01b8 002B     		cmp	r3, #0
 855 01ba 01D1     		bne	.L58
 856 01bc 0023     		movs	r3, #0
 857 01be 1C46     		mov	r4, r3
 858              	.L58:
 859 01c0 FC74     		strb	r4, [r7, #19]
 208:main.c        ****     bool sat_lo = (u <= -(float)STEER_MAX + 1e-3f);
 860              		.loc 1 208 0
 861 01c2 0123     		movs	r3, #1
 862 01c4 1C46     		mov	r4, r3
 863 01c6 3649     		ldr	r1, .L71+36
 864 01c8 7869     		ldr	r0, [r7, #20]	@ float
 865 01ca FFF7FEFF 		bl	__aeabi_fcmple
 866 01ce 0346     		mov	r3, r0
 867 01d0 002B     		cmp	r3, #0
 868 01d2 01D1     		bne	.L59
 869 01d4 0023     		movs	r3, #0
 870 01d6 1C46     		mov	r4, r3
 871              	.L59:
 872 01d8 BC74     		strb	r4, [r7, #18]
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 20


 209:main.c        **** 
 210:main.c        ****     if ((sat_hi && (KI * i_next > KI * pi->i)) ||
 873              		.loc 1 210 0
 874 01da FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 875 01dc 002B     		cmp	r3, #0
 876 01de 14D0     		beq	.L60
 877              		.loc 1 210 0 is_stmt 0 discriminator 1
 878 01e0 FB69     		ldr	r3, [r7, #28]	@ float
 879 01e2 1946     		mov	r1, r3
 880 01e4 1846     		mov	r0, r3
 881 01e6 FFF7FEFF 		bl	__aeabi_fadd
 882 01ea 0346     		mov	r3, r0
 883 01ec 1C46     		mov	r4, r3
 884 01ee FB68     		ldr	r3, [r7, #12]
 885 01f0 1B68     		ldr	r3, [r3]	@ float
 886 01f2 1946     		mov	r1, r3
 887 01f4 1846     		mov	r0, r3
 888 01f6 FFF7FEFF 		bl	__aeabi_fadd
 889 01fa 0346     		mov	r3, r0
 890 01fc 1946     		mov	r1, r3
 891 01fe 2046     		mov	r0, r4
 892 0200 FFF7FEFF 		bl	__aeabi_fcmpgt
 893 0204 0346     		mov	r3, r0
 894 0206 002B     		cmp	r3, #0
 895 0208 1AD1     		bne	.L62
 896              	.L60:
 897              		.loc 1 210 0 discriminator 3
 898 020a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 899 020c 002B     		cmp	r3, #0
 900 020e 14D0     		beq	.L63
 211:main.c        ****         (sat_lo && (KI * i_next < KI * pi->i))) {
 901              		.loc 1 211 0 is_stmt 1
 902 0210 FB69     		ldr	r3, [r7, #28]	@ float
 903 0212 1946     		mov	r1, r3
 904 0214 1846     		mov	r0, r3
 905 0216 FFF7FEFF 		bl	__aeabi_fadd
 906 021a 0346     		mov	r3, r0
 907 021c 1C46     		mov	r4, r3
 908 021e FB68     		ldr	r3, [r7, #12]
 909 0220 1B68     		ldr	r3, [r3]	@ float
 910 0222 1946     		mov	r1, r3
 911 0224 1846     		mov	r0, r3
 912 0226 FFF7FEFF 		bl	__aeabi_fadd
 913 022a 0346     		mov	r3, r0
 914 022c 1946     		mov	r1, r3
 915 022e 2046     		mov	r0, r4
 916 0230 FFF7FEFF 		bl	__aeabi_fcmplt
 917 0234 0346     		mov	r3, r0
 918 0236 002B     		cmp	r3, #0
 919 0238 02D1     		bne	.L62
 920              	.L63:
 212:main.c        ****         /* donâ€™t integrate further into saturation */
 213:main.c        ****     } else {
 214:main.c        ****         pi->i = i_next;
 921              		.loc 1 214 0
 922 023a FB68     		ldr	r3, [r7, #12]
 923 023c FA69     		ldr	r2, [r7, #28]	@ float
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 21


 924 023e 1A60     		str	r2, [r3]	@ float
 925              	.L62:
 215:main.c        ****     }
 216:main.c        **** 
 217:main.c        ****     pi->u = u;
 926              		.loc 1 217 0
 927 0240 FB68     		ldr	r3, [r7, #12]
 928 0242 7A69     		ldr	r2, [r7, #20]	@ float
 929 0244 5A60     		str	r2, [r3, #4]	@ float
 218:main.c        ****     return (int)(u + (u>=0?0.5f:-0.5f));
 930              		.loc 1 218 0
 931 0246 4FF00001 		mov	r1, #0
 932 024a 7869     		ldr	r0, [r7, #20]	@ float
 933 024c FFF7FEFF 		bl	__aeabi_fcmpge
 934 0250 0346     		mov	r3, r0
 935 0252 002B     		cmp	r3, #0
 936 0254 02D0     		beq	.L70
 937              		.loc 1 218 0 is_stmt 0 discriminator 1
 938 0256 4FF07C53 		mov	r3, #1056964608
 939 025a 01E0     		b	.L67
 940              	.L70:
 941              		.loc 1 218 0 discriminator 2
 942 025c 4FF03F43 		mov	r3, #-1090519040
 943              	.L67:
 944              		.loc 1 218 0 discriminator 4
 945 0260 7969     		ldr	r1, [r7, #20]	@ float
 946 0262 1846     		mov	r0, r3
 947 0264 FFF7FEFF 		bl	__aeabi_fadd
 948 0268 0346     		mov	r3, r0
 949 026a 1846     		mov	r0, r3
 950 026c FFF7FEFF 		bl	__aeabi_f2iz
 951 0270 0346     		mov	r3, r0
 952              	.L57:
 219:main.c        **** }
 953              		.loc 1 219 0 is_stmt 1
 954 0272 1846     		mov	r0, r3
 955 0274 4437     		adds	r7, r7, #68
 956              		.cfi_def_cfa_offset 12
 957 0276 BD46     		mov	sp, r7
 958              		.cfi_def_cfa_register 13
 959              		@ sp needed
 960 0278 90BD     		pop	{r4, r7, pc}
 961              	.L72:
 962 027a 00BF     		.align	2
 963              	.L71:
 964 027c 0AD7A33D 		.word	1034147594
 965 0280 6F12033C 		.word	1006834287
 966 0284 1F856B3F 		.word	1064011039
 967 0288 00003041 		.word	1093664768
 968 028c 000030C1 		.word	-1053818880
 969 0290 0000F041 		.word	1106247680
 970 0294 0000F0C1 		.word	-1041235968
 971 0298 00009041 		.word	1099956224
 972 029c E7FB2F41 		.word	1093663719
 973 02a0 E7FB2FC1 		.word	-1053819929
 974              		.cfi_endproc
 975              	.LFE68:
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 22


 976              		.size	pi_step, .-pi_step
 977              		.section	.rodata
 978              		.align	2
 979              	.LC0:
 980 0000 00       		.byte	0
 981 0001 02       		.byte	2
 982 0002 00       		.byte	0
 983 0003 02       		.byte	2
 984 0004 00       		.byte	0
 985 0005 00       		.byte	0
 986 0006 01       		.byte	1
 987 0007 00       		.byte	0
 988 0008 02       		.byte	2
 989 0009 00       		.byte	0
 990 000a 02       		.byte	2
 991 000b 00       		.byte	0
 992 000c 00       		.byte	0
 993 000d 03       		.byte	3
 994 000e 00       		.byte	0
 995 000f 02       		.byte	2
 996 0010 00       		.byte	0
 997 0011 01       		.byte	1
 998 0012 00       		.byte	0
 999 0013 02       		.byte	2
 1000 0014 00       		.byte	0
 1001 0015 01       		.byte	1
 1002 0016 00       		.byte	0
 1003 0017 02       		.byte	2
 1004 0018 00       		.byte	0
 1005 0019 02       		.byte	2
 1006 001a 00       		.byte	0
 1007 001b 02       		.byte	2
 1008 001c 00       		.byte	0
 1009 001d 01       		.byte	1
 1010 001e 00       		.byte	0
 1011 001f 03       		.byte	3
 1012 0020 00       		.byte	0
 1013 0021 02       		.byte	2
 1014 0022 00       		.byte	0
 1015 0023 01       		.byte	1
 1016 0024 00       		.byte	0
 1017 0025 00       		.byte	0
 1018 0026 01       		.byte	1
 1019 0027 00       		.byte	0
 1020 0028 00       		.byte	0
 1021 0029 00       		.byte	0
 1022 002a 01       		.byte	1
 1023 002b 00       		.byte	0
 1024 002c 01       		.byte	1
 1025 002d 00       		.byte	0
 1026 002e 02       		.byte	2
 1027 002f 00       		.byte	0
 1028 0030 00       		.byte	0
 1029 0031 02       		.byte	2
 1030 0032 00       		.byte	0
 1031 0033 01       		.byte	1
 1032 0034 00       		.byte	0
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 23


 1033 0035 02       		.byte	2
 1034 0036 00       		.byte	0
 1035 0037 06       		.byte	6
 1036              		.section	.text.main,"ax",%progbits
 1037              		.align	2
 1038              		.global	main
 1039              		.thumb
 1040              		.thumb_func
 1041              		.type	main, %function
 1042              	main:
 1043              	.LFB69:
 220:main.c        **** 
 221:main.c        **** int main(void)
 222:main.c        **** {
 1044              		.loc 1 222 0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 112
 1047              		@ frame_needed = 1, uses_anonymous_args = 0
 1048 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1049              		.cfi_def_cfa_offset 20
 1050              		.cfi_offset 4, -20
 1051              		.cfi_offset 5, -16
 1052              		.cfi_offset 6, -12
 1053              		.cfi_offset 7, -8
 1054              		.cfi_offset 14, -4
 1055 0002 9FB0     		sub	sp, sp, #124
 1056              		.cfi_def_cfa_offset 144
 1057 0004 02AF     		add	r7, sp, #8
 1058              		.cfi_def_cfa 7, 136
 223:main.c        ****     motor_enable(1u, 1u);
 1059              		.loc 1 223 0
 1060 0006 0121     		movs	r1, #1
 1061 0008 0120     		movs	r0, #1
 1062 000a FFF7FEFF 		bl	motor_enable
 224:main.c        ****     CyGlobalIntEnable;
 1063              		.loc 1 224 0
 1064              		.syntax unified
 1065              	@ 224 "main.c" 1
 1066 000e 62B6     		CPSIE   i
 1067              	@ 0 "" 2
 225:main.c        **** 
 226:main.c        ****     /* ADC for sensors */
 227:main.c        ****     ADC_Start();
 1068              		.loc 1 227 0
 1069              		.thumb
 1070              		.syntax unified
 1071 0010 FFF7FEFF 		bl	ADC_Start
 228:main.c        ****     CyDelay(10);
 1072              		.loc 1 228 0
 1073 0014 0A20     		movs	r0, #10
 1074 0016 FFF7FEFF 		bl	CyDelay
 229:main.c        **** 
 230:main.c        ****     /* Encoders + 5 ms tick (distance only) */
 231:main.c        ****     Clock_QENC_Start();
 1075              		.loc 1 231 0
 1076 001a FFF7FEFF 		bl	Clock_QENC_Start
 232:main.c        ****     QuadDec_M1_Start(); QuadDec_M2_Start();
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 24


 1077              		.loc 1 232 0
 1078 001e FFF7FEFF 		bl	QuadDec_M1_Start
 1079 0022 FFF7FEFF 		bl	QuadDec_M2_Start
 233:main.c        ****     QuadDec_M1_SetCounter(0); QuadDec_M2_SetCounter(0);
 1080              		.loc 1 233 0
 1081 0026 0020     		movs	r0, #0
 1082 0028 FFF7FEFF 		bl	QuadDec_M1_SetCounter
 1083 002c 0020     		movs	r0, #0
 1084 002e FFF7FEFF 		bl	QuadDec_M2_SetCounter
 234:main.c        ****     Clock_QD_Start();
 1085              		.loc 1 234 0
 1086 0032 FFF7FEFF 		bl	Clock_QD_Start
 235:main.c        ****     Timer_QD_Start();  // 5 ms period in TopDesign
 1087              		.loc 1 235 0
 1088 0036 FFF7FEFF 		bl	Timer_QD_Start
 236:main.c        ****     isr_qd_StartEx(isr_qd_Handler);
 1089              		.loc 1 236 0
 1090 003a A948     		ldr	r0, .L133
 1091 003c FFF7FEFF 		bl	isr_qd_StartEx
 237:main.c        **** 
 238:main.c        ****     /* PWM & motor driver */
 239:main.c        ****     Clock_PWM_Start();
 1092              		.loc 1 239 0
 1093 0040 FFF7FEFF 		bl	Clock_PWM_Start
 240:main.c        ****     PWM_1_Start(); PWM_2_Start();
 1094              		.loc 1 240 0
 1095 0044 FFF7FEFF 		bl	PWM_1_Start
 1096 0048 FFF7FEFF 		bl	PWM_2_Start
 241:main.c        ****     PWM_1_WritePeriod(PWM_PERIOD);
 1097              		.loc 1 241 0
 1098 004c C820     		movs	r0, #200
 1099 004e FFF7FEFF 		bl	PWM_1_WritePeriod
 242:main.c        ****     PWM_2_WritePeriod(PWM_PERIOD);
 1100              		.loc 1 242 0
 1101 0052 C820     		movs	r0, #200
 1102 0054 FFF7FEFF 		bl	PWM_2_WritePeriod
 243:main.c        ****     set_motors_symmetric(0);
 1103              		.loc 1 243 0
 1104 0058 0020     		movs	r0, #0
 1105 005a FFF7FEFF 		bl	set_motors_symmetric
 244:main.c        ****     motor_enable(0u, 0u);
 1106              		.loc 1 244 0
 1107 005e 0021     		movs	r1, #0
 1108 0060 0020     		movs	r0, #0
 1109 0062 FFF7FEFF 		bl	motor_enable
 245:main.c        **** 
 246:main.c        ****     /* Directions module */
 247:main.c        ****     Directions_Init();
 1110              		.loc 1 247 0
 1111 0066 FFF7FEFF 		bl	Directions_Init
 248:main.c        ****     g_direction = 0u;
 1112              		.loc 1 248 0
 1113 006a 9E4B     		ldr	r3, .L133+4
 1114 006c 0022     		movs	r2, #0
 1115 006e 1A70     		strb	r2, [r3]
 249:main.c        **** 
 250:main.c        ****     /* Feed-forward cruise duty (kept) */
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 25


 251:main.c        ****     int center_duty_est = (int)((V_CRUISE_MM_S * 100) / VMAX_CONST_MM_S);
 1116              		.loc 1 251 0
 1117 0070 1423     		movs	r3, #20
 1118 0072 FB66     		str	r3, [r7, #108]
 252:main.c        ****     if (center_duty_est < 0) center_duty_est = 0;
 1119              		.loc 1 252 0
 1120 0074 FB6E     		ldr	r3, [r7, #108]
 1121 0076 002B     		cmp	r3, #0
 1122 0078 01DA     		bge	.L74
 1123              		.loc 1 252 0 is_stmt 0 discriminator 1
 1124 007a 0023     		movs	r3, #0
 1125 007c FB66     		str	r3, [r7, #108]
 1126              	.L74:
 253:main.c        ****     if (center_duty_est > 100) center_duty_est = 100;
 1127              		.loc 1 253 0 is_stmt 1
 1128 007e FB6E     		ldr	r3, [r7, #108]
 1129 0080 642B     		cmp	r3, #100
 1130 0082 01DD     		ble	.L75
 1131              		.loc 1 253 0 is_stmt 0 discriminator 1
 1132 0084 6423     		movs	r3, #100
 1133 0086 FB66     		str	r3, [r7, #108]
 1134              	.L75:
 254:main.c        **** 
 255:main.c        ****     /* PI state */
 256:main.c        ****     pi_t pi = { .i = 0.0f, .u = 0.0f, .t_loss = 0.0f };
 1135              		.loc 1 256 0 is_stmt 1
 1136 0088 4FF00003 		mov	r3, #0
 1137 008c 3B64     		str	r3, [r7, #64]	@ float
 1138 008e 4FF00003 		mov	r3, #0
 1139 0092 7B64     		str	r3, [r7, #68]	@ float
 1140 0094 4FF00003 		mov	r3, #0
 1141 0098 BB64     		str	r3, [r7, #72]	@ float
 257:main.c        ****     
 258:main.c        ****     CyDelay(1000);  // So the motors don't jump
 1142              		.loc 1 258 0
 1143 009a 4FF47A70 		mov	r0, #1000
 1144 009e FFF7FEFF 		bl	CyDelay
 259:main.c        ****     set_motors_with_trim_and_steer(100,-10);
 1145              		.loc 1 259 0
 1146 00a2 6FF00901 		mvn	r1, #9
 1147 00a6 6420     		movs	r0, #100
 1148 00a8 FFF7FEFF 		bl	set_motors_with_trim_and_steer
 260:main.c        ****     CyDelay(40);
 1149              		.loc 1 260 0
 1150 00ac 2820     		movs	r0, #40
 1151 00ae FFF7FEFF 		bl	CyDelay
 261:main.c        ****     set_motors_symmetric(0); 
 1152              		.loc 1 261 0
 1153 00b2 0020     		movs	r0, #0
 1154 00b4 FFF7FEFF 		bl	set_motors_symmetric
 262:main.c        ****     
 263:main.c        ****     
 264:main.c        ****     // Pathfinding array
 265:main.c        ****     /* 
 266:main.c        ****      * STRAIGHT -> 0, TURN LEFT -> 1, TURN RIGHT -> 2, TURN U_TURN -> 3,
 267:main.c        ****      * REACH -> 5, END -> 6
 268:main.c        ****      */
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 26


 269:main.c        ****     
 270:main.c        **** const uint8_t CMD_STATES[] = {
 1155              		.loc 1 270 0
 1156 00b8 8B4B     		ldr	r3, .L133+8
 1157 00ba 1C46     		mov	r4, r3
 1158 00bc 07F10806 		add	r6, r7, #8
 1159 00c0 04F1300E 		add	lr, r4, #48
 1160              	.L76:
 1161 00c4 3546     		mov	r5, r6
 1162 00c6 2346     		mov	r3, r4
 1163 00c8 1868     		ldr	r0, [r3]	@ unaligned
 1164 00ca 5968     		ldr	r1, [r3, #4]	@ unaligned
 1165 00cc 9A68     		ldr	r2, [r3, #8]	@ unaligned
 1166 00ce DB68     		ldr	r3, [r3, #12]	@ unaligned
 1167 00d0 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1168 00d2 1034     		adds	r4, r4, #16
 1169 00d4 1036     		adds	r6, r6, #16
 1170 00d6 7445     		cmp	r4, lr
 1171 00d8 F4D1     		bne	.L76
 1172 00da 3346     		mov	r3, r6
 1173 00dc 2246     		mov	r2, r4
 1174 00de 1068     		ldr	r0, [r2]	@ unaligned
 1175 00e0 5168     		ldr	r1, [r2, #4]	@ unaligned
 1176 00e2 03C3     		stmia	r3!, {r0, r1}
 271:main.c        ****     // 31 entries, aligned 1:1 with COMMANDS[i]
 272:main.c        ****     0, // START
 273:main.c        ****     2, // RIGHT
 274:main.c        ****     0,
 275:main.c        ****     2, // RIGHT
 276:main.c        ****     0,
 277:main.c        ****     0,
 278:main.c        ****     1, // LEFT
 279:main.c        ****     0,
 280:main.c        ****     2, // RIGHT
 281:main.c        ****     0,
 282:main.c        ****     2, // RIGHT
 283:main.c        ****     0,
 284:main.c        ****     0,// 5, // REACH
 285:main.c        ****     3, // UTURN
 286:main.c        ****     0,
 287:main.c        ****     2, // RIGHT
 288:main.c        ****     0,
 289:main.c        ****     1, // LEFT
 290:main.c        ****     0,
 291:main.c        ****     2, // RIGHT
 292:main.c        ****     0,
 293:main.c        ****     1, // LEFT
 294:main.c        ****     0,// 5, // REACH
 295:main.c        ****     2, // RIGHT
 296:main.c        ****     0,
 297:main.c        ****     2, // RIGHT
 298:main.c        ****     0,
 299:main.c        ****     2, // RIGHT
 300:main.c        ****     0,
 301:main.c        ****     1, // LEFT
 302:main.c        ****     0,// 5, // REACH
 303:main.c        ****     3, // UTURN
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 27


 304:main.c        ****     0,
 305:main.c        ****     2, // RIGHT
 306:main.c        ****     0,
 307:main.c        ****     1, // LEFT
 308:main.c        ****     0,
 309:main.c        ****     0,
 310:main.c        ****     1, // LEFT
 311:main.c        ****     0,
 312:main.c        ****     0,
 313:main.c        ****     0,
 314:main.c        ****     1, // LEFT
 315:main.c        ****     0,// 5, // REACH
 316:main.c        ****     1, // LEFT
 317:main.c        ****     0,
 318:main.c        ****     2, // RIGHT
 319:main.c        ****     0,
 320:main.c        ****     0,
 321:main.c        ****     2, // RIGHT
 322:main.c        ****     0,
 323:main.c        ****     1, // LEFT
 324:main.c        ****     0,
 325:main.c        ****     2, // RIGHT
 326:main.c        ****     0,
 327:main.c        ****     6  // END
 328:main.c        **** }; 
 329:main.c        ****     int8_t indexMAX = 50;  // Loop index
 1177              		.loc 1 329 0
 1178 00e4 3223     		movs	r3, #50
 1179 00e6 87F85F30 		strb	r3, [r7, #95]
 330:main.c        ****     
 331:main.c        ****     // For Testing
 332:main.c        ****     //const uint8_t CMD_STATES[] = {1,2};
 333:main.c        ****     //int8_t indexMAX = 1;  // Loop index
 334:main.c        ****     
 335:main.c        ****     
 336:main.c        ****     int8_t i = 0;  // Loop index
 1180              		.loc 1 336 0
 1181 00ea 0023     		movs	r3, #0
 1182 00ec 87F86B30 		strb	r3, [r7, #107]
 337:main.c        ****     int32_t target_dist = 0;
 1183              		.loc 1 337 0
 1184 00f0 0023     		movs	r3, #0
 1185 00f2 7B66     		str	r3, [r7, #100]
 338:main.c        ****     
 339:main.c        ****     int8_t straight_complete = 0;
 1186              		.loc 1 339 0
 1187 00f4 0023     		movs	r3, #0
 1188 00f6 87F86330 		strb	r3, [r7, #99]
 340:main.c        ****     int8_t turn_complete = 0;
 1189              		.loc 1 340 0
 1190 00fa 0023     		movs	r3, #0
 1191 00fc 87F86230 		strb	r3, [r7, #98]
 341:main.c        ****     int8_t uTurn_complete = 0;
 1192              		.loc 1 341 0
 1193 0100 0023     		movs	r3, #0
 1194 0102 87F86130 		strb	r3, [r7, #97]
 342:main.c        ****     int8_t fruit_complete = 0;
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 28


 1195              		.loc 1 342 0
 1196 0106 0023     		movs	r3, #0
 1197 0108 87F86030 		strb	r3, [r7, #96]
 1198              	.L132:
 1199              	.LBB3:
 343:main.c        **** 
 344:main.c        ****     for(;;){
 345:main.c        ****         
 346:main.c        ****         // This check will make the robot stay stopped
 347:main.c        ****         // once the path is complete.
 348:main.c        ****         if (g_stop_now) {
 1200              		.loc 1 348 0
 1201 010c 774B     		ldr	r3, .L133+12
 1202 010e 1B78     		ldrb	r3, [r3]
 1203 0110 DBB2     		uxtb	r3, r3
 1204 0112 002B     		cmp	r3, #0
 1205 0114 07D0     		beq	.L77
 349:main.c        ****             set_motors_symmetric(0);
 1206              		.loc 1 349 0
 1207 0116 0020     		movs	r0, #0
 1208 0118 FFF7FEFF 		bl	set_motors_symmetric
 350:main.c        ****             motor_enable(1u, 1u);
 1209              		.loc 1 350 0
 1210 011c 0121     		movs	r1, #1
 1211 011e 0120     		movs	r0, #1
 1212 0120 FFF7FEFF 		bl	motor_enable
 351:main.c        ****             continue;
 1213              		.loc 1 351 0
 1214 0124 97E2     		b	.L131
 1215              	.L77:
 352:main.c        ****         }
 353:main.c        **** 
 354:main.c        ****         /* Read sensors + maybe request turn */
 355:main.c        ****         uint16_t V3_pp=0, V4_pp=0, V5_pp=0, V6_pp=0;
 1216              		.loc 1 355 0
 1217 0126 0023     		movs	r3, #0
 1218 0128 FB80     		strh	r3, [r7, #6]	@ movhi
 1219 012a 0023     		movs	r3, #0
 1220 012c BB80     		strh	r3, [r7, #4]	@ movhi
 1221 012e 0023     		movs	r3, #0
 1222 0130 7B80     		strh	r3, [r7, #2]	@ movhi
 1223 0132 0023     		movs	r3, #0
 1224 0134 3B80     		strh	r3, [r7]	@ movhi
 356:main.c        ****         light_sensors_update_and_maybe_request_turn(&V3_pp, &V4_pp, &V5_pp, &V6_pp);
 1225              		.loc 1 356 0
 1226 0136 3B46     		mov	r3, r7
 1227 0138 BA1C     		adds	r2, r7, #2
 1228 013a 391D     		adds	r1, r7, #4
 1229 013c B81D     		adds	r0, r7, #6
 1230 013e FFF7FEFF 		bl	light_sensors_update_and_maybe_request_turn
 357:main.c        ****         
 358:main.c        **** 
 359:main.c        **** //        /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 360:main.c        **** //        /* Arm once on the first detection (edge 0 -> 1/2) */
 361:main.c        **** //        if ((g_direction == 1u || g_direction == 2u) && dir_latched_side == 0){
 362:main.c        **** //            dir_latched_side = g_direction;          /* remember side */
 363:main.c        **** //            dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 29


 364:main.c        **** //            //CyDelay(50);
 365:main.c        **** //        }
 366:main.c        **** //        /* If request cleared during delay, cancel gracefully */
 367:main.c        **** //        if (g_direction == 0u && dir_latched_side != 0){
 368:main.c        **** //            dir_latched_side = 0;
 369:main.c        **** //            dir_delay_ticks  = 0;
 370:main.c        **** //        }
 371:main.c        **** //
 372:main.c        **** //        if (g_direction == 1u || g_direction == 2u){
 373:main.c        **** //            if (dir_delay_ticks > 0){
 374:main.c        **** //                /* Still delaying: keep doing normal straight PI */
 375:main.c        **** //                dir_delay_ticks--;
 376:main.c        **** //            } else {
 377:main.c        **** //                /* Delay elapsed: perform the maneuver */
 378:main.c        **** //                Directions_Handle(&g_direction);
 379:main.c        **** //
 380:main.c        **** //                /* When turn completes, Directions sets g_direction back to 0 */
 381:main.c        **** //                if (g_direction == 0u){
 382:main.c        **** //                    pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 383:main.c        **** //                    dir_latched_side = 0;                        /* ready next time */
 384:main.c        **** //                    
 385:main.c        **** //                    
 386:main.c        **** //                    turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 387:main.c        **** //                }
 388:main.c        **** //                CyDelay(LOOP_DT_MS);
 389:main.c        **** //                continue;  /* skip the rest this tick */
 390:main.c        **** //            }
 391:main.c        **** //        }
 392:main.c        **** //        /* ---------------- end turn handling with delay ---------------- */
 393:main.c        **** //
 394:main.c        **** //        /* Straight run with PI steering */
 395:main.c        **** //        
 396:main.c        **** //        if(turn_cooldown_ticks > 0) {
 397:main.c        **** //            turn_cooldown_ticks--;
 398:main.c        **** //        }
 399:main.c        **** //        
 400:main.c        **** //        /*
 401:main.c        **** //        // Add bias when back right sensor is under line
 402:main.c        **** //        uint16_t V5 = Sensor_ComputePeakToPeak(4);
 403:main.c        **** //        sen5_on_line = (V5 > 10 && V5 < 100) ? 1u : 0u;
 404:main.c        **** //        if (sen5_on_line == 1) {
 405:main.c        **** //            Motors_SetPercent(0,25);
 406:main.c        **** //            //set_motors_with_trim_and_steer(50,50); 
 407:main.c        **** //            CyDelay(10);
 408:main.c        **** //        } */
 409:main.c        ****         
 410:main.c        ****         
 411:main.c        **** //        int steer = pi_step(&pi, V4_pp, V5_pp, V6_pp);
 412:main.c        **** //        set_motors_with_trim_and_steer(center_duty_est, steer);
 413:main.c        **** //        
 414:main.c        **** //        
 415:main.c        **** //        /* Distance stop */    // g_dist_mm = total distance traveled
 416:main.c        **** //        g_stop_now = (g_dist_mm >= TARGET_DIST_MM) ? 1u : 0u;
 417:main.c        **** //        if (g_stop_now) {
 418:main.c        **** //            set_motors_symmetric(0);
 419:main.c        **** //            motor_enable(1u, 1u);
 420:main.c        **** //            g_direction = 0u;
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 30


 421:main.c        **** //            continue;
 422:main.c        **** //        }
 423:main.c        ****         
 424:main.c        ****         
 425:main.c        ****         
 426:main.c        ****         
 427:main.c        ****         /* Straight run with PI steering */        
 428:main.c        ****         if(turn_cooldown_ticks > 0) {
 1231              		.loc 1 428 0
 1232 0142 6B4B     		ldr	r3, .L133+16
 1233 0144 1B88     		ldrh	r3, [r3]
 1234 0146 002B     		cmp	r3, #0
 1235 0148 05D0     		beq	.L79
 429:main.c        ****             turn_cooldown_ticks--;
 1236              		.loc 1 429 0
 1237 014a 694B     		ldr	r3, .L133+16
 1238 014c 1B88     		ldrh	r3, [r3]
 1239 014e 013B     		subs	r3, r3, #1
 1240 0150 9AB2     		uxth	r2, r3
 1241 0152 674B     		ldr	r3, .L133+16
 1242 0154 1A80     		strh	r2, [r3]	@ movhi
 1243              	.L79:
 430:main.c        ****        }
 431:main.c        ****         
 432:main.c        ****         
 433:main.c        ****         // PATHFINDING ALGORITHM
 434:main.c        ****         
 435:main.c        ****         if (CMD_STATES[i] == 0) {
 1244              		.loc 1 435 0
 1245 0156 97F96B30 		ldrsb	r3, [r7, #107]
 1246 015a 07F17002 		add	r2, r7, #112
 1247 015e 1344     		add	r3, r3, r2
 1248 0160 13F8683C 		ldrb	r3, [r3, #-104]	@ zero_extendqisi2
 1249 0164 002B     		cmp	r3, #0
 1250 0166 4BD1     		bne	.L80
 1251              	.LBB4:
 436:main.c        ****             // Go STRAIGHT
 437:main.c        ****             int steer = pi_step(&pi, V3_pp, V4_pp, V5_pp, V6_pp);
 1252              		.loc 1 437 0
 1253 0168 F988     		ldrh	r1, [r7, #6]
 1254 016a BA88     		ldrh	r2, [r7, #4]
 1255 016c 7C88     		ldrh	r4, [r7, #2]
 1256 016e 3B88     		ldrh	r3, [r7]
 1257 0170 07F14000 		add	r0, r7, #64
 1258 0174 0093     		str	r3, [sp]
 1259 0176 2346     		mov	r3, r4
 1260 0178 FFF7FEFF 		bl	pi_step
 1261 017c B865     		str	r0, [r7, #88]
 438:main.c        ****             set_motors_with_trim_and_steer(center_duty_est, steer);
 1262              		.loc 1 438 0
 1263 017e B96D     		ldr	r1, [r7, #88]
 1264 0180 F86E     		ldr	r0, [r7, #108]
 1265 0182 FFF7FEFF 		bl	set_motors_with_trim_and_steer
 439:main.c        **** 
 440:main.c        ****             // Rising-edge detect on S1/S2
 441:main.c        ****             uint16_t V1 = Sensor_ComputePeakToPeak(0);
 1266              		.loc 1 441 0
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 31


 1267 0186 0020     		movs	r0, #0
 1268 0188 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 1269 018c 0346     		mov	r3, r0
 1270 018e A7F85630 		strh	r3, [r7, #86]	@ movhi
 442:main.c        ****             uint16_t V2 = Sensor_ComputePeakToPeak(1);
 1271              		.loc 1 442 0
 1272 0192 0120     		movs	r0, #1
 1273 0194 FFF7FEFF 		bl	Sensor_ComputePeakToPeak
 1274 0198 0346     		mov	r3, r0
 1275 019a A7F85430 		strh	r3, [r7, #84]	@ movhi
 443:main.c        ****             sen1_on_line = (V1 > 10 && V1 < 100) ? 1u : 0u;
 1276              		.loc 1 443 0
 1277 019e B7F85630 		ldrh	r3, [r7, #86]
 1278 01a2 0A2B     		cmp	r3, #10
 1279 01a4 05D9     		bls	.L81
 1280              		.loc 1 443 0 is_stmt 0 discriminator 1
 1281 01a6 B7F85630 		ldrh	r3, [r7, #86]
 1282 01aa 632B     		cmp	r3, #99
 1283 01ac 01D8     		bhi	.L81
 1284              		.loc 1 443 0 discriminator 3
 1285 01ae 0122     		movs	r2, #1
 1286 01b0 00E0     		b	.L82
 1287              	.L81:
 1288              		.loc 1 443 0 discriminator 4
 1289 01b2 0022     		movs	r2, #0
 1290              	.L82:
 1291              		.loc 1 443 0 discriminator 6
 1292 01b4 4F4B     		ldr	r3, .L133+20
 1293 01b6 1A70     		strb	r2, [r3]
 444:main.c        ****             sen2_on_line = (V2 > 10 && V2 < 100) ? 1u : 0u;
 1294              		.loc 1 444 0 is_stmt 1 discriminator 6
 1295 01b8 B7F85430 		ldrh	r3, [r7, #84]
 1296 01bc 0A2B     		cmp	r3, #10
 1297 01be 05D9     		bls	.L83
 1298              		.loc 1 444 0 is_stmt 0 discriminator 1
 1299 01c0 B7F85430 		ldrh	r3, [r7, #84]
 1300 01c4 632B     		cmp	r3, #99
 1301 01c6 01D8     		bhi	.L83
 1302              		.loc 1 444 0 discriminator 3
 1303 01c8 0122     		movs	r2, #1
 1304 01ca 00E0     		b	.L84
 1305              	.L83:
 1306              		.loc 1 444 0 discriminator 4
 1307 01cc 0022     		movs	r2, #0
 1308              	.L84:
 1309              		.loc 1 444 0 discriminator 6
 1310 01ce 4A4B     		ldr	r3, .L133+24
 1311 01d0 1A70     		strb	r2, [r3]
 445:main.c        **** 
 446:main.c        ****             uint8_t s12_now = (sen1_on_line | sen2_on_line);
 1312              		.loc 1 446 0 is_stmt 1 discriminator 6
 1313 01d2 484B     		ldr	r3, .L133+20
 1314 01d4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1315 01d6 484B     		ldr	r3, .L133+24
 1316 01d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1317 01da 1343     		orrs	r3, r3, r2
 1318 01dc 87F85330 		strb	r3, [r7, #83]
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 32


 447:main.c        ****             if (s12_now && !s12_prev) {
 1319              		.loc 1 447 0 discriminator 6
 1320 01e0 97F85330 		ldrb	r3, [r7, #83]	@ zero_extendqisi2
 1321 01e4 002B     		cmp	r3, #0
 1322 01e6 06D0     		beq	.L85
 1323              		.loc 1 447 0 is_stmt 0 discriminator 1
 1324 01e8 444B     		ldr	r3, .L133+28
 1325 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1326 01ec 002B     		cmp	r3, #0
 1327 01ee 02D1     		bne	.L85
 448:main.c        ****                 straight_complete = 1;     // tell the indexer to advance
 1328              		.loc 1 448 0 is_stmt 1
 1329 01f0 0123     		movs	r3, #1
 1330 01f2 87F86330 		strb	r3, [r7, #99]
 1331              	.L85:
 449:main.c        ****             }
 450:main.c        ****             s12_prev = s12_now;
 1332              		.loc 1 450 0
 1333 01f6 414A     		ldr	r2, .L133+28
 1334 01f8 97F85330 		ldrb	r3, [r7, #83]
 1335 01fc 1370     		strb	r3, [r2]
 1336              	.LBE4:
 1337 01fe C2E1     		b	.L86
 1338              	.L80:
 451:main.c        **** 
 452:main.c        ****             
 453:main.c        ****         } else if((CMD_STATES[i] == 1)) {
 1339              		.loc 1 453 0
 1340 0200 97F96B30 		ldrsb	r3, [r7, #107]
 1341 0204 07F17002 		add	r2, r7, #112
 1342 0208 1344     		add	r3, r3, r2
 1343 020a 13F8683C 		ldrb	r3, [r3, #-104]	@ zero_extendqisi2
 1344 020e 012B     		cmp	r3, #1
 1345 0210 7AD1     		bne	.L87
 454:main.c        ****             // Go LEFT
 455:main.c        ****             
 456:main.c        ****             g_direction = 1u;
 1346              		.loc 1 456 0
 1347 0212 344B     		ldr	r3, .L133+4
 1348 0214 0122     		movs	r2, #1
 1349 0216 1A70     		strb	r2, [r3]
 457:main.c        ****             /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 458:main.c        ****                 /* Arm once on the first detection (edge 0 -> 1/2) */
 459:main.c        ****                 if ((g_direction == 1u || g_direction == 2u) && dir_latched_side == 0){
 1350              		.loc 1 459 0
 1351 0218 324B     		ldr	r3, .L133+4
 1352 021a 1B78     		ldrb	r3, [r3]
 1353 021c DBB2     		uxtb	r3, r3
 1354 021e 012B     		cmp	r3, #1
 1355 0220 04D0     		beq	.L88
 1356              		.loc 1 459 0 is_stmt 0 discriminator 2
 1357 0222 304B     		ldr	r3, .L133+4
 1358 0224 1B78     		ldrb	r3, [r3]
 1359 0226 DBB2     		uxtb	r3, r3
 1360 0228 022B     		cmp	r3, #2
 1361 022a 0BD1     		bne	.L89
 1362              	.L88:
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 33


 1363              		.loc 1 459 0 discriminator 3
 1364 022c 344B     		ldr	r3, .L133+32
 1365 022e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1366 0230 002B     		cmp	r3, #0
 1367 0232 07D1     		bne	.L89
 460:main.c        ****                     dir_latched_side = g_direction;          /* remember side */
 1368              		.loc 1 460 0 is_stmt 1
 1369 0234 2B4B     		ldr	r3, .L133+4
 1370 0236 1B78     		ldrb	r3, [r3]
 1371 0238 DAB2     		uxtb	r2, r3
 1372 023a 314B     		ldr	r3, .L133+32
 1373 023c 1A70     		strb	r2, [r3]
 461:main.c        ****                     dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 1374              		.loc 1 461 0
 1375 023e 314B     		ldr	r3, .L133+36
 1376 0240 0D22     		movs	r2, #13
 1377 0242 1A80     		strh	r2, [r3]	@ movhi
 1378              	.L89:
 462:main.c        ****                     //CyDelay(50);
 463:main.c        ****                 }
 464:main.c        ****                 /* If request cleared during delay, cancel gracefully */
 465:main.c        ****                 if (g_direction == 0u && dir_latched_side != 0){
 1379              		.loc 1 465 0
 1380 0244 274B     		ldr	r3, .L133+4
 1381 0246 1B78     		ldrb	r3, [r3]
 1382 0248 DBB2     		uxtb	r3, r3
 1383 024a 002B     		cmp	r3, #0
 1384 024c 09D1     		bne	.L90
 1385              		.loc 1 465 0 is_stmt 0 discriminator 1
 1386 024e 2C4B     		ldr	r3, .L133+32
 1387 0250 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1388 0252 002B     		cmp	r3, #0
 1389 0254 05D0     		beq	.L90
 466:main.c        ****                     dir_latched_side = 0;
 1390              		.loc 1 466 0 is_stmt 1
 1391 0256 2A4B     		ldr	r3, .L133+32
 1392 0258 0022     		movs	r2, #0
 1393 025a 1A70     		strb	r2, [r3]
 467:main.c        ****                     dir_delay_ticks  = 0;
 1394              		.loc 1 467 0
 1395 025c 294B     		ldr	r3, .L133+36
 1396 025e 0022     		movs	r2, #0
 1397 0260 1A80     		strh	r2, [r3]	@ movhi
 1398              	.L90:
 468:main.c        ****                 }
 469:main.c        **** 
 470:main.c        ****                 if (g_direction == 1u || g_direction == 2u){
 1399              		.loc 1 470 0
 1400 0262 204B     		ldr	r3, .L133+4
 1401 0264 1B78     		ldrb	r3, [r3]
 1402 0266 DBB2     		uxtb	r3, r3
 1403 0268 012B     		cmp	r3, #1
 1404 026a 04D0     		beq	.L91
 1405              		.loc 1 470 0 is_stmt 0 discriminator 1
 1406 026c 1D4B     		ldr	r3, .L133+4
 1407 026e 1B78     		ldrb	r3, [r3]
 1408 0270 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 34


 1409 0272 022B     		cmp	r3, #2
 1410 0274 28D1     		bne	.L92
 1411              	.L91:
 471:main.c        ****                     if (dir_delay_ticks > 0){
 1412              		.loc 1 471 0 is_stmt 1
 1413 0276 234B     		ldr	r3, .L133+36
 1414 0278 1B88     		ldrh	r3, [r3]
 1415 027a 002B     		cmp	r3, #0
 1416 027c 06D0     		beq	.L93
 472:main.c        ****                         /* Still delaying: keep doing normal straight PI */
 473:main.c        ****                         dir_delay_ticks--;
 1417              		.loc 1 473 0
 1418 027e 214B     		ldr	r3, .L133+36
 1419 0280 1B88     		ldrh	r3, [r3]
 1420 0282 013B     		subs	r3, r3, #1
 1421 0284 9AB2     		uxth	r2, r3
 1422 0286 1F4B     		ldr	r3, .L133+36
 1423 0288 1A80     		strh	r2, [r3]	@ movhi
 1424 028a 1DE0     		b	.L92
 1425              	.L93:
 474:main.c        ****                     } else {
 475:main.c        ****                         /* Delay elapsed: perform the maneuver */
 476:main.c        ****                         Directions_Handle(&g_direction);
 1426              		.loc 1 476 0
 1427 028c 1548     		ldr	r0, .L133+4
 1428 028e FFF7FEFF 		bl	Directions_Handle
 477:main.c        **** 
 478:main.c        ****                         /* When turn completes, Directions sets g_direction back to 0 */
 479:main.c        ****                         if (g_direction == 0u){
 1429              		.loc 1 479 0
 1430 0292 144B     		ldr	r3, .L133+4
 1431 0294 1B78     		ldrb	r3, [r3]
 1432 0296 DBB2     		uxtb	r3, r3
 1433 0298 002B     		cmp	r3, #0
 1434 029a 11D1     		bne	.L94
 480:main.c        ****                             pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 1435              		.loc 1 480 0
 1436 029c 4FF00003 		mov	r3, #0
 1437 02a0 3B64     		str	r3, [r7, #64]	@ float
 1438 02a2 4FF00003 		mov	r3, #0
 1439 02a6 7B64     		str	r3, [r7, #68]	@ float
 1440 02a8 4FF00003 		mov	r3, #0
 1441 02ac BB64     		str	r3, [r7, #72]	@ float
 481:main.c        ****                             dir_latched_side = 0;                        /* ready next time */
 1442              		.loc 1 481 0
 1443 02ae 144B     		ldr	r3, .L133+32
 1444 02b0 0022     		movs	r2, #0
 1445 02b2 1A70     		strb	r2, [r3]
 482:main.c        ****                             
 483:main.c        ****                             
 484:main.c        ****                             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1446              		.loc 1 484 0
 1447 02b4 0E4B     		ldr	r3, .L133+16
 1448 02b6 3222     		movs	r2, #50
 1449 02b8 1A80     		strh	r2, [r3]	@ movhi
 485:main.c        ****                             turn_complete = 1;
 1450              		.loc 1 485 0
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 35


 1451 02ba 0123     		movs	r3, #1
 1452 02bc 87F86230 		strb	r3, [r7, #98]
 1453              	.L94:
 486:main.c        ****                         }
 487:main.c        ****                         CyDelay(LOOP_DT_MS);
 1454              		.loc 1 487 0
 1455 02c0 0820     		movs	r0, #8
 1456 02c2 FFF7FEFF 		bl	CyDelay
 488:main.c        ****                         continue;  /* skip the rest this tick */
 1457              		.loc 1 488 0
 1458 02c6 C6E1     		b	.L131
 1459              	.L92:
 489:main.c        ****                     }
 490:main.c        ****                 }
 491:main.c        ****                 /* ---------------- end turn handling with delay ---------------- */
 492:main.c        ****                 /* Straight run with PI steering */
 493:main.c        ****         
 494:main.c        ****         if(turn_cooldown_ticks > 0) {
 1460              		.loc 1 494 0
 1461 02c8 094B     		ldr	r3, .L133+16
 1462 02ca 1B88     		ldrh	r3, [r3]
 1463 02cc 002B     		cmp	r3, #0
 1464 02ce 00F05A81 		beq	.L86
 495:main.c        ****             turn_cooldown_ticks--;
 1465              		.loc 1 495 0
 1466 02d2 074B     		ldr	r3, .L133+16
 1467 02d4 1B88     		ldrh	r3, [r3]
 1468 02d6 013B     		subs	r3, r3, #1
 1469 02d8 9AB2     		uxth	r2, r3
 1470 02da 054B     		ldr	r3, .L133+16
 1471 02dc 1A80     		strh	r2, [r3]	@ movhi
 1472 02de 52E1     		b	.L86
 1473              	.L134:
 1474              		.align	2
 1475              	.L133:
 1476 02e0 00000000 		.word	isr_qd_Handler
 1477 02e4 06000000 		.word	g_direction
 1478 02e8 00000000 		.word	.LC0
 1479 02ec 07000000 		.word	g_stop_now
 1480 02f0 10000000 		.word	turn_cooldown_ticks
 1481 02f4 00000000 		.word	sen1_on_line
 1482 02f8 01000000 		.word	sen2_on_line
 1483 02fc 12000000 		.word	s12_prev
 1484 0300 0E000000 		.word	dir_latched_side
 1485 0304 0C000000 		.word	dir_delay_ticks
 1486              	.L87:
 496:main.c        ****         }
 497:main.c        ****                 
 498:main.c        ****             
 499:main.c        ****         } else if((CMD_STATES[i] == 2)) {
 1487              		.loc 1 499 0
 1488 0308 97F96B30 		ldrsb	r3, [r7, #107]
 1489 030c 07F17002 		add	r2, r7, #112
 1490 0310 1344     		add	r3, r3, r2
 1491 0312 13F8683C 		ldrb	r3, [r3, #-104]	@ zero_extendqisi2
 1492 0316 022B     		cmp	r3, #2
 1493 0318 66D1     		bne	.L96
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 36


 500:main.c        ****             // Go RIGHT
 501:main.c        ****             g_direction = 2u;
 1494              		.loc 1 501 0
 1495 031a 8E4B     		ldr	r3, .L135
 1496 031c 0222     		movs	r2, #2
 1497 031e 1A70     		strb	r2, [r3]
 502:main.c        ****             /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 503:main.c        ****                 /* Arm once on the first detection (edge 0 -> 1/2) */
 504:main.c        ****                 if ((g_direction == 1u || g_direction == 2u) && dir_latched_side == 0){
 1498              		.loc 1 504 0
 1499 0320 8C4B     		ldr	r3, .L135
 1500 0322 1B78     		ldrb	r3, [r3]
 1501 0324 DBB2     		uxtb	r3, r3
 1502 0326 012B     		cmp	r3, #1
 1503 0328 04D0     		beq	.L97
 1504              		.loc 1 504 0 is_stmt 0 discriminator 2
 1505 032a 8A4B     		ldr	r3, .L135
 1506 032c 1B78     		ldrb	r3, [r3]
 1507 032e DBB2     		uxtb	r3, r3
 1508 0330 022B     		cmp	r3, #2
 1509 0332 0BD1     		bne	.L98
 1510              	.L97:
 1511              		.loc 1 504 0 discriminator 3
 1512 0334 884B     		ldr	r3, .L135+4
 1513 0336 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1514 0338 002B     		cmp	r3, #0
 1515 033a 07D1     		bne	.L98
 505:main.c        ****                     dir_latched_side = g_direction;          /* remember side */
 1516              		.loc 1 505 0 is_stmt 1
 1517 033c 854B     		ldr	r3, .L135
 1518 033e 1B78     		ldrb	r3, [r3]
 1519 0340 DAB2     		uxtb	r2, r3
 1520 0342 854B     		ldr	r3, .L135+4
 1521 0344 1A70     		strb	r2, [r3]
 506:main.c        ****                     dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 1522              		.loc 1 506 0
 1523 0346 854B     		ldr	r3, .L135+8
 1524 0348 0D22     		movs	r2, #13
 1525 034a 1A80     		strh	r2, [r3]	@ movhi
 1526              	.L98:
 507:main.c        ****                     //CyDelay(50);
 508:main.c        ****                 }
 509:main.c        ****                 /* If request cleared during delay, cancel gracefully */
 510:main.c        ****                 if (g_direction == 0u && dir_latched_side != 0){
 1527              		.loc 1 510 0
 1528 034c 814B     		ldr	r3, .L135
 1529 034e 1B78     		ldrb	r3, [r3]
 1530 0350 DBB2     		uxtb	r3, r3
 1531 0352 002B     		cmp	r3, #0
 1532 0354 09D1     		bne	.L99
 1533              		.loc 1 510 0 is_stmt 0 discriminator 1
 1534 0356 804B     		ldr	r3, .L135+4
 1535 0358 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1536 035a 002B     		cmp	r3, #0
 1537 035c 05D0     		beq	.L99
 511:main.c        ****                     dir_latched_side = 0;
 1538              		.loc 1 511 0 is_stmt 1
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 37


 1539 035e 7E4B     		ldr	r3, .L135+4
 1540 0360 0022     		movs	r2, #0
 1541 0362 1A70     		strb	r2, [r3]
 512:main.c        ****                     dir_delay_ticks  = 0;
 1542              		.loc 1 512 0
 1543 0364 7D4B     		ldr	r3, .L135+8
 1544 0366 0022     		movs	r2, #0
 1545 0368 1A80     		strh	r2, [r3]	@ movhi
 1546              	.L99:
 513:main.c        ****                 }
 514:main.c        **** 
 515:main.c        ****                 if (g_direction == 1u || g_direction == 2u){
 1547              		.loc 1 515 0
 1548 036a 7A4B     		ldr	r3, .L135
 1549 036c 1B78     		ldrb	r3, [r3]
 1550 036e DBB2     		uxtb	r3, r3
 1551 0370 012B     		cmp	r3, #1
 1552 0372 04D0     		beq	.L100
 1553              		.loc 1 515 0 is_stmt 0 discriminator 1
 1554 0374 774B     		ldr	r3, .L135
 1555 0376 1B78     		ldrb	r3, [r3]
 1556 0378 DBB2     		uxtb	r3, r3
 1557 037a 022B     		cmp	r3, #2
 1558 037c 28D1     		bne	.L101
 1559              	.L100:
 516:main.c        ****                     if (dir_delay_ticks > 0){
 1560              		.loc 1 516 0 is_stmt 1
 1561 037e 774B     		ldr	r3, .L135+8
 1562 0380 1B88     		ldrh	r3, [r3]
 1563 0382 002B     		cmp	r3, #0
 1564 0384 06D0     		beq	.L102
 517:main.c        ****                         /* Still delaying: keep doing normal straight PI */
 518:main.c        ****                         dir_delay_ticks--;
 1565              		.loc 1 518 0
 1566 0386 754B     		ldr	r3, .L135+8
 1567 0388 1B88     		ldrh	r3, [r3]
 1568 038a 013B     		subs	r3, r3, #1
 1569 038c 9AB2     		uxth	r2, r3
 1570 038e 734B     		ldr	r3, .L135+8
 1571 0390 1A80     		strh	r2, [r3]	@ movhi
 1572 0392 1DE0     		b	.L101
 1573              	.L102:
 519:main.c        ****                     } else {
 520:main.c        ****                         /* Delay elapsed: perform the maneuver */
 521:main.c        ****                         Directions_Handle(&g_direction);
 1574              		.loc 1 521 0
 1575 0394 6F48     		ldr	r0, .L135
 1576 0396 FFF7FEFF 		bl	Directions_Handle
 522:main.c        **** 
 523:main.c        ****                         /* When turn completes, Directions sets g_direction back to 0 */
 524:main.c        ****                         if (g_direction == 0u){
 1577              		.loc 1 524 0
 1578 039a 6E4B     		ldr	r3, .L135
 1579 039c 1B78     		ldrb	r3, [r3]
 1580 039e DBB2     		uxtb	r3, r3
 1581 03a0 002B     		cmp	r3, #0
 1582 03a2 11D1     		bne	.L103
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 38


 525:main.c        ****                             pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 1583              		.loc 1 525 0
 1584 03a4 4FF00003 		mov	r3, #0
 1585 03a8 3B64     		str	r3, [r7, #64]	@ float
 1586 03aa 4FF00003 		mov	r3, #0
 1587 03ae 7B64     		str	r3, [r7, #68]	@ float
 1588 03b0 4FF00003 		mov	r3, #0
 1589 03b4 BB64     		str	r3, [r7, #72]	@ float
 526:main.c        ****                             dir_latched_side = 0;                        /* ready next time */
 1590              		.loc 1 526 0
 1591 03b6 684B     		ldr	r3, .L135+4
 1592 03b8 0022     		movs	r2, #0
 1593 03ba 1A70     		strb	r2, [r3]
 527:main.c        ****                             
 528:main.c        ****                             
 529:main.c        ****                             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1594              		.loc 1 529 0
 1595 03bc 684B     		ldr	r3, .L135+12
 1596 03be 3222     		movs	r2, #50
 1597 03c0 1A80     		strh	r2, [r3]	@ movhi
 530:main.c        ****                             turn_complete = 1;
 1598              		.loc 1 530 0
 1599 03c2 0123     		movs	r3, #1
 1600 03c4 87F86230 		strb	r3, [r7, #98]
 1601              	.L103:
 531:main.c        ****                         }
 532:main.c        ****                         CyDelay(LOOP_DT_MS);
 1602              		.loc 1 532 0
 1603 03c8 0820     		movs	r0, #8
 1604 03ca FFF7FEFF 		bl	CyDelay
 533:main.c        ****                         continue;  /* skip the rest this tick */
 1605              		.loc 1 533 0
 1606 03ce 42E1     		b	.L131
 1607              	.L101:
 534:main.c        ****                     }
 535:main.c        ****                 }
 536:main.c        ****                 /* ---------------- end turn handling with delay ---------------- */
 537:main.c        ****                 /* Straight run with PI steering */
 538:main.c        ****         
 539:main.c        ****         if(turn_cooldown_ticks > 0) {
 1608              		.loc 1 539 0
 1609 03d0 634B     		ldr	r3, .L135+12
 1610 03d2 1B88     		ldrh	r3, [r3]
 1611 03d4 002B     		cmp	r3, #0
 1612 03d6 00F0D680 		beq	.L86
 540:main.c        ****             turn_cooldown_ticks--;
 1613              		.loc 1 540 0
 1614 03da 614B     		ldr	r3, .L135+12
 1615 03dc 1B88     		ldrh	r3, [r3]
 1616 03de 013B     		subs	r3, r3, #1
 1617 03e0 9AB2     		uxth	r2, r3
 1618 03e2 5F4B     		ldr	r3, .L135+12
 1619 03e4 1A80     		strh	r2, [r3]	@ movhi
 1620 03e6 CEE0     		b	.L86
 1621              	.L96:
 541:main.c        ****         }
 542:main.c        ****             
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 39


 543:main.c        ****         } else if((CMD_STATES[i] == 3)) {
 1622              		.loc 1 543 0
 1623 03e8 97F96B30 		ldrsb	r3, [r7, #107]
 1624 03ec 07F17002 		add	r2, r7, #112
 1625 03f0 1344     		add	r3, r3, r2
 1626 03f2 13F8683C 		ldrb	r3, [r3, #-104]	@ zero_extendqisi2
 1627 03f6 032B     		cmp	r3, #3
 1628 03f8 6FD1     		bne	.L105
 544:main.c        ****             // Do U-TURN
 545:main.c        ****             g_direction = 3u;
 1629              		.loc 1 545 0
 1630 03fa 564B     		ldr	r3, .L135
 1631 03fc 0322     		movs	r2, #3
 1632 03fe 1A70     		strb	r2, [r3]
 546:main.c        ****             /* ---------------- Turn handling with arming delay (Option A) ---------------- */
 547:main.c        ****                 /* Arm once on the first detection (edge 0 -> 1/2) */
 548:main.c        ****                 if ((g_direction == 1u || g_direction == 2u || g_direction == 3u) && dir_latched_si
 1633              		.loc 1 548 0
 1634 0400 544B     		ldr	r3, .L135
 1635 0402 1B78     		ldrb	r3, [r3]
 1636 0404 DBB2     		uxtb	r3, r3
 1637 0406 012B     		cmp	r3, #1
 1638 0408 09D0     		beq	.L106
 1639              		.loc 1 548 0 is_stmt 0 discriminator 2
 1640 040a 524B     		ldr	r3, .L135
 1641 040c 1B78     		ldrb	r3, [r3]
 1642 040e DBB2     		uxtb	r3, r3
 1643 0410 022B     		cmp	r3, #2
 1644 0412 04D0     		beq	.L106
 1645              		.loc 1 548 0 discriminator 4
 1646 0414 4F4B     		ldr	r3, .L135
 1647 0416 1B78     		ldrb	r3, [r3]
 1648 0418 DBB2     		uxtb	r3, r3
 1649 041a 032B     		cmp	r3, #3
 1650 041c 0BD1     		bne	.L107
 1651              	.L106:
 1652              		.loc 1 548 0 discriminator 5
 1653 041e 4E4B     		ldr	r3, .L135+4
 1654 0420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1655 0422 002B     		cmp	r3, #0
 1656 0424 07D1     		bne	.L107
 549:main.c        ****                     dir_latched_side = g_direction;          /* remember side */
 1657              		.loc 1 549 0 is_stmt 1
 1658 0426 4B4B     		ldr	r3, .L135
 1659 0428 1B78     		ldrb	r3, [r3]
 1660 042a DAB2     		uxtb	r2, r3
 1661 042c 4A4B     		ldr	r3, .L135+4
 1662 042e 1A70     		strb	r2, [r3]
 550:main.c        ****                     dir_delay_ticks  = DIR_CALL_DELAY_TICKS; /* start countdown */
 1663              		.loc 1 550 0
 1664 0430 4A4B     		ldr	r3, .L135+8
 1665 0432 0D22     		movs	r2, #13
 1666 0434 1A80     		strh	r2, [r3]	@ movhi
 1667              	.L107:
 551:main.c        ****                     //CyDelay(50);
 552:main.c        ****                 }
 553:main.c        ****                 /* If request cleared during delay, cancel gracefully */
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 40


 554:main.c        ****                 if (g_direction == 0u && dir_latched_side != 0){
 1668              		.loc 1 554 0
 1669 0436 474B     		ldr	r3, .L135
 1670 0438 1B78     		ldrb	r3, [r3]
 1671 043a DBB2     		uxtb	r3, r3
 1672 043c 002B     		cmp	r3, #0
 1673 043e 09D1     		bne	.L108
 1674              		.loc 1 554 0 is_stmt 0 discriminator 1
 1675 0440 454B     		ldr	r3, .L135+4
 1676 0442 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1677 0444 002B     		cmp	r3, #0
 1678 0446 05D0     		beq	.L108
 555:main.c        ****                     dir_latched_side = 0;
 1679              		.loc 1 555 0 is_stmt 1
 1680 0448 434B     		ldr	r3, .L135+4
 1681 044a 0022     		movs	r2, #0
 1682 044c 1A70     		strb	r2, [r3]
 556:main.c        ****                     dir_delay_ticks  = 0;
 1683              		.loc 1 556 0
 1684 044e 434B     		ldr	r3, .L135+8
 1685 0450 0022     		movs	r2, #0
 1686 0452 1A80     		strh	r2, [r3]	@ movhi
 1687              	.L108:
 557:main.c        ****                 }
 558:main.c        **** 
 559:main.c        ****                 if (g_direction == 1u || g_direction == 2u || g_direction == 3u){
 1688              		.loc 1 559 0
 1689 0454 3F4B     		ldr	r3, .L135
 1690 0456 1B78     		ldrb	r3, [r3]
 1691 0458 DBB2     		uxtb	r3, r3
 1692 045a 012B     		cmp	r3, #1
 1693 045c 09D0     		beq	.L109
 1694              		.loc 1 559 0 is_stmt 0 discriminator 1
 1695 045e 3D4B     		ldr	r3, .L135
 1696 0460 1B78     		ldrb	r3, [r3]
 1697 0462 DBB2     		uxtb	r3, r3
 1698 0464 022B     		cmp	r3, #2
 1699 0466 04D0     		beq	.L109
 1700              		.loc 1 559 0 discriminator 2
 1701 0468 3A4B     		ldr	r3, .L135
 1702 046a 1B78     		ldrb	r3, [r3]
 1703 046c DBB2     		uxtb	r3, r3
 1704 046e 032B     		cmp	r3, #3
 1705 0470 28D1     		bne	.L110
 1706              	.L109:
 560:main.c        ****                     if (dir_delay_ticks > 0){
 1707              		.loc 1 560 0 is_stmt 1
 1708 0472 3A4B     		ldr	r3, .L135+8
 1709 0474 1B88     		ldrh	r3, [r3]
 1710 0476 002B     		cmp	r3, #0
 1711 0478 06D0     		beq	.L111
 561:main.c        ****                         /* Still delaying: keep doing normal straight PI */
 562:main.c        ****                         dir_delay_ticks--;
 1712              		.loc 1 562 0
 1713 047a 384B     		ldr	r3, .L135+8
 1714 047c 1B88     		ldrh	r3, [r3]
 1715 047e 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 41


 1716 0480 9AB2     		uxth	r2, r3
 1717 0482 364B     		ldr	r3, .L135+8
 1718 0484 1A80     		strh	r2, [r3]	@ movhi
 1719 0486 1DE0     		b	.L110
 1720              	.L111:
 563:main.c        ****                     } else {
 564:main.c        ****                         /* Delay elapsed: perform the maneuver */
 565:main.c        ****                         Directions_Handle(&g_direction);
 1721              		.loc 1 565 0
 1722 0488 3248     		ldr	r0, .L135
 1723 048a FFF7FEFF 		bl	Directions_Handle
 566:main.c        **** 
 567:main.c        ****                         /* When turn completes, Directions sets g_direction back to 0 */
 568:main.c        ****                         if (g_direction == 0u){
 1724              		.loc 1 568 0
 1725 048e 314B     		ldr	r3, .L135
 1726 0490 1B78     		ldrb	r3, [r3]
 1727 0492 DBB2     		uxtb	r3, r3
 1728 0494 002B     		cmp	r3, #0
 1729 0496 11D1     		bne	.L112
 569:main.c        ****                             pi.i = 0.0f; pi.u = 0.0f; pi.t_loss = 0.0f;  /* clear bias */
 1730              		.loc 1 569 0
 1731 0498 4FF00003 		mov	r3, #0
 1732 049c 3B64     		str	r3, [r7, #64]	@ float
 1733 049e 4FF00003 		mov	r3, #0
 1734 04a2 7B64     		str	r3, [r7, #68]	@ float
 1735 04a4 4FF00003 		mov	r3, #0
 1736 04a8 BB64     		str	r3, [r7, #72]	@ float
 570:main.c        ****                             dir_latched_side = 0;                        /* ready next time */
 1737              		.loc 1 570 0
 1738 04aa 2B4B     		ldr	r3, .L135+4
 1739 04ac 0022     		movs	r2, #0
 1740 04ae 1A70     		strb	r2, [r3]
 571:main.c        ****                             
 572:main.c        ****                             
 573:main.c        ****                             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1741              		.loc 1 573 0
 1742 04b0 2B4B     		ldr	r3, .L135+12
 1743 04b2 3222     		movs	r2, #50
 1744 04b4 1A80     		strh	r2, [r3]	@ movhi
 574:main.c        ****                             uTurn_complete = 1;
 1745              		.loc 1 574 0
 1746 04b6 0123     		movs	r3, #1
 1747 04b8 87F86130 		strb	r3, [r7, #97]
 1748              	.L112:
 575:main.c        ****                         }
 576:main.c        ****                         CyDelay(LOOP_DT_MS);
 1749              		.loc 1 576 0
 1750 04bc 0820     		movs	r0, #8
 1751 04be FFF7FEFF 		bl	CyDelay
 577:main.c        ****                         continue;  /* skip the rest this tick */
 1752              		.loc 1 577 0
 1753 04c2 C8E0     		b	.L131
 1754              	.L110:
 578:main.c        ****                     }
 579:main.c        ****                 }
 580:main.c        ****                 /* ---------------- end turn handling with delay ---------------- */
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 42


 581:main.c        ****                 /* Straight run with PI steering */
 582:main.c        ****         
 583:main.c        ****         if(turn_cooldown_ticks > 0) {
 1755              		.loc 1 583 0
 1756 04c4 264B     		ldr	r3, .L135+12
 1757 04c6 1B88     		ldrh	r3, [r3]
 1758 04c8 002B     		cmp	r3, #0
 1759 04ca 5CD0     		beq	.L86
 584:main.c        ****             turn_cooldown_ticks--;
 1760              		.loc 1 584 0
 1761 04cc 244B     		ldr	r3, .L135+12
 1762 04ce 1B88     		ldrh	r3, [r3]
 1763 04d0 013B     		subs	r3, r3, #1
 1764 04d2 9AB2     		uxth	r2, r3
 1765 04d4 224B     		ldr	r3, .L135+12
 1766 04d6 1A80     		strh	r2, [r3]	@ movhi
 1767 04d8 55E0     		b	.L86
 1768              	.L105:
 585:main.c        ****         }
 586:main.c        ****           
 587:main.c        ****             
 588:main.c        ****         } else if((CMD_STATES[i] == 5)) {
 1769              		.loc 1 588 0
 1770 04da 97F96B30 		ldrsb	r3, [r7, #107]
 1771 04de 07F17002 		add	r2, r7, #112
 1772 04e2 1344     		add	r3, r3, r2
 1773 04e4 13F8683C 		ldrb	r3, [r3, #-104]	@ zero_extendqisi2
 1774 04e8 052B     		cmp	r3, #5
 1775 04ea 3FD1     		bne	.L114
 589:main.c        ****         // REACH FOOD
 590:main.c        **** 
 591:main.c        ****          // --- FIX 1: Set the target distance *only once* ---
 592:main.c        ****          // We know we just entered this state if target_dist is 0
 593:main.c        ****         if (target_dist == 0) {
 1776              		.loc 1 593 0
 1777 04ec 7B6E     		ldr	r3, [r7, #100]
 1778 04ee 002B     		cmp	r3, #0
 1779 04f0 03D1     		bne	.L115
 594:main.c        ****          // Set target to be 500mm *from our current position*
 595:main.c        ****          target_dist = g_dist_mm + 150 ; // in mm
 1780              		.loc 1 595 0
 1781 04f2 1C4B     		ldr	r3, .L135+16
 1782 04f4 1B68     		ldr	r3, [r3]
 1783 04f6 9633     		adds	r3, r3, #150
 1784 04f8 7B66     		str	r3, [r7, #100]
 1785              	.L115:
 596:main.c        ****          }
 597:main.c        **** 
 598:main.c        ****         // Check if we have *now* reached that target
 599:main.c        ****          g_stop_now = (g_dist_mm >= target_dist) ? 1u : 0u;
 1786              		.loc 1 599 0
 1787 04fa 1A4B     		ldr	r3, .L135+16
 1788 04fc 1A68     		ldr	r2, [r3]
 1789 04fe 7B6E     		ldr	r3, [r7, #100]
 1790 0500 9A42     		cmp	r2, r3
 1791 0502 01DB     		blt	.L116
 1792              		.loc 1 599 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 43


 1793 0504 0122     		movs	r2, #1
 1794 0506 00E0     		b	.L117
 1795              	.L116:
 1796              		.loc 1 599 0 discriminator 2
 1797 0508 0022     		movs	r2, #0
 1798              	.L117:
 1799              		.loc 1 599 0 discriminator 4
 1800 050a 174B     		ldr	r3, .L135+20
 1801 050c 1A70     		strb	r2, [r3]
 600:main.c        **** 
 601:main.c        ****          // --- FIX 2 & 3: Use if/else and remove 'continue' ---
 602:main.c        ****          if (g_stop_now) {
 1802              		.loc 1 602 0 is_stmt 1 discriminator 4
 1803 050e 164B     		ldr	r3, .L135+20
 1804 0510 1B78     		ldrb	r3, [r3]
 1805 0512 DBB2     		uxtb	r3, r3
 1806 0514 002B     		cmp	r3, #0
 1807 0516 0DD0     		beq	.L118
 603:main.c        ****          // Target met: STOP
 604:main.c        ****          set_motors_symmetric(0);
 1808              		.loc 1 604 0
 1809 0518 0020     		movs	r0, #0
 1810 051a FFF7FEFF 		bl	set_motors_symmetric
 605:main.c        ****          motor_enable(1u, 1u); // Disable the motors
 1811              		.loc 1 605 0
 1812 051e 0121     		movs	r1, #1
 1813 0520 0120     		movs	r0, #1
 1814 0522 FFF7FEFF 		bl	motor_enable
 606:main.c        ****         
 607:main.c        ****          fruit_complete = 1; // Flag that this state is done
 1815              		.loc 1 607 0
 1816 0526 0123     		movs	r3, #1
 1817 0528 87F86030 		strb	r3, [r7, #96]
 608:main.c        ****         D4_Write(1);
 1818              		.loc 1 608 0
 1819 052c 0120     		movs	r0, #1
 1820 052e FFF7FEFF 		bl	D4_Write
 1821 0532 28E0     		b	.L86
 1822              	.L118:
 1823              	.LBB5:
 609:main.c        ****          // DO NOT 'continue' here
 610:main.c        ****         } else {
 611:main.c        ****          // Target not met: KEEP DRIVING
 612:main.c        ****          int steer = pi_step(&pi, V3_pp, V4_pp, V5_pp, V6_pp);
 1824              		.loc 1 612 0
 1825 0534 F988     		ldrh	r1, [r7, #6]
 1826 0536 BA88     		ldrh	r2, [r7, #4]
 1827 0538 7C88     		ldrh	r4, [r7, #2]
 1828 053a 3B88     		ldrh	r3, [r7]
 1829 053c 07F14000 		add	r0, r7, #64
 1830 0540 0093     		str	r3, [sp]
 1831 0542 2346     		mov	r3, r4
 1832 0544 FFF7FEFF 		bl	pi_step
 1833 0548 F864     		str	r0, [r7, #76]
 613:main.c        ****          set_motors_with_trim_and_steer(center_duty_est, steer);
 1834              		.loc 1 613 0
 1835 054a F96C     		ldr	r1, [r7, #76]
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 44


 1836 054c F86E     		ldr	r0, [r7, #108]
 1837 054e FFF7FEFF 		bl	set_motors_with_trim_and_steer
 1838 0552 18E0     		b	.L86
 1839              	.L136:
 1840              		.align	2
 1841              	.L135:
 1842 0554 06000000 		.word	g_direction
 1843 0558 0E000000 		.word	dir_latched_side
 1844 055c 0C000000 		.word	dir_delay_ticks
 1845 0560 10000000 		.word	turn_cooldown_ticks
 1846 0564 08000000 		.word	g_dist_mm
 1847 0568 07000000 		.word	g_stop_now
 1848              	.L114:
 1849              	.LBE5:
 614:main.c        ****          }
 615:main.c        **** 
 616:main.c        ****         
 617:main.c        ****         
 618:main.c        ****         
 619:main.c        ****         } else if((CMD_STATES[i] == 6)) {
 1850              		.loc 1 619 0
 1851 056c 97F96B30 		ldrsb	r3, [r7, #107]
 1852 0570 07F17002 		add	r2, r7, #112
 1853 0574 1344     		add	r3, r3, r2
 1854 0576 13F8683C 		ldrb	r3, [r3, #-104]	@ zero_extendqisi2
 1855 057a 062B     		cmp	r3, #6
 1856 057c 03D1     		bne	.L86
 620:main.c        ****          // FINISH
 621:main.c        ****             motor_enable(1u, 1u);
 1857              		.loc 1 621 0
 1858 057e 0121     		movs	r1, #1
 1859 0580 0120     		movs	r0, #1
 1860 0582 FFF7FEFF 		bl	motor_enable
 1861              	.L86:
 622:main.c        ****         
 623:main.c        ****         
 624:main.c        ****         }
 625:main.c        ****         
 626:main.c        ****         // food
 627:main.c        ****         if (i == 13 || i == 23 || i == 31 || i == 44) {
 1862              		.loc 1 627 0
 1863 0586 97F96B30 		ldrsb	r3, [r7, #107]
 1864 058a 0D2B     		cmp	r3, #13
 1865 058c 0BD0     		beq	.L120
 1866              		.loc 1 627 0 is_stmt 0 discriminator 1
 1867 058e 97F96B30 		ldrsb	r3, [r7, #107]
 1868 0592 172B     		cmp	r3, #23
 1869 0594 07D0     		beq	.L120
 1870              		.loc 1 627 0 discriminator 2
 1871 0596 97F96B30 		ldrsb	r3, [r7, #107]
 1872 059a 1F2B     		cmp	r3, #31
 1873 059c 03D0     		beq	.L120
 1874              		.loc 1 627 0 discriminator 3
 1875 059e 97F96B30 		ldrsb	r3, [r7, #107]
 1876 05a2 2C2B     		cmp	r3, #44
 1877 05a4 03D1     		bne	.L121
 1878              	.L120:
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 45


 628:main.c        ****             CyDelay(2000);
 1879              		.loc 1 628 0 is_stmt 1
 1880 05a6 4FF4FA60 		mov	r0, #2000
 1881 05aa FFF7FEFF 		bl	CyDelay
 1882              	.L121:
 629:main.c        ****         } 
 630:main.c        ****         
 631:main.c        ****         
 632:main.c        ****         
 633:main.c        ****         if (i== 4 ) {
 1883              		.loc 1 633 0
 1884 05ae 97F96B30 		ldrsb	r3, [r7, #107]
 1885 05b2 042B     		cmp	r3, #4
 1886 05b4 02D1     		bne	.L122
 634:main.c        ****             //TURN_COOLDOWN_MS = 4000;
 635:main.c        ****             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1887              		.loc 1 635 0
 1888 05b6 284B     		ldr	r3, .L137
 1889 05b8 3222     		movs	r2, #50
 1890 05ba 1A80     		strh	r2, [r3]	@ movhi
 1891              	.L122:
 636:main.c        ****         } 
 637:main.c        ****         if ( i== 10) {
 1892              		.loc 1 637 0
 1893 05bc 97F96B30 		ldrsb	r3, [r7, #107]
 1894 05c0 0A2B     		cmp	r3, #10
 1895 05c2 02D1     		bne	.L123
 638:main.c        ****             //TURN_COOLDOWN_MS = 2000;
 639:main.c        ****             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1896              		.loc 1 639 0
 1897 05c4 244B     		ldr	r3, .L137
 1898 05c6 3222     		movs	r2, #50
 1899 05c8 1A80     		strh	r2, [r3]	@ movhi
 1900              	.L123:
 640:main.c        ****         }
 641:main.c        ****         if ( i== 35) {
 1901              		.loc 1 641 0
 1902 05ca 97F96B30 		ldrsb	r3, [r7, #107]
 1903 05ce 232B     		cmp	r3, #35
 1904 05d0 02D1     		bne	.L124
 642:main.c        ****             //TURN_COOLDOWN_MS = 5000;
 643:main.c        ****             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1905              		.loc 1 643 0
 1906 05d2 214B     		ldr	r3, .L137
 1907 05d4 3222     		movs	r2, #50
 1908 05d6 1A80     		strh	r2, [r3]	@ movhi
 1909              	.L124:
 644:main.c        ****         }
 645:main.c        ****         if ( i== 38) {
 1910              		.loc 1 645 0
 1911 05d8 97F96B30 		ldrsb	r3, [r7, #107]
 1912 05dc 262B     		cmp	r3, #38
 1913 05de 02D1     		bne	.L125
 646:main.c        ****             //TURN_COOLDOWN_MS = 500;
 647:main.c        ****             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1914              		.loc 1 647 0
 1915 05e0 1D4B     		ldr	r3, .L137
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 46


 1916 05e2 3222     		movs	r2, #50
 1917 05e4 1A80     		strh	r2, [r3]	@ movhi
 1918              	.L125:
 648:main.c        ****         }
 649:main.c        ****         if ( i== 46) {
 1919              		.loc 1 649 0
 1920 05e6 97F96B30 		ldrsb	r3, [r7, #107]
 1921 05ea 2E2B     		cmp	r3, #46
 1922 05ec 02D1     		bne	.L126
 650:main.c        ****             //TURN_COOLDOWN_MS = 1000;
 651:main.c        ****             turn_cooldown_ticks = TURN_COOLDOWN_TICKS);
 1923              		.loc 1 651 0
 1924 05ee 1A4B     		ldr	r3, .L137
 1925 05f0 3222     		movs	r2, #50
 1926 05f2 1A80     		strh	r2, [r3]	@ movhi
 1927              	.L126:
 652:main.c        ****         }
 653:main.c        ****         
 654:main.c        ****         
 655:main.c        ****         if (straight_complete == 1u || turn_complete == 1u || uTurn_complete == 1u || fruit_complet
 1928              		.loc 1 655 0
 1929 05f4 97F96330 		ldrsb	r3, [r7, #99]
 1930 05f8 012B     		cmp	r3, #1
 1931 05fa 0BD0     		beq	.L127
 1932              		.loc 1 655 0 is_stmt 0 discriminator 1
 1933 05fc 97F96230 		ldrsb	r3, [r7, #98]
 1934 0600 012B     		cmp	r3, #1
 1935 0602 07D0     		beq	.L127
 1936              		.loc 1 655 0 discriminator 2
 1937 0604 97F96130 		ldrsb	r3, [r7, #97]
 1938 0608 012B     		cmp	r3, #1
 1939 060a 03D0     		beq	.L127
 1940              		.loc 1 655 0 discriminator 3
 1941 060c 97F96030 		ldrsb	r3, [r7, #96]
 1942 0610 012B     		cmp	r3, #1
 1943 0612 1DD1     		bne	.L128
 1944              	.L127:
 656:main.c        ****             
 657:main.c        ****             // Check if we are at the end of the array
 658:main.c        ****         if (i >= indexMAX) {
 1945              		.loc 1 658 0 is_stmt 1
 1946 0614 97F96B20 		ldrsb	r2, [r7, #107]
 1947 0618 97F95F30 		ldrsb	r3, [r7, #95]
 1948 061c 9A42     		cmp	r2, r3
 1949 061e 03DB     		blt	.L129
 659:main.c        ****          // We are done. Set permanent stop flag.
 660:main.c        ****          g_stop_now = 1;
 1950              		.loc 1 660 0
 1951 0620 0E4B     		ldr	r3, .L137+4
 1952 0622 0122     		movs	r2, #1
 1953 0624 1A70     		strb	r2, [r3]
 1954 0626 05E0     		b	.L130
 1955              	.L129:
 661:main.c        ****          } else {
 662:main.c        ****          // Not done. Advance to the next state.
 663:main.c        ****          i += 1;
 1956              		.loc 1 663 0
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 47


 1957 0628 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
 1958 062c 0133     		adds	r3, r3, #1
 1959 062e DBB2     		uxtb	r3, r3
 1960 0630 87F86B30 		strb	r3, [r7, #107]
 1961              	.L130:
 664:main.c        ****         }
 665:main.c        ****             
 666:main.c        ****             straight_complete = 0;
 1962              		.loc 1 666 0
 1963 0634 0023     		movs	r3, #0
 1964 0636 87F86330 		strb	r3, [r7, #99]
 667:main.c        ****             turn_complete = 0;
 1965              		.loc 1 667 0
 1966 063a 0023     		movs	r3, #0
 1967 063c 87F86230 		strb	r3, [r7, #98]
 668:main.c        ****             uTurn_complete = 0;
 1968              		.loc 1 668 0
 1969 0640 0023     		movs	r3, #0
 1970 0642 87F86130 		strb	r3, [r7, #97]
 669:main.c        ****             fruit_complete = 0;
 1971              		.loc 1 669 0
 1972 0646 0023     		movs	r3, #0
 1973 0648 87F86030 		strb	r3, [r7, #96]
 670:main.c        ****             
 671:main.c        ****             target_dist = 0;
 1974              		.loc 1 671 0
 1975 064c 0023     		movs	r3, #0
 1976 064e 7B66     		str	r3, [r7, #100]
 1977              	.L128:
 672:main.c        ****         }
 673:main.c        ****         
 674:main.c        **** 
 675:main.c        ****         CyDelay(LOOP_DT_MS);
 1978              		.loc 1 675 0
 1979 0650 0820     		movs	r0, #8
 1980 0652 FFF7FEFF 		bl	CyDelay
 1981              	.L131:
 1982              	.LBE3:
 676:main.c        ****     }
 1983              		.loc 1 676 0 discriminator 1
 1984 0656 59E5     		b	.L132
 1985              	.L138:
 1986              		.align	2
 1987              	.L137:
 1988 0658 10000000 		.word	turn_cooldown_ticks
 1989 065c 07000000 		.word	g_stop_now
 1990              		.cfi_endproc
 1991              	.LFE69:
 1992              		.size	main, .-main
 1993              		.text
 1994              	.Letext0:
 1995              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1996              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1997              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 1998              		.section	.debug_info,"",%progbits
 1999              	.Ldebug_info0:
 2000 0000 97060000 		.4byte	0x697
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 48


 2001 0004 0400     		.2byte	0x4
 2002 0006 00000000 		.4byte	.Ldebug_abbrev0
 2003 000a 04       		.byte	0x4
 2004 000b 01       		.uleb128 0x1
 2005 000c 68000000 		.4byte	.LASF70
 2006 0010 0C       		.byte	0xc
 2007 0011 4D030000 		.4byte	.LASF71
 2008 0015 1B010000 		.4byte	.LASF72
 2009 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2010 001d 00000000 		.4byte	0
 2011 0021 00000000 		.4byte	.Ldebug_line0
 2012 0025 02       		.uleb128 0x2
 2013 0026 C7020000 		.4byte	.LASF0
 2014 002a 02       		.byte	0x2
 2015 002b 1B       		.byte	0x1b
 2016 002c 30000000 		.4byte	0x30
 2017 0030 03       		.uleb128 0x3
 2018 0031 01       		.byte	0x1
 2019 0032 06       		.byte	0x6
 2020 0033 3B020000 		.4byte	.LASF2
 2021 0037 02       		.uleb128 0x2
 2022 0038 C5010000 		.4byte	.LASF1
 2023 003c 02       		.byte	0x2
 2024 003d 1D       		.byte	0x1d
 2025 003e 42000000 		.4byte	0x42
 2026 0042 03       		.uleb128 0x3
 2027 0043 01       		.byte	0x1
 2028 0044 08       		.byte	0x8
 2029 0045 CF010000 		.4byte	.LASF3
 2030 0049 03       		.uleb128 0x3
 2031 004a 02       		.byte	0x2
 2032 004b 05       		.byte	0x5
 2033 004c 3F000000 		.4byte	.LASF4
 2034 0050 02       		.uleb128 0x2
 2035 0051 FB000000 		.4byte	.LASF5
 2036 0055 02       		.byte	0x2
 2037 0056 2B       		.byte	0x2b
 2038 0057 5B000000 		.4byte	0x5b
 2039 005b 03       		.uleb128 0x3
 2040 005c 02       		.byte	0x2
 2041 005d 07       		.byte	0x7
 2042 005e A7020000 		.4byte	.LASF6
 2043 0062 02       		.uleb128 0x2
 2044 0063 B0030000 		.4byte	.LASF7
 2045 0067 02       		.byte	0x2
 2046 0068 3F       		.byte	0x3f
 2047 0069 6D000000 		.4byte	0x6d
 2048 006d 03       		.uleb128 0x3
 2049 006e 04       		.byte	0x4
 2050 006f 05       		.byte	0x5
 2051 0070 AC010000 		.4byte	.LASF8
 2052 0074 03       		.uleb128 0x3
 2053 0075 04       		.byte	0x4
 2054 0076 07       		.byte	0x7
 2055 0077 54030000 		.4byte	.LASF9
 2056 007b 02       		.uleb128 0x2
 2057 007c B5010000 		.4byte	.LASF10
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 49


 2058 0080 02       		.byte	0x2
 2059 0081 59       		.byte	0x59
 2060 0082 86000000 		.4byte	0x86
 2061 0086 03       		.uleb128 0x3
 2062 0087 08       		.byte	0x8
 2063 0088 05       		.byte	0x5
 2064 0089 94010000 		.4byte	.LASF11
 2065 008d 03       		.uleb128 0x3
 2066 008e 08       		.byte	0x8
 2067 008f 07       		.byte	0x7
 2068 0090 47020000 		.4byte	.LASF12
 2069 0094 04       		.uleb128 0x4
 2070 0095 04       		.byte	0x4
 2071 0096 05       		.byte	0x5
 2072 0097 696E7400 		.ascii	"int\000"
 2073 009b 03       		.uleb128 0x3
 2074 009c 04       		.byte	0x4
 2075 009d 07       		.byte	0x7
 2076 009e 6B020000 		.4byte	.LASF13
 2077 00a2 02       		.uleb128 0x2
 2078 00a3 38000000 		.4byte	.LASF14
 2079 00a7 03       		.byte	0x3
 2080 00a8 14       		.byte	0x14
 2081 00a9 25000000 		.4byte	0x25
 2082 00ad 02       		.uleb128 0x2
 2083 00ae 73010000 		.4byte	.LASF15
 2084 00b2 03       		.byte	0x3
 2085 00b3 18       		.byte	0x18
 2086 00b4 37000000 		.4byte	0x37
 2087 00b8 02       		.uleb128 0x2
 2088 00b9 7E020000 		.4byte	.LASF16
 2089 00bd 03       		.byte	0x3
 2090 00be 24       		.byte	0x24
 2091 00bf 50000000 		.4byte	0x50
 2092 00c3 02       		.uleb128 0x2
 2093 00c4 FC020000 		.4byte	.LASF17
 2094 00c8 03       		.byte	0x3
 2095 00c9 2C       		.byte	0x2c
 2096 00ca 62000000 		.4byte	0x62
 2097 00ce 02       		.uleb128 0x2
 2098 00cf 13010000 		.4byte	.LASF18
 2099 00d3 03       		.byte	0x3
 2100 00d4 38       		.byte	0x38
 2101 00d5 7B000000 		.4byte	0x7b
 2102 00d9 03       		.uleb128 0x3
 2103 00da 04       		.byte	0x4
 2104 00db 04       		.byte	0x4
 2105 00dc 8E010000 		.4byte	.LASF19
 2106 00e0 03       		.uleb128 0x3
 2107 00e1 08       		.byte	0x8
 2108 00e2 04       		.byte	0x4
 2109 00e3 DC030000 		.4byte	.LASF20
 2110 00e7 03       		.uleb128 0x3
 2111 00e8 01       		.byte	0x1
 2112 00e9 08       		.byte	0x8
 2113 00ea A2010000 		.4byte	.LASF21
 2114 00ee 03       		.uleb128 0x3
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 50


 2115 00ef 08       		.byte	0x8
 2116 00f0 04       		.byte	0x4
 2117 00f1 FE010000 		.4byte	.LASF22
 2118 00f5 03       		.uleb128 0x3
 2119 00f6 04       		.byte	0x4
 2120 00f7 07       		.byte	0x7
 2121 00f8 5F000000 		.4byte	.LASF23
 2122 00fc 05       		.uleb128 0x5
 2123 00fd AD000000 		.4byte	0xad
 2124 0101 06       		.uleb128 0x6
 2125 0102 0C       		.byte	0xc
 2126 0103 01       		.byte	0x1
 2127 0104 B3       		.byte	0xb3
 2128 0105 2A010000 		.4byte	0x12a
 2129 0109 07       		.uleb128 0x7
 2130 010a 6900     		.ascii	"i\000"
 2131 010c 01       		.byte	0x1
 2132 010d B3       		.byte	0xb3
 2133 010e D9000000 		.4byte	0xd9
 2134 0112 00       		.byte	0
 2135 0113 07       		.uleb128 0x7
 2136 0114 7500     		.ascii	"u\000"
 2137 0116 01       		.byte	0x1
 2138 0117 B3       		.byte	0xb3
 2139 0118 D9000000 		.4byte	0xd9
 2140 011c 04       		.byte	0x4
 2141 011d 08       		.uleb128 0x8
 2142 011e A9030000 		.4byte	.LASF24
 2143 0122 01       		.byte	0x1
 2144 0123 B3       		.byte	0xb3
 2145 0124 D9000000 		.4byte	0xd9
 2146 0128 08       		.byte	0x8
 2147 0129 00       		.byte	0
 2148 012a 02       		.uleb128 0x2
 2149 012b A7010000 		.4byte	.LASF25
 2150 012f 01       		.byte	0x1
 2151 0130 B3       		.byte	0xb3
 2152 0131 01010000 		.4byte	0x101
 2153 0135 09       		.uleb128 0x9
 2154 0136 DD020000 		.4byte	.LASF73
 2155 013a 01       		.byte	0x1
 2156 013b 50       		.byte	0x50
 2157 013c 00000000 		.4byte	.LFB64
 2158 0140 14010000 		.4byte	.LFE64-.LFB64
 2159 0144 01       		.uleb128 0x1
 2160 0145 9C       		.byte	0x9c
 2161 0146 F0010000 		.4byte	0x1f0
 2162 014a 0A       		.uleb128 0xa
 2163 014b 12000000 		.4byte	.LBB2
 2164 014f EA000000 		.4byte	.LBE2-.LBB2
 2165 0153 0B       		.uleb128 0xb
 2166 0154 F9010000 		.4byte	.LASF26
 2167 0158 01       		.byte	0x1
 2168 0159 53       		.byte	0x53
 2169 015a C3000000 		.4byte	0xc3
 2170 015e 02       		.uleb128 0x2
 2171 015f 91       		.byte	0x91
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 51


 2172 0160 54       		.sleb128 -44
 2173 0161 0B       		.uleb128 0xb
 2174 0162 7B010000 		.4byte	.LASF27
 2175 0166 01       		.byte	0x1
 2176 0167 54       		.byte	0x54
 2177 0168 C3000000 		.4byte	0xc3
 2178 016c 02       		.uleb128 0x2
 2179 016d 91       		.byte	0x91
 2180 016e 50       		.sleb128 -48
 2181 016f 0C       		.uleb128 0xc
 2182 0170 643100   		.ascii	"d1\000"
 2183 0173 01       		.byte	0x1
 2184 0174 56       		.byte	0x56
 2185 0175 C3000000 		.4byte	0xc3
 2186 0179 02       		.uleb128 0x2
 2187 017a 91       		.byte	0x91
 2188 017b 4C       		.sleb128 -52
 2189 017c 0C       		.uleb128 0xc
 2190 017d 643200   		.ascii	"d2\000"
 2191 0180 01       		.byte	0x1
 2192 0181 56       		.byte	0x56
 2193 0182 C3000000 		.4byte	0xc3
 2194 0186 02       		.uleb128 0x2
 2195 0187 91       		.byte	0x91
 2196 0188 48       		.sleb128 -56
 2197 0189 0C       		.uleb128 0xc
 2198 018a 613100   		.ascii	"a1\000"
 2199 018d 01       		.byte	0x1
 2200 018e 57       		.byte	0x57
 2201 018f C3000000 		.4byte	0xc3
 2202 0193 02       		.uleb128 0x2
 2203 0194 91       		.byte	0x91
 2204 0195 44       		.sleb128 -60
 2205 0196 0C       		.uleb128 0xc
 2206 0197 613200   		.ascii	"a2\000"
 2207 019a 01       		.byte	0x1
 2208 019b 58       		.byte	0x58
 2209 019c C3000000 		.4byte	0xc3
 2210 01a0 02       		.uleb128 0x2
 2211 01a1 91       		.byte	0x91
 2212 01a2 40       		.sleb128 -64
 2213 01a3 0B       		.uleb128 0xb
 2214 01a4 0F040000 		.4byte	.LASF28
 2215 01a8 01       		.byte	0x1
 2216 01a9 59       		.byte	0x59
 2217 01aa C3000000 		.4byte	0xc3
 2218 01ae 03       		.uleb128 0x3
 2219 01af 91       		.byte	0x91
 2220 01b0 BC7F     		.sleb128 -68
 2221 01b2 0B       		.uleb128 0xb
 2222 01b3 66030000 		.4byte	.LASF29
 2223 01b7 01       		.byte	0x1
 2224 01b8 5A       		.byte	0x5a
 2225 01b9 C3000000 		.4byte	0xc3
 2226 01bd 03       		.uleb128 0x3
 2227 01be 91       		.byte	0x91
 2228 01bf B87F     		.sleb128 -72
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 52


 2229 01c1 0C       		.uleb128 0xc
 2230 01c2 6E756D00 		.ascii	"num\000"
 2231 01c6 01       		.byte	0x1
 2232 01c7 5D       		.byte	0x5d
 2233 01c8 CE000000 		.4byte	0xce
 2234 01cc 03       		.uleb128 0x3
 2235 01cd 91       		.byte	0x91
 2236 01ce B07F     		.sleb128 -80
 2237 01d0 0B       		.uleb128 0xb
 2238 01d1 80010000 		.4byte	.LASF30
 2239 01d5 01       		.byte	0x1
 2240 01d6 5E       		.byte	0x5e
 2241 01d7 C3000000 		.4byte	0xc3
 2242 01db 03       		.uleb128 0x3
 2243 01dc 91       		.byte	0x91
 2244 01dd AC7F     		.sleb128 -84
 2245 01df 0B       		.uleb128 0xb
 2246 01e0 2B030000 		.4byte	.LASF31
 2247 01e4 01       		.byte	0x1
 2248 01e5 5F       		.byte	0x5f
 2249 01e6 C3000000 		.4byte	0xc3
 2250 01ea 03       		.uleb128 0x3
 2251 01eb 91       		.byte	0x91
 2252 01ec A87F     		.sleb128 -88
 2253 01ee 00       		.byte	0
 2254 01ef 00       		.byte	0
 2255 01f0 0D       		.uleb128 0xd
 2256 01f1 BA030000 		.4byte	.LASF36
 2257 01f5 01       		.byte	0x1
 2258 01f6 6E       		.byte	0x6e
 2259 01f7 D9000000 		.4byte	0xd9
 2260 01fb 00000000 		.4byte	.LFB65
 2261 01ff 44000000 		.4byte	.LFE65-.LFB65
 2262 0203 01       		.uleb128 0x1
 2263 0204 9C       		.byte	0x9c
 2264 0205 17020000 		.4byte	0x217
 2265 0209 0E       		.uleb128 0xe
 2266 020a 707000   		.ascii	"pp\000"
 2267 020d 01       		.byte	0x1
 2268 020e 6E       		.byte	0x6e
 2269 020f B8000000 		.4byte	0xb8
 2270 0213 02       		.uleb128 0x2
 2271 0214 91       		.byte	0x91
 2272 0215 76       		.sleb128 -10
 2273 0216 00       		.byte	0
 2274 0217 0F       		.uleb128 0xf
 2275 0218 76030000 		.4byte	.LASF74
 2276 021c 01       		.byte	0x1
 2277 021d 76       		.byte	0x76
 2278 021e 00000000 		.4byte	.LFB66
 2279 0222 84010000 		.4byte	.LFE66-.LFB66
 2280 0226 01       		.uleb128 0x1
 2281 0227 9C       		.byte	0x9c
 2282 0228 B3020000 		.4byte	0x2b3
 2283 022c 10       		.uleb128 0x10
 2284 022d 70030000 		.4byte	.LASF32
 2285 0231 01       		.byte	0x1
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 53


 2286 0232 76       		.byte	0x76
 2287 0233 B3020000 		.4byte	0x2b3
 2288 0237 02       		.uleb128 0x2
 2289 0238 91       		.byte	0x91
 2290 0239 64       		.sleb128 -28
 2291 023a 10       		.uleb128 0x10
 2292 023b 29000000 		.4byte	.LASF33
 2293 023f 01       		.byte	0x1
 2294 0240 76       		.byte	0x76
 2295 0241 B3020000 		.4byte	0x2b3
 2296 0245 02       		.uleb128 0x2
 2297 0246 91       		.byte	0x91
 2298 0247 60       		.sleb128 -32
 2299 0248 10       		.uleb128 0x10
 2300 0249 88010000 		.4byte	.LASF34
 2301 024d 01       		.byte	0x1
 2302 024e 76       		.byte	0x76
 2303 024f B3020000 		.4byte	0x2b3
 2304 0253 02       		.uleb128 0x2
 2305 0254 91       		.byte	0x91
 2306 0255 5C       		.sleb128 -36
 2307 0256 10       		.uleb128 0x10
 2308 0257 78020000 		.4byte	.LASF35
 2309 025b 01       		.byte	0x1
 2310 025c 76       		.byte	0x76
 2311 025d B3020000 		.4byte	0x2b3
 2312 0261 02       		.uleb128 0x2
 2313 0262 91       		.byte	0x91
 2314 0263 58       		.sleb128 -40
 2315 0264 0C       		.uleb128 0xc
 2316 0265 563100   		.ascii	"V1\000"
 2317 0268 01       		.byte	0x1
 2318 0269 78       		.byte	0x78
 2319 026a B8000000 		.4byte	0xb8
 2320 026e 02       		.uleb128 0x2
 2321 026f 91       		.byte	0x91
 2322 0270 76       		.sleb128 -10
 2323 0271 0C       		.uleb128 0xc
 2324 0272 563200   		.ascii	"V2\000"
 2325 0275 01       		.byte	0x1
 2326 0276 79       		.byte	0x79
 2327 0277 B8000000 		.4byte	0xb8
 2328 027b 02       		.uleb128 0x2
 2329 027c 91       		.byte	0x91
 2330 027d 74       		.sleb128 -12
 2331 027e 0C       		.uleb128 0xc
 2332 027f 563300   		.ascii	"V3\000"
 2333 0282 01       		.byte	0x1
 2334 0283 7A       		.byte	0x7a
 2335 0284 B8000000 		.4byte	0xb8
 2336 0288 02       		.uleb128 0x2
 2337 0289 91       		.byte	0x91
 2338 028a 72       		.sleb128 -14
 2339 028b 0C       		.uleb128 0xc
 2340 028c 563400   		.ascii	"V4\000"
 2341 028f 01       		.byte	0x1
 2342 0290 7B       		.byte	0x7b
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 54


 2343 0291 B8000000 		.4byte	0xb8
 2344 0295 02       		.uleb128 0x2
 2345 0296 91       		.byte	0x91
 2346 0297 70       		.sleb128 -16
 2347 0298 0C       		.uleb128 0xc
 2348 0299 563500   		.ascii	"V5\000"
 2349 029c 01       		.byte	0x1
 2350 029d 7C       		.byte	0x7c
 2351 029e B8000000 		.4byte	0xb8
 2352 02a2 02       		.uleb128 0x2
 2353 02a3 91       		.byte	0x91
 2354 02a4 6E       		.sleb128 -18
 2355 02a5 0C       		.uleb128 0xc
 2356 02a6 563600   		.ascii	"V6\000"
 2357 02a9 01       		.byte	0x1
 2358 02aa 7D       		.byte	0x7d
 2359 02ab B8000000 		.4byte	0xb8
 2360 02af 02       		.uleb128 0x2
 2361 02b0 91       		.byte	0x91
 2362 02b1 6C       		.sleb128 -20
 2363 02b2 00       		.byte	0
 2364 02b3 11       		.uleb128 0x11
 2365 02b4 04       		.byte	0x4
 2366 02b5 B8000000 		.4byte	0xb8
 2367 02b9 0D       		.uleb128 0xd
 2368 02ba 94020000 		.4byte	.LASF37
 2369 02be 01       		.byte	0x1
 2370 02bf B4       		.byte	0xb4
 2371 02c0 D9000000 		.4byte	0xd9
 2372 02c4 00000000 		.4byte	.LFB67
 2373 02c8 3A000000 		.4byte	.LFE67-.LFB67
 2374 02cc 01       		.uleb128 0x1
 2375 02cd 9C       		.byte	0x9c
 2376 02ce F9020000 		.4byte	0x2f9
 2377 02d2 0E       		.uleb128 0xe
 2378 02d3 7800     		.ascii	"x\000"
 2379 02d5 01       		.byte	0x1
 2380 02d6 B4       		.byte	0xb4
 2381 02d7 D9000000 		.4byte	0xd9
 2382 02db 02       		.uleb128 0x2
 2383 02dc 91       		.byte	0x91
 2384 02dd 74       		.sleb128 -12
 2385 02de 0E       		.uleb128 0xe
 2386 02df 6C6F00   		.ascii	"lo\000"
 2387 02e2 01       		.byte	0x1
 2388 02e3 B4       		.byte	0xb4
 2389 02e4 D9000000 		.4byte	0xd9
 2390 02e8 02       		.uleb128 0x2
 2391 02e9 91       		.byte	0x91
 2392 02ea 70       		.sleb128 -16
 2393 02eb 0E       		.uleb128 0xe
 2394 02ec 686900   		.ascii	"hi\000"
 2395 02ef 01       		.byte	0x1
 2396 02f0 B4       		.byte	0xb4
 2397 02f1 D9000000 		.4byte	0xd9
 2398 02f5 02       		.uleb128 0x2
 2399 02f6 91       		.byte	0x91
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 55


 2400 02f7 6C       		.sleb128 -20
 2401 02f8 00       		.byte	0
 2402 02f9 0D       		.uleb128 0xd
 2403 02fa 04030000 		.4byte	.LASF38
 2404 02fe 01       		.byte	0x1
 2405 02ff B6       		.byte	0xb6
 2406 0300 94000000 		.4byte	0x94
 2407 0304 00000000 		.4byte	.LFB68
 2408 0308 A4020000 		.4byte	.LFE68-.LFB68
 2409 030c 01       		.uleb128 0x1
 2410 030d 9C       		.byte	0x9c
 2411 030e 0A040000 		.4byte	0x40a
 2412 0312 0E       		.uleb128 0xe
 2413 0313 706900   		.ascii	"pi\000"
 2414 0316 01       		.byte	0x1
 2415 0317 B6       		.byte	0xb6
 2416 0318 0A040000 		.4byte	0x40a
 2417 031c 03       		.uleb128 0x3
 2418 031d 91       		.byte	0x91
 2419 031e BC7F     		.sleb128 -68
 2420 0320 10       		.uleb128 0x10
 2421 0321 70030000 		.4byte	.LASF32
 2422 0325 01       		.byte	0x1
 2423 0326 B6       		.byte	0xb6
 2424 0327 B8000000 		.4byte	0xb8
 2425 032b 03       		.uleb128 0x3
 2426 032c 91       		.byte	0x91
 2427 032d BA7F     		.sleb128 -70
 2428 032f 10       		.uleb128 0x10
 2429 0330 29000000 		.4byte	.LASF33
 2430 0334 01       		.byte	0x1
 2431 0335 B6       		.byte	0xb6
 2432 0336 B8000000 		.4byte	0xb8
 2433 033a 03       		.uleb128 0x3
 2434 033b 91       		.byte	0x91
 2435 033c B87F     		.sleb128 -72
 2436 033e 10       		.uleb128 0x10
 2437 033f 88010000 		.4byte	.LASF34
 2438 0343 01       		.byte	0x1
 2439 0344 B6       		.byte	0xb6
 2440 0345 B8000000 		.4byte	0xb8
 2441 0349 03       		.uleb128 0x3
 2442 034a 91       		.byte	0x91
 2443 034b B67F     		.sleb128 -74
 2444 034d 10       		.uleb128 0x10
 2445 034e 78020000 		.4byte	.LASF35
 2446 0352 01       		.byte	0x1
 2447 0353 B6       		.byte	0xb6
 2448 0354 B8000000 		.4byte	0xb8
 2449 0358 02       		.uleb128 0x2
 2450 0359 91       		.byte	0x91
 2451 035a 00       		.sleb128 0
 2452 035b 0C       		.uleb128 0xc
 2453 035c 633300   		.ascii	"c3\000"
 2454 035f 01       		.byte	0x1
 2455 0360 B8       		.byte	0xb8
 2456 0361 D9000000 		.4byte	0xd9
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 56


 2457 0365 02       		.uleb128 0x2
 2458 0366 91       		.byte	0x91
 2459 0367 68       		.sleb128 -24
 2460 0368 0C       		.uleb128 0xc
 2461 0369 633400   		.ascii	"c4\000"
 2462 036c 01       		.byte	0x1
 2463 036d B9       		.byte	0xb9
 2464 036e D9000000 		.4byte	0xd9
 2465 0372 02       		.uleb128 0x2
 2466 0373 91       		.byte	0x91
 2467 0374 64       		.sleb128 -28
 2468 0375 0C       		.uleb128 0xc
 2469 0376 633500   		.ascii	"c5\000"
 2470 0379 01       		.byte	0x1
 2471 037a BA       		.byte	0xba
 2472 037b D9000000 		.4byte	0xd9
 2473 037f 02       		.uleb128 0x2
 2474 0380 91       		.byte	0x91
 2475 0381 60       		.sleb128 -32
 2476 0382 0C       		.uleb128 0xc
 2477 0383 633600   		.ascii	"c6\000"
 2478 0386 01       		.byte	0x1
 2479 0387 BB       		.byte	0xbb
 2480 0388 D9000000 		.4byte	0xd9
 2481 038c 02       		.uleb128 0x2
 2482 038d 91       		.byte	0x91
 2483 038e 5C       		.sleb128 -36
 2484 038f 0C       		.uleb128 0xc
 2485 0390 73756D00 		.ascii	"sum\000"
 2486 0394 01       		.byte	0x1
 2487 0395 BC       		.byte	0xbc
 2488 0396 D9000000 		.4byte	0xd9
 2489 039a 02       		.uleb128 0x2
 2490 039b 91       		.byte	0x91
 2491 039c 58       		.sleb128 -40
 2492 039d 0B       		.uleb128 0xb
 2493 039e 00000000 		.4byte	.LASF39
 2494 03a2 01       		.byte	0x1
 2495 03a3 BD       		.byte	0xbd
 2496 03a4 10040000 		.4byte	0x410
 2497 03a8 02       		.uleb128 0x2
 2498 03a9 91       		.byte	0x91
 2499 03aa 57       		.sleb128 -41
 2500 03ab 0C       		.uleb128 0xc
 2501 03ac 706F7300 		.ascii	"pos\000"
 2502 03b0 01       		.byte	0x1
 2503 03b1 BF       		.byte	0xbf
 2504 03b2 D9000000 		.4byte	0xd9
 2505 03b6 02       		.uleb128 0x2
 2506 03b7 91       		.byte	0x91
 2507 03b8 6C       		.sleb128 -20
 2508 03b9 0C       		.uleb128 0xc
 2509 03ba 6500     		.ascii	"e\000"
 2510 03bc 01       		.byte	0x1
 2511 03bd C2       		.byte	0xc2
 2512 03be D9000000 		.4byte	0xd9
 2513 03c2 02       		.uleb128 0x2
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 57


 2514 03c3 91       		.byte	0x91
 2515 03c4 50       		.sleb128 -48
 2516 03c5 0B       		.uleb128 0xb
 2517 03c6 46030000 		.4byte	.LASF40
 2518 03ca 01       		.byte	0x1
 2519 03cb CB       		.byte	0xcb
 2520 03cc D9000000 		.4byte	0xd9
 2521 03d0 02       		.uleb128 0x2
 2522 03d1 91       		.byte	0x91
 2523 03d2 4C       		.sleb128 -52
 2524 03d3 0B       		.uleb128 0xb
 2525 03d4 BF010000 		.4byte	.LASF41
 2526 03d8 01       		.byte	0x1
 2527 03d9 CC       		.byte	0xcc
 2528 03da D9000000 		.4byte	0xd9
 2529 03de 02       		.uleb128 0x2
 2530 03df 91       		.byte	0x91
 2531 03e0 48       		.sleb128 -56
 2532 03e1 0C       		.uleb128 0xc
 2533 03e2 7500     		.ascii	"u\000"
 2534 03e4 01       		.byte	0x1
 2535 03e5 CD       		.byte	0xcd
 2536 03e6 D9000000 		.4byte	0xd9
 2537 03ea 02       		.uleb128 0x2
 2538 03eb 91       		.byte	0x91
 2539 03ec 44       		.sleb128 -60
 2540 03ed 0B       		.uleb128 0xb
 2541 03ee A2030000 		.4byte	.LASF42
 2542 03f2 01       		.byte	0x1
 2543 03f3 CF       		.byte	0xcf
 2544 03f4 10040000 		.4byte	0x410
 2545 03f8 02       		.uleb128 0x2
 2546 03f9 91       		.byte	0x91
 2547 03fa 43       		.sleb128 -61
 2548 03fb 0B       		.uleb128 0xb
 2549 03fc D5030000 		.4byte	.LASF43
 2550 0400 01       		.byte	0x1
 2551 0401 D0       		.byte	0xd0
 2552 0402 10040000 		.4byte	0x410
 2553 0406 02       		.uleb128 0x2
 2554 0407 91       		.byte	0x91
 2555 0408 42       		.sleb128 -62
 2556 0409 00       		.byte	0
 2557 040a 11       		.uleb128 0x11
 2558 040b 04       		.byte	0x4
 2559 040c 2A010000 		.4byte	0x12a
 2560 0410 03       		.uleb128 0x3
 2561 0411 01       		.byte	0x1
 2562 0412 02       		.byte	0x2
 2563 0413 12030000 		.4byte	.LASF44
 2564 0417 12       		.uleb128 0x12
 2565 0418 F6000000 		.4byte	.LASF75
 2566 041c 01       		.byte	0x1
 2567 041d DD       		.byte	0xdd
 2568 041e 94000000 		.4byte	0x94
 2569 0422 00000000 		.4byte	.LFB69
 2570 0426 60060000 		.4byte	.LFE69-.LFB69
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 58


 2571 042a 01       		.uleb128 0x1
 2572 042b 9C       		.byte	0x9c
 2573 042c 70050000 		.4byte	0x570
 2574 0430 0B       		.uleb128 0xb
 2575 0431 EC020000 		.4byte	.LASF45
 2576 0435 01       		.byte	0x1
 2577 0436 FB       		.byte	0xfb
 2578 0437 94000000 		.4byte	0x94
 2579 043b 02       		.uleb128 0x2
 2580 043c 91       		.byte	0x91
 2581 043d 64       		.sleb128 -28
 2582 043e 13       		.uleb128 0x13
 2583 043f 706900   		.ascii	"pi\000"
 2584 0442 01       		.byte	0x1
 2585 0443 0001     		.2byte	0x100
 2586 0445 2A010000 		.4byte	0x12a
 2587 0449 03       		.uleb128 0x3
 2588 044a 91       		.byte	0x91
 2589 044b B87F     		.sleb128 -72
 2590 044d 14       		.uleb128 0x14
 2591 044e 9C020000 		.4byte	.LASF46
 2592 0452 01       		.byte	0x1
 2593 0453 0E01     		.2byte	0x10e
 2594 0455 85050000 		.4byte	0x585
 2595 0459 03       		.uleb128 0x3
 2596 045a 91       		.byte	0x91
 2597 045b 807F     		.sleb128 -128
 2598 045d 14       		.uleb128 0x14
 2599 045e 2F000000 		.4byte	.LASF47
 2600 0462 01       		.byte	0x1
 2601 0463 4901     		.2byte	0x149
 2602 0465 A2000000 		.4byte	0xa2
 2603 0469 02       		.uleb128 0x2
 2604 046a 91       		.byte	0x91
 2605 046b 57       		.sleb128 -41
 2606 046c 13       		.uleb128 0x13
 2607 046d 6900     		.ascii	"i\000"
 2608 046f 01       		.byte	0x1
 2609 0470 5001     		.2byte	0x150
 2610 0472 A2000000 		.4byte	0xa2
 2611 0476 02       		.uleb128 0x2
 2612 0477 91       		.byte	0x91
 2613 0478 63       		.sleb128 -29
 2614 0479 14       		.uleb128 0x14
 2615 047a 03040000 		.4byte	.LASF48
 2616 047e 01       		.byte	0x1
 2617 047f 5101     		.2byte	0x151
 2618 0481 C3000000 		.4byte	0xc3
 2619 0485 02       		.uleb128 0x2
 2620 0486 91       		.byte	0x91
 2621 0487 5C       		.sleb128 -36
 2622 0488 14       		.uleb128 0x14
 2623 0489 17000000 		.4byte	.LASF49
 2624 048d 01       		.byte	0x1
 2625 048e 5301     		.2byte	0x153
 2626 0490 A2000000 		.4byte	0xa2
 2627 0494 02       		.uleb128 0x2
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 59


 2628 0495 91       		.byte	0x91
 2629 0496 5B       		.sleb128 -37
 2630 0497 14       		.uleb128 0x14
 2631 0498 51000000 		.4byte	.LASF50
 2632 049c 01       		.byte	0x1
 2633 049d 5401     		.2byte	0x154
 2634 049f A2000000 		.4byte	0xa2
 2635 04a3 02       		.uleb128 0x2
 2636 04a4 91       		.byte	0x91
 2637 04a5 5A       		.sleb128 -38
 2638 04a6 14       		.uleb128 0x14
 2639 04a7 18040000 		.4byte	.LASF51
 2640 04ab 01       		.byte	0x1
 2641 04ac 5501     		.2byte	0x155
 2642 04ae A2000000 		.4byte	0xa2
 2643 04b2 02       		.uleb128 0x2
 2644 04b3 91       		.byte	0x91
 2645 04b4 59       		.sleb128 -39
 2646 04b5 14       		.uleb128 0x14
 2647 04b6 EA010000 		.4byte	.LASF52
 2648 04ba 01       		.byte	0x1
 2649 04bb 5601     		.2byte	0x156
 2650 04bd A2000000 		.4byte	0xa2
 2651 04c1 02       		.uleb128 0x2
 2652 04c2 91       		.byte	0x91
 2653 04c3 58       		.sleb128 -40
 2654 04c4 0A       		.uleb128 0xa
 2655 04c5 0C010000 		.4byte	.LBB3
 2656 04c9 4A050000 		.4byte	.LBE3-.LBB3
 2657 04cd 14       		.uleb128 0x14
 2658 04ce 70030000 		.4byte	.LASF32
 2659 04d2 01       		.byte	0x1
 2660 04d3 6301     		.2byte	0x163
 2661 04d5 B8000000 		.4byte	0xb8
 2662 04d9 03       		.uleb128 0x3
 2663 04da 91       		.byte	0x91
 2664 04db FE7E     		.sleb128 -130
 2665 04dd 14       		.uleb128 0x14
 2666 04de 29000000 		.4byte	.LASF33
 2667 04e2 01       		.byte	0x1
 2668 04e3 6301     		.2byte	0x163
 2669 04e5 B8000000 		.4byte	0xb8
 2670 04e9 03       		.uleb128 0x3
 2671 04ea 91       		.byte	0x91
 2672 04eb FC7E     		.sleb128 -132
 2673 04ed 14       		.uleb128 0x14
 2674 04ee 88010000 		.4byte	.LASF34
 2675 04f2 01       		.byte	0x1
 2676 04f3 6301     		.2byte	0x163
 2677 04f5 B8000000 		.4byte	0xb8
 2678 04f9 03       		.uleb128 0x3
 2679 04fa 91       		.byte	0x91
 2680 04fb FA7E     		.sleb128 -134
 2681 04fd 14       		.uleb128 0x14
 2682 04fe 78020000 		.4byte	.LASF35
 2683 0502 01       		.byte	0x1
 2684 0503 6301     		.2byte	0x163
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 60


 2685 0505 B8000000 		.4byte	0xb8
 2686 0509 03       		.uleb128 0x3
 2687 050a 91       		.byte	0x91
 2688 050b F87E     		.sleb128 -136
 2689 050d 15       		.uleb128 0x15
 2690 050e 68010000 		.4byte	.LBB4
 2691 0512 96000000 		.4byte	.LBE4-.LBB4
 2692 0516 55050000 		.4byte	0x555
 2693 051a 14       		.uleb128 0x14
 2694 051b 0C030000 		.4byte	.LASF53
 2695 051f 01       		.byte	0x1
 2696 0520 B501     		.2byte	0x1b5
 2697 0522 94000000 		.4byte	0x94
 2698 0526 02       		.uleb128 0x2
 2699 0527 91       		.byte	0x91
 2700 0528 50       		.sleb128 -48
 2701 0529 13       		.uleb128 0x13
 2702 052a 563100   		.ascii	"V1\000"
 2703 052d 01       		.byte	0x1
 2704 052e B901     		.2byte	0x1b9
 2705 0530 B8000000 		.4byte	0xb8
 2706 0534 02       		.uleb128 0x2
 2707 0535 91       		.byte	0x91
 2708 0536 4E       		.sleb128 -50
 2709 0537 13       		.uleb128 0x13
 2710 0538 563200   		.ascii	"V2\000"
 2711 053b 01       		.byte	0x1
 2712 053c BA01     		.2byte	0x1ba
 2713 053e B8000000 		.4byte	0xb8
 2714 0542 02       		.uleb128 0x2
 2715 0543 91       		.byte	0x91
 2716 0544 4C       		.sleb128 -52
 2717 0545 14       		.uleb128 0x14
 2718 0546 49000000 		.4byte	.LASF54
 2719 054a 01       		.byte	0x1
 2720 054b BE01     		.2byte	0x1be
 2721 054d AD000000 		.4byte	0xad
 2722 0551 02       		.uleb128 0x2
 2723 0552 91       		.byte	0x91
 2724 0553 4B       		.sleb128 -53
 2725 0554 00       		.byte	0
 2726 0555 0A       		.uleb128 0xa
 2727 0556 34050000 		.4byte	.LBB5
 2728 055a 38000000 		.4byte	.LBE5-.LBB5
 2729 055e 14       		.uleb128 0x14
 2730 055f 0C030000 		.4byte	.LASF53
 2731 0563 01       		.byte	0x1
 2732 0564 6402     		.2byte	0x264
 2733 0566 94000000 		.4byte	0x94
 2734 056a 02       		.uleb128 0x2
 2735 056b 91       		.byte	0x91
 2736 056c 44       		.sleb128 -60
 2737 056d 00       		.byte	0
 2738 056e 00       		.byte	0
 2739 056f 00       		.byte	0
 2740 0570 16       		.uleb128 0x16
 2741 0571 80050000 		.4byte	0x580
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 61


 2742 0575 80050000 		.4byte	0x580
 2743 0579 17       		.uleb128 0x17
 2744 057a F5000000 		.4byte	0xf5
 2745 057e 37       		.byte	0x37
 2746 057f 00       		.byte	0
 2747 0580 18       		.uleb128 0x18
 2748 0581 AD000000 		.4byte	0xad
 2749 0585 18       		.uleb128 0x18
 2750 0586 70050000 		.4byte	0x570
 2751 058a 0B       		.uleb128 0xb
 2752 058b DD010000 		.4byte	.LASF55
 2753 058f 01       		.byte	0x1
 2754 0590 3A       		.byte	0x3a
 2755 0591 AD000000 		.4byte	0xad
 2756 0595 05       		.uleb128 0x5
 2757 0596 03       		.byte	0x3
 2758 0597 00000000 		.4byte	sen1_on_line
 2759 059b 0B       		.uleb128 0xb
 2760 059c 06010000 		.4byte	.LASF56
 2761 05a0 01       		.byte	0x1
 2762 05a1 3A       		.byte	0x3a
 2763 05a2 AD000000 		.4byte	0xad
 2764 05a6 05       		.uleb128 0x5
 2765 05a7 03       		.byte	0x3
 2766 05a8 01000000 		.4byte	sen2_on_line
 2767 05ac 0B       		.uleb128 0xb
 2768 05ad D0020000 		.4byte	.LASF57
 2769 05b1 01       		.byte	0x1
 2770 05b2 3A       		.byte	0x3a
 2771 05b3 AD000000 		.4byte	0xad
 2772 05b7 05       		.uleb128 0x5
 2773 05b8 03       		.byte	0x3
 2774 05b9 02000000 		.4byte	sen3_on_line
 2775 05bd 0B       		.uleb128 0xb
 2776 05be 5E020000 		.4byte	.LASF58
 2777 05c2 01       		.byte	0x1
 2778 05c3 3B       		.byte	0x3b
 2779 05c4 AD000000 		.4byte	0xad
 2780 05c8 05       		.uleb128 0x5
 2781 05c9 03       		.byte	0x3
 2782 05ca 03000000 		.4byte	sen4_on_line
 2783 05ce 0B       		.uleb128 0xb
 2784 05cf 87020000 		.4byte	.LASF59
 2785 05d3 01       		.byte	0x1
 2786 05d4 3B       		.byte	0x3b
 2787 05d5 AD000000 		.4byte	0xad
 2788 05d9 05       		.uleb128 0x5
 2789 05da 03       		.byte	0x3
 2790 05db 04000000 		.4byte	sen5_on_line
 2791 05df 0B       		.uleb128 0xb
 2792 05e0 BA020000 		.4byte	.LASF60
 2793 05e4 01       		.byte	0x1
 2794 05e5 3B       		.byte	0x3b
 2795 05e6 AD000000 		.4byte	0xad
 2796 05ea 05       		.uleb128 0x5
 2797 05eb 03       		.byte	0x3
 2798 05ec 05000000 		.4byte	sen6_on_line
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 62


 2799 05f0 0B       		.uleb128 0xb
 2800 05f1 C9030000 		.4byte	.LASF61
 2801 05f5 01       		.byte	0x1
 2802 05f6 3E       		.byte	0x3e
 2803 05f7 FC000000 		.4byte	0xfc
 2804 05fb 05       		.uleb128 0x5
 2805 05fc 03       		.byte	0x3
 2806 05fd 06000000 		.4byte	g_direction
 2807 0601 0B       		.uleb128 0xb
 2808 0602 1C020000 		.4byte	.LASF62
 2809 0606 01       		.byte	0x1
 2810 0607 3F       		.byte	0x3f
 2811 0608 FC000000 		.4byte	0xfc
 2812 060c 05       		.uleb128 0x5
 2813 060d 03       		.byte	0x3
 2814 060e 07000000 		.4byte	g_stop_now
 2815 0612 0B       		.uleb128 0xb
 2816 0613 EC030000 		.4byte	.LASF63
 2817 0617 01       		.byte	0x1
 2818 0618 40       		.byte	0x40
 2819 0619 23060000 		.4byte	0x623
 2820 061d 05       		.uleb128 0x5
 2821 061e 03       		.byte	0x3
 2822 061f 08000000 		.4byte	g_dist_mm
 2823 0623 05       		.uleb128 0x5
 2824 0624 C3000000 		.4byte	0xc3
 2825 0628 0B       		.uleb128 0xb
 2826 0629 36030000 		.4byte	.LASF64
 2827 062d 01       		.byte	0x1
 2828 062e 43       		.byte	0x43
 2829 062f B8000000 		.4byte	0xb8
 2830 0633 05       		.uleb128 0x5
 2831 0634 03       		.byte	0x3
 2832 0635 0C000000 		.4byte	dir_delay_ticks
 2833 0639 0B       		.uleb128 0xb
 2834 063a 06000000 		.4byte	.LASF65
 2835 063e 01       		.byte	0x1
 2836 063f 44       		.byte	0x44
 2837 0640 AD000000 		.4byte	0xad
 2838 0644 05       		.uleb128 0x5
 2839 0645 03       		.byte	0x3
 2840 0646 0E000000 		.4byte	dir_latched_side
 2841 064a 0B       		.uleb128 0xb
 2842 064b 27020000 		.4byte	.LASF66
 2843 064f 01       		.byte	0x1
 2844 0650 47       		.byte	0x47
 2845 0651 B8000000 		.4byte	0xb8
 2846 0655 05       		.uleb128 0x5
 2847 0656 03       		.byte	0x3
 2848 0657 10000000 		.4byte	turn_cooldown_ticks
 2849 065b 0B       		.uleb128 0xb
 2850 065c E3030000 		.4byte	.LASF67
 2851 0660 01       		.byte	0x1
 2852 0661 48       		.byte	0x48
 2853 0662 AD000000 		.4byte	0xad
 2854 0666 05       		.uleb128 0x5
 2855 0667 03       		.byte	0x3
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 63


 2856 0668 12000000 		.4byte	s12_prev
 2857 066c 0B       		.uleb128 0xb
 2858 066d 0A020000 		.4byte	.LASF68
 2859 0671 01       		.byte	0x1
 2860 0672 4A       		.byte	0x4a
 2861 0673 AD000000 		.4byte	0xad
 2862 0677 05       		.uleb128 0x5
 2863 0678 03       		.byte	0x3
 2864 0679 13000000 		.4byte	left_sensor_count
 2865 067d 0B       		.uleb128 0xb
 2866 067e 18030000 		.4byte	.LASF69
 2867 0682 01       		.byte	0x1
 2868 0683 4B       		.byte	0x4b
 2869 0684 AD000000 		.4byte	0xad
 2870 0688 05       		.uleb128 0x5
 2871 0689 03       		.byte	0x3
 2872 068a 14000000 		.4byte	right_sensor_count
 2873 068e 19       		.uleb128 0x19
 2874 068f F6030000 		.4byte	.LASF76
 2875 0693 04       		.byte	0x4
 2876 0694 1207     		.2byte	0x712
 2877 0696 23060000 		.4byte	0x623
 2878 069a 00       		.byte	0
 2879              		.section	.debug_abbrev,"",%progbits
 2880              	.Ldebug_abbrev0:
 2881 0000 01       		.uleb128 0x1
 2882 0001 11       		.uleb128 0x11
 2883 0002 01       		.byte	0x1
 2884 0003 25       		.uleb128 0x25
 2885 0004 0E       		.uleb128 0xe
 2886 0005 13       		.uleb128 0x13
 2887 0006 0B       		.uleb128 0xb
 2888 0007 03       		.uleb128 0x3
 2889 0008 0E       		.uleb128 0xe
 2890 0009 1B       		.uleb128 0x1b
 2891 000a 0E       		.uleb128 0xe
 2892 000b 55       		.uleb128 0x55
 2893 000c 17       		.uleb128 0x17
 2894 000d 11       		.uleb128 0x11
 2895 000e 01       		.uleb128 0x1
 2896 000f 10       		.uleb128 0x10
 2897 0010 17       		.uleb128 0x17
 2898 0011 00       		.byte	0
 2899 0012 00       		.byte	0
 2900 0013 02       		.uleb128 0x2
 2901 0014 16       		.uleb128 0x16
 2902 0015 00       		.byte	0
 2903 0016 03       		.uleb128 0x3
 2904 0017 0E       		.uleb128 0xe
 2905 0018 3A       		.uleb128 0x3a
 2906 0019 0B       		.uleb128 0xb
 2907 001a 3B       		.uleb128 0x3b
 2908 001b 0B       		.uleb128 0xb
 2909 001c 49       		.uleb128 0x49
 2910 001d 13       		.uleb128 0x13
 2911 001e 00       		.byte	0
 2912 001f 00       		.byte	0
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 64


 2913 0020 03       		.uleb128 0x3
 2914 0021 24       		.uleb128 0x24
 2915 0022 00       		.byte	0
 2916 0023 0B       		.uleb128 0xb
 2917 0024 0B       		.uleb128 0xb
 2918 0025 3E       		.uleb128 0x3e
 2919 0026 0B       		.uleb128 0xb
 2920 0027 03       		.uleb128 0x3
 2921 0028 0E       		.uleb128 0xe
 2922 0029 00       		.byte	0
 2923 002a 00       		.byte	0
 2924 002b 04       		.uleb128 0x4
 2925 002c 24       		.uleb128 0x24
 2926 002d 00       		.byte	0
 2927 002e 0B       		.uleb128 0xb
 2928 002f 0B       		.uleb128 0xb
 2929 0030 3E       		.uleb128 0x3e
 2930 0031 0B       		.uleb128 0xb
 2931 0032 03       		.uleb128 0x3
 2932 0033 08       		.uleb128 0x8
 2933 0034 00       		.byte	0
 2934 0035 00       		.byte	0
 2935 0036 05       		.uleb128 0x5
 2936 0037 35       		.uleb128 0x35
 2937 0038 00       		.byte	0
 2938 0039 49       		.uleb128 0x49
 2939 003a 13       		.uleb128 0x13
 2940 003b 00       		.byte	0
 2941 003c 00       		.byte	0
 2942 003d 06       		.uleb128 0x6
 2943 003e 13       		.uleb128 0x13
 2944 003f 01       		.byte	0x1
 2945 0040 0B       		.uleb128 0xb
 2946 0041 0B       		.uleb128 0xb
 2947 0042 3A       		.uleb128 0x3a
 2948 0043 0B       		.uleb128 0xb
 2949 0044 3B       		.uleb128 0x3b
 2950 0045 0B       		.uleb128 0xb
 2951 0046 01       		.uleb128 0x1
 2952 0047 13       		.uleb128 0x13
 2953 0048 00       		.byte	0
 2954 0049 00       		.byte	0
 2955 004a 07       		.uleb128 0x7
 2956 004b 0D       		.uleb128 0xd
 2957 004c 00       		.byte	0
 2958 004d 03       		.uleb128 0x3
 2959 004e 08       		.uleb128 0x8
 2960 004f 3A       		.uleb128 0x3a
 2961 0050 0B       		.uleb128 0xb
 2962 0051 3B       		.uleb128 0x3b
 2963 0052 0B       		.uleb128 0xb
 2964 0053 49       		.uleb128 0x49
 2965 0054 13       		.uleb128 0x13
 2966 0055 38       		.uleb128 0x38
 2967 0056 0B       		.uleb128 0xb
 2968 0057 00       		.byte	0
 2969 0058 00       		.byte	0
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 65


 2970 0059 08       		.uleb128 0x8
 2971 005a 0D       		.uleb128 0xd
 2972 005b 00       		.byte	0
 2973 005c 03       		.uleb128 0x3
 2974 005d 0E       		.uleb128 0xe
 2975 005e 3A       		.uleb128 0x3a
 2976 005f 0B       		.uleb128 0xb
 2977 0060 3B       		.uleb128 0x3b
 2978 0061 0B       		.uleb128 0xb
 2979 0062 49       		.uleb128 0x49
 2980 0063 13       		.uleb128 0x13
 2981 0064 38       		.uleb128 0x38
 2982 0065 0B       		.uleb128 0xb
 2983 0066 00       		.byte	0
 2984 0067 00       		.byte	0
 2985 0068 09       		.uleb128 0x9
 2986 0069 2E       		.uleb128 0x2e
 2987 006a 01       		.byte	0x1
 2988 006b 3F       		.uleb128 0x3f
 2989 006c 19       		.uleb128 0x19
 2990 006d 03       		.uleb128 0x3
 2991 006e 0E       		.uleb128 0xe
 2992 006f 3A       		.uleb128 0x3a
 2993 0070 0B       		.uleb128 0xb
 2994 0071 3B       		.uleb128 0x3b
 2995 0072 0B       		.uleb128 0xb
 2996 0073 27       		.uleb128 0x27
 2997 0074 19       		.uleb128 0x19
 2998 0075 11       		.uleb128 0x11
 2999 0076 01       		.uleb128 0x1
 3000 0077 12       		.uleb128 0x12
 3001 0078 06       		.uleb128 0x6
 3002 0079 40       		.uleb128 0x40
 3003 007a 18       		.uleb128 0x18
 3004 007b 9642     		.uleb128 0x2116
 3005 007d 19       		.uleb128 0x19
 3006 007e 01       		.uleb128 0x1
 3007 007f 13       		.uleb128 0x13
 3008 0080 00       		.byte	0
 3009 0081 00       		.byte	0
 3010 0082 0A       		.uleb128 0xa
 3011 0083 0B       		.uleb128 0xb
 3012 0084 01       		.byte	0x1
 3013 0085 11       		.uleb128 0x11
 3014 0086 01       		.uleb128 0x1
 3015 0087 12       		.uleb128 0x12
 3016 0088 06       		.uleb128 0x6
 3017 0089 00       		.byte	0
 3018 008a 00       		.byte	0
 3019 008b 0B       		.uleb128 0xb
 3020 008c 34       		.uleb128 0x34
 3021 008d 00       		.byte	0
 3022 008e 03       		.uleb128 0x3
 3023 008f 0E       		.uleb128 0xe
 3024 0090 3A       		.uleb128 0x3a
 3025 0091 0B       		.uleb128 0xb
 3026 0092 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 66


 3027 0093 0B       		.uleb128 0xb
 3028 0094 49       		.uleb128 0x49
 3029 0095 13       		.uleb128 0x13
 3030 0096 02       		.uleb128 0x2
 3031 0097 18       		.uleb128 0x18
 3032 0098 00       		.byte	0
 3033 0099 00       		.byte	0
 3034 009a 0C       		.uleb128 0xc
 3035 009b 34       		.uleb128 0x34
 3036 009c 00       		.byte	0
 3037 009d 03       		.uleb128 0x3
 3038 009e 08       		.uleb128 0x8
 3039 009f 3A       		.uleb128 0x3a
 3040 00a0 0B       		.uleb128 0xb
 3041 00a1 3B       		.uleb128 0x3b
 3042 00a2 0B       		.uleb128 0xb
 3043 00a3 49       		.uleb128 0x49
 3044 00a4 13       		.uleb128 0x13
 3045 00a5 02       		.uleb128 0x2
 3046 00a6 18       		.uleb128 0x18
 3047 00a7 00       		.byte	0
 3048 00a8 00       		.byte	0
 3049 00a9 0D       		.uleb128 0xd
 3050 00aa 2E       		.uleb128 0x2e
 3051 00ab 01       		.byte	0x1
 3052 00ac 03       		.uleb128 0x3
 3053 00ad 0E       		.uleb128 0xe
 3054 00ae 3A       		.uleb128 0x3a
 3055 00af 0B       		.uleb128 0xb
 3056 00b0 3B       		.uleb128 0x3b
 3057 00b1 0B       		.uleb128 0xb
 3058 00b2 27       		.uleb128 0x27
 3059 00b3 19       		.uleb128 0x19
 3060 00b4 49       		.uleb128 0x49
 3061 00b5 13       		.uleb128 0x13
 3062 00b6 11       		.uleb128 0x11
 3063 00b7 01       		.uleb128 0x1
 3064 00b8 12       		.uleb128 0x12
 3065 00b9 06       		.uleb128 0x6
 3066 00ba 40       		.uleb128 0x40
 3067 00bb 18       		.uleb128 0x18
 3068 00bc 9642     		.uleb128 0x2116
 3069 00be 19       		.uleb128 0x19
 3070 00bf 01       		.uleb128 0x1
 3071 00c0 13       		.uleb128 0x13
 3072 00c1 00       		.byte	0
 3073 00c2 00       		.byte	0
 3074 00c3 0E       		.uleb128 0xe
 3075 00c4 05       		.uleb128 0x5
 3076 00c5 00       		.byte	0
 3077 00c6 03       		.uleb128 0x3
 3078 00c7 08       		.uleb128 0x8
 3079 00c8 3A       		.uleb128 0x3a
 3080 00c9 0B       		.uleb128 0xb
 3081 00ca 3B       		.uleb128 0x3b
 3082 00cb 0B       		.uleb128 0xb
 3083 00cc 49       		.uleb128 0x49
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 67


 3084 00cd 13       		.uleb128 0x13
 3085 00ce 02       		.uleb128 0x2
 3086 00cf 18       		.uleb128 0x18
 3087 00d0 00       		.byte	0
 3088 00d1 00       		.byte	0
 3089 00d2 0F       		.uleb128 0xf
 3090 00d3 2E       		.uleb128 0x2e
 3091 00d4 01       		.byte	0x1
 3092 00d5 03       		.uleb128 0x3
 3093 00d6 0E       		.uleb128 0xe
 3094 00d7 3A       		.uleb128 0x3a
 3095 00d8 0B       		.uleb128 0xb
 3096 00d9 3B       		.uleb128 0x3b
 3097 00da 0B       		.uleb128 0xb
 3098 00db 27       		.uleb128 0x27
 3099 00dc 19       		.uleb128 0x19
 3100 00dd 11       		.uleb128 0x11
 3101 00de 01       		.uleb128 0x1
 3102 00df 12       		.uleb128 0x12
 3103 00e0 06       		.uleb128 0x6
 3104 00e1 40       		.uleb128 0x40
 3105 00e2 18       		.uleb128 0x18
 3106 00e3 9642     		.uleb128 0x2116
 3107 00e5 19       		.uleb128 0x19
 3108 00e6 01       		.uleb128 0x1
 3109 00e7 13       		.uleb128 0x13
 3110 00e8 00       		.byte	0
 3111 00e9 00       		.byte	0
 3112 00ea 10       		.uleb128 0x10
 3113 00eb 05       		.uleb128 0x5
 3114 00ec 00       		.byte	0
 3115 00ed 03       		.uleb128 0x3
 3116 00ee 0E       		.uleb128 0xe
 3117 00ef 3A       		.uleb128 0x3a
 3118 00f0 0B       		.uleb128 0xb
 3119 00f1 3B       		.uleb128 0x3b
 3120 00f2 0B       		.uleb128 0xb
 3121 00f3 49       		.uleb128 0x49
 3122 00f4 13       		.uleb128 0x13
 3123 00f5 02       		.uleb128 0x2
 3124 00f6 18       		.uleb128 0x18
 3125 00f7 00       		.byte	0
 3126 00f8 00       		.byte	0
 3127 00f9 11       		.uleb128 0x11
 3128 00fa 0F       		.uleb128 0xf
 3129 00fb 00       		.byte	0
 3130 00fc 0B       		.uleb128 0xb
 3131 00fd 0B       		.uleb128 0xb
 3132 00fe 49       		.uleb128 0x49
 3133 00ff 13       		.uleb128 0x13
 3134 0100 00       		.byte	0
 3135 0101 00       		.byte	0
 3136 0102 12       		.uleb128 0x12
 3137 0103 2E       		.uleb128 0x2e
 3138 0104 01       		.byte	0x1
 3139 0105 3F       		.uleb128 0x3f
 3140 0106 19       		.uleb128 0x19
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 68


 3141 0107 03       		.uleb128 0x3
 3142 0108 0E       		.uleb128 0xe
 3143 0109 3A       		.uleb128 0x3a
 3144 010a 0B       		.uleb128 0xb
 3145 010b 3B       		.uleb128 0x3b
 3146 010c 0B       		.uleb128 0xb
 3147 010d 27       		.uleb128 0x27
 3148 010e 19       		.uleb128 0x19
 3149 010f 49       		.uleb128 0x49
 3150 0110 13       		.uleb128 0x13
 3151 0111 11       		.uleb128 0x11
 3152 0112 01       		.uleb128 0x1
 3153 0113 12       		.uleb128 0x12
 3154 0114 06       		.uleb128 0x6
 3155 0115 40       		.uleb128 0x40
 3156 0116 18       		.uleb128 0x18
 3157 0117 9642     		.uleb128 0x2116
 3158 0119 19       		.uleb128 0x19
 3159 011a 01       		.uleb128 0x1
 3160 011b 13       		.uleb128 0x13
 3161 011c 00       		.byte	0
 3162 011d 00       		.byte	0
 3163 011e 13       		.uleb128 0x13
 3164 011f 34       		.uleb128 0x34
 3165 0120 00       		.byte	0
 3166 0121 03       		.uleb128 0x3
 3167 0122 08       		.uleb128 0x8
 3168 0123 3A       		.uleb128 0x3a
 3169 0124 0B       		.uleb128 0xb
 3170 0125 3B       		.uleb128 0x3b
 3171 0126 05       		.uleb128 0x5
 3172 0127 49       		.uleb128 0x49
 3173 0128 13       		.uleb128 0x13
 3174 0129 02       		.uleb128 0x2
 3175 012a 18       		.uleb128 0x18
 3176 012b 00       		.byte	0
 3177 012c 00       		.byte	0
 3178 012d 14       		.uleb128 0x14
 3179 012e 34       		.uleb128 0x34
 3180 012f 00       		.byte	0
 3181 0130 03       		.uleb128 0x3
 3182 0131 0E       		.uleb128 0xe
 3183 0132 3A       		.uleb128 0x3a
 3184 0133 0B       		.uleb128 0xb
 3185 0134 3B       		.uleb128 0x3b
 3186 0135 05       		.uleb128 0x5
 3187 0136 49       		.uleb128 0x49
 3188 0137 13       		.uleb128 0x13
 3189 0138 02       		.uleb128 0x2
 3190 0139 18       		.uleb128 0x18
 3191 013a 00       		.byte	0
 3192 013b 00       		.byte	0
 3193 013c 15       		.uleb128 0x15
 3194 013d 0B       		.uleb128 0xb
 3195 013e 01       		.byte	0x1
 3196 013f 11       		.uleb128 0x11
 3197 0140 01       		.uleb128 0x1
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 69


 3198 0141 12       		.uleb128 0x12
 3199 0142 06       		.uleb128 0x6
 3200 0143 01       		.uleb128 0x1
 3201 0144 13       		.uleb128 0x13
 3202 0145 00       		.byte	0
 3203 0146 00       		.byte	0
 3204 0147 16       		.uleb128 0x16
 3205 0148 01       		.uleb128 0x1
 3206 0149 01       		.byte	0x1
 3207 014a 49       		.uleb128 0x49
 3208 014b 13       		.uleb128 0x13
 3209 014c 01       		.uleb128 0x1
 3210 014d 13       		.uleb128 0x13
 3211 014e 00       		.byte	0
 3212 014f 00       		.byte	0
 3213 0150 17       		.uleb128 0x17
 3214 0151 21       		.uleb128 0x21
 3215 0152 00       		.byte	0
 3216 0153 49       		.uleb128 0x49
 3217 0154 13       		.uleb128 0x13
 3218 0155 2F       		.uleb128 0x2f
 3219 0156 0B       		.uleb128 0xb
 3220 0157 00       		.byte	0
 3221 0158 00       		.byte	0
 3222 0159 18       		.uleb128 0x18
 3223 015a 26       		.uleb128 0x26
 3224 015b 00       		.byte	0
 3225 015c 49       		.uleb128 0x49
 3226 015d 13       		.uleb128 0x13
 3227 015e 00       		.byte	0
 3228 015f 00       		.byte	0
 3229 0160 19       		.uleb128 0x19
 3230 0161 34       		.uleb128 0x34
 3231 0162 00       		.byte	0
 3232 0163 03       		.uleb128 0x3
 3233 0164 0E       		.uleb128 0xe
 3234 0165 3A       		.uleb128 0x3a
 3235 0166 0B       		.uleb128 0xb
 3236 0167 3B       		.uleb128 0x3b
 3237 0168 05       		.uleb128 0x5
 3238 0169 49       		.uleb128 0x49
 3239 016a 13       		.uleb128 0x13
 3240 016b 3F       		.uleb128 0x3f
 3241 016c 19       		.uleb128 0x19
 3242 016d 3C       		.uleb128 0x3c
 3243 016e 19       		.uleb128 0x19
 3244 016f 00       		.byte	0
 3245 0170 00       		.byte	0
 3246 0171 00       		.byte	0
 3247              		.section	.debug_aranges,"",%progbits
 3248 0000 44000000 		.4byte	0x44
 3249 0004 0200     		.2byte	0x2
 3250 0006 00000000 		.4byte	.Ldebug_info0
 3251 000a 04       		.byte	0x4
 3252 000b 00       		.byte	0
 3253 000c 0000     		.2byte	0
 3254 000e 0000     		.2byte	0
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 70


 3255 0010 00000000 		.4byte	.LFB64
 3256 0014 14010000 		.4byte	.LFE64-.LFB64
 3257 0018 00000000 		.4byte	.LFB65
 3258 001c 44000000 		.4byte	.LFE65-.LFB65
 3259 0020 00000000 		.4byte	.LFB66
 3260 0024 84010000 		.4byte	.LFE66-.LFB66
 3261 0028 00000000 		.4byte	.LFB67
 3262 002c 3A000000 		.4byte	.LFE67-.LFB67
 3263 0030 00000000 		.4byte	.LFB68
 3264 0034 A4020000 		.4byte	.LFE68-.LFB68
 3265 0038 00000000 		.4byte	.LFB69
 3266 003c 60060000 		.4byte	.LFE69-.LFB69
 3267 0040 00000000 		.4byte	0
 3268 0044 00000000 		.4byte	0
 3269              		.section	.debug_ranges,"",%progbits
 3270              	.Ldebug_ranges0:
 3271 0000 00000000 		.4byte	.LFB64
 3272 0004 14010000 		.4byte	.LFE64
 3273 0008 00000000 		.4byte	.LFB65
 3274 000c 44000000 		.4byte	.LFE65
 3275 0010 00000000 		.4byte	.LFB66
 3276 0014 84010000 		.4byte	.LFE66
 3277 0018 00000000 		.4byte	.LFB67
 3278 001c 3A000000 		.4byte	.LFE67
 3279 0020 00000000 		.4byte	.LFB68
 3280 0024 A4020000 		.4byte	.LFE68
 3281 0028 00000000 		.4byte	.LFB69
 3282 002c 60060000 		.4byte	.LFE69
 3283 0030 00000000 		.4byte	0
 3284 0034 00000000 		.4byte	0
 3285              		.section	.debug_line,"",%progbits
 3286              	.Ldebug_line0:
 3287 0000 BB040000 		.section	.debug_str,"MS",%progbits,1
 3287      02003F01 
 3287      00000201 
 3287      FB0E0D00 
 3287      01010101 
 3288              	.LASF39:
 3289 0000 76616C69 		.ascii	"valid\000"
 3289      6400
 3290              	.LASF65:
 3291 0006 6469725F 		.ascii	"dir_latched_side\000"
 3291      6C617463 
 3291      6865645F 
 3291      73696465 
 3291      00
 3292              	.LASF49:
 3293 0017 73747261 		.ascii	"straight_complete\000"
 3293      69676874 
 3293      5F636F6D 
 3293      706C6574 
 3293      6500
 3294              	.LASF33:
 3295 0029 56345F70 		.ascii	"V4_pp\000"
 3295      7000
 3296              	.LASF47:
 3297 002f 696E6465 		.ascii	"indexMAX\000"
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 71


 3297      784D4158 
 3297      00
 3298              	.LASF14:
 3299 0038 696E7438 		.ascii	"int8_t\000"
 3299      5F7400
 3300              	.LASF4:
 3301 003f 73686F72 		.ascii	"short int\000"
 3301      7420696E 
 3301      7400
 3302              	.LASF54:
 3303 0049 7331325F 		.ascii	"s12_now\000"
 3303      6E6F7700 
 3304              	.LASF50:
 3305 0051 7475726E 		.ascii	"turn_complete\000"
 3305      5F636F6D 
 3305      706C6574 
 3305      6500
 3306              	.LASF23:
 3307 005f 73697A65 		.ascii	"sizetype\000"
 3307      74797065 
 3307      00
 3308              	.LASF70:
 3309 0068 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3309      43313120 
 3309      352E342E 
 3309      31203230 
 3309      31363036 
 3310 009b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3310      20726576 
 3310      6973696F 
 3310      6E203233 
 3310      37373135 
 3311 00ce 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3311      66756E63 
 3311      74696F6E 
 3311      2D736563 
 3311      74696F6E 
 3312              	.LASF75:
 3313 00f6 6D61696E 		.ascii	"main\000"
 3313      00
 3314              	.LASF5:
 3315 00fb 5F5F7569 		.ascii	"__uint16_t\000"
 3315      6E743136 
 3315      5F7400
 3316              	.LASF56:
 3317 0106 73656E32 		.ascii	"sen2_on_line\000"
 3317      5F6F6E5F 
 3317      6C696E65 
 3317      00
 3318              	.LASF18:
 3319 0113 696E7436 		.ascii	"int64_t\000"
 3319      345F7400 
 3320              	.LASF72:
 3321 011b 433A5C55 		.ascii	"C:\\Users\\ylee818\\Documents\\GitHub\\Compsys-301-"
 3321      73657273 
 3321      5C796C65 
 3321      65383138 
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 72


 3321      5C446F63 
 3322 0149 434F4445 		.ascii	"CODE\\Yukyung CODE\\final\\CS301_Class.cydsn\000"
 3322      5C59756B 
 3322      79756E67 
 3322      20434F44 
 3322      455C6669 
 3323              	.LASF15:
 3324 0173 75696E74 		.ascii	"uint8_t\000"
 3324      385F7400 
 3325              	.LASF27:
 3326 017b 72617732 		.ascii	"raw2\000"
 3326      00
 3327              	.LASF30:
 3328 0180 646D6D5F 		.ascii	"dmm_abs\000"
 3328      61627300 
 3329              	.LASF34:
 3330 0188 56355F70 		.ascii	"V5_pp\000"
 3330      7000
 3331              	.LASF19:
 3332 018e 666C6F61 		.ascii	"float\000"
 3332      7400
 3333              	.LASF11:
 3334 0194 6C6F6E67 		.ascii	"long long int\000"
 3334      206C6F6E 
 3334      6720696E 
 3334      7400
 3335              	.LASF21:
 3336 01a2 63686172 		.ascii	"char\000"
 3336      00
 3337              	.LASF25:
 3338 01a7 70695F74 		.ascii	"pi_t\000"
 3338      00
 3339              	.LASF8:
 3340 01ac 6C6F6E67 		.ascii	"long int\000"
 3340      20696E74 
 3340      00
 3341              	.LASF10:
 3342 01b5 5F5F696E 		.ascii	"__int64_t\000"
 3342      7436345F 
 3342      7400
 3343              	.LASF41:
 3344 01bf 755F7261 		.ascii	"u_raw\000"
 3344      7700
 3345              	.LASF1:
 3346 01c5 5F5F7569 		.ascii	"__uint8_t\000"
 3346      6E74385F 
 3346      7400
 3347              	.LASF3:
 3348 01cf 756E7369 		.ascii	"unsigned char\000"
 3348      676E6564 
 3348      20636861 
 3348      7200
 3349              	.LASF55:
 3350 01dd 73656E31 		.ascii	"sen1_on_line\000"
 3350      5F6F6E5F 
 3350      6C696E65 
 3350      00
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 73


 3351              	.LASF52:
 3352 01ea 66727569 		.ascii	"fruit_complete\000"
 3352      745F636F 
 3352      6D706C65 
 3352      746500
 3353              	.LASF26:
 3354 01f9 72617731 		.ascii	"raw1\000"
 3354      00
 3355              	.LASF22:
 3356 01fe 6C6F6E67 		.ascii	"long double\000"
 3356      20646F75 
 3356      626C6500 
 3357              	.LASF68:
 3358 020a 6C656674 		.ascii	"left_sensor_count\000"
 3358      5F73656E 
 3358      736F725F 
 3358      636F756E 
 3358      7400
 3359              	.LASF62:
 3360 021c 675F7374 		.ascii	"g_stop_now\000"
 3360      6F705F6E 
 3360      6F7700
 3361              	.LASF66:
 3362 0227 7475726E 		.ascii	"turn_cooldown_ticks\000"
 3362      5F636F6F 
 3362      6C646F77 
 3362      6E5F7469 
 3362      636B7300 
 3363              	.LASF2:
 3364 023b 7369676E 		.ascii	"signed char\000"
 3364      65642063 
 3364      68617200 
 3365              	.LASF12:
 3366 0247 6C6F6E67 		.ascii	"long long unsigned int\000"
 3366      206C6F6E 
 3366      6720756E 
 3366      7369676E 
 3366      65642069 
 3367              	.LASF58:
 3368 025e 73656E34 		.ascii	"sen4_on_line\000"
 3368      5F6F6E5F 
 3368      6C696E65 
 3368      00
 3369              	.LASF13:
 3370 026b 756E7369 		.ascii	"unsigned int\000"
 3370      676E6564 
 3370      20696E74 
 3370      00
 3371              	.LASF35:
 3372 0278 56365F70 		.ascii	"V6_pp\000"
 3372      7000
 3373              	.LASF16:
 3374 027e 75696E74 		.ascii	"uint16_t\000"
 3374      31365F74 
 3374      00
 3375              	.LASF59:
 3376 0287 73656E35 		.ascii	"sen5_on_line\000"
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 74


 3376      5F6F6E5F 
 3376      6C696E65 
 3376      00
 3377              	.LASF37:
 3378 0294 5F636C61 		.ascii	"_clampf\000"
 3378      6D706600 
 3379              	.LASF46:
 3380 029c 434D445F 		.ascii	"CMD_STATES\000"
 3380      53544154 
 3380      455300
 3381              	.LASF6:
 3382 02a7 73686F72 		.ascii	"short unsigned int\000"
 3382      7420756E 
 3382      7369676E 
 3382      65642069 
 3382      6E7400
 3383              	.LASF60:
 3384 02ba 73656E36 		.ascii	"sen6_on_line\000"
 3384      5F6F6E5F 
 3384      6C696E65 
 3384      00
 3385              	.LASF0:
 3386 02c7 5F5F696E 		.ascii	"__int8_t\000"
 3386      74385F74 
 3386      00
 3387              	.LASF57:
 3388 02d0 73656E33 		.ascii	"sen3_on_line\000"
 3388      5F6F6E5F 
 3388      6C696E65 
 3388      00
 3389              	.LASF73:
 3390 02dd 6973725F 		.ascii	"isr_qd_Handler\000"
 3390      71645F48 
 3390      616E646C 
 3390      657200
 3391              	.LASF45:
 3392 02ec 63656E74 		.ascii	"center_duty_est\000"
 3392      65725F64 
 3392      7574795F 
 3392      65737400 
 3393              	.LASF17:
 3394 02fc 696E7433 		.ascii	"int32_t\000"
 3394      325F7400 
 3395              	.LASF38:
 3396 0304 70695F73 		.ascii	"pi_step\000"
 3396      74657000 
 3397              	.LASF53:
 3398 030c 73746565 		.ascii	"steer\000"
 3398      7200
 3399              	.LASF44:
 3400 0312 5F426F6F 		.ascii	"_Bool\000"
 3400      6C00
 3401              	.LASF69:
 3402 0318 72696768 		.ascii	"right_sensor_count\000"
 3402      745F7365 
 3402      6E736F72 
 3402      5F636F75 
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 75


 3402      6E7400
 3403              	.LASF31:
 3404 032b 646D6D5F 		.ascii	"dmm_signed\000"
 3404      7369676E 
 3404      656400
 3405              	.LASF64:
 3406 0336 6469725F 		.ascii	"dir_delay_ticks\000"
 3406      64656C61 
 3406      795F7469 
 3406      636B7300 
 3407              	.LASF40:
 3408 0346 695F6E65 		.ascii	"i_next\000"
 3408      787400
 3409              	.LASF71:
 3410 034d 6D61696E 		.ascii	"main.c\000"
 3410      2E6300
 3411              	.LASF9:
 3412 0354 6C6F6E67 		.ascii	"long unsigned int\000"
 3412      20756E73 
 3412      69676E65 
 3412      6420696E 
 3412      7400
 3413              	.LASF29:
 3414 0366 64617667 		.ascii	"davg_sign\000"
 3414      5F736967 
 3414      6E00
 3415              	.LASF32:
 3416 0370 56335F70 		.ascii	"V3_pp\000"
 3416      7000
 3417              	.LASF74:
 3418 0376 6C696768 		.ascii	"light_sensors_update_and_maybe_request_turn\000"
 3418      745F7365 
 3418      6E736F72 
 3418      735F7570 
 3418      64617465 
 3419              	.LASF42:
 3420 03a2 7361745F 		.ascii	"sat_hi\000"
 3420      686900
 3421              	.LASF24:
 3422 03a9 745F6C6F 		.ascii	"t_loss\000"
 3422      737300
 3423              	.LASF7:
 3424 03b0 5F5F696E 		.ascii	"__int32_t\000"
 3424      7433325F 
 3424      7400
 3425              	.LASF36:
 3426 03ba 6E6F726D 		.ascii	"norm01_from_pp\000"
 3426      30315F66 
 3426      726F6D5F 
 3426      707000
 3427              	.LASF61:
 3428 03c9 675F6469 		.ascii	"g_direction\000"
 3428      72656374 
 3428      696F6E00 
 3429              	.LASF43:
 3430 03d5 7361745F 		.ascii	"sat_lo\000"
 3430      6C6F00
ARM GAS  C:\Users\ylee818\AppData\Local\Temp\ccMZSMch.s 			page 76


 3431              	.LASF20:
 3432 03dc 646F7562 		.ascii	"double\000"
 3432      6C6500
 3433              	.LASF67:
 3434 03e3 7331325F 		.ascii	"s12_prev\000"
 3434      70726576 
 3434      00
 3435              	.LASF63:
 3436 03ec 675F6469 		.ascii	"g_dist_mm\000"
 3436      73745F6D 
 3436      6D00
 3437              	.LASF76:
 3438 03f6 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3438      52784275 
 3438      66666572 
 3438      00
 3439              	.LASF48:
 3440 0403 74617267 		.ascii	"target_dist\000"
 3440      65745F64 
 3440      69737400 
 3441              	.LASF28:
 3442 040f 64617667 		.ascii	"davg_abs\000"
 3442      5F616273 
 3442      00
 3443              	.LASF51:
 3444 0418 75547572 		.ascii	"uTurn_complete\000"
 3444      6E5F636F 
 3444      6D706C65 
 3444      746500
 3445              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
